From tack at ps.uni-sb.de  Mon Aug  1 16:26:06 2005
From: tack at ps.uni-sb.de (Guido Tack)
Date: Mon, 01 Aug 2005 16:26:06 +0200
Subject: [Gecode] Batch recomputation in standard search engines
Message-ID: <42EE30FE.4050201@ps.uni-sb.de>

Hi!

After spending some time trying to find out why the test cases I wrote 
for my propagators didn't work, I'd like to share my experience with you ;-)

I am using randomized branchings to generate test cases for the set 
propagators. The problem with randomized branchings is that you have to 
make them deterministic in order to behave well during backtracking. 
Batch recomputation is just perfect for that, you ask the space only 
once for a description that contains the (randomized) choice at this 
point. Then you use the very same description to commit to the left and 
the right branch. Unfortunately, the current search engines do not 
compute the description only once, but once for the left branch and once 
for the right branch. This of course completely screwed my randomization.

Is there any argument against using one description for both branches? 
If not, I'd like to change the search engines such that they become 
deterministic in the sense described above.

Cheers,
    Guido



From tack at ps.uni-sb.de  Thu Aug 11 08:29:14 2005
From: tack at ps.uni-sb.de (Guido Tack)
Date: Thu, 11 Aug 2005 08:29:14 +0200
Subject: [Gecode] Model variable iterators
Message-ID: <200508110829.14830.tack@ps.uni-sb.de>

Hi!

I think we should revive the range iterators for model variables: if you want 
to implement an explorer (say in Alice or Java), you need to be able to 
inspect the domains of variables in choice nodes.

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Saarbr?cken
http://www.ps.uni-sb.de/~tack



From schulte at imit.kth.se  Thu Aug 11 15:44:41 2005
From: schulte at imit.kth.se (Christian Schulte)
Date: Thu, 11 Aug 2005 15:44:41 +0200
Subject: [Gecode] Model variable iterators
In-Reply-To: <200508110829.14830.tack@ps.uni-sb.de>
Message-ID: <001401c59e7a$d3446200$acd4ed82@beule>

Ok, they are back.

Christian

--
Christian Schulte, http://www.imit.kth.se/~schulte/ 

-----Original Message-----
From: gecode-bounces at ps.uni-sb.de [mailto:gecode-bounces at ps.uni-sb.de] On
Behalf Of Guido Tack
Sent: Thursday, August 11, 2005 8:29 AM
To: gecode at ps.uni-sb.de
Subject: [Gecode] Model variable iterators


Hi!

I think we should revive the range iterators for model variables: if you
want 
to implement an explorer (say in Alice or Java), you need to be able to 
inspect the domains of variables in choice nodes.

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Saarbr?cken
http://www.ps.uni-sb.de/~tack

_______________________________________________
Gecode mailing list
Gecode at ps.uni-sb.de http://www.ps.uni-sb.de/mailman/listinfo/gecode




From tack at ps.uni-sb.de  Wed Aug 17 12:28:31 2005
From: tack at ps.uni-sb.de (Guido Tack)
Date: Wed, 17 Aug 2005 12:28:31 +0200
Subject: [Gecode] Subversion
Message-ID: <200508171228.31309.tack@ps.uni-sb.de>

Hi.

I have imported our CVS into a subversion repository at
https://www.gecode.org/svn

You can either enter that url into your web browser and browse the current 
trunk, or use the svn command line client. For an easy start, try
svn checkout https://www.gecode.org/svn/trunk/gecode

(You will need to login with your account at ps.uni-sb.de, svn access has been 
granted to all those who have had cvs access before.)

Online documentation for subversion is available from
http://subversion.tigris.org

Subversion has a lot of advantages over CVS. In my opinion, the most important 
improvements for us are
* providing versioning for directories
* proper handling of moving and removing files and directories
* proper handling of branches and tags
* offline diff and status - no need to contact the server to see your changes
* better access control

Subversion is now in use by several really big projects (e.g. KDE), so it 
seems to be stable enough. The command line interface is very similar to cvs 
- it should be easy to adjust to it. Of course this is a major decision, and 
we have to decide on this before the release. So, please try it out and tell 
me what you think of it.

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Saarbr?cken
http://www.ps.uni-sb.de/~tack



From schulte at imit.kth.se  Wed Aug 17 12:44:47 2005
From: schulte at imit.kth.se (Christian Schulte)
Date: Wed, 17 Aug 2005 12:44:47 +0200
Subject: [Gecode] Subversion
In-Reply-To: <200508171228.31309.tack@ps.uni-sb.de>
Message-ID: <001301c5a318$b08e1010$6368fe91@dator>

I will only be able to play with it end of next week.

However, as good as subversion might be, what is still highest on my list of
software infrastructure is a reasonable set of Makefiles.

Christian

-----Original Message-----
From: gecode-bounces at ps.uni-sb.de [mailto:gecode-bounces at ps.uni-sb.de] On
Behalf Of Guido Tack
Sent: Wednesday, August 17, 2005 12:29 PM
To: gecode at ps.uni-sb.de
Subject: [Gecode] Subversion


Hi.

I have imported our CVS into a subversion repository at
https://www.gecode.org/svn

You can either enter that url into your web browser and browse the current 
trunk, or use the svn command line client. For an easy start, try svn
checkout https://www.gecode.org/svn/trunk/gecode

(You will need to login with your account at ps.uni-sb.de, svn access has
been 
granted to all those who have had cvs access before.)

Online documentation for subversion is available from
http://subversion.tigris.org

Subversion has a lot of advantages over CVS. In my opinion, the most
important 
improvements for us are
* providing versioning for directories
* proper handling of moving and removing files and directories
* proper handling of branches and tags
* offline diff and status - no need to contact the server to see your
changes
* better access control

Subversion is now in use by several really big projects (e.g. KDE), so it 
seems to be stable enough. The command line interface is very similar to cvs

- it should be easy to adjust to it. Of course this is a major decision, and

we have to decide on this before the release. So, please try it out and tell

me what you think of it.

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Saarbr?cken
http://www.ps.uni-sb.de/~tack

_______________________________________________
Gecode mailing list
Gecode at ps.uni-sb.de http://www.ps.uni-sb.de/mailman/listinfo/gecode




From d00-mla at nada.kth.se  Wed Aug 17 15:21:26 2005
From: d00-mla at nada.kth.se (Mikael 'Zayenz' Lagerkvist)
Date: Wed, 17 Aug 2005 15:21:26 +0200 (MEST)
Subject: [Gecode] Subversion
In-Reply-To: <200508171228.31309.tack@ps.uni-sb.de>
References: <200508171228.31309.tack@ps.uni-sb.de>
Message-ID: <Pine.GSO.4.58.0508171509260.13928@my.nada.kth.se>

On Wed, 17 Aug 2005, Guido Tack wrote:
> Subversion has a lot of advantages over CVS. In my opinion, the most important
> improvements for us are
> * providing versioning for directories
> * proper handling of moving and removing files and directories
> * proper handling of branches and tags
> * offline diff and status - no need to contact the server to see your changes
> * better access control

<snip/>

> Of course this is a major decision, and we have to decide on this
> before the release. So, please try it out and tell me what you
> think of it.

I have tried the subversion repository now, and my first impression
is that it is easier to handle than cvs.


I think that the previously mentioned improvements over cvs are a
good motivation for switching.


The only issue that I have found is that some commands seem to be
rather slow. One example is viewing log-messages, doing 'svn log
int.hh --limit 2' takes 20 seconds on my machine, 7 seconds to
display the information and 13 seconds after. For a simple
log-request, like 'svn log INSTALL' (recently added, no changes), it
takes almost a second. I don't know if this is an issue with
subversion, my machine, or something else.


Regards,
Mikael

--
Mikael 'Zayenz' Lagerkvist, http://www.imit.kth.se/~zayenz/


From tack at ps.uni-sb.de  Wed Aug 17 16:31:32 2005
From: tack at ps.uni-sb.de (Guido Tack)
Date: Wed, 17 Aug 2005 16:31:32 +0200
Subject: [Gecode] Subversion
In-Reply-To: <Pine.GSO.4.58.0508171509260.13928@my.nada.kth.se>
References: <200508171228.31309.tack@ps.uni-sb.de>
	<Pine.GSO.4.58.0508171509260.13928@my.nada.kth.se>
Message-ID: <200508171631.32292.tack@ps.uni-sb.de>

> I have tried the subversion repository now, and my first impression
> is that it is easier to handle than cvs.

That's what I thought too (especially from an administrator's point of view).

> The only issue that I have found is that some commands seem to be
> rather slow. One example is viewing log-messages, doing 'svn log
> int.hh --limit 2' takes 20 seconds on my machine, 7 seconds to
> display the information and 13 seconds after. For a simple
> log-request, like 'svn log INSTALL' (recently added, no changes), it
> takes almost a second. I don't know if this is an issue with
> subversion, my machine, or something else.

I also had that impression. Checking out seems to be much slower than with 
CVS. So I guess that's a server problem - we'll see if it gets better after 
we've switched to our new server.

Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Saarbr?cken
http://www.ps.uni-sb.de/~tack



From duchier at ps.uni-sb.de  Wed Aug 17 16:33:02 2005
From: duchier at ps.uni-sb.de (duchier at ps.uni-sb.de)
Date: Wed, 17 Aug 2005 16:33:02 +0200
Subject: [Gecode] Subversion
In-Reply-To: <200508171228.31309.tack@ps.uni-sb.de> (Guido Tack's message of
	"Wed, 17 Aug 2005 12:28:31 +0200")
References: <200508171228.31309.tack@ps.uni-sb.de>
Message-ID: <873bp8fxb5.fsf@star.lifl.fr>

Guido Tack <tack at ps.uni-sb.de> writes:

> I have imported our CVS into a subversion repository at
> https://www.gecode.org/svn
>
> You can either enter that url into your web browser and browse the current 
> trunk, [...]

that's not working for me (neither in konqueror nor in firefox).  I get:

Bad request!
 Your browser (or proxy) sent a request that this server could not understand. 
 If you think this is a server error, please contact the webmaster. 
Error 400
www.ps.uni-sb.de
 Apache/2.0.47 (Fedora)

I not using a proxy.

--Denys



From tack at ps.uni-sb.de  Wed Aug 17 16:40:50 2005
From: tack at ps.uni-sb.de (Guido Tack)
Date: Wed, 17 Aug 2005 16:40:50 +0200
Subject: [Gecode] Subversion
In-Reply-To: <873bp8fxb5.fsf@star.lifl.fr>
References: <200508171228.31309.tack@ps.uni-sb.de>
	<873bp8fxb5.fsf@star.lifl.fr>
Message-ID: <200508171640.50430.tack@ps.uni-sb.de>

> that's not working for me (neither in konqueror nor in firefox).  I get:
>
> Bad request!
>  Your browser (or proxy) sent a request that this server could not
> understand. If you think this is a server error, please contact the
> webmaster. Error 400
> www.ps.uni-sb.de
>  Apache/2.0.47 (Fedora)

Yes, we still have a problem with the ssl configuration sometimes. You 
probably got a "http://www.gecode.org:443/svn" url after the redirection. I 
will have to look into this some more, but to try it out, you can manually 
change the http to https.

Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Saarbr?cken
http://www.ps.uni-sb.de/~tack



From duchier at ps.uni-sb.de  Wed Aug 17 16:58:48 2005
From: duchier at ps.uni-sb.de (duchier at ps.uni-sb.de)
Date: Wed, 17 Aug 2005 16:58:48 +0200
Subject: [Gecode] Subversion
In-Reply-To: <200508171640.50430.tack@ps.uni-sb.de> (Guido Tack's message of
	"Wed, 17 Aug 2005 16:40:50 +0200")
References: <200508171228.31309.tack@ps.uni-sb.de>
	<873bp8fxb5.fsf@star.lifl.fr> <200508171640.50430.tack@ps.uni-sb.de>
Message-ID: <87vf24ehjr.fsf@star.lifl.fr>

Guido Tack <tack at ps.uni-sb.de> writes:

> Yes, we still have a problem with the ssl configuration sometimes. You 
> probably got a "http://www.gecode.org:443/svn" url after the redirection. I 
> will have to look into this some more, but to try it out, you can manually 
> change the http to https.

aargh... change http to https _and_ add a final slash.

btw, from what I read, svn+ssh://... is supposed to be faster

Cheers,

--Denys



From tack at ps.uni-sb.de  Wed Aug 17 17:54:43 2005
From: tack at ps.uni-sb.de (Guido Tack)
Date: Wed, 17 Aug 2005 17:54:43 +0200
Subject: [Gecode] Subversion
In-Reply-To: <001301c5a318$b08e1010$6368fe91@dator>
References: <001301c5a318$b08e1010$6368fe91@dator>
Message-ID: <200508171754.43872.tack@ps.uni-sb.de>

> However, as good as subversion might be, what is still highest on my list
> of software infrastructure is a reasonable set of Makefiles.

I've made some experiments with the Makefiles. I have tried the 
automake/libtool-based system, and a handmade Makefile that basically does 
the same as Makefile.win, but for Linux.

On my machine, the automake-based complete build (using make check, including 
all examples) takes 6:21 minutes, 6:19 if I switch off dependency tracking. 
With the handwritten Makefile, building everything takes 5:55 minutes. That's 
26 seconds or 7% more using automake. Let's have a look at the advantages and 
disadvantages of automake:
+ it knows how to build shared and static libs on at least Linux and MacOS
+ it knows where to install stuff on different platforms
+ it supports building in a separate directory
+ it makes packaging easy
+ dynamic dependency tracking
- it clutters the command line
- it is slower
- it requires a lot of stuff in the configure script that seems useless (check 
for f77 ;)
- when building the examples and linking against shared libs, libtool creates 
wrapper shell scripts -> bad for using gdb
- it is horribly slow on Cygwin/Windows
- it does not work at all with the Microsoft compiler

Some other problems that are however solvable:
* it does not provide targets for generating assembly files (fixed by 
additional handwritten rules)
* we have one Makefile.am per module, so no Makefile knows all files, which 
makes generating the documentation a little harder (can be solved by putting 
everything into one Makefile.am)

Actually, I was a bit surprised that automake is not that much slower. I think 
there's a high windchill factor involved when you change something in the 
kernel, you have to recompile everything, and it just takes ages... With the 
handwritten Makefiles, you at least see what's going on - the output of the 
dependency tracking stuff makes everything /look/ even slower.

I do not really know how well automake's dependency tracker works. I did not 
have the impression that too much gets recompiled, though. It only adds 2 
seconds to the build time, and it is dynamic - you don't have to call "make 
depend" if you changed anything. Of course it would be possible to replace it 
with a "classic" depend target. Then the output looks much cleaner (you can 
try it by using --disable-dependency-tracking as a configure option).

To sum up: the biggest problem for us seems to be that we have to maintain two 
Makefiles: one for Windows, and one for the rest of the world. I don't think 
speed is that critical - if it is, we can still use handwritten makefiles for 
development and automake for deployment. I will try to write a configure.ac 
and toplevel Makefile.am that work for both g++ and msvc, so that we only 
have to maintain one list of sources/targets. Maybe that will even allow us 
to use handwritten Makefiles for development and automake for deployment 
(although I don't see so many advantages of that scheme any more).

Maybe I forgot some (dis)advantages, so I'd be interested in your opinion 
about automake/libtool.

Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Saarbr?cken
http://www.ps.uni-sb.de/~tack



From schulte at imit.kth.se  Wed Aug 17 22:58:30 2005
From: schulte at imit.kth.se (Christian Schulte)
Date: Wed, 17 Aug 2005 22:58:30 +0200
Subject: [Gecode] Subversion
In-Reply-To: <200508171754.43872.tack@ps.uni-sb.de>
Message-ID: <000a01c5a36e$6d1945b0$e561fe91@dator>

Frankly, I care fuck about how you do things. 

However, for the last, one important thing is to have makefiles that suppot
the development of Gecode (please be selfish). Automake sucks big time here
(remember: fucking around with LD_LIBRARY_PATH, installing librraies
somwhere, etc). Secondly, just because of automake we have two makefiles
anyway. That's it. Forget autoamke. It is the biggest timesink I have ever
seen in my life. If you don't remove it, I'll do.

CS

-----Original Message-----
From: gecode-bounces at ps.uni-sb.de [mailto:gecode-bounces at ps.uni-sb.de] On
Behalf Of Guido Tack
Sent: Wednesday, August 17, 2005 5:55 PM
To: Technical discussions about Gecode
Subject: Re: [Gecode] Subversion


> However, as good as subversion might be, what is still highest on my 
> list of software infrastructure is a reasonable set of Makefiles.

I've made some experiments with the Makefiles. I have tried the 
automake/libtool-based system, and a handmade Makefile that basically does 
the same as Makefile.win, but for Linux.

On my machine, the automake-based complete build (using make check,
including 
all examples) takes 6:21 minutes, 6:19 if I switch off dependency tracking. 
With the handwritten Makefile, building everything takes 5:55 minutes.
That's 
26 seconds or 7% more using automake. Let's have a look at the advantages
and 
disadvantages of automake:
+ it knows how to build shared and static libs on at least Linux and 
+ MacOS it knows where to install stuff on different platforms it 
+ supports building in a separate directory it makes packaging easy
+ dynamic dependency tracking
- it clutters the command line
- it is slower
- it requires a lot of stuff in the configure script that seems useless
(check 
for f77 ;)
- when building the examples and linking against shared libs, libtool
creates 
wrapper shell scripts -> bad for using gdb
- it is horribly slow on Cygwin/Windows
- it does not work at all with the Microsoft compiler

Some other problems that are however solvable:
* it does not provide targets for generating assembly files (fixed by 
additional handwritten rules)
* we have one Makefile.am per module, so no Makefile knows all files, which 
makes generating the documentation a little harder (can be solved by putting

everything into one Makefile.am)

Actually, I was a bit surprised that automake is not that much slower. I
think 
there's a high windchill factor involved when you change something in the 
kernel, you have to recompile everything, and it just takes ages... With the

handwritten Makefiles, you at least see what's going on - the output of the 
dependency tracking stuff makes everything /look/ even slower.

I do not really know how well automake's dependency tracker works. I did not

have the impression that too much gets recompiled, though. It only adds 2 
seconds to the build time, and it is dynamic - you don't have to call "make 
depend" if you changed anything. Of course it would be possible to replace
it 
with a "classic" depend target. Then the output looks much cleaner (you can 
try it by using --disable-dependency-tracking as a configure option).

To sum up: the biggest problem for us seems to be that we have to maintain
two 
Makefiles: one for Windows, and one for the rest of the world. I don't think

speed is that critical - if it is, we can still use handwritten makefiles
for 
development and automake for deployment. I will try to write a configure.ac 
and toplevel Makefile.am that work for both g++ and msvc, so that we only 
have to maintain one list of sources/targets. Maybe that will even allow us 
to use handwritten Makefiles for development and automake for deployment 
(although I don't see so many advantages of that scheme any more).

Maybe I forgot some (dis)advantages, so I'd be interested in your opinion 
about automake/libtool.

Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Saarbr?cken
http://www.ps.uni-sb.de/~tack

_______________________________________________
Gecode mailing list
Gecode at ps.uni-sb.de http://www.ps.uni-sb.de/mailman/listinfo/gecode




From tack at ps.uni-sb.de  Tue Aug 23 09:42:59 2005
From: tack at ps.uni-sb.de (Guido Tack)
Date: Tue, 23 Aug 2005 09:42:59 +0200
Subject: [Gecode] Testing arithmetic rounding
Message-ID: <200508230942.59418.tack@ps.uni-sb.de>

Hi.

I've just removed the rounding test from configure.ac and the Makefiles. I 
have replaced it with a check in int/view.icc:

#if (-17 / 7) == -2
#define GECODE_INT_RND_TWDS_ZERO 1
#else
#define GECODE_INT_RND_TWDS_ZERO 0
#endif

This assumes that the preprocessor rounds the same way as the compiler, and I 
actually have no idea if it always does. This is however the same test we've 
been using in configure.ac so far.

Does anyone know a platform where rounding is not defined towards zero? I'd 
just like to test if the preprocessor rounds the same way there.

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Saarbr?cken
http://www.ps.uni-sb.de/~tack



From tack at ps.uni-sb.de  Tue Aug 23 13:25:13 2005
From: tack at ps.uni-sb.de (Guido Tack)
Date: Tue, 23 Aug 2005 13:25:13 +0200
Subject: [Gecode] Testing arithmetic rounding
In-Reply-To: <200508230942.59418.tack@ps.uni-sb.de>
References: <200508230942.59418.tack@ps.uni-sb.de>
Message-ID: <200508231325.13566.tack@ps.uni-sb.de>

I must reply to myself...

> Does anyone know a platform where rounding is not defined towards zero? I'd
> just like to test if the preprocessor rounds the same way there.

Isn't the problem rather how a floating-point-to-integer conversion is 
defined? The C++ standard defines it as truncating, i.e. rounding towards 
zero. So we could remove the check completely, or am I missing something?

-- 
Guido Tack
Programming Systems Lab, Saarland University, Saarbr?cken
http://www.ps.uni-sb.de/~tack



From schulte at imit.kth.se  Tue Aug 23 20:32:06 2005
From: schulte at imit.kth.se (Christian Schulte)
Date: Tue, 23 Aug 2005 20:32:06 +0200
Subject: [Gecode] Testing arithmetic rounding
In-Reply-To: <200508230942.59418.tack@ps.uni-sb.de>
Message-ID: <000101c5a810$f7431940$0301a8c0@dator>

As far as I understand, all modern hardware rounds towards zero. If my
memory serves me right it is event standard for C99 but not yet for C++.

Anybody knows more here...

Guido, if you feel its too messy I could remove it, we do not need it badly.

Christian

-----Original Message-----
From: gecode-bounces at ps.uni-sb.de [mailto:gecode-bounces at ps.uni-sb.de] On
Behalf Of Guido Tack
Sent: Tuesday, August 23, 2005 9:43 AM
To: gecode at ps.uni-sb.de
Subject: [Gecode] Testing arithmetic rounding


Hi.

I've just removed the rounding test from configure.ac and the Makefiles. I 
have replaced it with a check in int/view.icc:

#if (-17 / 7) == -2
#define GECODE_INT_RND_TWDS_ZERO 1
#else
#define GECODE_INT_RND_TWDS_ZERO 0
#endif

This assumes that the preprocessor rounds the same way as the compiler, and
I 
actually have no idea if it always does. This is however the same test we've

been using in configure.ac so far.

Does anyone know a platform where rounding is not defined towards zero? I'd 
just like to test if the preprocessor rounds the same way there.

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Saarbr?cken
http://www.ps.uni-sb.de/~tack

_______________________________________________
Gecode mailing list
Gecode at ps.uni-sb.de http://www.ps.uni-sb.de/mailman/listinfo/gecode




From tack at ps.uni-sb.de  Wed Aug 24 13:20:43 2005
From: tack at ps.uni-sb.de (Guido Tack)
Date: Wed, 24 Aug 2005 13:20:43 +0200
Subject: [Gecode] Testing arithmetic rounding
In-Reply-To: <000101c5a810$f7431940$0301a8c0@dator>
References: <000101c5a810$f7431940$0301a8c0@dator>
Message-ID: <200508241320.43374.tack@ps.uni-sb.de>

> As far as I understand, all modern hardware rounds towards zero. If my
> memory serves me right it is event standard for C99 but not yet for C++.
>
> Anybody knows more here...

As I said, I found it in the C++ standard:

4.9 Floating-integral conversions
An rvalue of a floating point type can be converted to an rvalue of an integer 
type. The conversion trun-
cates; that is, the fractional part is discarded. The behavior is undefined if 
the truncated value cannot be
represented in the destination type. [Note: If the destination type is bool, 
see 4.12. ]

> Guido, if you feel its too messy I could remove it, we do not need it
> badly.

As far as I can see, we should remove the test, not the code ;-)

Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Saarbr?cken
http://www.ps.uni-sb.de/~tack



From schulte at imit.kth.se  Wed Aug 24 13:42:45 2005
From: schulte at imit.kth.se (Christian Schulte)
Date: Wed, 24 Aug 2005 13:42:45 +0200
Subject: [Gecode] Testing arithmetic rounding
In-Reply-To: <200508241320.43374.tack@ps.uni-sb.de>
Message-ID: <000a01c5a8a0$f1dccba0$0301a8c0@dator>

Hmmm, maybe the test is wrong... It is really for integers. I have to
recheck the nonsense I did there...

Christian

-----Original Message-----
From: Guido Tack [mailto:tack at ps.uni-sb.de] 
Sent: Wednesday, August 24, 2005 1:21 PM
To: schulte at imit.kth.se; Technical discussions about Gecode
Subject: Re: [Gecode] Testing arithmetic rounding


> As far as I understand, all modern hardware rounds towards zero. If my 
> memory serves me right it is event standard for C99 but not yet for 
> C++.
>
> Anybody knows more here...

As I said, I found it in the C++ standard:

4.9 Floating-integral conversions
An rvalue of a floating point type can be converted to an rvalue of an
integer 
type. The conversion trun-
cates; that is, the fractional part is discarded. The behavior is undefined
if 
the truncated value cannot be
represented in the destination type. [Note: If the destination type is bool,

see 4.12. ]

> Guido, if you feel its too messy I could remove it, we do not need it 
> badly.

As far as I can see, we should remove the test, not the code ;-)

Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Saarbr?cken
http://www.ps.uni-sb.de/~tack




From osivertsson at gmail.com  Fri Aug 26 12:39:11 2005
From: osivertsson at gmail.com (olof sivertsson)
Date: Fri, 26 Aug 2005 12:39:11 +0200
Subject: [Gecode] Updated tarballs?
Message-ID: <1c8b4aa60508260339620086b3@mail.gmail.com>

Hi.

Any chance of updated tarballs at
https://www.gecode.org/Internal/tarballs/ since they are two months
old? Or (perhaps even better), read-only CVS/SVN access?

Cheers,
Olof Sivertsson



From tack at ps.uni-sb.de  Mon Aug 29 11:27:06 2005
From: tack at ps.uni-sb.de (Guido Tack)
Date: Mon, 29 Aug 2005 11:27:06 +0200
Subject: [Gecode] Updated tarballs?
In-Reply-To: <1c8b4aa60508260339620086b3@mail.gmail.com>
References: <1c8b4aa60508260339620086b3@mail.gmail.com>
Message-ID: <200508291127.07137.tack@ps.uni-sb.de>

> Any chance of updated tarballs at
> https://www.gecode.org/Internal/tarballs/ since they are two months

We have been quite busy reorganizing some things. You can find new tarballs 
there now, but please be aware that the build system as well as some internal 
stuff has changed.

> old? Or (perhaps even better), read-only CVS/SVN access?

As we do not want to provide real unlimited anonymous CVS access right now, 
this is technically impossible at the moment. I hope the tarballs are good 
enough for now, and I think we'll set up anonymous CVS or SVN access sometime 
during the next weeks.

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Saarbr?cken
http://www.ps.uni-sb.de/~tack



From schulte at imit.kth.se  Mon Aug 29 12:27:05 2005
From: schulte at imit.kth.se (Christian Schulte)
Date: Mon, 29 Aug 2005 12:27:05 +0200
Subject: [Gecode] Updated tarballs?
In-Reply-To: <200508291127.07137.tack@ps.uni-sb.de>
Message-ID: <000701c5ac84$3419e520$acd4ed82@beule>

I also put up a compressed html file for the windows users containing the
reference documentation.

Christian

--
Christian Schulte, http://www.imit.kth.se/~schulte/ 

-----Original Message-----
From: gecode-bounces at ps.uni-sb.de [mailto:gecode-bounces at ps.uni-sb.de] On
Behalf Of Guido Tack
Sent: Monday, August 29, 2005 11:27 AM
To: Technical discussions about Gecode
Subject: Re: [Gecode] Updated tarballs?


> Any chance of updated tarballs at 
> https://www.gecode.org/Internal/tarballs/ since they are two months

We have been quite busy reorganizing some things. You can find new tarballs 
there now, but please be aware that the build system as well as some
internal 
stuff has changed.

> old? Or (perhaps even better), read-only CVS/SVN access?

As we do not want to provide real unlimited anonymous CVS access right now, 
this is technically impossible at the moment. I hope the tarballs are good 
enough for now, and I think we'll set up anonymous CVS or SVN access
sometime 
during the next weeks.

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Saarbr?cken
http://www.ps.uni-sb.de/~tack

_______________________________________________
Gecode mailing list
Gecode at ps.uni-sb.de http://www.ps.uni-sb.de/mailman/listinfo/gecode




