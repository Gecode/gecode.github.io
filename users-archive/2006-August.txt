From schulte at imit.kth.se  Fri Aug  4 15:40:38 2006
From: schulte at imit.kth.se (Christian Schulte)
Date: Fri, 4 Aug 2006 15:40:38 +0200
Subject: [gecode-users] CP 2006: Call for Participation 
Message-ID: <000a01c6b7cb$a32e9160$0401a8c0@tiny>

[Important: Deadline for early registration is August 15th, 2006]

                     Call for Participation

                             CP 2006
               Twelfth International Conference on
        Principles and Practice of Constraint Programming


                      September 24-29, 2006
                Cit? des Congr?s - Nantes, France

            http://www.sciences.univ-nantes.fr/cp06/


Description

The CP conference is the annual international conference on
constraint programming, and it is concerned with all aspects of
computing with constraints, including: algorithms, applications,
environments, languages, models, and systems. CP 2006 includes a
technical program, where presentations of theoretical and
application papers, as well as invited talks and tutorials, aim
at describing the best results and techniques in the
state-of-the-art of constraint programming. Moreover, CP 2006
continues the tradition of the CP doctoral program, in which PhD
students can present their work, listen to tutorials on career
and ethical issues, and discuss their work with senior
researchers via a mentoring scheme. There will also be a number
of workshops, where researchers will be able to meet in an
informal setting and discuss their most recent ideas with their
peers.

Special events

CP 2006 will open on Sunday 24 September with CP-Tools-06, the
first event in a yearly series addressing CP systems design and
application development. During the conference, the 2006 ACP
award will be given and a plenary half day workshop will be
dedicated to the "next ten years of Constraint Programming".

Conference site

CP 2006 will be held at the Nantes Cit? des Congr?s. Nantes is a
major center of the European West and the sixth largest town in
France. The city, which is located on the Loire Estuary and 50km
from the Atlantic coast, is famous for enjoying an exceptional
quality of life. Nantes is at the heart of a highly efficient
transportation network (high-speed trains from Paris, airport,
motorways, tramway). The Nantes Cit? des Congr?s is directly
accessible by shuttle from the airport, by bus from the city
center, and is within ten-minute walking distance from the city
center and the high-speed train station.

Registration and accommodation

We encourage you to register for the conference and make you
hotel reservations.  All relevant information can be found on the
conference's main web page,

        http://www.sciences.univ-nantes.fr/cp06/

Deadline for early registration:        August 15th, 2006 
Deadline for accommodation:             August 30th, 2006


We look forward to an exciting and inspiring conference in
Nantes, France.

CP 2006 Organizing Committee




From efkalog at gmail.com  Mon Aug  7 10:50:24 2006
From: efkalog at gmail.com (Efstratios Kalogirou)
Date: Mon, 7 Aug 2006 10:50:24 +0200
Subject: [gecode-users] Valid Domain Recomputation
Message-ID: <6d69d7de0608070150l66942be7o3a0f22edbbb54856@mail.gmail.com>

Hi all,

I am using Gecode to create a function that receives a variable x and a
value v for that variable from the user and returns only the valid values
for all the variables (some of them are excluded because of constraint
propagation after the assignment x=v). What I am doing is :
1. Assign variable x value v
2. For all the variables i of this new space which I call FATHER SPACE
3.    For all the values j  of each variable
4.       Clone FATHER to TEMP Space and assign inside TEMP variable i= value
j
5.           Get the Status of the TEMP Space. if SS_SOLVED do nothing, if
SS_FAILED post i!=j in the FATHER SPACE. If SS_BRANCH I am using a search
engine to check weather there is a solution or not. If there is, do nothing,
otherwise post again i!=j in the FATHER SPACe.
6.       Delete TEMP

By posting i!=j I manage to exclude from my father space the values that are
no longer valid. This works fine, but steps 1-5 are repeated many times and
each time I perform this valid domain check, i have to go through all the
variables and all the values, copy the father space to temp, and get the
status of the temp. This slows things down a lot and I have been wondering
if there is a faster way to do this. Any ides?

Best,
Stratos Kalogirou
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20060807/61bbb217/attachment.htm>

From schulte at imit.kth.se  Mon Aug  7 13:55:16 2006
From: schulte at imit.kth.se (Christian Schulte)
Date: Mon, 7 Aug 2006 13:55:16 +0200
Subject: [gecode-users] Valid Domain Recomputation
In-Reply-To: <6d69d7de0608070150l66942be7o3a0f22edbbb54856@mail.gmail.com>
Message-ID: <003101c6ba18$5924c040$acd4ed82@beule>

No, unfortunately not. But you cannot expect miracles here: Invoking
complete search for each variable value pair is bound to cost something.

One could use ideas similar to branch-and-bound that records what
variable-value combinations have already been recorded. I know that Mikael
Lagerkvist (zayenz at kth.se) has been toying with this idea but he is
currently on holidays.

Cheers
Christian


--
Christian Schulte, http://www.imit.kth.se/~schulte/ 
-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Efstratios Kalogirou
Sent: Monday, August 07, 2006 10:50 AM
To: users at gecode.org
Subject: [gecode-users] Valid Domain Recomputation


Hi all,

I am using Gecode to create a function that receives a variable x and a
value v for that variable from the user and returns only the valid values
for all the variables (some of them are excluded because of constraint
propagation after the assignment x=v). What I am doing is : 
1. Assign variable x value v 
2. For all the variables i of this new space which I call FATHER SPACE
3.    For all the values j  of each variable
4.       Clone FATHER to TEMP Space and assign inside TEMP variable i= value
j 
5.           Get the Status of the TEMP Space. if SS_SOLVED do nothing, if
SS_FAILED post i!=j in the FATHER SPACE. If SS_BRANCH I am using a search
engine to check weather there is a solution or not. If there is, do nothing,
otherwise post again i!=j in the FATHER SPACe. 
6.       Delete TEMP

By posting i!=j I manage to exclude from my father space the values that are
no longer valid. This works fine, but steps 1-5 are repeated many times and
each time I perform this valid domain check, i have to go through all the
variables and all the values, copy the father space to temp, and get the
status of the temp. This slows things down a lot and I have been wondering
if there is a faster way to do this. Any ides? 

Best,
Stratos Kalogirou




From rafaparafernalia at gmail.com  Wed Aug  9 06:55:34 2006
From: rafaparafernalia at gmail.com (Rafael Meneses)
Date: Wed, 9 Aug 2006 00:55:34 -0400
Subject: [gecode-users] Improvement....
Message-ID: <d701e0390608082155y7f685ca6p5a726ccdaf85cde0@mail.gmail.com>

Hi,

I think that will be good, that I can define a subclass of the
Statistics class, then I can pass this to the engine and the same
class will be send to the branchs and propagators.

I make a custom branch and I like make some statistics, with the
actually infrastructure of gecode, I don't can make this statistics
without make a custom search engine, and I think that don't must
necesary make a custom search engine to make statistics from my custom
branch.

I don't write english very well.... sorry.

saludos,

-- 
Rafael Meneses
http://www.zeke.cl
http://www.labsd.inf.utfsm.cl/~rmeneses



From tack at ps.uni-sb.de  Thu Aug 10 16:14:38 2006
From: tack at ps.uni-sb.de (Guido Tack)
Date: Thu, 10 Aug 2006 16:14:38 +0200
Subject: [gecode-users] Improvement....
In-Reply-To: <d701e0390608082155y7f685ca6p5a726ccdaf85cde0@mail.gmail.com>
References: <d701e0390608082155y7f685ca6p5a726ccdaf85cde0@mail.gmail.com>
Message-ID: <BF545ED0-A226-4732-802B-670F50317FE1@ps.uni-sb.de>

Hi.

> I think that will be good, that I can define a subclass of the
> Statistics class, then I can pass this to the engine and the same
> class will be send to the branchs and propagators.

Unfortunately, this would incur a significant overhead. Statistics  
are currently completely independent of branchings and propagators.  
Passing a statistics object around during propagation would mean that  
each propagator invocation would have to pay for a feature that is  
not often used.

> I make a custom branch and I like make some statistics, with the
> actually infrastructure of gecode, I don't can make this statistics
> without make a custom search engine, and I think that don't must
> necesary make a custom search engine to make statistics from my custom
> branch.

What kind of statistics do you want to collect? If you have to  
collect it with every invocation of your branching, you could simply  
have a global statistics object that all your branchings know about.  
Why does it have to be passed by the search engine, or the kernel?

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Germany
http://www.ps.uni-sb.de



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20060810/71129312/attachment.htm>

From drthi1 at student.monash.edu  Thu Aug 17 08:54:25 2006
From: drthi1 at student.monash.edu (Dhananjay Thiruvady)
Date: Thu, 17 Aug 2006 16:54:25 +1000
Subject: [gecode-users] Installation question
Message-ID: <130.194.72.94.1155797064@my.monash.edu.au>

An embedded and charset-unspecified text was scrubbed...
Name: not available
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20060817/5b73b337/attachment.asc>

From tack at ps.uni-sb.de  Thu Aug 17 11:38:24 2006
From: tack at ps.uni-sb.de (Guido Tack)
Date: Thu, 17 Aug 2006 11:38:24 +0200
Subject: [gecode-users] Installation question
In-Reply-To: <130.194.72.94.1155797064@my.monash.edu.au>
References: <130.194.72.94.1155797064@my.monash.edu.au>
Message-ID: <F7475629-7D38-49FA-8E5F-5038B4C0AFF1@ps.uni-sb.de>

Hi.

> I have a problem with the installation of gecode. I'm using cygwin  
> in windows xp. I use DJGPP (gpp) to compile my C++ programs. To  
> configure gecode I use: ./configure CC="gcc -mno-cygwin" CXX="g++ - 
> mno-cygwin". This produces the following error: C++ compiler can  
> not create executables. If I simply use ./configure a MakeFile is  
> produced. However, make does not work.

I don't know DJGPP very well, but I guess it is quite different from  
the gcc suite normally distributed with cygwin. In particular, I  
guess that the -mno-cygwin switch simply doesn't exist. So you could  
try again without that switch.

In cygwin, the switch has the effect that gcc does not link with the  
cygwin libraries (which try to emulate unix as closely as possible),  
but with the Windows standard libraries. This results in a much  
better performance, as especially memory allocation seems to be  
really slow in cygwin.

If I understand the web pages correctly, DJGPP also comes with its  
own C library. This could mean that performance is inferior here,  
too, but maybe they did a better job.

Please note that we only support gcc versions beginning with 3.4 (but  
I think DJGPP even provides 4.0). Another thing that might get into  
your way is that gcc on cygwin knows about __declspec annotations. If  
DJGPP does not support them, you'll have to modify some source files.

Please let us know about your progress!

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Germany
http://www.ps.uni-sb.de/~tack






From tack at ps.uni-sb.de  Fri Aug 18 07:56:49 2006
From: tack at ps.uni-sb.de (Guido Tack)
Date: Fri, 18 Aug 2006 07:56:49 +0200
Subject: [gecode-users] Installation question
In-Reply-To: <130.194.72.94.1155872237@my.monash.edu.au>
References: <F7475629-7D38-49FA-8E5F-5038B4C0AFF1@ps.uni-sb.de>
	<130.194.72.94.1155872237@my.monash.edu.au>
Message-ID: <28EE6515-D479-41FF-A04E-749D2E96603A@ps.uni-sb.de>

Hi.

> Thanks Guido,
>
> There is a problem with linking to DJGPP. I am now using it  
> exclusively from cygwin. It is all working fine, now to familiarize  
> myself with constraint programming.

I'm happy to hear that. As you're using Windows, I would consider  
switching to the Microsoft Visual C++ Express Edition. You can  
download it for free, and the compiler is a lot faster and produces  
significantly better code than gcc.

Cheers,
	Guido






From ml13 at onlinehome.de  Tue Aug 22 10:54:47 2006
From: ml13 at onlinehome.de (Kilian Sprotte)
Date: Tue, 22 Aug 2006 10:54:47 +0200
Subject: [gecode-users] random / mod
Message-ID: <5B1D073B-8EEB-47BF-850F-352361487B89@onlinehome.de>

Hello,

I would like to announce myself as a new Gecode user on the mac  
platform -- first experiences are very good !! :)

I admit that I have been reading on this list a little and followed  
with great curiosity the thread on random branching.... This really  
seems to be quite difficult and if I understand correctly, a final  
solution of this problem does not really exist, yet... (?)

Anyway, for the moment, I wanted to ask you a more simple question:

I would like to use a modulo constraint - it seems that I would have  
to implement it myself or am I missing something?

Thank you for this wonderful library!
Cheers,
   Kilian Sprotte





From ottenl at student.chalmers.se  Tue Aug 22 11:19:16 2006
From: ottenl at student.chalmers.se (Lars Otten)
Date: Tue, 22 Aug 2006 11:19:16 +0200
Subject: [gecode-users] random / mod
In-Reply-To: <5B1D073B-8EEB-47BF-850F-352361487B89@onlinehome.de>
References: <5B1D073B-8EEB-47BF-850F-352361487B89@onlinehome.de>
Message-ID: <44EACC14.9030400@student.chalmers.se>

Hi Killian,

On 08/22/06 10:54, Kilian Sprotte wrote:
> I admit that I have been reading on this list a little and followed with
> great curiosity the thread on random branching.... This really seems to
> be quite difficult and if I understand correctly, a final solution of
> this problem does not really exist, yet... (?)

What exactly is it that you want to do? I think I took part in the said
discussion; eventually I managed to get some form of randomization working
and I've successfully been using it for a project, so maybe I can help...

/Lars




From ottenl at student.chalmers.se  Tue Aug 22 14:53:41 2006
From: ottenl at student.chalmers.se (Lars Otten)
Date: Tue, 22 Aug 2006 14:53:41 +0200
Subject: [gecode-users] random / mod
In-Reply-To: <8C2FDE01-79EA-424C-87CC-D7C3A4D35358@onlinehome.de>
References: <5B1D073B-8EEB-47BF-850F-352361487B89@onlinehome.de>
	<44EACC14.9030400@student.chalmers.se>
	<8C2FDE01-79EA-424C-87CC-D7C3A4D35358@onlinehome.de>
Message-ID: <44EAFE55.6030708@student.chalmers.se>

Hi!

On 08/22/06 12:43, Kilian Sprotte wrote:
> Am 22.08.2006 um 11:19 schrieb Lars Otten:
>> What exactly is it that you want to do? I think I took part in the said
>> discussion; eventually I managed to get some form of randomization
>> working
>> and I've successfully been using it for a project, so maybe I can help...
> 
> Hi Lars,
> 
> this would be extremely kind of you!! :) I dont think that my demands
> are so high in fact -- the quality of the random gen is not very
> important, for example.

In fact the 'quality' of the random numbers is not so much the issue here,
and as Mikael Lagerkvist noted some months ago, a fairly 'good' random
number generator already ships with Gecode (as I recall as part of the
testing component).

The problem at hand is more within Gecode's architecture that employs
recomputation. To clarify (and save me some typing) I'll quote my upcoming
Master's thesis:

<quote>
The search engines in Gecode make heavy use of \emph{recomputation}, meaning
that one and the same branching decision might have to be made several times
throughout the search process. Obviously, for recomputation to work
properly, it is essential that the same choice is taken every time, which is
not a problem with fully deterministic, non-randomized heuristics.

With randomized selection schemes, however, this is not self-evident:
Normally, everytime a randomized decision is to be made, a potentially
differing random number will be used. Consequentially a different outcome
might ensue for the same problem configuration.

To overcome this conflict we added the following feature to the search tree
traversal mechanism: When a node in the search tree is first encountered, we
memorize the state of the random number generator (the \emph{random seed})
that the branching decision will be based on. If we subsequently get back to
the same node during recomputation we restore the saved random seed before
the branching decision is made again.
</quote>

> I should tell you that I am more a composer than a programmer and using
> constraints for writing my music (it means my knowledge of c++ is not
> ideal...). This is the currently pretty simple Space I am using together
> with DFS<Simple>(home):
> [...]
> If I dont post very many constraints the result is a bit mechanical --
> instead of posting many more of them to "disturb" the solver, the random
> dist would be very useful, especially, if I would not loose solutions...

If you do it right you won't lose any solutions at all. :)

> Have you published/reported on your project somewhere?

As mentioned above, I'm just finishing my Master's thesis (which in turn is
based on a conference paper on randomization in CP). But it doesn't really
cover the technical aspect of implementing randomization but focuses more on
how to exploit it in theory and practice.

Maybe my quote above helps you to get the hang of it already; otherwise just
ask questions. Also I could maybe offer sending you the resp. portions of my
modified code (parts of it should already have been posted here some time
ago). This is, hoever, still based on an older version of Gecode (1.0.1 I
think) and I currently don't have the time to make the transit to 1.2.x. It
might give you the idea, though...

Cheers,
/Lars


P.S. You might want to CC your future responses to users at gecode.org as well,
so others can profit from and participate in the discussion as well.




From ml13 at onlinehome.de  Tue Aug 22 17:23:11 2006
From: ml13 at onlinehome.de (Kilian Sprotte)
Date: Tue, 22 Aug 2006 17:23:11 +0200
Subject: [gecode-users] random / mod
In-Reply-To: <44EAFE55.6030708@student.chalmers.se>
References: <5B1D073B-8EEB-47BF-850F-352361487B89@onlinehome.de>
	<44EACC14.9030400@student.chalmers.se>
	<8C2FDE01-79EA-424C-87CC-D7C3A4D35358@onlinehome.de>
	<44EAFE55.6030708@student.chalmers.se>
Message-ID: <2AC021F9-9EC6-4BA7-A2E1-3D1E583CD924@onlinehome.de>

Dear Lars,

Am 22.08.2006 um 14:53 schrieb Lars Otten:
>
> As mentioned above, I'm just finishing my Master's thesis (which in  
> turn is
> based on a conference paper on randomization in CP). But it doesn't  
> really
> cover the technical aspect of implementing randomization but  
> focuses more on
> how to exploit it in theory and practice.
>

I am sure, you will tell us, when it is finished? :) I had a look for  
your paper on the web, found some traces, but it does not seem to be  
online ...


> Maybe my quote above helps you to get the hang of it already;  
> otherwise just
> ask questions. Also I could maybe offer sending you the resp.  
> portions of my
> modified code (parts of it should already have been posted here  
> some time
> ago). This is, hoever, still based on an older version of Gecode  
> (1.0.1 I
> think) and I currently don't have the time to make the transit to  
> 1.2.x. It
> might give you the idea, though...

If you would like to share your code that would be great -- maybe I  
can try to adapt it for 1.2.x and report to you about my progress. I  
think I understand the general idea, but part of the  problem for me  
is of course also just to know where to subclass etc...

Ciao,
   Kilian

>
> P.S. You might want to CC your future responses to users at gecode.org  
> as well,
> so others can profit from and participate in the discussion as well.
>

Okay, I just overlooked that, sorry...




From ml13 at onlinehome.de  Tue Aug 22 17:35:01 2006
From: ml13 at onlinehome.de (Kilian Sprotte)
Date: Tue, 22 Aug 2006 17:35:01 +0200
Subject: [gecode-users] last question
Message-ID: <A3839DAB-571B-4BBC-BD0A-C0734CEA85C1@onlinehome.de>

Hi again,

this is surely my last question for today:

There is something I dont understand about using the minimodel -- I  
can see that it provides a more functional approach, creating  
variables on the fly in nested expressions.

But it does not seem to be necessary to attach those variables to the  
Store... Dont they need to be copied?

Cheers,

   Kilian

PS: I am planning to develop a LISP wrapper sometime later this year  
-- I wonder, if there are people who would be interested in that.
(Hope to release it on http://common-lisp.net/ , so watch out... :)





From tack at ps.uni-sb.de  Tue Aug 22 18:05:53 2006
From: tack at ps.uni-sb.de (Guido Tack)
Date: Tue, 22 Aug 2006 18:05:53 +0200
Subject: [gecode-users] last question
In-Reply-To: <A3839DAB-571B-4BBC-BD0A-C0734CEA85C1@onlinehome.de>
References: <A3839DAB-571B-4BBC-BD0A-C0734CEA85C1@onlinehome.de>
Message-ID: <4667BF5E-27F6-4143-9B8A-D386AAFC1251@ps.uni-sb.de>

Hi Kilian.

> this is surely my last question for today:

Don't worry - this list is not exactly flooded with traffic ;-)

> There is something I dont understand about using the minimodel -- I  
> can see that it provides a more functional approach, creating  
> variables on the fly in nested expressions.
>
> But it does not seem to be necessary to attach those variables to  
> the Store... Dont they need to be copied?

Variables are always copied automatically by the propagators that use  
them. However, if a propagator "loses interest" in a variable, it can  
drop its subscription and not copy it. That is why you have to copy  
all those variables manually that you want to access in your solution.
For temporary variables, not copying them explicitly does exactly the  
right thing: they are copied as long as any propagator depends on  
them, and after that they are discarded.

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Germany
http://www.ps.uni-sb.de/~tack






From rafaparafernalia at gmail.com  Wed Aug 23 08:40:59 2006
From: rafaparafernalia at gmail.com (Rafael Meneses)
Date: Wed, 23 Aug 2006 02:40:59 -0400
Subject: [gecode-users] Bug???
Message-ID: <d701e0390608222340s5bc954e8q52c6668e5dc807bb@mail.gmail.com>

Hi,


When I use

Gecode::post(this,Gecode::abs(this,Gecode::post(this,sameNumber[ii]-sameNumber[ii-1]))
== i+2);

Produce this warning:

/home/rmeneses/src/gecode-1.2.2/gecode/int/var/int.icc:41: warning:
'x$var' is used uninitialized in this function


with compile options:

 -O3 -Wall

The result is OK, but the warning is ugly ;)


or my code is the error....


I attach my code.


-- 
Rafael Meneses
http://www.zeke.cl
http://www.labsd.inf.utfsm.cl/~rmeneses
-------------- next part --------------
A non-text attachment was scrubbed...
Name: warning.cc
Type: text/x-c++src
Size: 1950 bytes
Desc: not available
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20060823/3c90fc62/attachment.cc>

From rafaparafernalia at gmail.com  Wed Aug 23 08:46:27 2006
From: rafaparafernalia at gmail.com (Rafael Meneses)
Date: Wed, 23 Aug 2006 02:46:27 -0400
Subject: [gecode-users] Re: Bug???
In-Reply-To: <d701e0390608222340s5bc954e8q52c6668e5dc807bb@mail.gmail.com>
References: <d701e0390608222340s5bc954e8q52c6668e5dc807bb@mail.gmail.com>
Message-ID: <d701e0390608222346r34edfed0u2ed1610a82bf6c5d@mail.gmail.com>

On 8/23/06, Rafael Meneses <rafaparafernalia at gmail.com> wrote:
> Hi,
>
>
> When I use
>
> Gecode::post(this,Gecode::abs(this,Gecode::post(this,sameNumber[ii]-sameNumber[ii-1]))
> == i+2);
>
> Produce this warning:
>
> /home/rmeneses/src/gecode-1.2.2/gecode/int/var/int.icc:41: warning:
> 'x$var' is used uninitialized in this function
>
>
> with compile options:
>
>  -O3 -Wall

I probe with g++-4.1 and g++-4.0.

>
> The result is OK, but the warning is ugly ;)
>
>
> or my code is the error....
>
>
> I attach my code.
>

saludos,

>
> --
> Rafael Meneses
> http://www.zeke.cl
> http://www.labsd.inf.utfsm.cl/~rmeneses
>
>
>


-- 
Rafael Meneses
http://www.zeke.cl
http://www.labsd.inf.utfsm.cl/~rmeneses



From schulte at imit.kth.se  Wed Aug 23 10:34:02 2006
From: schulte at imit.kth.se (Christian Schulte)
Date: Wed, 23 Aug 2006 10:34:02 +0200
Subject: [gecode-users] random / mod
In-Reply-To: <5B1D073B-8EEB-47BF-850F-352361487B89@onlinehome.de>
Message-ID: <000e01c6c68e$e345b590$acd4ed82@beule>

Hi,

an easy way to get div/mod is to use multiplication and addition, that is:
if you want to compute a mod b then we know:
	(a div b) * b + (a mod b) = a
So introduce new variables d (for a div b), m (for a mod b) and p (for b*d)
subject to:
	m < b,  p+m=a, b*d=p

Hope that helps
Christian

PS: A word of caution: the propagation is very weak by the nature of mod. A
different approach for variables with a small domain and where b is constant
in a mod b is to use the element constraint: the array just contains a mod b
for different a's.

--
Christian Schulte, http://www.imit.kth.se/~schulte/ 

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Kilian Sprotte
Sent: Tuesday, August 22, 2006 10:55 AM
To: users at gecode.org
Subject: [gecode-users] random / mod


Hello,

I would like to announce myself as a new Gecode user on the mac  
platform -- first experiences are very good !! :)

I admit that I have been reading on this list a little and followed  
with great curiosity the thread on random branching.... This really  
seems to be quite difficult and if I understand correctly, a final  
solution of this problem does not really exist, yet... (?)

Anyway, for the moment, I wanted to ask you a more simple question:

I would like to use a modulo constraint - it seems that I would have  
to implement it myself or am I missing something?

Thank you for this wonderful library!
Cheers,
   Kilian Sprotte



_______________________________________________
Gecode users mailing list
users at gecode.org https://www.gecode.org/mailman/listinfo/gecode-users




From tack at ps.uni-sb.de  Wed Aug 23 13:20:24 2006
From: tack at ps.uni-sb.de (Guido Tack)
Date: Wed, 23 Aug 2006 13:20:24 +0200
Subject: [gecode-users] Re: Bug???
In-Reply-To: <d701e0390608222346r34edfed0u2ed1610a82bf6c5d@mail.gmail.com>
References: <d701e0390608222340s5bc954e8q52c6668e5dc807bb@mail.gmail.com>
	<d701e0390608222346r34edfed0u2ed1610a82bf6c5d@mail.gmail.com>
Message-ID: <88091D93-60BE-48AB-B4A8-00CB931C1387@ps.uni-sb.de>

Hi.

>> /home/rmeneses/src/gecode-1.2.2/gecode/int/var/int.icc:41: warning:
>> 'x$var' is used uninitialized in this function

This was a small problem in our minimodel library. I guess it could  
have led to strange behaviour including segmentation faults under  
certain (border case) conditions. Thanks for pointing this out, it's  
fixed in the trunk now.
If you want to fix it in 1.2.2 instead of upgrading to the trunk,  
just change the file gecode/minimodel/lin-expr.icc at line 186 from
     IntVar x;
to
     IntVar x(home,Limits::Int::int_min,Limits::Int::int_max);

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Germany
http://www.ps.uni-sb.de/~tack






From ml13 at onlinehome.de  Wed Aug 23 21:51:14 2006
From: ml13 at onlinehome.de (Kilian Sprotte)
Date: Wed, 23 Aug 2006 21:51:14 +0200
Subject: [gecode-users] random / mod
In-Reply-To: <000e01c6c68e$e345b590$acd4ed82@beule>
References: <000e01c6c68e$e345b590$acd4ed82@beule>
Message-ID: <82467F4C-095F-4C48-9BF4-94C9D6DF463D@onlinehome.de>


Am 23.08.2006 um 10:34 schrieb Christian Schulte:
>
> PS: A word of caution: the propagation is very weak by the nature  
> of mod. A
> different approach for variables with a small domain and where b is  
> constant
> in a mod b is to use the element constraint: the array just  
> contains a mod b
> for different a's.

Hi,

thank you very much that helps me a lot! Especially the element  
approach will be very useful, since in music you deal very often with  
mod 12 ! :)

On my todo list is a propagator for a musical set-class modulo 12 --  
{0,1,3} will be a representative for itself as well as {1,2,4},  
{2,3,5} ... {11,0,2} - But analogous to what you have showed me, I  
suppose selectSet() might already be the solution, where the index is  
the transposition.... Cool!

Thanks again,

   Kilian

PS: I will surely recontact you next week, when I try to tackle the  
random branching... 
  



From tack at ps.uni-sb.de  Wed Aug 23 22:01:01 2006
From: tack at ps.uni-sb.de (Guido Tack)
Date: Wed, 23 Aug 2006 22:01:01 +0200
Subject: [gecode-users] random / mod
In-Reply-To: <82467F4C-095F-4C48-9BF4-94C9D6DF463D@onlinehome.de>
References: <000e01c6c68e$e345b590$acd4ed82@beule>
	<82467F4C-095F-4C48-9BF4-94C9D6DF463D@onlinehome.de>
Message-ID: <E36F5A2E-256F-4421-A41D-2C19587E9503@ps.uni-sb.de>

> thank you very much that helps me a lot! Especially the element  
> approach will be very useful, since in music you deal very often  
> with mod 12 ! :)

That sounds interesting!

> On my todo list is a propagator for a musical set-class modulo 12  
> -- {0,1,3} will be a representative for itself as well as {1,2,4},  
> {2,3,5} ... {11,0,2} - But analogous to what you have showed me, I  
> suppose selectSet() might already be the solution, where the index  
> is the transposition.... Cool!

That's cool indeed. I'll be very interested in seeing music  
applications of the set constraints! Let me know if you need any  
special propagators or have interesting ideas for modeling!

Cheers,
	Guido




From torstenanders at gmx.de  Thu Aug 24 12:17:59 2006
From: torstenanders at gmx.de (Torsten Anders)
Date: Thu, 24 Aug 2006 12:17:59 +0200
Subject: [gecode-users] random / mod
In-Reply-To: <44EAFE55.6030708@student.chalmers.se>
References: <5B1D073B-8EEB-47BF-850F-352361487B89@onlinehome.de>
	<44EACC14.9030400@student.chalmers.se>
	<8C2FDE01-79EA-424C-87CC-D7C3A4D35358@onlinehome.de>
	<44EAFE55.6030708@student.chalmers.se>
Message-ID: <49f462ee9fb57d516397f43dfc07ab13@gmx.de>

Dear all,

Here is a related question: would batch recomputation simplify the 
definition of randomized selection schemes? That is, are the decisions 
made by the branching recorded by the batch recomputation mechanism 
such that randomized selection schemes come fore free?

Best,
Torsten

On 22.08.2006, at 14:53, Lars Otten wrote:
> Hi!
>
> On 08/22/06 12:43, Kilian Sprotte wrote:
>> Am 22.08.2006 um 11:19 schrieb Lars Otten:
>>> What exactly is it that you want to do? I think I took part in the 
>>> said
>>> discussion; eventually I managed to get some form of randomization
>>> working
>>> and I've successfully been using it for a project, so maybe I can 
>>> help...
>>
>> Hi Lars,
>>
>> this would be extremely kind of you!! :) I dont think that my demands
>> are so high in fact -- the quality of the random gen is not very
>> important, for example.
>
> In fact the 'quality' of the random numbers is not so much the issue 
> here,
> and as Mikael Lagerkvist noted some months ago, a fairly 'good' random
> number generator already ships with Gecode (as I recall as part of the
> testing component).
>
> The problem at hand is more within Gecode's architecture that employs
> recomputation. To clarify (and save me some typing) I'll quote my 
> upcoming
> Master's thesis:
>
> <quote>
> The search engines in Gecode make heavy use of \emph{recomputation}, 
> meaning
> that one and the same branching decision might have to be made several 
> times
> throughout the search process. Obviously, for recomputation to work
> properly, it is essential that the same choice is taken every time, 
> which is
> not a problem with fully deterministic, non-randomized heuristics.
>
> With randomized selection schemes, however, this is not self-evident:
> Normally, everytime a randomized decision is to be made, a potentially
> differing random number will be used. Consequentially a different 
> outcome
> might ensue for the same problem configuration.
>
> To overcome this conflict we added the following feature to the search 
> tree
> traversal mechanism: When a node in the search tree is first 
> encountered, we
> memorize the state of the random number generator (the \emph{random 
> seed})
> that the branching decision will be based on. If we subsequently get 
> back to
> the same node during recomputation we restore the saved random seed 
> before
> the branching decision is made again.
> </quote>
>
>> I should tell you that I am more a composer than a programmer and 
>> using
>> constraints for writing my music (it means my knowledge of c++ is not
>> ideal...). This is the currently pretty simple Space I am using 
>> together
>> with DFS<Simple>(home):
>> [...]
>> If I dont post very many constraints the result is a bit mechanical --
>> instead of posting many more of them to "disturb" the solver, the 
>> random
>> dist would be very useful, especially, if I would not loose 
>> solutions...
>
> If you do it right you won't lose any solutions at all. :)
>
>> Have you published/reported on your project somewhere?
>
> As mentioned above, I'm just finishing my Master's thesis (which in 
> turn is
> based on a conference paper on randomization in CP). But it doesn't 
> really
> cover the technical aspect of implementing randomization but focuses 
> more on
> how to exploit it in theory and practice.
>
> Maybe my quote above helps you to get the hang of it already; 
> otherwise just
> ask questions. Also I could maybe offer sending you the resp. portions 
> of my
> modified code (parts of it should already have been posted here some 
> time
> ago). This is, hoever, still based on an older version of Gecode 
> (1.0.1 I
> think) and I currently don't have the time to make the transit to 
> 1.2.x. It
> might give you the idea, though...
>
> Cheers,
> /Lars
>
>
> P.S. You might want to CC your future responses to users at gecode.org as 
> well,
> so others can profit from and participate in the discussion as well.
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>
--
Torsten Anders
Sonic Arts Research Centre ? Queen's University Belfast
Frankstr. 49 ? D-50996 K?ln
Tel: +49-221-3980750
http://www.torsten-anders.de
http://strasheela.sourceforge.net




From torstenanders at gmx.de  Thu Aug 24 12:34:57 2006
From: torstenanders at gmx.de (Torsten Anders)
Date: Thu, 24 Aug 2006 12:34:57 +0200
Subject: [gecode-users] random / mod
In-Reply-To: <E36F5A2E-256F-4421-A41D-2C19587E9503@ps.uni-sb.de>
References: <000e01c6c68e$e345b590$acd4ed82@beule>
	<82467F4C-095F-4C48-9BF4-94C9D6DF463D@onlinehome.de>
	<E36F5A2E-256F-4421-A41D-2C19587E9503@ps.uni-sb.de>
Message-ID: <3602303e68407b25e0f13a620603b74c@gmx.de>

Dear Guido,

On 23.08.2006, at 22:01, Guido Tack wrote:
> I'll be very interested in seeing music applications of the set  
> constraints! Let me know if you need any special propagators or have  
> interesting ideas for modeling!

Here are a number of musical applications of constraint programming:

	http://strasheela.sourceforge.net/strasheela/doc/ 
StrasheelaExamples.html

The harmonisation examples (Automatic Melody Harmonisation and  
Microtonal Chord Progression) internally apply set constraints and  
modulo constraints. However, in order to simplify the definition of  
these not quite trivial examples, they make use of generic  
functionality provided by Strasheela (i.e. the set constraints are  
applied to the chord representation defined by Strasheela's generic  
harmony model).

Best,
Torsten

PS: all examples are implemented in Oz.

--
Torsten Anders
Sonic Arts Research Centre ? Queen's University Belfast
Frankstr. 49 ? D-50996 K?ln
Tel: +49-221-3980750
http://www.torsten-anders.de
http://strasheela.sourceforge.net




From torstenanders at gmx.de  Thu Aug 24 13:42:03 2006
From: torstenanders at gmx.de (Torsten Anders)
Date: Thu, 24 Aug 2006 13:42:03 +0200
Subject: [gecode-users] random / mod
In-Reply-To: <E36F5A2E-256F-4421-A41D-2C19587E9503@ps.uni-sb.de>
References: <000e01c6c68e$e345b590$acd4ed82@beule>
	<82467F4C-095F-4C48-9BF4-94C9D6DF463D@onlinehome.de>
	<E36F5A2E-256F-4421-A41D-2C19587E9503@ps.uni-sb.de>
Message-ID: <5ca51967357865ea1e861ad7e8296d98@gmx.de>

On 23.08.2006, at 22:01, Guido Tack wrote:
> I'll be very interested in seeing music applications [...]

BTW: the all-interval series defined as an examples for Gecode does not 
quite implement the musical concept all-interval series. The Gecode 
example constraints absolute distances between series pitches. Instead, 
an all-interval series for serial music constraints inversional 
equivalent intervals. That is, complementary intervals such a fifth 
upwards and a fourth downwards count as the same interval (namely 7). A 
typical implementation of inversional equivalent intervals uses the 
constraint modulo 12 (instead of simply computing the absolute 
distance, i.e.  | PC1-PC2 | )

	inversionalEquivalentInterval(PC1 , PC2 , Interval) := Interval = (PC2 
? PC1) mod 12

This standard all-interval series CSP for length 12 has 3856 solutions 
(cf. Morris, R. and D. Starr (1974). The Structure of All-Interval 
Series. Journal of Music Theory 18 (2)).

Best,
Torsten

PS: the problem spec at 
http://www.dcs.st-and.ac.uk/~ianm/CSPLib/prob/prob007/spec.html -- the 
source for the Gecode implementation -- shows the same 
misinterpretation of the musical concept.

--
Torsten Anders
Sonic Arts Research Centre ? Queen's University Belfast
Frankstr. 49 ? D-50996 K?ln
Tel: +49-221-3980750
http://www.torsten-anders.de
http://strasheela.sourceforge.net




From tack at ps.uni-sb.de  Fri Aug 25 09:55:52 2006
From: tack at ps.uni-sb.de (Guido Tack)
Date: Fri, 25 Aug 2006 09:55:52 +0200
Subject: [gecode-users] random / mod
In-Reply-To: <49f462ee9fb57d516397f43dfc07ab13@gmx.de>
References: <5B1D073B-8EEB-47BF-850F-352361487B89@onlinehome.de>
	<44EACC14.9030400@student.chalmers.se>
	<8C2FDE01-79EA-424C-87CC-D7C3A4D35358@onlinehome.de>
	<44EAFE55.6030708@student.chalmers.se>
	<49f462ee9fb57d516397f43dfc07ab13@gmx.de>
Message-ID: <F5D5B586-B246-49D4-B686-83C353C9CCCD@ps.uni-sb.de>

Hi Torsten.

> Here is a related question: would batch recomputation simplify the  
> definition of randomized selection schemes? That is, are the  
> decisions made by the branching recorded by the batch recomputation  
> mechanism such that randomized selection schemes come fore free?

It could be achieved using batch recomputation, but there is a  
caveat: a search engine is allowed to ask the same space for a  
branching description more than once.
It is possible (in fact not hard) to implement a search engine that  
only computes descriptions once for a space. These search engines  
would work well with randomized branchings. I don't know what our  
built-in search engines currently do, I'll have to take a closer look.

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Germany
http://www.ps.uni-sb.de/~tack






From schulte at imit.kth.se  Fri Aug 25 10:01:56 2006
From: schulte at imit.kth.se (Christian Schulte)
Date: Fri, 25 Aug 2006 10:01:56 +0200
Subject: [gecode-users] random / mod
In-Reply-To: <F5D5B586-B246-49D4-B686-83C353C9CCCD@ps.uni-sb.de>
Message-ID: <000a01c6c81c$bc28fc80$acd4ed82@beule>

Yes, the reason why I did not reply immediately is like with Guido: I
believe that our current engines never mix the generation of branching
descriptions with their use in recomputation. But in general this invariant
does not hold.

The good news, though, is the contrary to what you have asked: if you happen
to implement a randomized branching then batch recomputation will come
without extra cost.

And I really would like to stress the point that making randomized branching
with recomputation is not magic: random generators are stateful but
deterministic programs generating sequences of pseudo-random numbers. So
recording the state of the generator will always be sufficient to make it
work with recomputation.

The only problem I see is that the standard Unix random generator has an
interface that does not expose this fact.

Cheers
Christian

--
Christian Schulte, http://www.imit.kth.se/~schulte/ 

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Guido Tack
Sent: Friday, August 25, 2006 9:56 AM
To: Torsten Anders
Cc: users at gecode.org
Subject: Re: [gecode-users] random / mod


Hi Torsten.

> Here is a related question: would batch recomputation simplify the
> definition of randomized selection schemes? That is, are the  
> decisions made by the branching recorded by the batch recomputation  
> mechanism such that randomized selection schemes come fore free?

It could be achieved using batch recomputation, but there is a  
caveat: a search engine is allowed to ask the same space for a  
branching description more than once.
It is possible (in fact not hard) to implement a search engine that  
only computes descriptions once for a space. These search engines  
would work well with randomized branchings. I don't know what our  
built-in search engines currently do, I'll have to take a closer look.

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Germany
http://www.ps.uni-sb.de/~tack




_______________________________________________
Gecode users mailing list
users at gecode.org https://www.gecode.org/mailman/listinfo/gecode-users




