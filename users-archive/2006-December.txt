From mikael.debie at gmail.com  Sun Dec  3 19:25:18 2006
From: mikael.debie at gmail.com (Mikael De Bie)
Date: Sun, 03 Dec 2006 19:25:18 +0100
Subject: [gecode-users] saving the way to one of the solution in a file
Message-ID: <1165170318.5377.18.camel@ptitbeuk>

Hi,

I'm using gecode/J 1.0.1-1 and wonder what's the best way to save the
position in the search tree in a file in order to be able to compute the
next solution later. Here's some details about what I want to do:

* launch my program the first time :
	- find the first solution of a CSP
	- save the way to this solution in the search tree in a file
	- quit

* relaunch my program with arguments to indicate I want the next
solution :
	- load the state (go to the node)
	- find the next solution
	- save the state (way to this solution)
	- quit


I haven't found how to do that in the documentation...

Thanks a lot,

Mika?l De Bie






From tack at ps.uni-sb.de  Mon Dec  4 09:07:29 2006
From: tack at ps.uni-sb.de (Guido Tack)
Date: Mon, 4 Dec 2006 09:07:29 +0100
Subject: [gecode-users] saving the way to one of the solution in a file
In-Reply-To: <1165170318.5377.18.camel@ptitbeuk>
References: <1165170318.5377.18.camel@ptitbeuk>
Message-ID: <FBB009FF-C03D-4831-9530-2924477A65EE@ps.uni-sb.de>

Hi.

> I'm using gecode/J 1.0.1-1 and wonder what's the best way to save the
> position in the search tree in a file in order to be able to  
> compute the
> next solution later. Here's some details about what I want to do:
>
> * launch my program the first time :
> 	- find the first solution of a CSP
> 	- save the way to this solution in the search tree in a file
> 	- quit
>
> * relaunch my program with arguments to indicate I want the next
> solution :
> 	- load the state (go to the node)
> 	- find the next solution
> 	- save the state (way to this solution)
> 	- quit
>
>
> I haven't found how to do that in the documentation...

This is not possible with the search engines we provide, but quite  
easy to implement yourself. One slight complication is that you use  
Gecode/J. In Java, we just use an interface to the C++ search  
engines, so you don't have a Java implementation to start with.

If you know some C++, I would suggest you have a look at how search  
is implemented there. The most interesting files are gecode/search/ 
reco-stack.icc and gecode/search/dfs.icc. Basically, you have a stack  
that stores branching descriptions and (in some stack cells) copies  
of spaces. To save the state, you will just have to traverse the  
stack and save the number of the alternative that has to be explored  
next from each stack cell. To load the state, recreate the original  
problem, and then recreate the stack by recomputation. Note, however,  
that you cannot save the branching descriptions (they are completely  
abstract anyway), just save the number of the alternative at each point.

I hope this helps getting you started. If anything is not clear to  
you, just ask.

Cheers,
	Guido




From mikael.debie at student.uclouvain.be  Mon Dec  4 14:09:22 2006
From: mikael.debie at student.uclouvain.be (Mikael De Bie)
Date: Mon, 04 Dec 2006 14:09:22 +0100
Subject: [gecode-users] saving the way to one of the solution in a file
In-Reply-To: <FBB009FF-C03D-4831-9530-2924477A65EE@ps.uni-sb.de>
References: <1165170318.5377.18.camel@ptitbeuk>
	<FBB009FF-C03D-4831-9530-2924477A65EE@ps.uni-sb.de>
Message-ID: <1165237762.7458.9.camel@ptitbeuk>

Thanks for your answer !

nevertheless I wonder why the webpage http://www.gecode.org/gecodej/
indicates that Gecode/J allows to implement search engines using copying
and recomputation.

Don't you think I could program a new search engine totally in java as
it's done for Gist ?

cheers,
Mikael


On Mon, 2006-12-04 at 09:07 +0100, Guido Tack wrote:
> Hi.
> 
> > I'm using gecode/J 1.0.1-1 and wonder what's the best way to save the
> > position in the search tree in a file in order to be able to  
> > compute the
> > next solution later. Here's some details about what I want to do:
> >
> > * launch my program the first time :
> > 	- find the first solution of a CSP
> > 	- save the way to this solution in the search tree in a file
> > 	- quit
> >
> > * relaunch my program with arguments to indicate I want the next
> > solution :
> > 	- load the state (go to the node)
> > 	- find the next solution
> > 	- save the state (way to this solution)
> > 	- quit
> >
> >
> > I haven't found how to do that in the documentation...
> 
> This is not possible with the search engines we provide, but quite  
> easy to implement yourself. One slight complication is that you use  
> Gecode/J. In Java, we just use an interface to the C++ search  
> engines, so you don't have a Java implementation to start with.
> 
> If you know some C++, I would suggest you have a look at how search  
> is implemented there. The most interesting files are gecode/search/ 
> reco-stack.icc and gecode/search/dfs.icc. Basically, you have a stack  
> that stores branching descriptions and (in some stack cells) copies  
> of spaces. To save the state, you will just have to traverse the  
> stack and save the number of the alternative that has to be explored  
> next from each stack cell. To load the state, recreate the original  
> problem, and then recreate the stack by recomputation. Note, however,  
> that you cannot save the branching descriptions (they are completely  
> abstract anyway), just save the number of the alternative at each point.
> 
> I hope this helps getting you started. If anything is not clear to  
> you, just ask.
> 
> Cheers,
> 	Guido
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users




From tack at ps.uni-sb.de  Mon Dec  4 14:41:38 2006
From: tack at ps.uni-sb.de (Guido Tack)
Date: Mon, 4 Dec 2006 14:41:38 +0100
Subject: [gecode-users] saving the way to one of the solution in a file
In-Reply-To: <1165237762.7458.9.camel@ptitbeuk>
References: <1165170318.5377.18.camel@ptitbeuk>
	<FBB009FF-C03D-4831-9530-2924477A65EE@ps.uni-sb.de>
	<1165237762.7458.9.camel@ptitbeuk>
Message-ID: <D0726846-B720-4E95-841F-5ED3AF4E213F@ps.uni-sb.de>

> nevertheless I wonder why the webpage http://www.gecode.org/gecodej/
> indicates that Gecode/J allows to implement search engines using  
> copying
> and recomputation.
>
> Don't you think I could program a new search engine totally in java as
> it's done for Gist ?

Sorry, I maybe wasn't very clear on this. You can write the search  
engine in Java, it's just that you can't take an existing one and  
modify it, but you'll have to start from scratch. I wanted to suggest  
that you look at the C++ code, and then more or less port that to  
Java, adjusting it to your needs. The space interfaces are very  
similar in C++ and Java, so porting stuff is relatively easy.

Cheers,
	Guido




From mikael.debie at student.uclouvain.be  Mon Dec  4 14:48:04 2006
From: mikael.debie at student.uclouvain.be (Mikael De Bie)
Date: Mon, 04 Dec 2006 14:48:04 +0100
Subject: [gecode-users] saving the way to one of the solution in a file
In-Reply-To: <D0726846-B720-4E95-841F-5ED3AF4E213F@ps.uni-sb.de>
References: <1165170318.5377.18.camel@ptitbeuk>
	<FBB009FF-C03D-4831-9530-2924477A65EE@ps.uni-sb.de>
	<1165237762.7458.9.camel@ptitbeuk>
	<D0726846-B720-4E95-841F-5ED3AF4E213F@ps.uni-sb.de>
Message-ID: <1165240084.8686.1.camel@ptitbeuk>

On Mon, 2006-12-04 at 14:41 +0100, Guido Tack wrote:
> > nevertheless I wonder why the webpage http://www.gecode.org/gecodej/
> > indicates that Gecode/J allows to implement search engines using  
> > copying
> > and recomputation.
> >
> > Don't you think I could program a new search engine totally in java as
> > it's done for Gist ?
> 
> Sorry, I maybe wasn't very clear on this. You can write the search  
> engine in Java, it's just that you can't take an existing one and  
> modify it, but you'll have to start from scratch. I wanted to suggest  
> that you look at the C++ code, and then more or less port that to  
> Java, adjusting it to your needs. The space interfaces are very  
> similar in C++ and Java, so porting stuff is relatively easy.
> 

ok now I've caught it. Thanks for the suggestion, that's what I'll do.

Have a good day,

Mika?l

> Cheers,
> 	Guido
> 




From roberto.pinto at unibg.it  Thu Dec  7 16:51:27 2006
From: roberto.pinto at unibg.it (Roberto Pinto)
Date: Thu, 7 Dec 2006 15:51:27 +0000 (UTC)
Subject: [gecode-users] Meaning of Options::size
Message-ID: <loom.20061207T164129-286@post.gmane.org>

Dear all,

I can't get the meaning of the Options::size.

Can someone explain it to me?

Thank you
Roberto




From zayenz at gmail.com  Thu Dec  7 22:57:37 2006
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Thu, 7 Dec 2006 22:57:37 +0100
Subject: [gecode-users] Meaning of Options::size
In-Reply-To: <loom.20061207T164129-286@post.gmane.org>
References: <loom.20061207T164129-286@post.gmane.org>
Message-ID: <63b5c8b00612071357o41931356r973a0278a8b1f199@mail.gmail.com>

The size-parameter is used either to select the size of the problem to
solve, hence the name, or alternatively the instance to solve.

Two examples:
- For Golomb rulers the size parameter determines the number of ticks
on the ruler
- For Sudoku puzzles the size parameter chooses the corresponding
instance from the examples/sudoku.icc file.

Hope this helps,
Mikael

On 12/7/06, Roberto Pinto <roberto.pinto at unibg.it> wrote:
> Dear all,
>
> I can't get the meaning of the Options::size.
>
> Can someone explain it to me?
>
> Thank you
> Roberto
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>


-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/



From mikael.debie at student.uclouvain.be  Sun Dec 10 18:01:16 2006
From: mikael.debie at student.uclouvain.be (Mikael De Bie)
Date: Sun, 10 Dec 2006 18:01:16 +0100
Subject: [gecode-users] saving the way to one of the solution in a file
In-Reply-To: <D0726846-B720-4E95-841F-5ED3AF4E213F@ps.uni-sb.de>
References: <1165170318.5377.18.camel@ptitbeuk>
	<FBB009FF-C03D-4831-9530-2924477A65EE@ps.uni-sb.de>
	<1165237762.7458.9.camel@ptitbeuk>
	<D0726846-B720-4E95-841F-5ED3AF4E213F@ps.uni-sb.de>
Message-ID: <1165770076.5152.23.camel@ptitbeuk>

On Mon, 2006-12-04 at 14:41 +0100, Guido Tack wrote:
> > nevertheless I wonder why the webpage http://www.gecode.org/gecodej/
> > indicates that Gecode/J allows to implement search engines using  
> > copying
> > and recomputation.
> >
> > Don't you think I could program a new search engine totally in java as
> > it's done for Gist ?
> 
> Sorry, I maybe wasn't very clear on this. You can write the search  
> engine in Java, it's just that you can't take an existing one and  
> modify it, but you'll have to start from scratch. I wanted to suggest  
> that you look at the C++ code, and then more or less port that to  
> Java, adjusting it to your needs. The space interfaces are very  
> similar in C++ and Java, so porting stuff is relatively easy.
> 
> Cheers,
> 	Guido
> 

I've finally decided to use gecode instead of gecode/J so that I could
modify the existing classes dfs.icc, reco-stack.icc and search.hh rather
than implement the whole from nothing.

I've managed to get the way to the solution found, that is the list of
alternatives to follow. But I don't really understand how to rebuild the
stack.

In my opinion, I have to push a new ReCoNode in the stack for each
alternative.

I've tried to add a method in DFSEngine that rebuild the stack:

	// Reconstruct the stack from the way (ex: way = "0110111")
	forceinline void
	DfsEngine::setWay(string way){
		rcs.reset();
		const BranchingDesc* desc = rcs.push(cur, NULL);
		for(int i=0;i<way.length();i++){
			//Get the integer in ith pos in the way
			string stmp = way.substr(i,1);
			const char* tmp = stmp.c_str();
			int j = atoi(&tmp[0]);
			
			//push a new ReCoNode in the stack
			cur->commit(desc,j);
	     		desc = rcs.push(cur,NULL);
		}
	}

Once the stack is rebuild, I thought I could simply call the method
next().
But it doesn't seem to work...

I don't get any error, but the program simply stops when j = 1 but I
don't know why...

Has anybody any idea to help me ?

Thanks in advance

Mikael




From tack at ps.uni-sb.de  Mon Dec 11 09:50:19 2006
From: tack at ps.uni-sb.de (Guido Tack)
Date: Mon, 11 Dec 2006 09:50:19 +0100
Subject: [gecode-users] saving the way to one of the solution in a file
In-Reply-To: <1165770076.5152.23.camel@ptitbeuk>
References: <1165170318.5377.18.camel@ptitbeuk>
	<FBB009FF-C03D-4831-9530-2924477A65EE@ps.uni-sb.de>
	<1165237762.7458.9.camel@ptitbeuk>
	<D0726846-B720-4E95-841F-5ED3AF4E213F@ps.uni-sb.de>
	<1165770076.5152.23.camel@ptitbeuk>
Message-ID: <2C1485E7-D38C-4BE0-AE0A-C8BCA7217B63@ps.uni-sb.de>

Hi.

> I've finally decided to use gecode instead of gecode/J so that I could
> modify the existing classes dfs.icc, reco-stack.icc and search.hh  
> rather
> than implement the whole from nothing.

Ok, that will make it easier for us to help you debugging, too.

> I've managed to get the way to the solution found, that is the list of
> alternatives to follow. But I don't really understand how to  
> rebuild the
> stack.
>
> In my opinion, I have to push a new ReCoNode in the stack for each
> alternative.

Yes, in principle, that's what you have to do. However, each ReCoNode  
contains a counter _alt that stores the alternative this node  
currently represents. So if you commit to alternative 1, you'd have  
to push a ReCoNode with _alt = 1. You will have to change some  
interfaces there in order to be able to set _alt.

> [...]
> Once the stack is rebuild, I thought I could simply call the method
> next().

Yes, that should work.

> I don't get any error, but the program simply stops when j = 1 but I
> don't know why...

Do you mean when i=1? Or do you mean a different j?

I would guess that if the nodes don't have the correct alternative  
stored in them, this can already be a problem. Another problem is  
that you will need at least one copy somewhere on the stack. That's  
the second argument to rcs.push. If there is no copy, recomputation  
does not work. So your first call to push should look like this

rcs.push(cur, cur->clone());

I hope you'll get it working using these hints.

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Germany
http://www.ps.uni-sb.de/~tack






From ml13 at onlinehome.de  Mon Dec 11 14:39:58 2006
From: ml13 at onlinehome.de (Kilian Sprotte)
Date: Mon, 11 Dec 2006 14:39:58 +0100
Subject: [gecode-users] Lisp - gecol
Message-ID: <4A727580-C4F8-4484-9884-5B7E2DC6E848@onlinehome.de>

Hi,

this is to proudly announce that gecol is available here:

http://common-lisp.net/project/gecol/

It offers CFFI bindings to allow for some operations inside the  
GECODE universe... ;-)

Suggestions are very welcome.

Cheers,

   Kilian





From tack at ps.uni-sb.de  Mon Dec 11 14:50:44 2006
From: tack at ps.uni-sb.de (Guido Tack)
Date: Mon, 11 Dec 2006 14:50:44 +0100
Subject: [gecode-users] Lisp - gecol
In-Reply-To: <4A727580-C4F8-4484-9884-5B7E2DC6E848@onlinehome.de>
References: <4A727580-C4F8-4484-9884-5B7E2DC6E848@onlinehome.de>
Message-ID: <26725801-69AE-4909-A204-DCF749FC5F39@ps.uni-sb.de>

Hi!

> this is to proudly announce that gecol is available here:
>
> http://common-lisp.net/project/gecol/
>
> It offers CFFI bindings to allow for some operations inside the  
> GECODE universe... ;-)

That's great news! If you don't mind, I would like to put a link to  
your page on our "interfaces" web page.

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Germany
http://www.ps.uni-sb.de/~tack






From ml13 at onlinehome.de  Thu Dec 21 13:42:32 2006
From: ml13 at onlinehome.de (Kilian Sprotte)
Date: Thu, 21 Dec 2006 13:42:32 +0100
Subject: [gecode-users] branching...
Message-ID: <D2C7ACD7-7BCC-42E0-92A7-837FDE9E3FD6@onlinehome.de>

Hi,

thinking about how to make gecol at least a little more flexible,
I have some general little questions. :)

As gecol does not allow for subclassing Space
(the SWIG CFFI wrapper creation is not really ready
yet for c++), I am using the following hard-wired problem
space:

class GecolSpace : public Space {
protected:
   IntVarArray  ints;
   BoolVarArray bools;
   SetVarArray  sets;
public:
[...]

I have seen that it is possible to call branch twice -
for example for the ints and then for the bools, in order
to have both of them distributed.

My first question:
If I wanted to consider ints and bools together for branching,
for example giving them a naive predefined, but not regular
ordering like:

i1 i2 b1 i3 i4 i5 i6 b2 b3 i7 b4 b5 b6

Can I put them into an IntVarArgs array and treat them together?

My second question:
If I wanted to add my own ViewSel class....

Do I actually need to change branch in branch.cc
http://www.gecode.org/gecode-doc-latest/int_2branch_8cc- 
source.html#l00029 ?

and add my own 'case'....

Probably I can just instantiate the ViewValBranching directly?

Sorry for asking this c++ questions, I would be very grateful about a  
few
words, what the necessary steps are....

Maybe it is more interesting for you what kind of custom
distribution strategy I have in mind.

Lets say my problem has only int vars. I would like to decide the order
of distribution according to the value (if it is already assigned) of  
another
var that each var points to.
In other words, I conceptually sort my vars according to a key and
then pick the first. There is a (fixed) mapping of each var to another
one that serves for the key. If it is not yet assigned, we could say the
key value was +inf.

This is actually very musically, as e.g. vars representing pitches  
can be chosen according to their time in the score, which is  
represented by the start time var of the chord they belong to. :)

I am keeping some good memories of the flexibility of {FD.distribute  
+Dist +Xv} in Oz....
For experimenting, I am hoping to provide at some point something  
similar in Lisp,
by using callbacks....

All of this is not so easy for a musician,
but I need to do it :-P

Merry Xmas,

   Kilian






From cschulte at kth.se  Thu Dec 21 14:59:17 2006
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 21 Dec 2006 14:59:17 +0100
Subject: [gecode-users] branching...
In-Reply-To: <D2C7ACD7-7BCC-42E0-92A7-837FDE9E3FD6@onlinehome.de>
Message-ID: <000a01c72508$34efb800$0401a8c0@tiny>

Let me just take one quick one (as I am on holidays almost and have to run).
Currently you can mix Int and Bool, from Gecode 2.0 on, you will not be able
to do that. 

More after the holidays...

Christian

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Kilian Sprotte
Sent: Thursday, December 21, 2006 1:43 PM
To: users at gecode.org
Subject: [gecode-users] branching...


Hi,

thinking about how to make gecol at least a little more flexible, I have
some general little questions. :)

As gecol does not allow for subclassing Space
(the SWIG CFFI wrapper creation is not really ready
yet for c++), I am using the following hard-wired problem
space:

class GecolSpace : public Space {
protected:
   IntVarArray  ints;
   BoolVarArray bools;
   SetVarArray  sets;
public:
[...]

I have seen that it is possible to call branch twice -
for example for the ints and then for the bools, in order
to have both of them distributed.

My first question:
If I wanted to consider ints and bools together for branching, for example
giving them a naive predefined, but not regular ordering like:

i1 i2 b1 i3 i4 i5 i6 b2 b3 i7 b4 b5 b6

Can I put them into an IntVarArgs array and treat them together?

My second question:
If I wanted to add my own ViewSel class....

Do I actually need to change branch in branch.cc
http://www.gecode.org/gecode-doc-latest/int_2branch_8cc- 
source.html#l00029 ?

and add my own 'case'....

Probably I can just instantiate the ViewValBranching directly?

Sorry for asking this c++ questions, I would be very grateful about a  
few
words, what the necessary steps are....

Maybe it is more interesting for you what kind of custom distribution
strategy I have in mind.

Lets say my problem has only int vars. I would like to decide the order of
distribution according to the value (if it is already assigned) of  
another
var that each var points to.
In other words, I conceptually sort my vars according to a key and then pick
the first. There is a (fixed) mapping of each var to another one that serves
for the key. If it is not yet assigned, we could say the key value was +inf.

This is actually very musically, as e.g. vars representing pitches  
can be chosen according to their time in the score, which is  
represented by the start time var of the chord they belong to. :)

I am keeping some good memories of the flexibility of {FD.distribute  
+Dist +Xv} in Oz....
For experimenting, I am hoping to provide at some point something  
similar in Lisp,
by using callbacks....

All of this is not so easy for a musician,
but I need to do it :-P

Merry Xmas,

   Kilian




_______________________________________________
Gecode users mailing list
users at gecode.org https://www.gecode.org/mailman/listinfo/gecode-users




From mmann at informatik.uni-freiburg.de  Thu Dec 21 15:20:28 2006
From: mmann at informatik.uni-freiburg.de (Martin Mann)
Date: Thu, 21 Dec 2006 15:20:28 +0100
Subject: [gecode-users] branching...
In-Reply-To: <D2C7ACD7-7BCC-42E0-92A7-837FDE9E3FD6@onlinehome.de>
References: <D2C7ACD7-7BCC-42E0-92A7-837FDE9E3FD6@onlinehome.de>
Message-ID: <458A982C.6080204@informatik.uni-freiburg.de>

Hi Kilian,

inserting a branching directly into a space is very easy and doesnt need 
the wrapper function "branch".

you can do it like that in the constructor of your space:

e.g. for the integer variables

// init the variable array with your vars to branch on
// e.g. (22 vars with vals 0..9):
ints = Gecode::IntVarArray(this, 22, 0, 9);

// create a viewarray of your variables
Gecode::ViewArray<Gecode::Int::IntView>
   iv(this,(Gecode::IntVarArgs)ints);

// create the branching
new (this) Gecode::ViewValBranching<	
               Gecode::Int::IntView,
               int,
               Gecode::Int::Branch::BySizeMin,
               Gecode::Int::Branch::ValMin
             >(this, iv);
// done :)

you only have to create a new branching object with the right template 
parameters (usually done by the branch-wrapper function). the branching 
constructure itself registers to your space and thats all.

about your first question: one possibility is to generate a serie of 
branching objects:

intBranching(i1,i2)
bBranching(b1)
intBranching(i3,i4,i5,i6)
bBrachning...
...

for each you ve got to generate a viewarray of your variable-subset to 
branch on and construct a branching. you can easily write your own 
minimal wrapper function that generates these viewarrays.

hope this helps and merry christmas,

Martin


Kilian Sprotte wrote:
> Hi,
> 
> thinking about how to make gecol at least a little more flexible,
> I have some general little questions. :)
> 
> As gecol does not allow for subclassing Space
> (the SWIG CFFI wrapper creation is not really ready
> yet for c++), I am using the following hard-wired problem
> space:
> 
> class GecolSpace : public Space {
> protected:
>   IntVarArray  ints;
>   BoolVarArray bools;
>   SetVarArray  sets;
> public:
> [...]
> 
> I have seen that it is possible to call branch twice -
> for example for the ints and then for the bools, in order
> to have both of them distributed.
> 
> My first question:
> If I wanted to consider ints and bools together for branching,
> for example giving them a naive predefined, but not regular
> ordering like:
> 
> i1 i2 b1 i3 i4 i5 i6 b2 b3 i7 b4 b5 b6
> 
> Can I put them into an IntVarArgs array and treat them together?
> 
> My second question:
> If I wanted to add my own ViewSel class....
> 
> Do I actually need to change branch in branch.cc
> http://www.gecode.org/gecode-doc-latest/int_2branch_8cc-source.html#l00029 
> ?
> 
> and add my own 'case'....
> 
> Probably I can just instantiate the ViewValBranching directly?
> 
> Sorry for asking this c++ questions, I would be very grateful about a few
> words, what the necessary steps are....
> 
> Maybe it is more interesting for you what kind of custom
> distribution strategy I have in mind.
> 
> Lets say my problem has only int vars. I would like to decide the order
> of distribution according to the value (if it is already assigned) of 
> another
> var that each var points to.
> In other words, I conceptually sort my vars according to a key and
> then pick the first. There is a (fixed) mapping of each var to another
> one that serves for the key. If it is not yet assigned, we could say the
> key value was +inf.
> 
> This is actually very musically, as e.g. vars representing pitches can 
> be chosen according to their time in the score, which is represented by 
> the start time var of the chord they belong to. :)
> 
> I am keeping some good memories of the flexibility of {FD.distribute 
> +Dist +Xv} in Oz....
> For experimenting, I am hoping to provide at some point something 
> similar in Lisp,
> by using callbacks....
> 
> All of this is not so easy for a musician,
> but I need to do it :-P
> 
> Merry Xmas,
> 
>   Kilian




From ml13 at onlinehome.de  Thu Dec 21 20:52:22 2006
From: ml13 at onlinehome.de (Kilian Sprotte)
Date: Thu, 21 Dec 2006 20:52:22 +0100
Subject: [gecode-users] branching...
In-Reply-To: <458A982C.6080204@informatik.uni-freiburg.de>
References: <D2C7ACD7-7BCC-42E0-92A7-837FDE9E3FD6@onlinehome.de>
	<458A982C.6080204@informatik.uni-freiburg.de>
Message-ID: <679D482C-CAC7-43B9-97BC-07A22C684857@onlinehome.de>

Hello Martin,

thank you very much !! It was exactly the information, I needed. (-:
I am amusing myself of selecting the Var like ByNone, but in reverse  
order...

There are more open questions of course,
but for now merry christmas,

   Kilian




