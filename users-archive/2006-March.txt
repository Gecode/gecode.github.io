From tack at gecode.org  Wed Mar  1 15:55:05 2006
From: tack at gecode.org (Guido Tack)
Date: Wed, 1 Mar 2006 15:55:05 +0100
Subject: [gecode-users] Gecode 1.0.1 released
Message-ID: <200603011555.06019.tack@gecode.org>

We would like to announce the release of
        
                Gecode 1.0.1
           http://www.gecode.org/

This is a maintenance release including some additions of domain-consistent 
propagators and a fix for a serious bug in reified linear inequalities. For a 
complete changelog, please visit
http://www.gecode.org/gecode-doc-latest/PageChange.html

Cheers,
	The Gecode Team



From ottenl at student.chalmers.se  Wed Mar  1 17:52:40 2006
From: ottenl at student.chalmers.se (Lars Otten)
Date: Wed, 01 Mar 2006 16:52:40 +0000
Subject: [gecode-users] Analysing search performance
In-Reply-To: <006d01c63c45$803f9b60$acd4ed82@beule>
References: <006d01c63c45$803f9b60$acd4ed82@beule>
Message-ID: <4405D158.9050404@student.chalmers.se>

Hi all,

On 02/28/06 09:01, Christian Schulte wrote:
> For the time being, the only support you can get is by using a standard C++
> profiler. If you are using gcc for compiling just use gprof the see what is
> happening. In order to compiler for gprog you have to give -pg as option for
> gcc (just check the gcc doc).

Thanks to Guido and you for the hints. I did some reading about profiling:
The problem with gprof is that it only profiles the main executable but not
shared libraries -- or if it does, it's so cumbersome I couldn't get it to
work...

After some searching I came across oprofile [2] which seems to do the job
quite nicely, eve without any special compilation flags. I attach the first
few lines of the (filtered) system-wide profile of running my program for
some minutes. It seems that most of the time is spent cloning spaces,
specifically in Gecode::ViewArray<...>::update(...)

This is (percentage-wise) a lot more than what I get when I run e.g.
 $ queens -c_d 1 -solutions 0 -mode stat
for some minutes, but then again it's a different problem so this comparison
might not mean much.

> Did you at least check the search space? That is, how big is the search tree
> with what you have and how big is that in [1]. If you are talking vastly
> different trees there is no point in alayzing performance but your model.

The underlying model I employ is (almost) the exact same as in [1], so in
principle the search trees should be very similar. I'm also using (almost)
the same variable/value selection heuristics. I just left out some more
complicated constraints, but I feel that shouldn't make such a difference
(rather it should make the problem easier).

Nevertheless I will talk to Mattias, the author of [1], to find out if there
are any major discrepancies I might not be aware of.

I will also migrate my changes to the fresh version 1.0.1, although the
changelog does not contain anything I'd relate to my observations.

Cheers,
/Lars

[1] http://publications.lib.chalmers.se/records/full_record/6207.html
[2] http://oprofile.sf.net/


-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: prof.txt
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20060301/e655ba27/attachment.txt>

From schulte at imit.kth.se  Thu Mar  2 15:44:18 2006
From: schulte at imit.kth.se (Christian Schulte)
Date: Thu, 2 Mar 2006 15:44:18 +0100
Subject: [gecode-users] Analysing search performance
In-Reply-To: <4405D158.9050404@student.chalmers.se>
Message-ID: <00b101c63e07$c8f0b830$acd4ed82@beule>

You can build Gecode also as static libraries: then profiling should be
easier.

And please make sure that the search space is really the same! Count the
nodes in both approaches and check that they are the same or at least in the
same order of magnitude. Otherwise you might be hunting ghosts.

Another thing is recomputation: do you use it? Is memory an isssue for your
application?

All the best
Christian

--
Christian Schulte, http://www.imit.kth.se/~schulte/ 

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Lars Otten
Sent: Wednesday, March 01, 2006 5:53 PM
To: users at gecode.org
Subject: Re: [gecode-users] Analysing search performance


Hi all,

On 02/28/06 09:01, Christian Schulte wrote:
> For the time being, the only support you can get is by using a 
> standard C++ profiler. If you are using gcc for compiling just use 
> gprof the see what is happening. In order to compiler for gprog you 
> have to give -pg as option for gcc (just check the gcc doc).

Thanks to Guido and you for the hints. I did some reading about profiling:
The problem with gprof is that it only profiles the main executable but not
shared libraries -- or if it does, it's so cumbersome I couldn't get it to
work...

After some searching I came across oprofile [2] which seems to do the job
quite nicely, eve without any special compilation flags. I attach the first
few lines of the (filtered) system-wide profile of running my program for
some minutes. It seems that most of the time is spent cloning spaces,
specifically in Gecode::ViewArray<...>::update(...)

This is (percentage-wise) a lot more than what I get when I run e.g.  $
queens -c_d 1 -solutions 0 -mode stat for some minutes, but then again it's
a different problem so this comparison might not mean much.

> Did you at least check the search space? That is, how big is the 
> search tree with what you have and how big is that in [1]. If you are 
> talking vastly different trees there is no point in alayzing 
> performance but your model.

The underlying model I employ is (almost) the exact same as in [1], so in
principle the search trees should be very similar. I'm also using (almost)
the same variable/value selection heuristics. I just left out some more
complicated constraints, but I feel that shouldn't make such a difference
(rather it should make the problem easier).

Nevertheless I will talk to Mattias, the author of [1], to find out if there
are any major discrepancies I might not be aware of.

I will also migrate my changes to the fresh version 1.0.1, although the
changelog does not contain anything I'd relate to my observations.

Cheers,
/Lars

[1] http://publications.lib.chalmers.se/records/full_record/6207.html
[2] http://oprofile.sf.net/






From ottenl at student.chalmers.se  Fri Mar  3 02:51:44 2006
From: ottenl at student.chalmers.se (Lars Otten)
Date: Fri, 03 Mar 2006 01:51:44 +0000
Subject: [gecode-users] Analysing search performance
In-Reply-To: <00b101c63e07$c8f0b830$acd4ed82@beule>
References: <00b101c63e07$c8f0b830$acd4ed82@beule>
Message-ID: <4407A130.6030300@student.chalmers.se>

On 03/02/06 14:44, Christian Schulte wrote:
> You can build Gecode also as static libraries: then profiling should be
> easier.

I had so far only tried 'hacking' the Makefile by hand, by adding -static as
a compiler flag -- which made the compilation fail at some point.

I have, however, just remembered the flags to ./configure (--set-static=yes
--set-profile=yes), but although that finishes compiling the profile still
lacks the respective elements? I might try some more tomorrow...

> And please make sure that the search space is really the same! Count the
> nodes in both approaches and check that they are the same or at least in the
> same order of magnitude. Otherwise you might be hunting ghosts.

I will try to meet with Mattias soon and discuss that with him..

> Another thing is recomputation: do you use it? Is memory an isssue for your
> application?

The biggest instance I'm currently testing is eating about 1 GB of memory
when run, so on my machine it is an issue, yes. ;) I am not using
recomputation at the moment (for direct comparison with my randomized search
algorithm, which don't use recomputation either), but as I found that mostly
increases memory consumption anyway...

Just tonight, however, I have made some progress by toying with the ICL for
the distinct propagators that are posted. Especially in cooperation with
some of the random stuff I implemented, a solution seems to be found rather
quickly for most instances -- I'm quite happy about that at the moment! :))

Time to catch some sleep, thanks for your support so far,

/Lars




From ottenl at student.chalmers.se  Fri Mar  3 13:57:07 2006
From: ottenl at student.chalmers.se (Lars Otten)
Date: Fri, 03 Mar 2006 12:57:07 +0000
Subject: [gecode-users] Analysing search performance
In-Reply-To: <4407A130.6030300@student.chalmers.se>
References: <00b101c63e07$c8f0b830$acd4ed82@beule>
	<4407A130.6030300@student.chalmers.se>
Message-ID: <44083D23.7030602@student.chalmers.se>

On 03/03/06 01:51, Lars Otten wrote:
> The biggest instance I'm currently testing is eating about 1 GB of memory
> when run, so on my machine it is an issue, yes. ;) I am not using
> recomputation at the moment (for direct comparison with my randomized search
> algorithm, which don't use recomputation either), but as I found that mostly
> increases memory consumption anyway...

Hm, actually it does not seem to be quite that simple. Memory consumption
for dfs-reco always seems to be lower, but wrt. running time things
sometimes get better, sometimes worse (compared to dfs-copy).

Is there any rule of thumb when to apply dfs-reco instead of dfs-copy?

> Just tonight, however, I have made some progress by toying with the ICL for
> the distinct propagators that are posted. Especially in cooperation with
> some of the random stuff I implemented, a solution seems to be found rather
> quickly for most instances -- I'm quite happy about that at the moment! :))

Ok, so I think I understood the conceptual difference between ICL_DOM and
ICL_BND -- in consequence ICL_BND is 'less accurate' but potentially
propagates faster. But where does ICL_VAL fit into that? I am aware that
these levels are only meant to be guidelines for the propagators, still it
would be interesting to know...

Regards,
/Lars



From schulte at imit.kth.se  Fri Mar  3 13:12:53 2006
From: schulte at imit.kth.se (Christian Schulte)
Date: Fri, 3 Mar 2006 13:12:53 +0100
Subject: [gecode-users] Analysing search performance
In-Reply-To: <44083D23.7030602@student.chalmers.se>
Message-ID: <000a01c63ebb$cc760190$acd4ed82@beule>

Always use recomputation: the default settings for Gecode's search engine
sets the copying distance (c_d) to 8 and the adaptive distance (a_d) to 2!
Recomputation is done in a rather smart way, so it will not hurt big
perfomancewise.

As itc omes ICL_VAL for distinct, it does the obvious: wait until a variable
ceomes assigned and then remove that value from all other variables. In
problems where one has little propagation anyway, this can work well.

Christian

--
Christian Schulte, http://www.imit.kth.se/~schulte/ 

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Lars Otten
Sent: Friday, March 03, 2006 1:57 PM
To: users at gecode.org
Subject: Re: [gecode-users] Analysing search performance


On 03/03/06 01:51, Lars Otten wrote:
> The biggest instance I'm currently testing is eating about 1 GB of 
> memory when run, so on my machine it is an issue, yes. ;) I am not 
> using recomputation at the moment (for direct comparison with my 
> randomized search algorithm, which don't use recomputation either), 
> but as I found that mostly increases memory consumption anyway...

Hm, actually it does not seem to be quite that simple. Memory consumption
for dfs-reco always seems to be lower, but wrt. running time things
sometimes get better, sometimes worse (compared to dfs-copy).

Is there any rule of thumb when to apply dfs-reco instead of dfs-copy?

> Just tonight, however, I have made some progress by toying with the 
> ICL for the distinct propagators that are posted. Especially in 
> cooperation with some of the random stuff I implemented, a solution 
> seems to be found rather quickly for most instances -- I'm quite happy 
> about that at the moment! :))

Ok, so I think I understood the conceptual difference between ICL_DOM and
ICL_BND -- in consequence ICL_BND is 'less accurate' but potentially
propagates faster. But where does ICL_VAL fit into that? I am aware that
these levels are only meant to be guidelines for the propagators, still it
would be interesting to know...

Regards,
/Lars

_______________________________________________
Gecode users mailing list
users at gecode.org https://www.gecode.org/mailman/listinfo/gecode-users




From vdusa at bsa-informatik.ch  Wed Mar  8 12:24:45 2006
From: vdusa at bsa-informatik.ch (=?iso-8859-1?Q?Vladim=EDr_Dusa?=)
Date: Wed, 8 Mar 2006 12:24:45 +0100
Subject: [gecode-users] Scheduling constraints
Message-ID: <000001c642a2$e7aa7140$0300000a@vdusa>

Hello,

I would like to create a program for optimizing elastic non-preemptive
cumulative schedule. Resources will be first of all people. Any resource can
work at any time on more tasks simultaneusly. Activities can be interrupted
at any time to let some other activities execute and amount of resource
assigned to some activity can at any time assume any value between 0 and
resource capacity. In some defined time interval with fixed length placed
arbitrary in schedule cannot be the resource capacity exceeded.

I found in gecode environment some "Gecode::cumulative" propagator, but no
example how to use it. If is there no such example, could you give mi a hint
how can I learn using scheduling propagators in gecode?

Thank you very much

Best Regards

Vladim?r Du?a




From efkalog at gmail.com  Wed Mar  8 16:38:35 2006
From: efkalog at gmail.com (Efstratios Kalogirou)
Date: Wed, 8 Mar 2006 16:38:35 +0100
Subject: [gecode-users] Analysing search performance
In-Reply-To: <44038B53.90407@student.chalmers.se>
References: <44038B53.90407@student.chalmers.se>
Message-ID: <6d69d7de0603080738n14b9d2b5wc5b82cde93f73cc@mail.gmail.com>

Hi All,

I'm currently using gecode to solve some industrial product
configuraiton problems. The indstry defines their constaints in a tabular
form. The columns in the table correspond to different attributes of the
product (e.g., the kind of mohterboard for a PC), and each row defines valid
configurations of the attributes. The problem is of course that these
tables interact such that it is hard to find a valid global configuration.

My question is whether Gecode has a direct way of encoding such tables? It
can of course be encoded using a DNF formula where each conjunct corresponds
to a row, but I wonder if this is the most efficient way.

Best,
Stratos
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20060308/08570bf0/attachment.htm>

From vdusa at bsa-informatik.ch  Wed Mar  8 19:25:51 2006
From: vdusa at bsa-informatik.ch (=?iso-8859-1?Q?Vladim=EDr_Dusa?=)
Date: Wed, 8 Mar 2006 19:25:51 +0100
Subject: [gecode-users] Scheduling constraints
In-Reply-To: <63b5c8b00603080426k344f24b7ofa39291cd857eb9d@mail.gmail.com>
Message-ID: <000001c642dd$bb56c770$0300000a@vdusa>

Hello,

sorry, of course I meant preemptive schedule. Thank you for your answer ant
for the link to Le Pape's notes - I will read it too. I have now the Book
"Constraint-based scheduling" (Baptiste, Le Pape, Nuijten), where I found
lot of information about scheduling too.

But my problem is a little bit harder because moreover I need to assign
resource to the task from a given set of alternative resources (these sets
of resources must not be necessarily dijoint). It can be done by splitting
the tasks for each resource from the set of alternative resources and search
schedule with all these acitivities. Whenever the bounds of an splitted
activity turn out to be incoherent, the resource can be simply removed from
the set of possible alternative resources for the activity.

But for the propagating and branching I probably need to create my own
propagater and branch function (or not?). I would ask, if is there some
better documentation how to do this - because it is quite hard to do it only
with gecode documentation generated by doxygen.

Thank you very much

Best regards

Vladim?r Du?a

-----Original Message-----
From: Mikael 'Zayenz' Lagerkvist [mailto:zayenz at gmail.com]
Sent: Wednesday, March 08, 2006 1:26 PM
To: Vladim?r Dusa
Subject: Re: [gecode-users] Scheduling constraints


On 3/8/06, Vladim?r Dusa <vdusa at bsa-informatik.ch> wrote:
> I would like to create a program for optimizing elastic non-preemptive
> cumulative schedule. Resources will be first of all people. Any resource
can
> work at any time on more tasks simultaneusly. Activities can be
interrupted
> at any time to let some other activities execute and amount of resource
> assigned to some activity can at any time assume any value between 0 and
> resource capacity. In some defined time interval with fixed length placed
> arbitrary in schedule cannot be the resource capacity exceeded.

I believe you mean "elastic cumulative schedule" here, since
non-preemptive would mean that activities could not be interrupted.


> I found in gecode environment some "Gecode::cumulative" propagator, but no
> example how to use it. If is there no such example, could you give mi a
hint
> how can I learn using scheduling propagators in gecode?

The cumulative(s) constraint in Gecode models non-preemptive
scheduling problems, i.e., where the tasks can not be interrupted, and
the amount of resources used is constant for the whole duration of the
task. There is no specific constraint available in Gecode for elastic
or preemptive problems.

The cumulatives constraint is used in one example in Gecode,
examples/packing.cc, although it is not a good propagator for that
particular application.

If you want to read more about how to model different types of
scheduling-problems with constraint programming, I could recommend
Claude Le Pape's notes from the Summer Course in constraint
programming last year (available at
http://www.math.unipd.it/~frossi/cp-school/lepape.pdf).

Hope this helps
Mikael

--
Mikael 'Zayenz' Lagerkvist, http://www.imit.kth.se/~zayenz/




From osivertsson at gmail.com  Thu Mar  9 00:26:07 2006
From: osivertsson at gmail.com (Olof Sivertsson)
Date: Thu, 9 Mar 2006 00:26:07 +0100
Subject: [gecode-users] Re: Slight modification of examples/money.cc that
	reveals a bug
In-Reply-To: <1c8b4aa60602280715v101df406ybe3985c801e3b86a@mail.gmail.com>
References: <1c8b4aa60602280715v101df406ybe3985c801e3b86a@mail.gmail.com>
Message-ID: <1c8b4aa60603081526q3df461edua88e644eb5865efc@mail.gmail.com>

I think I've discovered a new similar bug now that can be revealed in
the same way:

> Now let's force s = 9 by adding the following to Money(const Options& opt)
>  post(this, s == 9);
Instead force s > 8:
post(this, s > 8);

> No change - it works like it should. But now let's do a small change, and
> instead post the following constraint:
post(this, 8 < s);

> If we recompile and rerun it now we get no solution, so somethings broken. I
> bet it's a sign error since if we change it to:
post(this, 8 > s);
> it works!

Cheers,
Olof



From zayenz at gmail.com  Thu Mar  9 08:17:34 2006
From: zayenz at gmail.com (Mikael 'Zayenz' Lagerkvist)
Date: Thu, 9 Mar 2006 08:17:34 +0100
Subject: [gecode-users] Scheduling constraints
In-Reply-To: <000001c642dd$bb56c770$0300000a@vdusa>
References: <63b5c8b00603080426k344f24b7ofa39291cd857eb9d@mail.gmail.com>
	<000001c642dd$bb56c770$0300000a@vdusa>
Message-ID: <63b5c8b00603082317n11ed7831q1f1395352ad738f9@mail.gmail.com>

On 3/8/06, Vladim?r Dusa <vdusa at bsa-informatik.ch> wrote:
> But my problem is a little bit harder because moreover I need to assign
> resource to the task from a given set of alternative resources (these sets
> of resources must not be necessarily dijoint). It can be done by splitting
> the tasks for each resource from the set of alternative resources and search
> schedule with all these acitivities. Whenever the bounds of an splitted
> activity turn out to be incoherent, the resource can be simply removed from
> the set of possible alternative resources for the activity.
>
> But for the propagating and branching I probably need to create my own
> propagater and branch function (or not?). I would ask, if is there some
> better documentation how to do this - because it is quite hard to do it only
> with gecode documentation generated by doxygen.

The cumulatives constraint that is available allows one to specify
scheduling problems where the tasks may be allocated to different
machines (governed by the machine-parameter of the constraint). As
said previously though, this is only for non-preemptive problems.

My suggestion would be to first try to do some decomposition of the
problem into the available constraints, even if this leads to a very
inefficient model. This would give you something to compare against
for propagators that you implement yourself.

As for documentation, the doxygen-generated documentation is intended
as a reference, and not a tutorial. Writing some tutorial-like
documentation is definitely on our todo-list. There are two papers in
which important aspects of the Gecode architecture is discussed that I
can recommend, "Views and Iterators for Generic Constraint
Implementations" and "Speeding Up Constraint Propagation", both
available from http://www.gecode.org/publications.html. Apart from
that, I would recommend you to look at the implementation of some
propagator that you are familiar with, and see how it is done.

Hope this helps
Mikael


--
Mikael 'Zayenz' Lagerkvist, http://www.imit.kth.se/~zayenz/



From tack at ps.uni-sb.de  Thu Mar  9 11:35:25 2006
From: tack at ps.uni-sb.de (Guido Tack)
Date: Thu, 9 Mar 2006 11:35:25 +0100
Subject: [gecode-users] Re: Slight modification of examples/money.cc that
	reveals a bug
In-Reply-To: <1c8b4aa60603081526q3df461edua88e644eb5865efc@mail.gmail.com>
References: <1c8b4aa60602280715v101df406ybe3985c801e3b86a@mail.gmail.com>
	<1c8b4aa60603081526q3df461edua88e644eb5865efc@mail.gmail.com>
Message-ID: <200603091135.25913.tack@ps.uni-sb.de>

> I think I've discovered a new similar bug now that can be revealed in
> the same way:

Oh yes, it seems minimodel is really broken. E.g. post(this, 8-s<0) or 
post(this, -s<-8) don't work either. I'll have a look, thanks for the bug 
report.

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Germany
http://www.ps.uni-sb.de/~tack



From tack at ps.uni-sb.de  Thu Mar  9 13:42:21 2006
From: tack at ps.uni-sb.de (Guido Tack)
Date: Thu, 9 Mar 2006 13:42:21 +0100
Subject: [gecode-users] Analysing search performance
In-Reply-To: <6d69d7de0603080738n14b9d2b5wc5b82cde93f73cc@mail.gmail.com>
References: <44038B53.90407@student.chalmers.se>
	<6d69d7de0603080738n14b9d2b5wc5b82cde93f73cc@mail.gmail.com>
Message-ID: <200603091342.21291.tack@ps.uni-sb.de>

Hi!

> I'm currently using gecode to solve some industrial product
> configuraiton problems. The indstry defines their constaints in a tabular
> form. The columns in the table correspond to different attributes of the
> product (e.g., the kind of mohterboard for a PC), and each row defines
> valid configurations of the attributes. The problem is of course that these
> tables interact such that it is hard to find a valid global configuration.
>
> My question is whether Gecode has a direct way of encoding such tables? It
> can of course be encoded using a DNF formula where each conjunct
> corresponds to a row, but I wonder if this is the most efficient way.

We don't currently have a special propagator for this kind of ad-hoc 
constraints. What you would probably need is something like the work 
described in [1] or [2].
We already have ad-hoc (or extensional, or relation) constraints on our 
agenda, but we cannot say yet when we are going to implement this.

If anyone of you is keen on learning how to write propagators for Gecode, this 
may be an interesting and useful starting point! ;-)

Cheers,
	Guido

[1] Cheng, C.K.; Lee, J.H. & Stuckey, P.J. Box Constraint Collections for 
Adhoc Constraints. CP 2003

[2] Christian Bessi?re, Jean-Charles R?gin: Enforcing Arc Consistency on 
Global Constraints by Solving Subproblems on the Fly. CP 1999

-- 
Guido Tack
Programming Systems Lab, Saarland University, Germany
http://www.ps.uni-sb.de/~tack



From jeremie.vautard at laposte.net  Thu Mar  9 14:29:30 2006
From: jeremie.vautard at laposte.net (jeremie.vautard)
Date: Thu,  9 Mar 2006 14:29:30 +0100
Subject: [gecode-users] Extending integer and set variables to quantified
	variables.
Message-ID: <IVV456$75AA8AB8384AA5849FF1F0CBE9AD35A5@laposte.net>

Hi all ! 

I am trying to extend Gecode in order to make it solve
quantified constraints. I would like to stop propagation and
directly fail if a universally quantified variable is reduced.
I began to have a look at the IntVar and SetVar classes to see
how to extend them to add a quantifier information (ForAll our
Exists), and have them raise an exception if the domain is
reduced and the quantifier is ForAll.
I've been surprised to see that the IntVar class has only
methods to read information on the variable domain, and that
the only way to reduce it is : first to access it, using the
method Variable(), to the IntVarImp object the IntVar
contains, and only then to invoke the modifying methods to the
IntVarImp itself (am I right on this point ?).  As the methods
of the IntVar class to read informations on the variable
domain is only en encapsulation of the same IntVarDomain
methods, why are the modifying methods not encapsulated in the
IntVar class too ? 
Another thing. I don't know if that would be useful for
anything else than my issue, but would it be possible to
declare the value access methode of the IntVar as virtual ? 

All this would allow me to only extend gecode with my own
classes, without having to add a single line in the original
source code...

Best regards, 

Jeremie

Acc?dez au courrier ?lectronique de La Poste : www.laposte.net ; 
3615 LAPOSTENET (0,34 ?/mn) ; t?l : 08 92 68 13 50 (0,34?/mn)






From tack at ps.uni-sb.de  Thu Mar  9 15:09:34 2006
From: tack at ps.uni-sb.de (Guido Tack)
Date: Thu, 9 Mar 2006 15:09:34 +0100
Subject: [gecode-users] Extending integer and set variables to quantified
	variables.
In-Reply-To: <IVV456$75AA8AB8384AA5849FF1F0CBE9AD35A5@laposte.net>
References: <IVV456$75AA8AB8384AA5849FF1F0CBE9AD35A5@laposte.net>
Message-ID: <200603091509.34686.tack@ps.uni-sb.de>

Hi!

> I am trying to extend Gecode in order to make it solve
> quantified constraints. I would like to stop propagation and
> directly fail if a universally quantified variable is reduced.
> I began to have a look at the IntVar and SetVar classes to see
> how to extend them to add a quantifier information (ForAll our
> Exists), and have them raise an exception if the domain is
> reduced and the quantifier is ForAll.

If I understand you correctly, you want failure if some value is removed from 
a variable's domain. You could easily write a propagator that implements 
exactly this behaviour: as soon as it is invoked, it fails. This works 
because propagators are only invoked if the domain of their variable changes.

> I've been surprised to see that the IntVar class has only
> methods to read information on the variable domain, and that
> the only way to reduce it is : first to access it, using the
> method Variable(), to the IntVarImp object the IntVar
> contains, and only then to invoke the modifying methods to the
> IntVarImp itself (am I right on this point ?). 

You can create an IntView from an IntVar, without going through the IntVarImp. 
Views provide the modifying operations. The rationale behind this design is 
to separate between modelling and writing propagators. For modelling, you 
only use variables. If you write propagators, you use views. One important 
thing is that you may not simply modify a variables domain, you are also 
responsible for checking whether this resulted in failure. If it did, you 
must signal this to the space - otherwise, failure may be overlooked.

> As the methods 
> of the IntVar class to read informations on the variable
> domain is only en encapsulation of the same IntVarDomain
> methods, why are the modifying methods not encapsulated in the
> IntVar class too ?

It's just a matter of clean interfaces. Vars and Views are supposed to be used 
for different things, so we have different interfaces.

> Another thing. I don't know if that would be useful for
> anything else than my issue, but would it be possible to
> declare the value access methode of the IntVar as virtual ?

In the current setup, this wouldn't make much sense. We want to keep as many 
classes non-virtual as possible, as virtual method calls always have a 
significant overhead. What exactly do you plan the overridden value access to 
do? Maybe you could have a look at the Views concept we use in Gecode. This 
allows us to write propagators in terms of "slightly modified variables", and 
maybe that's what you need.

> All this would allow me to only extend gecode with my own
> classes, without having to add a single line in the original
> source code...

If you can express what you want using Views, it would be possible to use an 
unaltered Gecode. Maybe you can tell us in a little more detail what you're 
up to. We'll be glad to help you fit it in!

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Germany
http://www.ps.uni-sb.de/~tack



From jeremie.vautard at laposte.net  Thu Mar  9 18:55:21 2006
From: jeremie.vautard at laposte.net (jeremie.vautard)
Date: Thu,  9 Mar 2006 18:55:21 +0100
Subject: =?iso-8859-1?b?IFJlOiBbZ2Vjb2RlLXVzZXJzXSBFeHRlbmRpbmcgaW50ZWdlciBh?=
	=?iso-8859-1?b?bmQgc2V0IHZhcmlhYmxlcyB0byBxdWFudGlmaWVkIHZhcmlhYmxl?=
	=?iso-8859-1?b?cy4=?=
Message-ID: <IVVGG9$5C046F24F7A9C1EF7063837C303A7C3E@laposte.net>

Hi Guido ! 

You are right for what I wanted. I think I will use the ? fail
now ? propagator idea for universally quantified variables :
using it, I even won't need to modify any variable domain
anymore, so I can use IntVar directly.

Presentely, I think about using the space only to perform
propagation. (In the quantified case, branching is quite
special and I would first prefer taking care of it totally
outside Gecode. So I won't use commit method from space.) What
I think about doing is that : 
-I have my variable domains represented somewhere outside  the
existing Gecode classes; 
	-I create a space with not yet instanciated variables, and
post my constraints as usual ; 
	-I propagate the space until fixpoint ; 
		-If failed => I return 'no'
		-else => I update existantially quantified variable domains
from the IntVar I read after propagation ;
-Outside the existing Gecode classes, I create the spaces for
the subproblems I now need to solve, and I apply them this
algorithm.

Each resolution are totally independant, as I keep a trace of
the propagation outside Gecode. (I think I will even delete
the space after having performed the propagation and get back
the new domains)

A last (stupid) question : what is the best way to immediately
fail a space into a propagator::propagate method ? (if I'm not
mistaken, I can't simply use the space::fail() method ).

Best regards, 

Jeremie

Acc?dez au courrier ?lectronique de La Poste : www.laposte.net ; 
3615 LAPOSTENET (0,34 ?/mn) ; t?l : 08 92 68 13 50 (0,34?/mn)






From javimena at gmail.com  Thu Mar  9 16:47:24 2006
From: javimena at gmail.com (=?ISO-8859-1?Q?Javier_Andr=E9s_Mena_Zapata?=)
Date: Thu, 9 Mar 2006 10:47:24 -0500
Subject: [gecode-users] Problem with he creation of a "branching" class
Message-ID: <80537a260603090747i3d3c6a09mb797e8a05ef409e1@mail.gmail.com>

Hi,

I'm creating a Branching class for scheduling. I don't undestand what
is going wrong.
Sometimes the Space class throws an exception:

00271         throw SpaceFailed("Space::commit");

I don't undestand very well what I'm doing wrong... maybe I should use
Views and not Arrays, but I need the var to impose the constraints on
the new Spaces. Currently even if I don't impose new constraints, it
doesn't works.

The first lines includes 2 functions: readSpec and readSpecHouse,
those are problems specifications. The class Branching class is
SchedulingBranch. Currently I'm not using recomputation
(BranchingDesc). The class SchedulingProblem imposes the constraints
according to the specification, and finally it creates the
SchedulingBranching object.

Thanks.

--
Javier Andr?s Mena Zapata
University of  Valle
Cali - Colombia
-------------- next part --------------
A non-text attachment was scrubbed...
Name: spec-bridge.cc
Type: application/octet-stream
Size: 17753 bytes
Desc: not available
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20060309/573d4596/attachment.obj>

From zayenz at gmail.com  Fri Mar 10 07:17:38 2006
From: zayenz at gmail.com (Mikael 'Zayenz' Lagerkvist)
Date: Fri, 10 Mar 2006 07:17:38 +0100
Subject: [gecode-users] Extending integer and set variables to quantified
	variables.
In-Reply-To: <IVVGG9$5C046F24F7A9C1EF7063837C303A7C3E@laposte.net>
References: <IVVGG9$5C046F24F7A9C1EF7063837C303A7C3E@laposte.net>
Message-ID: <63b5c8b00603092217nf5e657lbcabf7c5ae0fdc01@mail.gmail.com>

Hi,

On 3/9/06, jeremie.vautard <jeremie.vautard at laposte.net> wrote:
> A last (stupid) question : what is the best way to immediately
> fail a space into a propagator::propagate method ? (if I'm not
> mistaken, I can't simply use the space::fail() method ).

The propagate method can signal failure by returning the value ES_FAILED.

The possible return-values to use are:
 * ES_FAILED 	Execution has resulted in failure.
 * ES_NOFIX 	Propagation has not computed fixpoint.
 * ES_OK 	Execution is okay.
 * ES_FIX 	Propagation has computed fixpoint.
 * ES_SUBSUMED 	Propagator is subsumed (entailed)

Cheers
Mikael

--
Mikael 'Zayenz' Lagerkvist, http://www.imit.kth.se/~zayenz/



From zayenz at gmail.com  Fri Mar 10 08:25:10 2006
From: zayenz at gmail.com (Mikael 'Zayenz' Lagerkvist)
Date: Fri, 10 Mar 2006 08:25:10 +0100
Subject: [gecode-users] Problem with he creation of a "branching" class
In-Reply-To: <80537a260603090747i3d3c6a09mb797e8a05ef409e1@mail.gmail.com>
References: <80537a260603090747i3d3c6a09mb797e8a05ef409e1@mail.gmail.com>
Message-ID: <63b5c8b00603092325v31254567p820bf5ec691377d7@mail.gmail.com>

On 3/9/06, Javier Andr?s Mena Zapata <javimena at gmail.com> wrote:
> I'm creating a Branching class for scheduling. I don't undestand what
> is going wrong.
> Sometimes the Space class throws an exception:
>
> 00271         throw SpaceFailed("Space::commit");
>
> I don't undestand very well what I'm doing wrong... maybe I should use
> Views and not Arrays, but I need the var to impose the constraints on
> the new Spaces. Currently even if I don't impose new constraints, it
> doesn't works.

I saw one trouble with your code that is quite serious. The
branch-function of a Branching may be called multiple times before the
commit-function is called. Therefor, you should make sure that the
branch-function just computes the pair (i,j) once for each new node.

Consider the output that you produce:
   SchedulingBranch(Space* home, IntVarArray& liv)
   var: 0 and 1
   virtual Actor* copy(Space* home, bool share)
   start
   var: 0 and 2
   virtual Actor* copy(Space* home, bool share)
   branching in L vars 0 and 2
Here we see that branch() (producing the "var..."-lines) is called
twice before commit(...) (producing the "Branching..."-line).

As for View's and Var's, Guido Tack wrote recently:
> You can create an IntView from an IntVar, without going through the IntVarImp.
> Views provide the modifying operations. The rationale behind this design is
> to separate between modelling and writing propagators. For modelling, you
> only use variables. If you write propagators, you use views.

For posting constraints from a branching, you should use the
propagators directly, by calling their post-functions. See
http://www.gecode.org/gecode-doc-latest/classGecode_1_1Int_1_1Rel_1_1Le.html
for documentation about the less-than propagator. It is important that
you check the return-value from the post-function so that you don't
miss a failure.


> Currently I'm not using recomputation (BranchingDesc).

The code you sent does use recomputation and branching-descriptions,
but as far as I can tell, it looks ok.

Hope this helps
Mikael

--
Mikael 'Zayenz' Lagerkvist, http://www.imit.kth.se/~zayenz/



From schulte at imit.kth.se  Tue Mar 14 15:52:05 2006
From: schulte at imit.kth.se (Christian Schulte)
Date: Tue, 14 Mar 2006 15:52:05 +0100
Subject: [gecode-users] CP 2006: Applications to Doctoral Programme
Message-ID: <007601c64776$dcf93370$acd4ed82@beule>

[sorry for multiple copies]

                        CP 2006
        Call for Applications to Doctoral Programme

Twelfth International Conference on Principles and Practice of
                Constraint Programming

                   September 25-29, 2006
                     Nantes, France

CP 2006 invites Ph.D. students to apply for the Doctoral Programme, a
forum held during the CP conference which provides an opportunity for
a group of Ph.D. students to achieve visibility and discuss their
research interests and career objectives with each other and
established researchers in Constraint Programming and its related
fields. After successful Doctoral Programmes in previous years, it is
being run again this year for the sixth time.

The aims of the Doctoral Programme are the following:

    - to provide a forum for Ph.D. students to present their current
research,
    and receive feedback from other students and senior researchers;
    - to promote contacts among Ph.D. students and senior researchers
working in the same area;
    - to exchange research experience;
    - to support Ph.D. students with information and advice on academic,
    research and industrial careers;
    - and to financially support its participants.

The programme will consist of students' presentations and/or posters,
and tutorials given by senior researchers in the field. In addition,
each student will be matched to a mentor who is a senior researcher
with similar research interests and who can advise the student on
his/her research progress.


Participation and Financial Support Rules
=========================================

    - Applicants will be selected to participate in the Doctoral Programme
based on the
    quality of their submissions;
    - participants who have never attended CP Doctoral Programmes will be
given higher
    priority for financial support;
    - participants who have already attended past CP Doctoral Programmes
will be given
    financial support if funding is available. In this case, priority is
given to students 
    who received less support from the DP in previous years.

Financial support consists in free conference registration and
accommodation. NOTE that only the students who applied and got
accepted for participation in the Doctoral Programme are subject to
financial support.


Paper Availability
==================

Student papers will be available during the conference and on the
Conference/Doctoral Programme websites.


Submissions
===========

We encourage submissions from Ph.D. students at any level, and from
any topic area and methodology within Constraint Programming and its
related fields. On the basis of the submissions, the Organizing
Committee will select a group of students that will be invited to
present their work during the Doctoral Programme, either as a
presentation or a poster. We expect a commitment from all
participating students to attend the entire Doctoral Programme.

Applicants should submit a paper electronically using the electronic
submission form at:

    http://www.softconf.com/start/CP_PHD06/submit.html

The paper should be a maximum of 6 pages in length and should follow
the usual LNCS style format at:

    http://www.springer.de/comp/lncs/authors.html.

NOTE that the page limit is strict and longer papers will NOT be
reviewed. The paper should be sent either as a PostScript or as a Pdf
file. It should describe original, unpublished work, completed or in
progress, that is part of the doctoral work of the student(s). The
authors should be formatted as:

    Student(s): ...
    Supervisor(s): ...

If an extended version of the paper is also submitted to the technical
programme, THIS MUST BE INDICATED in the ABSTRACT of the paper. Double
submission is acceptable, but if the paper is accepted also for the
technical programme, the student will present the work only in the
technical programme sessions and not during the Doctoral Programme.
The papers of the students accepted for participation to the Doctoral
Programme will be made available on the web.


In addition, the dissertation advisor should send a letter of
recommendation by e-mail to cp-phd2006 @ deis.unibo.it. The letter
should:

    - confirm that the applicant is a Ph.D. student working in Constraint
Programming
    or its related fields;
    - indicate whether the student has already benefitted from the past CP
Doctoral Programmes,
    and if yes how many times;
    - include the expected  date for thesis submission;
    - and the motivation/expected benefit for the student to attend the
Doctoral Programme.

This letter can be sent in as either a text or a PostScript or a Pdf file.

Important Dates
===============

 April 28, 2006: Deadline for applications
 June 21, 2006: Acceptance notification
 June 29, 2006: Final versions


Organization
============

Doctoral Programme Chairs:

 Zeynep Kiziltan
 D.E.I.S.
 Universit? di Bologna, Italy

 Brahim Hnich
 Faculty of Computer Science
 Izmir University of Economics, Turkey


Email: cp-phd2006 @ deis.unibo.it

Organizing Committee:

 Roman Bartak, Charles University, Czech Republic
 Hadrien Cambazard, Universit? de Nantes, France
 Mats Carlsson, SICS, Sweden
 Ian Miguel, University of St. Andrews, U.K.
 Javier Larrosa, Universitat Polit?cnica de Catalunya, Spain
 Gilles Pesant, ?cole Polytechnique de Montr?al, Canada
 Steven Prestwich, University College Cork, Ireland
 Francesca Rossi, Universit? di Padova, Italy
 Meinolf Sellmann, Brown University, U.S.A.
 Peter van Beek, University of Waterloo, Canada
 Pascal van Hentenryck, Brown University, U.S.A.
 Toby Walsh, University of New South Wales, Australia

Additional information may be obtained by contacting the Doctoral
Programme Chairs.




From dooms at info.ucl.ac.be  Tue Mar 14 15:40:45 2006
From: dooms at info.ucl.ac.be (=?ISO-8859-1?Q?Gr=E9goire_Dooms?=)
Date: Tue, 14 Mar 2006 15:40:45 +0100
Subject: [gecode-users] Logilab's Python Wrapper for Gecode
Message-ID: <4416D5ED.9020703@info.ucl.ac.be>

Dear all,

last week we have had a PyPy 
(http://codespeak.net/pypy/dist/pypy/doc/news.html) sprint about 
integrating Python and logic/constraint programming at UCL in 
Louvain-la-Neuve (view the report here: 
http://codespeak.net/pypy/extradoc/sprintinfo/louvain-la-neuve-2006/report.txt 
).

During this print we started the development of a Python wrapper for Gecode.
We were able to wrap a simple generic space which allows to dynamically 
register integer variables in it and post a few constraints. We also 
implemented a generic propgator over ints which triggers  a Python 
callback  on propagate().
The embryonic wrapper is available at 
http://codespeak.net/pypy/dist/pypy/lib/logic/gecode_wrapper/

The guys from Logilab  (http://www.logilab.org and 
http://www.logilab.fr) which had already implemented a pure Python 
constraint solver (http://www.logilab.org/projects/constraint) are in 
the process of developing the Python wrapper.

All the best,
--
Gr?goire Dooms




From jeremie.vautard at laposte.net  Tue Mar 14 22:10:44 2006
From: jeremie.vautard at laposte.net (=?ISO-8859-1?Q?J=E9r=E9mie_Vautard?=)
Date: Tue, 14 Mar 2006 22:10:44 +0100
Subject: [gecode-users] Propagator called too soon...
Message-ID: <44173154.9030606@laposte.net>

Hello !

(These questions come in the same context than the "Extending integer 
and set variables to quantified variables 
<http://www.gecode.org/gecode-users/2006-March/001000.html>" thread I 
started a while ago...)

I have made a propagator which fails the space immediately when invoked, 
in order to stop the propagation as soon as an universally quantified 
variable domain is reduced. The only problen I have is that this 
propagator is also called one first time at the very begining of the 
propagation loop. Is there a way to avoid this first call, and call the 
propagator only when the variable domain have been actually reduced ? I 
suppose that it can be done using propagation conditions, but I must 
admit I don't really understand how to create user-defined PropConds.

Another, maybe trivial, question : what is the best way to subscribe a 
propagator to a particular IntVar ? The way I use presentely is I think 
a little dirty : I have created a "QIntVar" class which extands the 
IntVar class by only adding it a   IntvarImp* GetVar()   method 
returning the protected "var"member of the IntVar class. Then, I use the 
subscribe() method of this IntVarImp in order to subscrime my "fail-now" 
propagator. Is there a cleaner way to achieve this ?

Yet another question : when I try to make a new "Fail-now" propagator 
using the 'new' operator, (  ForAllProp* pr = new ForAllProp(home,fd) by 
example. I have defined the  ForAllProp(Space* home, bool fd=false) 
constructor. ), I get an error at the compilation process. I have for 
the moment avoided the problem by declaring only one global "ForAllProp 
fa(myspace);" and using subscribe(myspace,&fa,condition), but I don't 
really like this. For the same reason, the copy() is for the moment 
defined by :
Actor* copy(Space* home, bool share) {return this;}
and I wonder if it will not be a source of problems later...

Here is my ForAllProp class, defining the "Fail now" propagator :

class ForAllProp : public Propagator {
public : 
  ForAllProp(Space * home, bool fd = false) : Propagator(home,fd) {};
  ForAllProp(Space * home, bool share, ForAllProp & p) : Propagator(home, share, p) {};
  PropCost cost(void) const {return PC_UNARY_LO;};
  ExecStatus propagate(Space * home) {cout<<"ForAll r?duit";return ES_FAILED;};
  Actor* copy(Space* home, bool share) {return this;}
};


Best regards,

Jeremie






From schulte at imit.kth.se  Thu Mar 16 13:59:12 2006
From: schulte at imit.kth.se (Christian Schulte)
Date: Thu, 16 Mar 2006 13:59:12 +0100
Subject: [gecode-users] Propagator called too soon...
In-Reply-To: <44173154.9030606@laposte.net>
Message-ID: <001b01c648f9$6c5f9da0$acd4ed82@beule>

Hi,

please let me take things in turn.

As it comes to the fact that each propagator is executed when created
(actually this is not strictly true, see below) we need to extend the
functionality for subscription. I don't know yet how to do it best (by an
optional parameter to subscribe or by a different method) but I am going to
look at it right after this email.

Currently, a propagator is processed for propagation (and hence will
eventually be propagated) when subscribing to a view according to the
following rules: if the propagators subscribes with respect to a PC_INT_VAL
or PC_SET_VAL propagation condition, the propagator is executed only if the
variable is assigned to a single value. Otherwise, a propagator is always
executed under the assumption that the propagator does not even know yet
that the bounds of the variables have changed (so quite strong).

As it comes to IntVar and subscription: don't! Propagators only talk about
IntViews! If you hav an IntVar x and you want to create a corresponding
IntView y, just do this: y = x (or longish: IntView y(x)). Please check how
we do it for our propagators: typically there is a post function (such as
linear, distinct, etc) which talks about IntVar and arrays. This then calls
a static post member function of the propagator class after it has created
views for the vars. This static post member function then uses new to create
a propagator. Look to the code for examples.

As it comes to new: all news are placament news and require a space
argument, so something like "new (home) ...". Again look for examples.

All the best
Christian

--
Christian Schulte, http://www.imit.kth.se/~schulte/ 

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of J?r?mie Vautard
Sent: Tuesday, March 14, 2006 10:11 PM
To: users at gecode.org
Subject: [gecode-users] Propagator called too soon...


Hello !

(These questions come in the same context than the "Extending integer 
and set variables to quantified variables 
<http://www.gecode.org/gecode-users/2006-March/001000.html>" thread I 
started a while ago...)

I have made a propagator which fails the space immediately when invoked, 
in order to stop the propagation as soon as an universally quantified 
variable domain is reduced. The only problen I have is that this 
propagator is also called one first time at the very begining of the 
propagation loop. Is there a way to avoid this first call, and call the 
propagator only when the variable domain have been actually reduced ? I 
suppose that it can be done using propagation conditions, but I must 
admit I don't really understand how to create user-defined PropConds.

Another, maybe trivial, question : what is the best way to subscribe a 
propagator to a particular IntVar ? The way I use presentely is I think 
a little dirty : I have created a "QIntVar" class which extands the 
IntVar class by only adding it a   IntvarImp* GetVar()   method 
returning the protected "var"member of the IntVar class. Then, I use the 
subscribe() method of this IntVarImp in order to subscrime my "fail-now" 
propagator. Is there a cleaner way to achieve this ?

Yet another question : when I try to make a new "Fail-now" propagator 
using the 'new' operator, (  ForAllProp* pr = new ForAllProp(home,fd) by 
example. I have defined the  ForAllProp(Space* home, bool fd=false) 
constructor. ), I get an error at the compilation process. I have for 
the moment avoided the problem by declaring only one global "ForAllProp 
fa(myspace);" and using subscribe(myspace,&fa,condition), but I don't 
really like this. For the same reason, the copy() is for the moment 
defined by :
Actor* copy(Space* home, bool share) {return this;}
and I wonder if it will not be a source of problems later...

Here is my ForAllProp class, defining the "Fail now" propagator :

class ForAllProp : public Propagator {
public : 
  ForAllProp(Space * home, bool fd = false) : Propagator(home,fd) {};
  ForAllProp(Space * home, bool share, ForAllProp & p) : Propagator(home,
share, p) {};
  PropCost cost(void) const {return PC_UNARY_LO;};
  ExecStatus propagate(Space * home) {cout<<"ForAll r?duit";return
ES_FAILED;};
  Actor* copy(Space* home, bool share) {return this;}
};


Best regards,

Jeremie




_______________________________________________
Gecode users mailing list
users at gecode.org https://www.gecode.org/mailman/listinfo/gecode-users




From tack at ps.uni-sb.de  Thu Mar 16 17:55:54 2006
From: tack at ps.uni-sb.de (Guido Tack)
Date: Thu, 16 Mar 2006 17:55:54 +0100
Subject: [gecode-users] Propagator called too soon...
In-Reply-To: <001b01c648f9$6c5f9da0$acd4ed82@beule>
References: <001b01c648f9$6c5f9da0$acd4ed82@beule>
Message-ID: <200603161755.54475.tack@ps.uni-sb.de>

Hi.

I had an idea this morning how to prevent the propagator from failing right 
after posting it: each time it is invoked, simply test whether the domain is 
still untouched. Remeber that you don't even have to check whether the domain 
is still the same, you could simply check its size!
Of course, your propagator is invoked at most twice. Once right after 
creation, where you check the domain, and it is still ok, and you just return 
ES_FIX. Then, possibly, if the domain is shrunk, you test again, this time 
you detect the change, and you return ES_FAILED.
Testing is cheap, and it is done at most twice, so I think I'd prefer this 
simple solution over changing the subscription interface.

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Germany
http://www.ps.uni-sb.de/~tack



From schulte at imit.kth.se  Thu Mar 16 19:37:35 2006
From: schulte at imit.kth.se (Christian Schulte)
Date: Thu, 16 Mar 2006 19:37:35 +0100
Subject: [gecode-users] Propagator called too soon...
In-Reply-To: <200603161755.54475.tack@ps.uni-sb.de>
Message-ID: <000001c64928$b2389550$0401a8c0@tiny>

Guido is almost right: however, you cannot distinguish a first from a second
invocation. What you have to do is to record the domain size when the
propagator is created. Then, the propagate function simply has to check
whether the size has changed. If yes, just report failure.

Christian

--
Christian Schulte, http://web.imit.kth.se/~schulte/




-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Guido Tack
Sent: Thursday, March 16, 2006 5:56 PM
To: users at gecode.org
Subject: Re: [gecode-users] Propagator called too soon...


Hi.

I had an idea this morning how to prevent the propagator from failing right 
after posting it: each time it is invoked, simply test whether the domain is

still untouched. Remeber that you don't even have to check whether the
domain 
is still the same, you could simply check its size!
Of course, your propagator is invoked at most twice. Once right after 
creation, where you check the domain, and it is still ok, and you just
return 
ES_FIX. Then, possibly, if the domain is shrunk, you test again, this time 
you detect the change, and you return ES_FAILED.
Testing is cheap, and it is done at most twice, so I think I'd prefer this 
simple solution over changing the subscription interface.

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Germany
http://www.ps.uni-sb.de/~tack

_______________________________________________
Gecode users mailing list
users at gecode.org https://www.gecode.org/mailman/listinfo/gecode-users




From schulte at imit.kth.se  Mon Mar 20 11:08:12 2006
From: schulte at imit.kth.se (Christian Schulte)
Date: Mon, 20 Mar 2006 11:08:12 +0100
Subject: [gecode-users] CP 2006: Call for Workshop and Tutorial Proposals
Message-ID: <000d01c64c06$330d1d10$acd4ed82@beule>

[sorry for multiple copies]

              CP 2006 -- CALL FOR WORKSHOP AND TUTORIAL PROPOSALS

                    Twelfth International Conference on
               Principles and Practice of Constraint Programming

                     http://www.sciences.univ-nantes.fr/cp06/


The CP 2006 Program Committee invites proposals for the Workshop and
Tutorial Program. CP 2006 will be held in Nantes, France from September
25th-29th.



WORKSHOPS

CP 2006 workshops will provide an informal setting where workshop
participants will have the opportunity to discuss specific technical topics
in an atmosphere that facilitates the active exchange of ideas. It is an
opportunity to disseminate work in progress or to promote new and emerging
areas within the field of constraints. The topics of the workshops can cover
any area related to constraints and any related cross-disciplinary areas.

Workshops will be half-day long, except special cases motivated by the
organizers. The internal format of the workshop will be determined by the
organizers. 

Important Dates for Workshops
    * March 31, 2006: Proposal submission deadline
    * April 14, 2006: Acceptance notification
    * April 28, 2006: Deadline for receipt of URL for workshop web page
    * Mid August, 2006: Deadline for workshop notes (TBD)
    * September 25, 2006: CP 2006 workshops



TUTORIALS

CP 2006 tutorials are ideally targeted at the whole constraint community and
should give a state-of-the-art description of a field of research related to
constraint programming or of a large area of application. As an example, the
topics of tutorials in the previous CP conferences were: numerical CSPs,
global constraints, soft constraints, mathematical programming, cooperation
between methods, areas of application (eg. bioinformatics), etc.

Tutorials will take place during the technical program.

Important Dates for Tutorials
    * May 19, 2006: Proposal submission deadline
    * June 16, 2006: Acceptance notification
    * Mid August, 2006: Deadline for tutorial notes (TBD)
    * September 25-29, 2006: CP technical program and tutorials


A summary of the submission procedures for workshops and tutorials are
available from the CP-06 web-site: http://www.sciences.univ-nantes.fr/cp06/



WORKSHOP AND TUTORIAL CHAIR

Barry O'Sullivan
Cork Constraint Computation Centre




From tack at ps.uni-sb.de  Wed Mar 22 09:24:30 2006
From: tack at ps.uni-sb.de (Guido Tack)
Date: Wed, 22 Mar 2006 09:24:30 +0100
Subject: [gecode-users] Logilab's Python Wrapper for Gecode
In-Reply-To: <4416D5ED.9020703@info.ucl.ac.be>
References: <4416D5ED.9020703@info.ucl.ac.be>
Message-ID: <200603220924.31231.tack@ps.uni-sb.de>

Hi Gr?goire!

> During this print we started the development of a Python wrapper for
> Gecode. We were able to wrap a simple generic space which allows to
> dynamically register integer variables in it and post a few constraints. We
> also implemented a generic propgator over ints which triggers  a Python
> callback  on propagate().
> The embryonic wrapper is available at
> http://codespeak.net/pypy/dist/pypy/lib/logic/gecode_wrapper/

That's nice work. I saw that you used the same idea we're using for the Alice 
wrapper, to represent variables as array indices. One problem with this 
approach is that you can't allocate "temporary" variables, you always have to 
copy all the variables you've created. Are you planning to work around this?

As you know, we're using swig to generate a Java wrapper. Did you consider 
this option, too? Although we had to annotate a lot, and provide many 
customized translations between Java and C++, I still think it saved us a lot 
of work.

We recently had some problems with memory management. A propagator written in 
Java must be kept alive as long as the "corresponding C++ propagator" is 
alive - and due to a bug in swig, our Java propagators were never finalized. 
This means we had a huge memory leak. Does Python provide some clever way for 
coping with these kinds of problems?

> The guys from Logilab  (http://www.logilab.org and
> http://www.logilab.fr) which had already implemented a pure Python
> constraint solver (http://www.logilab.org/projects/constraint) are in
> the process of developing the Python wrapper.

Please let us know when you release something, so that we can put a pointer on 
our web site.

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Germany
http://www.ps.uni-sb.de/~tack



From dooms at info.ucl.ac.be  Wed Mar 22 10:45:47 2006
From: dooms at info.ucl.ac.be (=?ISO-8859-1?Q?Gr=E9goire_Dooms?=)
Date: Wed, 22 Mar 2006 10:45:47 +0100
Subject: [gecode-users] Logilab's Python Wrapper for Gecode
In-Reply-To: <200603220924.31231.tack@ps.uni-sb.de>
References: <4416D5ED.9020703@info.ucl.ac.be>
	<200603220924.31231.tack@ps.uni-sb.de>
Message-ID: <44211CCB.5090201@info.ucl.ac.be>

Guido Tack wrote:
> Hi Gr?goire!
>
>   
>> During this print we started the development of a Python wrapper for
>> Gecode. We were able to wrap a simple generic space which allows to
>> dynamically register integer variables in it and post a few constraints. We
>> also implemented a generic propgator over ints which triggers  a Python
>> callback  on propagate().
>> The embryonic wrapper is available at
>> http://codespeak.net/pypy/dist/pypy/lib/logic/gecode_wrapper/
>>     
>
> That's nice work. I saw that you used the same idea we're using for the Alice 
> wrapper, to represent variables as array indices. One problem with this 
> approach is that you can't allocate "temporary" variables, you always have to 
> copy all the variables you've created. Are you planning to work around this?
>
>   
Yes it is was in the original design. And it is currently in add_int_var 
(the bool temp argument) but it throws Unimplemented :-)
I think it should be possible to assign other ids (negative numbers ? ) 
to temporary variables in the space. Those would be local to one Space 
and would not get copied.
> As you know, we're using swig to generate a Java wrapper. Did you consider 
> this option, too? Although we had to annotate a lot, and provide many 
> customized translations between Java and C++, I still think it saved us a lot 
> of work.
>   
Yes. We tought about using it too. The final decision was based on the 
personnal taste of Ludovic for SWIG w/ Python ( ;-) ) and also on the 
fact that we have to go through a C API to make it useable in PyPy. So 
the design involves making this special Space with dynamic arrays of 
variables then a C wrapper with only void* and int objects in the 
interface. Then on the Python we use ctypes (or rctypes in PyPy) which 
gives that same procedural interface. Finally there should be a higher 
level, more  Pythonic wrapper over that one.
 
> We recently had some problems with memory management. A propagator written in 
> Java must be kept alive as long as the "corresponding C++ propagator" is 
> alive - and due to a bug in swig, our Java propagators were never finalized. 
> This means we had a huge memory leak. Does Python provide some clever way for 
> coping with these kinds of problems?
>   

Well, that rings my bell about the discussions on keeping away from 
SWIG. There are some nice memory management features in Boost.Python but 
we need to go pure C. So that memory management will have to be hand 
written.
It is not implemented yet but does not seem too complicated:
Correct me if I'm wrong: that implies calling Propagator(home,true) in 
our  MyPropagator constructor to have its C++ destructor called.
On the Python side, memory management uses reference counting. So a 
propagator copy should INCREF and a destructor should DECREF. AFAIK it 
is not possible to do it from the C++ side through ctypes so it would 
need to be emulated on the Python side. The API to post a propagator 
would then not only provide a propagate callable but also incref and 
decref callables for the propagate one :-).

I don't have much time to work on this before the Summer but I think 
they plan on developing it in Logilab Paris.

Best,
--
Gr?goire




From jc at freesoft.be  Wed Mar 22 10:42:13 2006
From: jc at freesoft.be (Jean-Christophe Godart)
Date: Wed, 22 Mar 2006 10:42:13 +0100
Subject: [gecode-users] [Help] Killer sudoku model (newbie)
Message-ID: <161d3229724b70dd43f3e0756eeee9ee@freesoft.be>

Hi,

I'm new to gecode and currently evaluating it.

My problem is to solve Killer Sudoku AKA Samunamupure or Sum Number 
place
It's like a regular sudoku except the givens are sums of cages over 
cells.
So I adapted the (regular) sudoku example. Looking at the MagicSquare 
sample for sum related constraints.
I made a test program for a rudimentary problem of a 2x2 killer sudoku :
16 cells = int vars array, 4 rows, columns & blocks = dinstinct, 6 
cages = linear and dinstinct
I must have made something wrong since it does not find a solution (and 
I know there is a unique one)

Source file is here
http://sudoku.apinc.org/killer.cc

FYI
gecode 1.0.1
Examples Sudoku (all 3 variants) & MagicSquare are working fine.
Mac OS X 10.4.5, gcc 4.0

Please help

TIA
-- 
Jean-Christophe Godart, Belgium. http://sudoku.apinc.org/




From zayenz at gmail.com  Wed Mar 22 11:46:55 2006
From: zayenz at gmail.com (Mikael 'Zayenz' Lagerkvist)
Date: Wed, 22 Mar 2006 11:46:55 +0100
Subject: [gecode-users] [Help] Killer sudoku model (newbie)
In-Reply-To: <161d3229724b70dd43f3e0756eeee9ee@freesoft.be>
References: <161d3229724b70dd43f3e0756eeee9ee@freesoft.be>
Message-ID: <63b5c8b00603220246u3ea0ce65x80ecda072b20e48@mail.gmail.com>

On 3/22/06, Jean-Christophe Godart <jc at freesoft.be> wrote:
> I must have made something wrong since it does not find a solution (and
> I know there is a unique one)
>
> Source file is here
> http://sudoku.apinc.org/killer.cc

I tried the program on my computer (Linux, amd64, gcc 4.0, gecode
[svn, 1.0.1, 1.0.0]) and it finds the unique solution without problem.
Also, as far as I can see, your program looks fine. So I'm sorry to
say that I can't find the problem.

Cheers
Mikael

PS. For larger examples, you might not want to use linear() with
ICL_DOM, since it has exponential complexity.

--
Mikael 'Zayenz' Lagerkvist, http://www.imit.kth.se/~zayenz/



From schulte at imit.kth.se  Wed Mar 22 13:04:29 2006
From: schulte at imit.kth.se (Christian Schulte)
Date: Wed, 22 Mar 2006 13:04:29 +0100
Subject: [gecode-users] [Help] Killer sudoku model (newbie)
In-Reply-To: <63b5c8b00603220246u3ea0ce65x80ecda072b20e48@mail.gmail.com>
Message-ID: <003201c64da8$c642f840$acd4ed82@beule>

Maybe you want to try whether Gecode compiled correctly at all. To do that,
you can build and run the tests:
	make test
	./test/test.exe (or ./test/test)

Christian

PS: I am not an author of your program, maybe I hold copyright to parts but
I am definitely not the author. The easiest is always to keep the original
copyright header and write your own on top.

--
Christian Schulte, http://www.imit.kth.se/~schulte/ 

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Mikael 'Zayenz' Lagerkvist
Sent: Wednesday, March 22, 2006 11:47 AM
To: Jean-Christophe Godart
Cc: users at gecode.org
Subject: Re: [gecode-users] [Help] Killer sudoku model (newbie)


On 3/22/06, Jean-Christophe Godart <jc at freesoft.be> wrote:
> I must have made something wrong since it does not find a solution 
> (and I know there is a unique one)
>
> Source file is here
> http://sudoku.apinc.org/killer.cc

I tried the program on my computer (Linux, amd64, gcc 4.0, gecode [svn,
1.0.1, 1.0.0]) and it finds the unique solution without problem. Also, as
far as I can see, your program looks fine. So I'm sorry to say that I can't
find the problem.

Cheers
Mikael

PS. For larger examples, you might not want to use linear() with ICL_DOM,
since it has exponential complexity.

--
Mikael 'Zayenz' Lagerkvist, http://www.imit.kth.se/~zayenz/

_______________________________________________
Gecode users mailing list
users at gecode.org https://www.gecode.org/mailman/listinfo/gecode-users




From jc at freesoft.be  Wed Mar 22 13:51:41 2006
From: jc at freesoft.be (Jean-Christophe Godart)
Date: Wed, 22 Mar 2006 13:51:41 +0100
Subject: [gecode-users] [Help] Killer sudoku model (newbie)
In-Reply-To: <63b5c8b00603220246u3ea0ce65x80ecda072b20e48@mail.gmail.com>
References: <161d3229724b70dd43f3e0756eeee9ee@freesoft.be>
	<63b5c8b00603220246u3ea0ce65x80ecda072b20e48@mail.gmail.com>
Message-ID: <fb1cc46c3e413c3db2322cc61769fb21@freesoft.be>


Le 22-mars-06, ? 11:46, Mikael 'Zayenz' Lagerkvist a ?crit :

> PS. For larger examples, you might not want to use linear() with
> ICL_DOM, since it has exponential complexity.

Thanks for your quick answer :-)

That was actually the problem. Using ICL_DOM won't find the solution 
whereas all other icl do.

Now, I'll make some tests with largers 3x3 grids.

OK I know I should RTFM, but...
Any hint on which default options to use for such a problem ?
Also for BVAR & BVAL params to search()

Then for the constrains which are now simply distinct() and linear()
Would it help to define the sum as post( a + b + c ... == s) instead of 
linear() ?

When solving a Killer Sudoku by hand and logic, almost every time, we 
go through a state where the values that make up a cage are known, but 
their actual location isn't known yet.
For instance, something like the domain of 2 vars A & B is restricted 
to a pair of values and consequently no other var that is constrained 
by a distinct() both for A & B may not containt these values and we can 
then restrict their domain to exclude this pair of value.
In the Sudoku terminology, that's what is called naked pair, triplet or 
more generaly naked subset.
Now, is there a better approach in the modeling of killer sudoku 
constraints, knowing that it's a very common case ?
Would it help using IntSet ?
Sorry if it's not clear, I'm a CSP newbie :-S

Kind regards,
-- 
Jean-Christophe Godart, Belgium. http://sudoku.apinc.org/




From zayenz at gmail.com  Wed Mar 22 14:28:44 2006
From: zayenz at gmail.com (Mikael 'Zayenz' Lagerkvist)
Date: Wed, 22 Mar 2006 14:28:44 +0100
Subject: [gecode-users] [Help] Killer sudoku model (newbie)
In-Reply-To: <fb1cc46c3e413c3db2322cc61769fb21@freesoft.be>
References: <161d3229724b70dd43f3e0756eeee9ee@freesoft.be>
	<63b5c8b00603220246u3ea0ce65x80ecda072b20e48@mail.gmail.com>
	<fb1cc46c3e413c3db2322cc61769fb21@freesoft.be>
Message-ID: <63b5c8b00603220528u3a36aaaaq24a9d05906587ea8@mail.gmail.com>

On 3/22/06, Jean-Christophe Godart <jc at freesoft.be> wrote:
> Le 22-mars-06, ? 11:46, Mikael 'Zayenz' Lagerkvist a ?crit :
> > PS. For larger examples, you might not want to use linear() with
> > ICL_DOM, since it has exponential complexity.
>
> Thanks for your quick answer :-)
>
> That was actually the problem. Using ICL_DOM won't find the solution
> whereas all other icl do.

That is strange. A good idea is to do as Christian mentioned, and run
the test-suite for Gecode, to see if it compiled correctly. Using
stronger propagation (e.g., using ICL_DOM instead of ICL_BND) can
never (in the absence of bugs somewhere) remove a solution.


> Now, I'll make some tests with largers 3x3 grids.
>
> OK I know I should RTFM, but...
> Any hint on which default options to use for such a problem ?
> Also for BVAR & BVAL params to search()

I have no idea if there is any choice that is particularly good for
Killer Sudokus.

The usual suspect is BVAR_SIZE_MIN, for selecting the variable with
the minimum size. Experimenting is a good idea here.


> Then for the constrains which are now simply distinct() and linear()
> Would it help to define the sum as post( a + b + c ... == s) instead of
> linear() ?

Using post(...) is just a nicer syntactic notation for calling linear.


> When solving a Killer Sudoku by hand and logic, almost every time, we
> go through a state where the values that make up a cage are known, but
> their actual location isn't known yet.
> For instance, something like the domain of 2 vars A & B is restricted
> to a pair of values and consequently no other var that is constrained
> by a distinct() both for A & B may not containt these values and we can
> then restrict their domain to exclude this pair of value.
> In the Sudoku terminology, that's what is called naked pair, triplet or
> more generaly naked subset.
> Now, is there a better approach in the modeling of killer sudoku
> constraints, knowing that it's a very common case ?
> Would it help using IntSet ?

This kind of reasoning is performed by the domain-consistent distinct
propagator (i.e., when supplying ICL_DOM to distinct(...)), for the
generalized case.

When solving sudoku's with constraint programming, it is usually not
worth it to apply so strong propagation, since trading it for some
small amount of search will usually be quicker. For the
Sudoku-examples in Gecode, the simple ./examples/sudoku with options
-naive -icl val is the fastest. If this is the case also for Killer
Sudoku's, you will have to experiment with.


Cheers
Mikael

--
Mikael 'Zayenz' Lagerkvist, http://www.imit.kth.se/~zayenz/



From dooms at info.ucl.ac.be  Wed Mar 22 15:59:10 2006
From: dooms at info.ucl.ac.be (=?ISO-8859-1?Q?Gr=E9goire_Dooms?=)
Date: Wed, 22 Mar 2006 15:59:10 +0100
Subject: [gecode-users] help! propagators stop being called after one
	cloning.
Message-ID: <4421663E.2010804@info.ucl.ac.be>

Hello guys,
 
I have come back to the implementation of a variabe type for graph 
variables.
But I'm stuck on the following bug which I have some troubles hunting down.
 
I have a csp with one graph variable and two propagators subscribed on 
it (cpgraph-path.cc in contribs/graph/examples).
Their propagation condition is PC_GRAPH_ANY.

What happens is those two propagators are runned on the first invocation 
of Space::status in the DFS code.
But from then on the propagators are copied and deleted but propagate is 
then never called again. So the search engine just enumerates all 
subraphs of the initial upper bound.

I have been tracing the execution through the different Space methods 
but I don't have a clear idea of where to look for the cause of this bug.
I think it should have something to do with my VarTypeProcessor (never 
blame the kernel !) but comparing it to the set and int ones shows no 
significant difference.

Do you have any hints on which values/attributes I should inspect to see 
what happens ?
In particular what is the difference between the ActorLink and the 
ActorDeleteLink ?
Should I trace in Processor::process called from Space::process ?

I known the propagators are still there as they keep getting copied but 
I would like to know where the decision to reschedule them is /should be 
taken. And then where they should be (I guess in the pool then popped 
with pool_pop).

Any ideas ?
Cheers, Thanks,
--
Gregoire



From dooms at info.ucl.ac.be  Wed Mar 22 17:03:44 2006
From: dooms at info.ucl.ac.be (=?ISO-8859-1?Q?Gr=E9goire_Dooms?=)
Date: Wed, 22 Mar 2006 17:03:44 +0100
Subject: [gecode-users] help! propagators stop being called after one
	cloning.
In-Reply-To: <4421663E.2010804@info.ucl.ac.be>
References: <4421663E.2010804@info.ucl.ac.be>
Message-ID: <44217560.6060906@info.ucl.ac.be>

Oh ! I hate replying to myself :-)

I just found out I forgot to notify ! That's probably the reason.
I'll correct this right now.

Best,
--
Gr?goire




From jc at freesoft.be  Thu Mar 23 12:45:48 2006
From: jc at freesoft.be (Jean-Christophe Godart)
Date: Thu, 23 Mar 2006 12:45:48 +0100
Subject: [gecode-users] [Help] Killer sudoku model (newbie)
In-Reply-To: <003201c64da8$c642f840$acd4ed82@beule>
References: <003201c64da8$c642f840$acd4ed82@beule>
Message-ID: <87619e58371387e72b1c6d75f53627f1@freesoft.be>


Le 22-mars-06, ? 13:04, Christian Schulte a ?crit :

> Maybe you want to try whether Gecode compiled correctly at all. To do 
> that,
> you can build and run the tests:
> 	make test
> 	./test/test.exe (or ./test/test)
>
You're right, the tests stops here:
Int::Linear::Int::Dom::Eq::000: +++++
Int::Linear::Int::Dom::Eq::001: +++++
Int::Linear::Int::Dom::Eq::002: FAILURE
         Test:       Search
         Problem:    Wrong value in solution
         Assignment: {-2,2}
-
Options: -seed 1817486846  -test Int::Linear::Int::Dom::Eq::002

FYI
Mac OS X 10.4.5 (BSD like)
PowerPC G5 single processor @ 1.8 GHz
gcc 4.0
gecode 1.0.1

Compiled the usual way :
./configure
make
sudo make install

I did recompile it with make distclean before, no changes.

BTW make install will fail installing the sym linked libs on Mac OS X 
which doesn't support cp -a
I commented out the lines in the Makefile and manually sym linked the 
libs with ln -s

> Christian
>
> PS: I am not an author of your program, maybe I hold copyright to 
> parts but
> I am definitely not the author. The easiest is always to keep the 
> original
> copyright header and write your own on top.
>
Hmmm, I didn't want to hurt anyone. Sorry for that, I'll change the 
comments.

Made some more test on larger grids. It's working fine (except for the 
icl dom option).
As expected, the hardest ones take 10+ min to solve.

Thanks for your help,
-- 
Jean-Christophe Godart, Belgium. http://sudoku.apinc.org/




From tack at ps.uni-sb.de  Thu Mar 23 13:29:14 2006
From: tack at ps.uni-sb.de (Guido Tack)
Date: Thu, 23 Mar 2006 13:29:14 +0100
Subject: [gecode-users] Universal binary for MacOS X
Message-ID: <200603231329.15392.tack@ps.uni-sb.de>

Hi everyone.

I now have a login for a new Mac with an Intel processor, so I checked if the 
instructions on our web page for building "universal binaries" really work.
Everything looks ok - I haven't run the test suite yet, but the examples I 
tried worked perfectly well on both PowerPC and Intel-based hardware.

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Germany
http://www.ps.uni-sb.de/~tack



From schulte at imit.kth.se  Fri Mar 24 12:14:34 2006
From: schulte at imit.kth.se (Christian Schulte)
Date: Fri, 24 Mar 2006 12:14:34 +0100
Subject: [gecode-users] [Help] Killer sudoku model (newbie)
In-Reply-To: <87619e58371387e72b1c6d75f53627f1@freesoft.be>
Message-ID: <001301c64f34$216aaa10$acd4ed82@beule>

Thanks for the report, the test actually runs fine on my machine... This
looks as if we are talking a bug in your gcc (or some other part of the
software environment). Which version of gcc is it really? Could you send the
output of gcc -v?

Guido: could you try it on your mac?

Puzzled...
Christian

--
Christian Schulte, http://www.imit.kth.se/~schulte/ 

-----Original Message-----
From: Jean-Christophe Godart [mailto:jc at freesoft.be] 
Sent: Thursday, March 23, 2006 12:46 PM
To: Christian Schulte; <users at gecode.org> <users at gecode.org>
Subject: Re: [gecode-users] [Help] Killer sudoku model (newbie)



Le 22-mars-06, ? 13:04, Christian Schulte a ?crit :

> Maybe you want to try whether Gecode compiled correctly at all. To do
> that,
> you can build and run the tests:
> 	make test
> 	./test/test.exe (or ./test/test)
>
You're right, the tests stops here:
Int::Linear::Int::Dom::Eq::000: +++++
Int::Linear::Int::Dom::Eq::001: +++++
Int::Linear::Int::Dom::Eq::002: FAILURE
         Test:       Search
         Problem:    Wrong value in solution
         Assignment: {-2,2}
-
Options: -seed 1817486846  -test Int::Linear::Int::Dom::Eq::002

FYI
Mac OS X 10.4.5 (BSD like)
PowerPC G5 single processor @ 1.8 GHz
gcc 4.0
gecode 1.0.1

Compiled the usual way :
./configure
make
sudo make install

I did recompile it with make distclean before, no changes.

BTW make install will fail installing the sym linked libs on Mac OS X 
which doesn't support cp -a
I commented out the lines in the Makefile and manually sym linked the 
libs with ln -s

> Christian
>
> PS: I am not an author of your program, maybe I hold copyright to
> parts but
> I am definitely not the author. The easiest is always to keep the 
> original
> copyright header and write your own on top.
>
Hmmm, I didn't want to hurt anyone. Sorry for that, I'll change the 
comments.

Made some more test on larger grids. It's working fine (except for the 
icl dom option).
As expected, the hardest ones take 10+ min to solve.

Thanks for your help,
-- 
Jean-Christophe Godart, Belgium. http://sudoku.apinc.org/





From tack at ps.uni-sb.de  Fri Mar 24 13:44:39 2006
From: tack at ps.uni-sb.de (Guido Tack)
Date: Fri, 24 Mar 2006 13:44:39 +0100
Subject: [gecode-users] [Help] Killer sudoku model (newbie)
In-Reply-To: <001301c64f34$216aaa10$acd4ed82@beule>
References: <001301c64f34$216aaa10$acd4ed82@beule>
Message-ID: <200603241344.39992.tack@ps.uni-sb.de>

> Thanks for the report, the test actually runs fine on my machine... This
> looks as if we are talking a bug in your gcc (or some other part of the
> software environment). Which version of gcc is it really? Could you send
> the output of gcc -v?
>
> Guido: could you try it on your mac?

I can confirm the bug. I tried it on a G3 PowerPC, so it's not due to the G5 
(and that would have surprised me, as we don't generate special G5 code 
anyway).

gcc --version produces

powerpc-apple-darwin8-gcc-4.0.1 (GCC) 4.0.1 (Apple Computer, Inc. build 5250)
Copyright (C) 2005 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

I'll have a look.

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Germany
http://www.ps.uni-sb.de/~tack



From gualandi at elet.polimi.it  Fri Mar 24 15:03:12 2006
From: gualandi at elet.polimi.it (Stefano Gualandi)
Date: Fri, 24 Mar 2006 15:03:12 +0100
Subject: [gecode-users] [Help] Killer sudoku model (newbie)
In-Reply-To: <200603241344.39992.tack@ps.uni-sb.de>
References: <001301c64f34$216aaa10$acd4ed82@beule>
	<200603241344.39992.tack@ps.uni-sb.de>
Message-ID: <CB7E2041-1399-421B-9DAC-0C67C6D315E9@elet.polimi.it>

Hi,
I can confirm the bug too on my iBook G4 with:

gcc version 4.0.0 20041026 (Apple computer, Inc. build 4061)


If I run the test on a version compiled with --enable-debug I get:

Int::Element::Var::Dom::A: +++++
Int::Element::Var::Dom::B: +++++
Int::GCC::FixCard::Bnd::All::(lb,ub): ../release-1.0.1/int/gcc/ 
bnd.icc:250: failed assertion `x[mu[x.size() - 1]].max()>= ups- 
 >maxValue()'
Abort trap


hope it helps,
Stefano

PS Gecode is release 1.0.1



On Mar 24, 2006, at 1:44 PM, Guido Tack wrote:

>> Thanks for the report, the test actually runs fine on my  
>> machine... This
>> looks as if we are talking a bug in your gcc (or some other part  
>> of the
>> software environment). Which version of gcc is it really? Could  
>> you send
>> the output of gcc -v?
>>
>> Guido: could you try it on your mac?
>
> I can confirm the bug. I tried it on a G3 PowerPC, so it's not due  
> to the G5
> (and that would have surprised me, as we don't generate special G5  
> code
> anyway).
>
> gcc --version produces
>
> powerpc-apple-darwin8-gcc-4.0.1 (GCC) 4.0.1 (Apple Computer, Inc.  
> build 5250)
> Copyright (C) 2005 Free Software Foundation, Inc.
> This is free software; see the source for copying conditions.   
> There is NO
> warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR  
> PURPOSE.
>
> I'll have a look.
>
> Cheers,
> 	Guido
>
> -- 
> Guido Tack
> Programming Systems Lab, Saarland University, Germany
> http://www.ps.uni-sb.de/~tack
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users




From tack at ps.uni-sb.de  Fri Mar 24 18:11:32 2006
From: tack at ps.uni-sb.de (Guido Tack)
Date: Fri, 24 Mar 2006 18:11:32 +0100
Subject: [gecode-users] [Help] Killer sudoku model (newbie)
In-Reply-To: <CB7E2041-1399-421B-9DAC-0C67C6D315E9@elet.polimi.it>
References: <001301c64f34$216aaa10$acd4ed82@beule>
	<200603241344.39992.tack@ps.uni-sb.de>
	<CB7E2041-1399-421B-9DAC-0C67C6D315E9@elet.polimi.it>
Message-ID: <200603241811.32336.tack@ps.uni-sb.de>

Hi.

That was indeed a major bug in the domain consistent linear propagator. It 
just happened to work by accident on intel machines. Thanks a lot for 
pointing this out, Jean-Christophe!

Stefano Gualandi wrote:
> If I run the test on a version compiled with --enable-debug I get:
>
> Int::Element::Var::Dom::A: +++++
> Int::Element::Var::Dom::B: +++++
> Int::GCC::FixCard::Bnd::All::(lb,ub): ../release-1.0.1/int/gcc/
> bnd.icc:250: failed assertion `x[mu[x.size() - 1]].max()>= ups-
>
>  >maxValue()'

The assertion problem with a debug build is another story - I guess it's just 
a wrong assertion, we'll have a look at it.

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Germany
http://www.ps.uni-sb.de/~tack



From jeremie.vautard at laposte.net  Tue Mar 28 16:06:24 2006
From: jeremie.vautard at laposte.net (jeremie.vautard)
Date: Tue, 28 Mar 2006 16:06:24 +0200
Subject: [gecode-users] Space and variables cloning
Message-ID: <IWUCIO$AFB35F682BC7C75DC23CADD612295E8C@laposte.net>

Hi ! 

I created a subclass of Space in which I added two IntVars a
and b, which are instanciated in the default constructor. A
linear propagator is also defined. The constructor for cloning
updates these IntVars using the cloned space members, and the
copy method simply use this constructor, like in the examples.
Here is my code : 


class QSpace : public Space {

public :
  IntVar a;
  IntVar b;
  Int::IntView va;
  QSpace() {
    a=IntVar(this,1,4);
    b=IntVar(this,1,4);
    post(this,4*a == 1*b);    
    va=Int::IntView(a);
  }

  QSpace(bool share, QSpace& q) : Space(share,q) {
    a.update(this,share,q.a);
    b.update(this,share,q.b);
  };

  virtual QSpace* copy(bool share) {return new
QSpace(share,*this);}
};


But, if in my main method, I declare : 
QSpace* qs = new QSpace; 
QSpace* qs2 = new QSpace(false,*qs); ( or qs2=qs->copy(false) )
then, calling the status method of qs will perfectly work, but
I will get a segmentation fault if I try to get the qs2 status.
Removing the a.update and b.update lines in the constructor
for cloning of QSpace gets me rid of this segmentation fault,
but, of course, I can't  get the values of a and b at all, as
they have not been instanciated. 
What am I doing wrong ? 

The point of all this is to be able to have complete access on
the variables of the space in order to search, perform
branching, or add new constraints from outside. So, I need to
keep an access to the variables of the cloned space. Is it
possible ?

Jeremie Vautard

Acc?dez au courrier ?lectronique de La Poste : www.laposte.net ; 
3615 LAPOSTENET (0,34 ?/mn) ; t?l : 08 92 68 13 50 (0,34?/mn)






From schulte at imit.kth.se  Tue Mar 28 16:24:53 2006
From: schulte at imit.kth.se (Christian Schulte)
Date: Tue, 28 Mar 2006 16:24:53 +0200
Subject: [gecode-users] Space and variables cloning
In-Reply-To: <IWUCIO$AFB35F682BC7C75DC23CADD612295E8C@laposte.net>
Message-ID: <002601c65273$6164caf0$acd4ed82@beule>

Never use copy! or the constructor! Use the clone method instead (which, in
turn uses the copy method). Please read about clone (it is a member function
of Space). Also, you might want to check how the search engines are done.
They also use clone.

Christian

--
Christian Schulte, http://www.imit.kth.se/~schulte/ 

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of jeremie.vautard
Sent: Tuesday, March 28, 2006 4:06 PM
To: users
Subject: [gecode-users] Space and variables cloning


Hi ! 

I created a subclass of Space in which I added two IntVars a and b, which
are instanciated in the default constructor. A linear propagator is also
defined. The constructor for cloning updates these IntVars using the cloned
space members, and the copy method simply use this constructor, like in the
examples. Here is my code : 


class QSpace : public Space {

public :
  IntVar a;
  IntVar b;
  Int::IntView va;
  QSpace() {
    a=IntVar(this,1,4);
    b=IntVar(this,1,4);
    post(this,4*a == 1*b);    
    va=Int::IntView(a);
  }

  QSpace(bool share, QSpace& q) : Space(share,q) {
    a.update(this,share,q.a);
    b.update(this,share,q.b);
  };

  virtual QSpace* copy(bool share) {return new QSpace(share,*this);} };


But, if in my main method, I declare : 
QSpace* qs = new QSpace; 
QSpace* qs2 = new QSpace(false,*qs); ( or qs2=qs->copy(false) ) then,
calling the status method of qs will perfectly work, but I will get a
segmentation fault if I try to get the qs2 status. Removing the a.update and
b.update lines in the constructor for cloning of QSpace gets me rid of this
segmentation fault, but, of course, I can't  get the values of a and b at
all, as they have not been instanciated. 
What am I doing wrong ? 

The point of all this is to be able to have complete access on the variables
of the space in order to search, perform branching, or add new constraints
from outside. So, I need to keep an access to the variables of the cloned
space. Is it possible ?

Jeremie Vautard

Acc?dez au courrier ?lectronique de La Poste : www.laposte.net ; 
3615 LAPOSTENET (0,34 ?/mn) ; t?l : 08 92 68 13 50 (0,34?/mn)




_______________________________________________
Gecode users mailing list
users at gecode.org https://www.gecode.org/mailman/listinfo/gecode-users




From efkalog at gmail.com  Tue Mar 28 17:35:20 2006
From: efkalog at gmail.com (Efstratios Kalogirou)
Date: Tue, 28 Mar 2006 17:35:20 +0200
Subject: [gecode-users] Getting domain values after posting
Message-ID: <6d69d7de0603280735r58e15adbqb23f6401e376f107@mail.gmail.com>

Hi all,

I am trying to get the remaining (valid) values and the size of the domain
of a variable after posting some constraints (assuming that due to the
constraints some values inside the domain are no longer valid). It seems
that everything is fine when I don't use any BoolVar to wrap the contraint.
For example:

IntVarArray q(this,1,0,10);
post(this,q[0]==3);
cout<<"The size of the domain is now "<<q[0].size()<<endl;

In the above case the size of the domain is indeed 1 and the solution is
correctly the value 3.

But things are different when I try to wrap the equality constraint in a
BoolVar:

IntVarArray q(this,1,0,10);
BoolVar wrapper(this,0,1);
rel(this,q[0],IRT_EQ,3,wrapper,ICL_BND);
post(this, wrapper==1);
cout<<"The size of the domain is now "<<q[0].size()<<endl;

In the latter example I get again the corrent solution 3 but after posting
the constraint the size of the domain remains 11 and doesn't shrink to 1 as
I would expect.

Since I am solving problems using the second way I am wondering if there is
a way to shrink the domain of the variable after posting as showed in the
second example. Also how can I get all the valid values of the domain of a
variable after posting? I assume this can be done by using iterators but I
am not certain how exactly to relate the iterator with the IntVar or the
IntSet that represents the variable, so any enlightening on that, would be
highly appreciated.

Best,
Stratos Kalogirou
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20060328/0810fb34/attachment.htm>

From schulte at imit.kth.se  Tue Mar 28 20:09:29 2006
From: schulte at imit.kth.se (Christian Schulte)
Date: Tue, 28 Mar 2006 20:09:29 +0200
Subject: [gecode-users] Getting domain values after posting
In-Reply-To: <6d69d7de0603280735r58e15adbqb23f6401e376f107@mail.gmail.com>
Message-ID: <000701c65292$c28d2290$0401a8c0@tiny>

Hi,

propagation in Gecode is not automatic (some simple cases are done
immediately as you report, others are not). This is not a bug but an
essential feature (this is what enables batch recomputation). In order to
actually perform constraint propagation one has to invoke the
status(unsigned int&) member function of a space. Not only will that perform
constraint propagation but it also reports about the status of a space: is
it failed, solved, does it require branching. So in your case just add
something along the lines:
	unsigned int alt;
	(void) status(alt); // Discard status result

After that you will be able to observe the result of constraint propagation.

Christian


--
Christian Schulte, http://web.imit.kth.se/~schulte/



-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Efstratios Kalogirou
Sent: Tuesday, March 28, 2006 5:35 PM
To: users at gecode.org
Subject: [gecode-users] Getting domain values after posting


Hi all, 

I am trying to get the remaining (valid) values and the size of the domain
of a variable after posting some constraints (assuming that due to the
constraints some values inside the domain are no longer valid). It seems
that everything is fine when I don't use any BoolVar to wrap the contraint.
For example: 

IntVarArray q(this,1,0,10);
post(this,q[0]==3);
cout<<"The size of the domain is now "<<q[0].size()<<endl;

In the above case the size of the domain is indeed 1 and the solution is
correctly the value 3. 

But things are different when I try to wrap the equality constraint in a
BoolVar:

IntVarArray q(this,1,0,10);
BoolVar wrapper(this,0,1);
rel(this,q[0],IRT_EQ,3,wrapper,ICL_BND);
post(this, wrapper==1);
cout<<"The size of the domain is now "<<q[0].size()<<endl;

In the latter example I get again the corrent solution 3 but after posting
the constraint the size of the domain remains 11 and doesn't shrink to 1 as
I would expect. 

Since I am solving problems using the second way I am wondering if there is
a way to shrink the domain of the variable after posting as showed in the
second example. Also how can I get all the valid values of the domain of a
variable after posting? I assume this can be done by using iterators but I
am not certain how exactly to relate the iterator with the IntVar or the
IntSet that represents the variable, so any enlightening on that, would be
highly appreciated. 

Best, 
Stratos Kalogirou




From jeremie.vautard at laposte.net  Tue Mar 28 19:30:20 2006
From: jeremie.vautard at laposte.net (jeremie.vautard)
Date: Tue, 28 Mar 2006 19:30:20 +0200
Subject: [gecode-users] Space and variables cloning
Message-ID: <IWULYK$5544EA89C546D76A2FCFF63D3A6DE7C1@laposte.net>

OK. I saw this copy method, however I thought it existed only
for internal purposes. If I understand well, I only need to
write : 

qs2 = static_cast<QSpace> (qs->clone(false))

Am I right on this point ? (I tested it and it seems to work
so far, but I prefer asking for confirmation...)

Jeremie Vautard


> Never use copy! or the constructor! Use the clone method
instead (which, in
> turn uses the copy method). Please read about clone (it is a
member function
> of Space). Also, you might want to check how the search
engines are done.
> They also use clone.
> 
> Christian
> 
> --
> Christian Schulte, http://www.imit.kth.se/~schulte/ 
> 


Acc?dez au courrier ?lectronique de La Poste : www.laposte.net ; 
3615 LAPOSTENET (0,34 ?/mn) ; t?l : 08 92 68 13 50 (0,34?/mn)






From dooms at info.ucl.ac.be  Tue Mar 28 20:15:19 2006
From: dooms at info.ucl.ac.be (=?ISO-8859-1?Q?Gr=E9goire_Dooms?=)
Date: Tue, 28 Mar 2006 20:15:19 +0200
Subject: [gecode-users] Getting domain values after posting
In-Reply-To: <6d69d7de0603280735r58e15adbqb23f6401e376f107@mail.gmail.com>
References: <6d69d7de0603280735r58e15adbqb23f6401e376f107@mail.gmail.com>
Message-ID: <44297D37.1020407@info.ucl.ac.be>


>  Also how can I get all the valid values of the domain of a
> variable after posting? I assume this can be done by using iterators but I
> am not certain how exactly to relate the iterator with the IntVar or the
> IntSet that represents the variable, so any enlightening on that, would be
> highly appreciated.
>   
Look at IntVarRanges, it is an iterator over the ranges of the domain of 
your intvar.
http://www.gecode.org/gecode-doc-latest/classGecode_1_1IntVarRanges.html

You can use IntVarValues if you want an iterator over the values in the 
domain.

HTH,
--
Gr?goire Dooms




From tack at ps.uni-sb.de  Tue Mar 28 21:03:28 2006
From: tack at ps.uni-sb.de (Guido Tack)
Date: Tue, 28 Mar 2006 21:03:28 +0200 (CEST)
Subject: [gecode-users] Space and variables cloning
In-Reply-To: <IWULYK$5544EA89C546D76A2FCFF63D3A6DE7C1@laposte.net>
References: <IWULYK$5544EA89C546D76A2FCFF63D3A6DE7C1@laposte.net>
Message-ID: <33270.84.165.180.40.1143572608.squirrel@www.ps.uni-sb.de>

Hi.

> OK. I saw this copy method, however I thought it existed only
> for internal purposes. If I understand well, I only need to
> write :
>
> qs2 = static_cast<QSpace> (qs->clone(false))
>
> Am I right on this point ? (I tested it and it seems to work
> so far, but I prefer asking for confirmation...)

I guess it might have to be static_cast<QSpace *> (qs->clone(false)), but
apart from that that's exactly how it works. You may want to call
clone(true) (or just clone()) - the argument "false" means that shareable
datastructures are not shared, which is mainly needed in a multi-threaded
environment.

Cheers,
   Guido

-- 
Guido Tack
http://www.ps.uni-sb.de/~tack





From schulte at imit.kth.se  Tue Mar 28 21:32:55 2006
From: schulte at imit.kth.se (Christian Schulte)
Date: Tue, 28 Mar 2006 21:32:55 +0200
Subject: [gecode-users] Space and variables cloning
In-Reply-To: <IWULYK$5544EA89C546D76A2FCFF63D3A6DE7C1@laposte.net>
Message-ID: <000001c6529e$6a4b7bc0$0401a8c0@tiny>

Yes, indeed!

Christian

--
Christian Schulte, http://web.imit.kth.se/~schulte/




-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of jeremie.vautard
Sent: Tuesday, March 28, 2006 7:30 PM
To: users
Subject: RE: [gecode-users] Space and variables cloning


OK. I saw this copy method, however I thought it existed only for internal
purposes. If I understand well, I only need to write : 

qs2 = static_cast<QSpace> (qs->clone(false))

Am I right on this point ? (I tested it and it seems to work
so far, but I prefer asking for confirmation...)

Jeremie Vautard


> Never use copy! or the constructor! Use the clone method
instead (which, in
> turn uses the copy method). Please read about clone (it is a
member function
> of Space). Also, you might want to check how the search
engines are done.
> They also use clone.
> 
> Christian
> 
> --
> Christian Schulte, http://www.imit.kth.se/~schulte/
> 


Acc?dez au courrier ?lectronique de La Poste : www.laposte.net ; 
3615 LAPOSTENET (0,34 ?/mn) ; t?l : 08 92 68 13 50 (0,34?/mn)




_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From efkalog at gmail.com  Wed Mar 29 16:17:09 2006
From: efkalog at gmail.com (Efstratios Kalogirou)
Date: Wed, 29 Mar 2006 16:17:09 +0200
Subject: [gecode-users] Getting domain values after posting
In-Reply-To: <000701c65292$c28d2290$0401a8c0@tiny>
References: <6d69d7de0603280735r58e15adbqb23f6401e376f107@mail.gmail.com>
	<000701c65292$c28d2290$0401a8c0@tiny>
Message-ID: <6d69d7de0603290617xb953c6uecba1aeb442253df@mail.gmail.com>

Hi again,

I have used the status function to perform constraint propagation. After the
propagation I retrieve the values of the space to see if they are
consistent. This works fine with many constraints (mostly simple
cases) however there are other cases where the space is not reduced to the
consistent values only. I am working on large scale disjunctions of
conjunctions and I am interested in getting only the consistent values after
the propagation. A very simplified example is the following:
Three variables x1=[0..3], x2=[0..5], x3=[0..10] and a single constraint

(x1==0) && (x2==3) && (x3==7)  ||
(x1==0) && (x2==5) && (x3==9)

The constraint represents allowed values, so the above is read as:
x1 should be 0 and x2 should be 3 and x3 should be 7 or x1 should be 0 and
x2 should be 5 and x3 should be 9.

I would like to get the consistent values of the space after propagation,
which are for the first variable, the value 0, for the second variable the
values 3 and 5 and for the third variable the values 7 and 9. The value 1
for example belongs to the space of the first variable but it's inconsistent
because it doesn't satisfy the constraint.

I have written the following code for the above problem (q is an IntVarArray
of size 3):

    IntVar x1(this,0,3);
    IntVar x2(this,0,5);
    IntVar x3(this,0,10);
    q[0]=x1;
    q[1]=x2;
    q[2]=x3;
    int values1[3]={0,3,7};
    int values2[3]={0,5,9};

    BoolVarArgs firstConjunction(3);      //stores the BoolVar representing
each of the first 3 equalities
    BoolVarArgs secondConjunction(3);//stores the BoolVar representing each
of the last 3 equalities

    for(int i=0;i<3;i++)
      {
        //wraps each equality of the first conjunction in a single BoolVar
        BoolVar temporar(this,0,1);
        rel(this,q[i],IRT_EQ,values1[i],temporar);
        firstConjunction[i]=temporar;

        //wraps each equality of the second conjunction in a single BoolVar
        BoolVar temporar2(this,0,1);
        rel(this,q[i],IRT_EQ,values2[i],temporar2);
        secondConjunction[i]=temporar2;
      }
    BoolVar result1(this,0,1);
    BoolVar result2(this,0,1);
    BoolVar disjunction(this,0,1);

    bool_and(this,firstConjunction,result1);
    bool_and(this,secondConjunction,result2);

    bool_or(this,result1,result2,disjunction);

    post(this,disjunction==1);


    //performing propagation and getting the status report
    unsigned int alt;
    (void) status(alt);
    IntVarValues ranger(q[0]);
    while(ranger())
      {
        cout<<"The value is "<<ranger.val()<<endl;
        ++ranger;
      }


The status report says that the problem is solved and gives me the solution
0,3,7 but the retrival of the values of the space for the first variable
still contains the incosistent values 1,2,3. If I didn't have the
disjunction and I had only the constraint:
(x1==0) && (x2==3) && (x3==7)
the space would be successfully reduced to the consistent value 0 only.


I am assuming that Gecode depending on the nature of the constraint
sometimes reduces the space by removing inconsistent values, and other times
it doesn't. If that's the case I am wondering if there is a way to reduce
the space without me manually assigning a value to each variable,
then performing propagation, getting the report and removing that value from
the space of the variable if the propagation has failed.

Best,

Stratos

On 3/28/06, Christian Schulte <schulte at imit.kth.se> wrote:
>
> Hi,
>
> propagation in Gecode is not automatic (some simple cases are done
> immediately as you report, others are not). This is not a bug but an
> essential feature (this is what enables batch recomputation). In order to
> actually perform constraint propagation one has to invoke the
> status(unsigned int&) member function of a space. Not only will that
> perform
> constraint propagation but it also reports about the status of a space: is
> it failed, solved, does it require branching. So in your case just add
> something along the lines:
>        unsigned int alt;
>        (void) status(alt); // Discard status result
>
> After that you will be able to observe the result of constraint
> propagation.
>
> Christian
>
>
> --
> Christian Schulte, http://web.imit.kth.se/~schulte/
>
>
>
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Efstratios Kalogirou
> Sent: Tuesday, March 28, 2006 5:35 PM
> To: users at gecode.org
> Subject: [gecode-users] Getting domain values after posting
>
>
> Hi all,
>
> I am trying to get the remaining (valid) values and the size of the domain
> of a variable after posting some constraints (assuming that due to the
> constraints some values inside the domain are no longer valid). It seems
> that everything is fine when I don't use any BoolVar to wrap the
> contraint.
> For example:
>
> IntVarArray q(this,1,0,10);
> post(this,q[0]==3);
> cout<<"The size of the domain is now "<<q[0].size()<<endl;
>
> In the above case the size of the domain is indeed 1 and the solution is
> correctly the value 3.
>
> But things are different when I try to wrap the equality constraint in a
> BoolVar:
>
> IntVarArray q(this,1,0,10);
> BoolVar wrapper(this,0,1);
> rel(this,q[0],IRT_EQ,3,wrapper,ICL_BND);
> post(this, wrapper==1);
> cout<<"The size of the domain is now "<<q[0].size()<<endl;
>
> In the latter example I get again the corrent solution 3 but after posting
> the constraint the size of the domain remains 11 and doesn't shrink to 1
> as
> I would expect.
>
> Since I am solving problems using the second way I am wondering if there
> is
> a way to shrink the domain of the variable after posting as showed in the
> second example. Also how can I get all the valid values of the domain of a
> variable after posting? I assume this can be done by using iterators but I
> am not certain how exactly to relate the iterator with the IntVar or the
> IntSet that represents the variable, so any enlightening on that, would be
> highly appreciated.
>
> Best,
> Stratos Kalogirou
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20060329/e78d6d5d/attachment.htm>

From tack at ps.uni-sb.de  Wed Mar 29 16:38:33 2006
From: tack at ps.uni-sb.de (Guido Tack)
Date: Wed, 29 Mar 2006 15:38:33 +0100
Subject: [gecode-users] Getting domain values after posting
In-Reply-To: <6d69d7de0603290617xb953c6uecba1aeb442253df@mail.gmail.com>
References: <6d69d7de0603280735r58e15adbqb23f6401e376f107@mail.gmail.com>
	<000701c65292$c28d2290$0401a8c0@tiny>
	<6d69d7de0603290617xb953c6uecba1aeb442253df@mail.gmail.com>
Message-ID: <200603291638.33802.tack@ps.uni-sb.de>

Hi.

> I would like to get the consistent values of the space after propagation,
> which are for the first variable, the value 0, for the second variable the
> values 3 and 5 and for the third variable the values 7 and 9. The value 1
> for example belongs to the space of the first variable but it's
> inconsistent because it doesn't satisfy the constraint.
> [...]
> I am assuming that Gecode depending on the nature of the constraint
> sometimes reduces the space by removing inconsistent values, and other
> times it doesn't. If that's the case I am wondering if there is a way to
> reduce the space without me manually assigning a value to each variable,
> then performing propagation, getting the report and removing that value
> from the space of the variable if the propagation has failed.

You are experiencing that constraint propagation is not a complete inference 
method.

The only requirement for propagators is that they are "sound", i.e. that they 
don't remove solutions and that they can tell whether an /assignment/ is a 
solution. Propagators, in particular Boolean combinations of reified 
propagators, are not required to be complete.

In your example, the reified constraints that you use
( q[i]==values[i] <=> firstConjunction[i]) can only propagate if q[i] is 
already determined to be values[i].

In order to solve problems with incomplete propagation, you need branching and 
search. You can use the predefined branching strategies and search engines in 
Gecode to determine all possible solutions of your problem.

If you want to know more about the strength of different propagators, you 
could read about notions like arc consistency and generalized arc consistency 
(also called domain consistency).

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Germany
http://www.ps.uni-sb.de/~tack



From jaerma at gmail.com  Thu Mar 30 21:48:34 2006
From: jaerma at gmail.com (Jairo Maldonado)
Date: Thu, 30 Mar 2006 14:48:34 -0500
Subject: [gecode-users] Inclusion check for SetVar
Message-ID: <2fe464a90603301148h2eca4498lc75b0d4f383f4724@mail.gmail.com>

I am working in the review of  equal propagator for SetVar, and  I want to
know if in gecode, the propagator checks if lower bounds are a subsets of
the upper bounds after doing the union between the lower bounds and the
intersetion of the upper bounds.

If it does, I would like to know  where is the code, or else I would like to
know why?

I'm looking it
http://www.gecode.org/gecode-doc-latest/set_2rel_2eq_8icc-source.html
in line number 54.

thanks

--
Jairo Ernesto Maldonado G?mez
Ing de Sistemas y Computaci?n
Asistente de Investigaci?n Grupo-Avispa
Universidad del Valle
Cali-Colombia
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20060330/f562278a/attachment.htm>

From tack at ps.uni-sb.de  Fri Mar 31 09:06:32 2006
From: tack at ps.uni-sb.de (Guido Tack)
Date: Fri, 31 Mar 2006 08:06:32 +0100
Subject: [gecode-users] Inclusion check for SetVar
In-Reply-To: <2fe464a90603301148h2eca4498lc75b0d4f383f4724@mail.gmail.com>
References: <2fe464a90603301148h2eca4498lc75b0d4f383f4724@mail.gmail.com>
Message-ID: <200603310906.32843.tack@ps.uni-sb.de>

Hi!

> I am working in the review of  equal propagator for SetVar, and  I want to
> know if in gecode, the propagator checks if lower bounds are a subsets of
> the upper bounds after doing the union between the lower bounds and the
> intersetion of the upper bounds.
>
> If it does, I would like to know  where is the code, or else I would like
> to know why?

I am not sure I really got your question. The propagator computes something 
like

lbunion = lowerbound(x0) union lowerbound(x1)
lowerbound(x0) = lbunion
lowerbound(x1) = lbunion

ubinter = upperbound(x0) intersected with upperbound(x1)
upperbound(x0) = ubinter
upperbound(x1) = ubinter

If your question is whether after these steps, it is tested that 
lowerbound(x0) subset upperbound(x0) and the same for x1, then yes, that's 
tested. It is hidden behind the "tell" operation 
(e.g. x0.includeI(home, lbuc)). A little deeper in the code of the SetVarImp 
class, there is a function processGlbChange which checks (using the function 
boundsConsistent()) whether the bounds are still consistent. If this fails, 
includeI returns ME_SET_FAILED, which the macro GECODE_ME_CHECK checks and 
translates to ES_FAILED.

So, currently we indeed need to check that the lower bound is a subset of the 
upper bound. We are in the process of developing more efficient data 
structures that can signal directly when something is removed from the upper 
bound that belongs to the lower bound, or something is added to the lower 
bound that is no longer in the upper bound. Stay tuned ;-)

Cheers,
	Guido

-- 
Guido Tack
Programming Systems Lab, Saarland University, Germany
http://www.ps.uni-sb.de/~tack



From schulte at imit.kth.se  Fri Mar 31 11:39:01 2006
From: schulte at imit.kth.se (Christian Schulte)
Date: Fri, 31 Mar 2006 11:39:01 +0200
Subject: [gecode-users] CP 2006: Second Call for Papers
Message-ID: <002c01c654a6$f177c360$acd4ed82@beule>

[sorry for multiple copies]

                         Call for Papers

                            CP 2006
              Twelfth International Conference on
       Principles and Practice of Constraint Programming


                    September 25 - 29, 2006
                         Nantes, France

            http://www.sciences.univ-nantes.fr/cp06/


The CP conference is the annual international conference on constraint
programming and related areas. It is concerned with all aspects of
computing with constraints, including: theory, algorithms,
applications, environments, languages, models and systems. CP 2006
includes a technical programme, where presentations of theoretical and
application papers, as well as invited talks, tutorials, posters and
system demos aim at describing the best results and techniques in the
state-of-the-art of constraint programming. Moreover, CP 2006
continues the tradition of the CP doctoral programme, in which PhD
students can present their work, listen to tutorials on career and
ethical issues, and discuss their work with senior researchers via a
mentoring scheme. Finally, there will also be a number of workshops,
where researchers will be able to meet in an informal setting and
discuss their most recent ideas with their peers.

Papers are solicited from all disciplines concerned with constraints
and any application domain using constraints. Example topics include
problem modelling, problem solving, efficiency and usability. Papers
which report on successful applications of constraint technology are
also solicited.

Submitted papers must be original and must not be simultaneously
submitted for publication in a journal or another conference. Authors
are required to prepare their papers by following the Springer
instructions found at: http://www.springer.de/comp/lncs/authors.html.

A page limit of 15 will be strictly enforced. The proceedings will be
published by Springer Verlag, in the Lecture Notes in Computer Science
series.


IMPORTANT DATES

  * April 21, 2006: Deadline for submissions
  *  June 14, 2006: Notifications
  *  July  5, 2006: Camera-ready copy


ORGANIZATION

Conference Chairs
Fr?d?ric Benhamou, U of Nantes, France
Narendra Jussien, EMN, France

Program Chair
Fr?d?ric Benhamou, U of Nantes, France

Doctoral Program Chairs
Zeynep Kiziltan, U of Bologna, Italy
Brahim Hnich, 4C, Ireland

Workshop/Tutorial Chair
Barry O'Sullivan, 4C, Ireland

Poster/Demo Chair
Laurent Michel, U of Connecticut, USA

Publicity Chairs
Christian Schulte, KTH, Sweden
Mikael Lagerkvist, KTH, Sweden


Program Committee

Pedro Barahona, New U of Lisbon, Portugal
Nicolas Beldiceanu, EMN, France
Christian Bessiere, LIRMM-CNRS, France
David Cohen, Royal Holloway, UK
Andrew Davenport, IBM, USA
Boi Faltings, EPFL, Switzerland
Carla Gomes, Cornell, USA
Laurent Granvilliers, U Nantes, France
John Hooker, CMU, USA
Peter Jonsson, Link?ping U, Sweden
Irit Katriel, U of Aarhus, Denmark
Zeynep Kiziltan, U of Bologna, Italy
Luc Jaulin, ENSIETA Brest, France
Jimmy Lee, CUHK, Hong Kong
Michael Maher, NICTA, Australia
Pedro Meseguer, IIIA-CSIC, Spain
Laurent Michel, U of Connecticut, USA
Michela Milano, U of Bologna, Italy
Barry O'Sullivan, 4C, Ireland
Gilles Pesant, Polytech Montr?al, Canada
Jean-Fran?ois Puget, ILOG, France
Jean-Charles R?gin, ILOG, France
Francesca Rossi, U of Padova, Italy
Louis-Martin Rousseau, Polytech Montr?al, Canada
Michel Rueher, U of Nice, France
Thomas Schiex, INRA Toulouse, France
Christian Schulte, KTH, Sweden
Helmut Simonis, CrossCore Optimization, UK
Barbara Smith, 4C, Ireland
Peter Stuckey, U of Melbourne, Australia
Peter van Beek, U Waterloo, Canada
Pascal Van Hentenryck, Brown U, USA
Mark Wallace, Monash U, Australia
Toby Walsh, NICTA and UNSW, Australia
Roland Yap, NUS, Singapore
Makoto Yokoo, Kyushu U, Japan
Weixiong Zhang, Washington U, USA





From efkalog at gmail.com  Fri Mar 31 13:49:40 2006
From: efkalog at gmail.com (Efstratios Kalogirou)
Date: Fri, 31 Mar 2006 13:49:40 +0200
Subject: [gecode-users] Removing constraints in running time
Message-ID: <6d69d7de0603310349u24bcefdap593562bd233249e5@mail.gmail.com>

Hi all,

I am trying to undo the effect of posting a constraint in running time. The
idea is to let the user redefine new constraints from the command line
[removing the old ones] and check the status of the problem while the
variables of my Space and their domain remain the same.

I am trying to do something like:
    //several postings here
    post(this,q[0]==q[1]);
    unsigned int alt;
    status(alt);
   //Remove the old constraints
   flush();
   //Create new constraints here

but it doesn't work.I was hoping to avoid creating a clone or copy of the
old Space, since it's the same Space with new constraints and the old ones
removed. Any ideas?

Best,
Stratos Kalogirou
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20060331/1453a36a/attachment.htm>

From schulte at imit.kth.se  Fri Mar 31 14:08:50 2006
From: schulte at imit.kth.se (Christian Schulte)
Date: Fri, 31 Mar 2006 14:08:50 +0200
Subject: [gecode-users] Removing constraints in running time
In-Reply-To: <6d69d7de0603310349u24bcefdap593562bd233249e5@mail.gmail.com>
Message-ID: <004801c654bb$df4d23f0$acd4ed82@beule>

Hi,

the sad news is that you can't do that at all! The only thing you can do is
to recreate the space without the constraints.

Constraint removal is difficult as it entails not only the removal of the
constraints but also undo the effects of propagation. Gecode does not
support this.

flush() is meant to flush propagation caches, it has no effect on the space
but on the internal management of some propagators.

Cheers
Christian


--
Christian Schulte, http://www.imit.kth.se/~schulte/ 
-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Efstratios Kalogirou
Sent: Friday, March 31, 2006 1:50 PM
To: users at gecode.org
Subject: [gecode-users] Removing constraints in running time


Hi all, 

I am trying to undo the effect of posting a constraint in running time. The
idea is to let the user redefine new constraints from the command line
[removing the old ones] and check the status of the problem while the
variables of my Space and their domain remain the same. 

I am trying to do something like:
    //several postings here
    post(this,q[0]==q[1]);
    unsigned int alt;
    status(alt);
   //Remove the old constraints 
   flush();
   //Create new constraints here

but it doesn't work.I was hoping to avoid creating a clone or copy of the
old Space, since it's the same Space with new constraints and the old ones
removed. Any ideas?

Best,
Stratos Kalogirou




From dooms at info.ucl.ac.be  Fri Mar 31 16:34:39 2006
From: dooms at info.ucl.ac.be (=?ISO-8859-1?Q?Gr=E9goire_Dooms?=)
Date: Fri, 31 Mar 2006 16:34:39 +0200
Subject: [gecode-users] Peak memory and recomputation
Message-ID: <442D3DFF.4090403@info.ucl.ac.be>

Hello,

I have observed the following effect which seems counter-intuitive to 
me: Using less recomputation can save memory.
Can you help me figure out what happens ?

The attached file models this simple problem using sets: generate all 
subgraphs of a complete labeled digraph (with loops).
The following runs are done with increasing fixed recomputation 
distance, very high (1000) adaptive distance and size 3.
The depth of the search tree  is from 9 to 12 (depending on the solutions).

I observe that with c_d = 4, the peak memory is much lower than with 3 
and 5:

When running it with -c_d 3, I get:
Summary
        runtime:      10
        solutions:    567
        propagations: 2449
        failures:     0
        clones:       566
        commits:      1548
        peak memory:  9 KB

With -c_d 4 :
Summary
        runtime:      0
        solutions:    567
        propagations: 3167
        failures:     0
        clones:       566
        commits:      1848
        peak memory:  1 KB

With -c_d 5 :
Summary
        runtime:      10
        solutions:    567
        propagations: 3648
        failures:     0
        clones:       566
        commits:      1935
        peak memory:  8 KB


Best,
--
Gr?goire Dooms


-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.cc
Type: text/x-c++src
Size: 2076 bytes
Desc: not available
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20060331/ba9b5cac/attachment.cc>

From efkalog at gmail.com  Fri Mar 31 18:50:55 2006
From: efkalog at gmail.com (Efstratios Kalogirou)
Date: Fri, 31 Mar 2006 18:50:55 +0200
Subject: [gecode-users] Removing constraints in running time
In-Reply-To: <004801c654bb$df4d23f0$acd4ed82@beule>
References: <6d69d7de0603310349u24bcefdap593562bd233249e5@mail.gmail.com>
	<004801c654bb$df4d23f0$acd4ed82@beule>
Message-ID: <6d69d7de0603310850udf20d62ie90566bd364b7031@mail.gmail.com>

At least it's good to know that it can't be done. Thanks

Stratos


On 3/31/06, Christian Schulte <schulte at imit.kth.se> wrote:
>
> Hi,
>
> the sad news is that you can't do that at all! The only thing you can do
> is
> to recreate the space without the constraints.
>
> Constraint removal is difficult as it entails not only the removal of the
> constraints but also undo the effects of propagation. Gecode does not
> support this.
>
> flush() is meant to flush propagation caches, it has no effect on the
> space
> but on the internal management of some propagators.
>
> Cheers
> Christian
>
>
> --
> Christian Schulte, http://www.imit.kth.se/~schulte/
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Efstratios Kalogirou
> Sent: Friday, March 31, 2006 1:50 PM
> To: users at gecode.org
> Subject: [gecode-users] Removing constraints in running time
>
>
> Hi all,
>
> I am trying to undo the effect of posting a constraint in running time.
> The
> idea is to let the user redefine new constraints from the command line
> [removing the old ones] and check the status of the problem while the
> variables of my Space and their domain remain the same.
>
> I am trying to do something like:
>    //several postings here
>    post(this,q[0]==q[1]);
>    unsigned int alt;
>    status(alt);
>   //Remove the old constraints
>   flush();
>   //Create new constraints here
>
> but it doesn't work.I was hoping to avoid creating a clone or copy of the
> old Space, since it's the same Space with new constraints and the old ones
> removed. Any ideas?
>
> Best,
> Stratos Kalogirou
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20060331/92707850/attachment.htm>

From schulte at imit.kth.se  Fri Mar 31 21:05:44 2006
From: schulte at imit.kth.se (Christian Schulte)
Date: Fri, 31 Mar 2006 21:05:44 +0200
Subject: [gecode-users] Peak memory and recomputation
In-Reply-To: <442D3DFF.4090403@info.ucl.ac.be>
Message-ID: <000701c654f6$1d2638d0$0401a8c0@tiny>

What values did you use for a_d: adaptive recomputation might kick in an use
some memory for intermediate copies? For a discussion of that see my PhD
thesis ;-)

All the best
Christian

--
Christian Schulte, http://web.imit.kth.se/~schulte/




-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Gr?goire Dooms
Sent: Friday, March 31, 2006 4:35 PM
To: users at gecode.org
Subject: [gecode-users] Peak memory and recomputation


Hello,

I have observed the following effect which seems counter-intuitive to 
me: Using less recomputation can save memory.
Can you help me figure out what happens ?

The attached file models this simple problem using sets: generate all 
subgraphs of a complete labeled digraph (with loops).
The following runs are done with increasing fixed recomputation 
distance, very high (1000) adaptive distance and size 3.
The depth of the search tree  is from 9 to 12 (depending on the solutions).

I observe that with c_d = 4, the peak memory is much lower than with 3 
and 5:

When running it with -c_d 3, I get:
Summary
        runtime:      10
        solutions:    567
        propagations: 2449
        failures:     0
        clones:       566
        commits:      1548
        peak memory:  9 KB

With -c_d 4 :
Summary
        runtime:      0
        solutions:    567
        propagations: 3167
        failures:     0
        clones:       566
        commits:      1848
        peak memory:  1 KB

With -c_d 5 :
Summary
        runtime:      10
        solutions:    567
        propagations: 3648
        failures:     0
        clones:       566
        commits:      1935
        peak memory:  8 KB


Best,
--
Gr?goire Dooms






