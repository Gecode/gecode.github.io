From malcolmr at cse.unsw.edu.au  Mon Jun  2 08:10:10 2008
From: malcolmr at cse.unsw.edu.au (Malcolm Ryan)
Date: Mon, 2 Jun 2008 16:10:10 +1000
Subject: [gecode-users] Clockwise constraint
Message-ID: <E5B4393F-F2BA-4A49-A0E2-1583D0DE428B@cse.unsw.edu.au>

I want to make a constraint which represents the order of three values  
around a ring.

Eg: if we have a,b,c \in {1,2,3,4} then I want to represent the  
constraint:

clockwise(a,b,c) == (a < b < c) or (b < c < a) or (c < a < b)

I can construct this directly using BExprs, but the use of 'or' means  
that it doesn't propagate very well. Eg:

         BExpr beLessAB = new BExpr(a, IntRelType.IRT_LE, b);
         BExpr beLessBC = new BExpr(b, IntRelType.IRT_LE, c);
         BExpr beLessCA = new BExpr(c, IntRelType.IRT_LE, a);

         BExpr beABC = new BExpr(beLessAB).and(beLessBC);
         BExpr beBCA = new BExpr(beLessBC).and(beLessCA);
         BExpr beCAB = new BExpr(beLessCA).and(beLessAB);

         BExpr clockwise = beABC.or(beBCA).or(beCAB);

         Gecode.post(test, clockwise);
         Gecode.rel(test, test.a, IntRelType.IRT_NE, 2);
         Gecode.rel(test, test.a, IntRelType.IRT_NE, 3);
         Gecode.rel(test, test.b, IntRelType.IRT_NE, 1);
         Gecode.rel(test, test.b, IntRelType.IRT_NE, 4);
         Gecode.rel(test, test.c, IntRelType.IRT_NE, 1);
         Gecode.rel(test, test.c, IntRelType.IRT_NE, 4);

Will give a = {1,4}, b = [2..3], c = [2..3] when it should be able to  
deduce that b = 2, c = 3. Is there any other way to represent this so  
that the propagation works better?

Malcolm




From malcolmr at cse.unsw.edu.au  Mon Jun  2 09:12:18 2008
From: malcolmr at cse.unsw.edu.au (Malcolm Ryan)
Date: Mon, 2 Jun 2008 17:12:18 +1000
Subject: [gecode-users] Clockwise constraint
In-Reply-To: <E5B4393F-F2BA-4A49-A0E2-1583D0DE428B@cse.unsw.edu.au>
References: <E5B4393F-F2BA-4A49-A0E2-1583D0DE428B@cse.unsw.edu.au>
Message-ID: <355C33DF-FEFE-45A4-9579-57156A48B677@cse.unsw.edu.au>

What I need is a reified version of the pairwise rel(). Then I could  
say:

a < c --> a < b < c
b < a --> b < c < a
c < b --> c < a < b

Since there is no value of 'a' that satisfies c < a < b, it would have  
to deduce that b < c.

Representing this as (c < a) and (a < b) is not good enough, as there  
are possible values of 'a' to satisfy each of the inequalities  
individually, just not both together.

On 02/06/2008, at 4:10 PM, Malcolm Ryan wrote:

> I want to make a constraint which represents the order of three values
> around a ring.
>
> Eg: if we have a,b,c \in {1,2,3,4} then I want to represent the
> constraint:
>
> clockwise(a,b,c) == (a < b < c) or (b < c < a) or (c < a < b)
>
> I can construct this directly using BExprs, but the use of 'or' means
> that it doesn't propagate very well. Eg:
>
>         BExpr beLessAB = new BExpr(a, IntRelType.IRT_LE, b);
>         BExpr beLessBC = new BExpr(b, IntRelType.IRT_LE, c);
>         BExpr beLessCA = new BExpr(c, IntRelType.IRT_LE, a);
>
>         BExpr beABC = new BExpr(beLessAB).and(beLessBC);
>         BExpr beBCA = new BExpr(beLessBC).and(beLessCA);
>         BExpr beCAB = new BExpr(beLessCA).and(beLessAB);
>
>         BExpr clockwise = beABC.or(beBCA).or(beCAB);
>
>         Gecode.post(test, clockwise);
>         Gecode.rel(test, test.a, IntRelType.IRT_NE, 2);
>         Gecode.rel(test, test.a, IntRelType.IRT_NE, 3);
>         Gecode.rel(test, test.b, IntRelType.IRT_NE, 1);
>         Gecode.rel(test, test.b, IntRelType.IRT_NE, 4);
>         Gecode.rel(test, test.c, IntRelType.IRT_NE, 1);
>         Gecode.rel(test, test.c, IntRelType.IRT_NE, 4);
>
> Will give a = {1,4}, b = [2..3], c = [2..3] when it should be able to
> deduce that b = 2, c = 3. Is there any other way to represent this so
> that the propagation works better?
>
> Malcolm
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users




From tack at ps.uni-sb.de  Mon Jun  2 09:15:02 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Mon, 2 Jun 2008 09:15:02 +0200
Subject: [gecode-users] Clockwise constraint
In-Reply-To: <E5B4393F-F2BA-4A49-A0E2-1583D0DE428B@cse.unsw.edu.au>
References: <E5B4393F-F2BA-4A49-A0E2-1583D0DE428B@cse.unsw.edu.au>
Message-ID: <BEA6218E-8118-415C-9AE1-7D6169C2E11A@ps.uni-sb.de>

Malcolm Ryan wrote:

> I want to make a constraint which represents the order of three values
> around a ring.
>
> Eg: if we have a,b,c \in {1,2,3,4} then I want to represent the
> constraint:
>
> clockwise(a,b,c) == (a < b < c) or (b < c < a) or (c < a < b)
>
> I can construct this directly using BExprs, but the use of 'or' means
> that it doesn't propagate very well. Eg:
> [...]
> Will give a = {1,4}, b = [2..3], c = [2..3] when it should be able to
> deduce that b = 2, c = 3. Is there any other way to represent this so
> that the propagation works better?

You can't get the full pruning directly (you'd need something like  
constructive disjunction for that).  Something you might want to add  
is a distinct constraint over all variables (although it wouldn't do  
the pruning in your example, it would add some pruning in other  
cases).  Or, if the domains are always dense (at most one value more  
than variables, that is), you could use a+1=b instead of a<b.  You  
could also encode the constraint into a TupleSet and use extensional,  
which would probably result in a really big table but give you domain  
consistency.

Cheers,
	Guido

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080602/183d9bb3/attachment.htm>

From tack at ps.uni-sb.de  Mon Jun  2 09:18:42 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Mon, 2 Jun 2008 09:18:42 +0200
Subject: [gecode-users] Clockwise constraint
In-Reply-To: <355C33DF-FEFE-45A4-9579-57156A48B677@cse.unsw.edu.au>
References: <E5B4393F-F2BA-4A49-A0E2-1583D0DE428B@cse.unsw.edu.au>
	<355C33DF-FEFE-45A4-9579-57156A48B677@cse.unsw.edu.au>
Message-ID: <71649F4E-EC84-4ED8-A721-436B71910243@ps.uni-sb.de>

Malcolm Ryan wrote:

> What I need is a reified version of the pairwise rel(). Then I could
> say:
>
> a < c --> a < b < c
> b < a --> b < c < a
> c < b --> c < a < b
>
> Since there is no value of 'a' that satisfies c < a < b, it would have
> to deduce that b < c.
>
> Representing this as (c < a) and (a < b) is not good enough, as there
> are possible values of 'a' to satisfy each of the inequalities
> individually, just not both together.

Oh, I somehow didn't see that it's always ternary!  In that case you  
might really want to try the extensional constraint.  Just implement a  
generator that lists all allowed tuples.

Cheers,
	Guido





From malcolmr at cse.unsw.edu.au  Mon Jun  2 09:28:38 2008
From: malcolmr at cse.unsw.edu.au (Malcolm Ryan)
Date: Mon, 2 Jun 2008 17:28:38 +1000
Subject: [gecode-users] Clockwise constraint
In-Reply-To: <71649F4E-EC84-4ED8-A721-436B71910243@ps.uni-sb.de>
References: <E5B4393F-F2BA-4A49-A0E2-1583D0DE428B@cse.unsw.edu.au>
	<355C33DF-FEFE-45A4-9579-57156A48B677@cse.unsw.edu.au>
	<71649F4E-EC84-4ED8-A721-436B71910243@ps.uni-sb.de>
Message-ID: <0F7C8FA2-96B6-48EC-99C2-7F3B5E3A17F8@cse.unsw.edu.au>

On 02/06/2008, at 5:18 PM, Guido Tack wrote:
>
> Oh, I somehow didn't see that it's always ternary!  In that case you  
> might really want to try the extensional constraint.  Just implement  
> a generator that lists all allowed tuples.

Nice idea, but really not viable. In practice the domains are much  
larger than 4 (more like 100), and the table size would be O(n^3).

Malcolm



From tack at ps.uni-sb.de  Mon Jun  2 11:03:40 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Mon, 2 Jun 2008 11:03:40 +0200
Subject: [gecode-users] Clockwise constraint
In-Reply-To: <0F7C8FA2-96B6-48EC-99C2-7F3B5E3A17F8@cse.unsw.edu.au>
References: <E5B4393F-F2BA-4A49-A0E2-1583D0DE428B@cse.unsw.edu.au>
	<355C33DF-FEFE-45A4-9579-57156A48B677@cse.unsw.edu.au>
	<71649F4E-EC84-4ED8-A721-436B71910243@ps.uni-sb.de>
	<0F7C8FA2-96B6-48EC-99C2-7F3B5E3A17F8@cse.unsw.edu.au>
Message-ID: <433ECD25-9AB0-4E38-93DF-BE2D45A40F75@ps.uni-sb.de>

Malcolm Ryan wrote:

> On 02/06/2008, at 5:18 PM, Guido Tack wrote:
>>
>> Oh, I somehow didn't see that it's always ternary!  In that case you
>> might really want to try the extensional constraint.  Just implement
>> a generator that lists all allowed tuples.
>
> Nice idea, but really not viable. In practice the domains are much
> larger than 4 (more like 100), and the table size would be O(n^3).

We just tried it (just for fun ;-), and for domain size 100 it's just  
under 500 000 tuples (which takes about 10M of memory).  For domain  
size 200 it's around 4 000 000 tuples, which is still manageable with  
under 100M of memory.  Generation takes less than a second.

Even if you use more than one of these propagators, you can reuse the  
same table for each one.  So, you might actually want to try this, it  
may work!

Cheers,
	Guido




From malcolmr at cse.unsw.edu.au  Tue Jun  3 08:46:01 2008
From: malcolmr at cse.unsw.edu.au (Malcolm Ryan)
Date: Tue, 3 Jun 2008 16:46:01 +1000
Subject: [gecode-users] Clockwise constraint
References: <F470DBBD-F631-49CA-A127-004E8A3E9C61@cse.unsw.edu.au>
Message-ID: <A1784F5A-FBDD-4874-9CA1-2E8EBCCD3B2C@cse.unsw.edu.au>

Hrm, it seems that the extensional version is going to be inordinately  
large. How hard would it be to write a propagator for this specific  
constraint X = (A < B < C)?

If X is known, it can simply devolve into atomic constraints.
If X is unknown, it would just need to check that there exists b in  
dom(B) such that min(A) < b < max(C), to be re-computed whenever  
min(A), dom(B) or max(C) changed. If we kept the smallest value of b  
between propagations the amortised cost of the computation could be  
small.

How would I go about adding this to Gecode/J?

Malcolm

On 02/06/2008, at 7:03 PM, Guido Tack wrote:

> Malcolm Ryan wrote:
>
>> On 02/06/2008, at 5:18 PM, Guido Tack wrote:
>>>
>>> Oh, I somehow didn't see that it's always ternary!  In that case you
>>> might really want to try the extensional constraint.  Just implement
>>> a generator that lists all allowed tuples.
>>
>> Nice idea, but really not viable. In practice the domains are much
>> larger than 4 (more like 100), and the table size would be O(n^3).
>
> We just tried it (just for fun ;-), and for domain size 100 it's  
> just under 500 000 tuples (which takes about 10M of memory).  For  
> domain size 200 it's around 4 000 000 tuples, which is still  
> manageable with under 100M of memory.  Generation takes less than a  
> second.
>
> Even if you use more than one of these propagators, you can reuse  
> the same table for each one.  So, you might actually want to try  
> this, it may work!
>
> Cheers,
> 	Guido





From tack at ps.uni-sb.de  Tue Jun  3 10:40:02 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Tue, 3 Jun 2008 10:40:02 +0200
Subject: [gecode-users] Clockwise constraint
In-Reply-To: <A1784F5A-FBDD-4874-9CA1-2E8EBCCD3B2C@cse.unsw.edu.au>
References: <F470DBBD-F631-49CA-A127-004E8A3E9C61@cse.unsw.edu.au>
	<A1784F5A-FBDD-4874-9CA1-2E8EBCCD3B2C@cse.unsw.edu.au>
Message-ID: <1F84BDAE-D323-4805-82B8-C477515DAD6A@ps.uni-sb.de>

Malcolm Ryan wrote:

> Hrm, it seems that the extensional version is going to be inordinately
> large. How hard would it be to write a propagator for this specific
> constraint X = (A < B < C)?
>
> If X is known, it can simply devolve into atomic constraints.
> If X is unknown, it would just need to check that there exists b in
> dom(B) such that min(A) < b < max(C), to be re-computed whenever
> min(A), dom(B) or max(C) changed.

Yes, that would be the reasoning that's needed.

> If we kept the smallest value of b
> between propagations the amortised cost of the computation could be
> small.

That wouldn't help, because you cannot start checking for values  
starting from that previous smallest value.

> How would I go about adding this to Gecode/J?

Unfortunately, we just found out that one important ingredient for  
reified propagators currently does not work in Gecode/J: you cannot  
return ES_SUBSUMED from a propagator (which you need in order to  
rewrite into other propagators).  So I'm afraid currently the only  
option is to add the propagator in C++ and then interface it to Java.

Cheers,
	Guido




From malcolmr at cse.unsw.edu.au  Tue Jun  3 11:33:23 2008
From: malcolmr at cse.unsw.edu.au (Malcolm Ryan)
Date: Tue, 3 Jun 2008 19:33:23 +1000
Subject: [gecode-users] Clockwise constraint
In-Reply-To: <1F84BDAE-D323-4805-82B8-C477515DAD6A@ps.uni-sb.de>
References: <F470DBBD-F631-49CA-A127-004E8A3E9C61@cse.unsw.edu.au>
	<A1784F5A-FBDD-4874-9CA1-2E8EBCCD3B2C@cse.unsw.edu.au>
	<1F84BDAE-D323-4805-82B8-C477515DAD6A@ps.uni-sb.de>
Message-ID: <AF2F6223-4250-48D1-8BA9-A40E6F93AE29@cse.unsw.edu.au>


On 03/06/2008, at 6:40 PM, Guido Tack wrote:
>
>> If we kept the smallest value of b
>> between propagations the amortised cost of the computation could be
>> small.
>
> That wouldn't help, because you cannot start checking for values  
> starting from that previous smallest value.

Why not? Most of the time the old value of 'b' will still be a valid  
solution. If it isn't, we know that none of the smaller values are  
solutions so we should be able to count upwards from there (or jump  
straight to min(B), if b < min(B)). Ie, something like:

    if (B.min() > A.max() && B.max() < C.min()) {
       // set X = true
    }

    if (!B.in(b)) {
       b = B.min();
    }

    possible = false;
    lb = A.min();
    ub = C.max();
    max = B.max();
    for (; b <= max; b++) {
       if (b > lb && b < ub) {
          possible = true;
          break;
       }
    }

    if (!possible) {
        // set X = false
    }

Wouldn't that work? Or am I making some incorrect assumptions about  
the data available to propagators?

>> How would I go about adding this to Gecode/J?
>
> Unfortunately, we just found out that one important ingredient for  
> reified propagators currently does not work in Gecode/J: you cannot  
> return ES_SUBSUMED from a propagator (which you need in order to  
> rewrite into other propagators).  So I'm afraid currently the only  
> option is to add the propagator in C++ and then interface it to Java.

That was what I had in mind. I remember you saying previously that the  
Java Propagator class is not suitable for "real" problems.

Malcolm



From tack at ps.uni-sb.de  Tue Jun  3 11:45:00 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Tue, 3 Jun 2008 11:45:00 +0200
Subject: [gecode-users] Clockwise constraint
In-Reply-To: <AF2F6223-4250-48D1-8BA9-A40E6F93AE29@cse.unsw.edu.au>
References: <F470DBBD-F631-49CA-A127-004E8A3E9C61@cse.unsw.edu.au>
	<A1784F5A-FBDD-4874-9CA1-2E8EBCCD3B2C@cse.unsw.edu.au>
	<1F84BDAE-D323-4805-82B8-C477515DAD6A@ps.uni-sb.de>
	<AF2F6223-4250-48D1-8BA9-A40E6F93AE29@cse.unsw.edu.au>
Message-ID: <DA894130-2103-4BBE-9647-F8CAECB4C9E0@ps.uni-sb.de>

Malcolm Ryan wrote:

> On 03/06/2008, at 6:40 PM, Guido Tack wrote:
>>
>>> If we kept the smallest value of b
>>> between propagations the amortised cost of the computation could be
>>> small.
>>
>> That wouldn't help, because you cannot start checking for values
>> starting from that previous smallest value.
>
> Why not? Most of the time the old value of 'b' will still be a valid
> solution. If it isn't, we know that none of the smaller values are
> solutions so we should be able to count upwards from there (or jump
> straight to min(B), if b < min(B)). Ie, something like:
>
>    if (B.min() > A.max() && B.max() < C.min()) {
>       // set X = true
>    }
>
>    if (!B.in(b)) {
>       b = B.min();
>    }

The problem is here: testing B.in(b) is linear time, so it's just as  
expensive as finding a new b.

> Wouldn't that work? Or am I making some incorrect assumptions about
> the data available to propagators?

It would work (I didn't check in detail, though), but it wouldn't be  
any more efficient, so why not go for the simple version ;-)

>
>>> How would I go about adding this to Gecode/J?
>>
>> Unfortunately, we just found out that one important ingredient for
>> reified propagators currently does not work in Gecode/J: you cannot
>> return ES_SUBSUMED from a propagator (which you need in order to
>> rewrite into other propagators).  So I'm afraid currently the only
>> option is to add the propagator in C++ and then interface it to Java.
>
> That was what I had in mind. I remember you saying previously that the
> Java Propagator class is not suitable for "real" problems.

Ok, great.  If you need help with writing the propagator, or with  
interfacing it to Java, let us know!  I'd start by looking at the  
propagate function of ReEqDom in gecode/int/rel/eq.icc for an example  
of a C++ reified propagator.

Cheers,
	Guido




From malcolmr at cse.unsw.edu.au  Wed Jun  4 03:14:39 2008
From: malcolmr at cse.unsw.edu.au (Malcolm Ryan)
Date: Wed, 4 Jun 2008 11:14:39 +1000
Subject: [gecode-users] Clockwise constraint
In-Reply-To: <DA894130-2103-4BBE-9647-F8CAECB4C9E0@ps.uni-sb.de>
References: <F470DBBD-F631-49CA-A127-004E8A3E9C61@cse.unsw.edu.au>
	<A1784F5A-FBDD-4874-9CA1-2E8EBCCD3B2C@cse.unsw.edu.au>
	<1F84BDAE-D323-4805-82B8-C477515DAD6A@ps.uni-sb.de>
	<AF2F6223-4250-48D1-8BA9-A40E6F93AE29@cse.unsw.edu.au>
	<DA894130-2103-4BBE-9647-F8CAECB4C9E0@ps.uni-sb.de>
Message-ID: <6C9FB590-B273-4463-BF26-562ABAFCC1E3@cse.unsw.edu.au>


On 03/06/2008, at 7:45 PM, Guido Tack wrote:

> The problem is here: testing B.in(b) is linear time, so it's just as  
> expensive as finding a new b.

Ah. Is there a way to iterate through the elements of B's domain in  
order in time proportional to the number of elements?

Malcolm



From malcolmr at cse.unsw.edu.au  Wed Jun  4 04:03:28 2008
From: malcolmr at cse.unsw.edu.au (Malcolm Ryan)
Date: Wed, 4 Jun 2008 12:03:28 +1000
Subject: [gecode-users] Clockwise constraint
In-Reply-To: <DA894130-2103-4BBE-9647-F8CAECB4C9E0@ps.uni-sb.de>
References: <F470DBBD-F631-49CA-A127-004E8A3E9C61@cse.unsw.edu.au>
	<A1784F5A-FBDD-4874-9CA1-2E8EBCCD3B2C@cse.unsw.edu.au>
	<1F84BDAE-D323-4805-82B8-C477515DAD6A@ps.uni-sb.de>
	<AF2F6223-4250-48D1-8BA9-A40E6F93AE29@cse.unsw.edu.au>
	<DA894130-2103-4BBE-9647-F8CAECB4C9E0@ps.uni-sb.de>
Message-ID: <D3C1BF94-B270-43E3-B69C-33019E6F7B6C@cse.unsw.edu.au>


On 03/06/2008, at 7:45 PM, Guido Tack wrote:

> Ok, great.  If you need help with writing the propagator, or with  
> interfacing it to Java, let us know!  I'd start by looking at the  
> propagate function of ReEqDom in gecode/int/rel/eq.icc for an  
> example of a C++ reified propagator.

Eek. I'm still new to C++, and that code is rather scary.

I'm figuring that I'll have to make a reified ternary propagator along  
the lines of ReBinaryPropagator in propagator.icc and then implement  
the methods as shown in eq.icc.

One question, how do I tell it to do the rewrites with conjunctions or  
disjunctions:

If X = true, post A < B and B < C
if X = false, post A > B or B > C

Malcolm



From malcolmr at cse.unsw.edu.au  Wed Jun  4 07:40:03 2008
From: malcolmr at cse.unsw.edu.au (Malcolm Ryan)
Date: Wed, 4 Jun 2008 15:40:03 +1000
Subject: [gecode-users] Clockwise constraint
In-Reply-To: <D3C1BF94-B270-43E3-B69C-33019E6F7B6C@cse.unsw.edu.au>
References: <F470DBBD-F631-49CA-A127-004E8A3E9C61@cse.unsw.edu.au>
	<A1784F5A-FBDD-4874-9CA1-2E8EBCCD3B2C@cse.unsw.edu.au>
	<1F84BDAE-D323-4805-82B8-C477515DAD6A@ps.uni-sb.de>
	<AF2F6223-4250-48D1-8BA9-A40E6F93AE29@cse.unsw.edu.au>
	<DA894130-2103-4BBE-9647-F8CAECB4C9E0@ps.uni-sb.de>
	<D3C1BF94-B270-43E3-B69C-33019E6F7B6C@cse.unsw.edu.au>
Message-ID: <9C2479A5-523C-40F2-BDD0-7CDB45AD7310@cse.unsw.edu.au>

Hmm, I really don't think I understand your code well enough to do  
this properly. I'm trying to implement a reified A < B < C operator,  
but I'm really lost.

Malcolm



From tack at ps.uni-sb.de  Wed Jun  4 11:44:38 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Wed, 4 Jun 2008 11:44:38 +0200
Subject: [gecode-users] Clockwise constraint
In-Reply-To: <6C9FB590-B273-4463-BF26-562ABAFCC1E3@cse.unsw.edu.au>
References: <F470DBBD-F631-49CA-A127-004E8A3E9C61@cse.unsw.edu.au>
	<A1784F5A-FBDD-4874-9CA1-2E8EBCCD3B2C@cse.unsw.edu.au>
	<1F84BDAE-D323-4805-82B8-C477515DAD6A@ps.uni-sb.de>
	<AF2F6223-4250-48D1-8BA9-A40E6F93AE29@cse.unsw.edu.au>
	<DA894130-2103-4BBE-9647-F8CAECB4C9E0@ps.uni-sb.de>
	<6C9FB590-B273-4463-BF26-562ABAFCC1E3@cse.unsw.edu.au>
Message-ID: <C7FBF3E0-B460-4CFC-AE9B-FFAC5E41F0D2@ps.uni-sb.de>

Malcolm Ryan wote:

> On 03/06/2008, at 7:45 PM, Guido Tack wrote:
>
>> The problem is here: testing B.in(b) is linear time, so it's just as
>> expensive as finding a new b.
>
> Ah. Is there a way to iterate through the elements of B's domain in
> order in time proportional to the number of elements?

You can even iterate through the ranges (the continuous intervals of a  
domain) in time proportional to the number of ranges, using a  
ViewRanges<IntView> iterator, e.g.

> Eek. I'm still new to C++, and that code is rather scary.
>
> I'm figuring that I'll have to make a reified ternary propagator along
> the lines of ReBinaryPropagator in propagator.icc and then implement
> the methods as shown in eq.icc.

Yes, but ReTernaryPropagator is not predefined in Gecode.  But you can  
take ReBinaryPropagator (from int/propagator.icc) as a starting point,  
just extend it with a third view in the obvious way.

> One question, how do I tell it to do the rewrites with conjunctions or
> disjunctions:
>
> If X = true, post A < B and B < C
> if X = false, post A > B or B > C

For X=true, you post two Le propagators.  You post the first one using  
GECODE_ES_CHECK(Le<IntView>::post...), and the second one using  
GECODE_REWRITE(...).

For X=false, you have to create two new Boolean variables, turn them  
into views, and then post B<=A or C<=B, using two ReLq propagators and  
a BinOrTrue propagator.

> Hmm, I really don't think I understand your code well enough to do
> this properly. I'm trying to implement a reified A < B < C operator,
> but I'm really lost.

You should probably start by writing some really simple propagator,  
like equality (without reification), to get an idea how things work in  
Gecode.  Maybe you then have some more specific questions and we can  
help you better.

Cheers,
	Guido




From malcolmr at cse.unsw.edu.au  Thu Jun  5 05:39:58 2008
From: malcolmr at cse.unsw.edu.au (Malcolm Ryan)
Date: Thu, 5 Jun 2008 13:39:58 +1000
Subject: [gecode-users] Search statistics
Message-ID: <90A46E7B-DF01-4A49-BE14-511ACAB1B008@cse.unsw.edu.au>

What are the precise meaning of the Clones, Commits and Propagates  
values given by a gecode.Statistics object?

Malcolm



From O.Kullmann at swansea.ac.uk  Fri Jun  6 21:55:21 2008
From: O.Kullmann at swansea.ac.uk (Oliver Kullmann)
Date: Fri, 6 Jun 2008 20:55:21 +0100
Subject: [gecode-users] implementing branching heuristics
Message-ID: <20080606195521.GH20911@cs-wsok.swansea.ac.uk>

Hello,

based on my general theory of branching heuristics,
I would like to take some standard backtracking CSP solvers,
where I can just replace the variable ordering heuristics
(responsible for choosing the branching variable),
and there I would like to plug-in my generic
heuristics instead --- I expect relevant
performance gains.

The whole theory has been developed in the context
of SAT, but it is applicable for any width of
branchings (not just binary branchings), and this
is actually one of its strengths.

If somebody wants to read about it, please have
a look at report #7 at

http://www.swan.ac.uk/compsci/research/reports/2008/index.html 

It should be fairly easy to apply my generic heuristics.
I looked a bit at Minion, but this looks too much
black-box to me.

I guess in principle with gecode it should be doable.
But the documentation is rather terse, and I also
couldn't find some standard solvers, where I just
would replace some functions regarding the heuristics.

Perhaps somebody can help me here?
Or, if somebody is interested, we could have a collaboration.
I actually expect a "quick victory", i.e., it should
be quickly implementable, and it should yield some
nice improvements under fairly general circumstances.

So, I hope somebody is interest in a 
quick paper which will revolutionise CSP ;-)
Actually, I think it will be interesting.

Oliver

P.S. Another field for possible collaboration
would be library development: I am developing
the OKlibrary (http://www.ok-sat-library.org),
a generative library for generalised SAT solving.
In principle the OKlibrary covers also CSP,
but I'm yet "pre-alpha" :-(.

P.S.P.S. I noticed in the documentation
of gecode that "branchings" etc. are
used in a from my point of view somewhat
non-standard sense. I'm using "branching"
etc. as used by the SAT community and as
explained in my article, but this seems to
me also compatible to the notions used
in the Handbook of Constraint Satisfaction.

-- 
Dr. Oliver Kullmann
Computer Science Department
Swansea University
Faraday Building, Singleton Park
Swansea SA2 8PP, UK
http://cs.swan.ac.uk/~csoliver/



From cschulte at kth.se  Sun Jun  8 12:58:46 2008
From: cschulte at kth.se (Christian Schulte)
Date: Sun, 8 Jun 2008 12:58:46 +0200
Subject: [gecode-users] Search statistics
In-Reply-To: <90A46E7B-DF01-4A49-BE14-511ACAB1B008@cse.unsw.edu.au>
References: <90A46E7B-DF01-4A49-BE14-511ACAB1B008@cse.unsw.edu.au>
Message-ID: <002701c8c956$a274c070$e75e4150$@se>

Hi,

here we go:

- propagates: how many propagators implementing constraints have been
executed.
 
- clones and commits: search uses recomputation and cloning. Only every so
often a clone is created (increasing the number
   of clones reported). When failure occurs, a new node (space) is
recomputed: it is searched for the lowest copy in the 
   search tree. Then an additional copy is created from that copy and
recomputation is used to recompute the node that
   is actually node as next search node. For recomputation, the decisions
made by branching are replayed: each decision
   replayed amounts to a commit operation.

With other words, commits give how much effort has been spent on
recomputation and clones how much effort has been spent on recovering from
failure (more or less).

But the real meaningful numbers are the number of propagations and the
number of failures, the rest is more implementation specific.

I hope that helps
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Malcolm Ryan
Sent: Thursday, June 05, 2008 5:40 AM
To: gecode list
Subject: [gecode-users] Search statistics

What are the precise meaning of the Clones, Commits and Propagates  
values given by a gecode.Statistics object?

Malcolm

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From cschulte at kth.se  Sun Jun  8 13:10:05 2008
From: cschulte at kth.se (Christian Schulte)
Date: Sun, 8 Jun 2008 13:10:05 +0200
Subject: [gecode-users] implementing branching heuristics
In-Reply-To: <20080606195521.GH20911@cs-wsok.swansea.ac.uk>
References: <20080606195521.GH20911@cs-wsok.swansea.ac.uk>
Message-ID: <002a01c8c958$37521390$a5f63ab0$@se>

Hi,

please have a look at some of the examples that come with Gecode, there you
find how branch (which in turn creates simple variable/value branchings) is
used with different heuristics. There are two examples (black-hole.cc and
queen-armies.cc) that have simple custom branchings which might give you
some additional hints.

The current trunk has more support for predefined branchings (randomized,
tie-breaking, etc) that should make it into Gecode 3.* (scheduled to be
released around Sep/Oct). 

All the best
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Oliver Kullmann
Sent: Friday, June 06, 2008 9:55 PM
To: users at gecode.org
Subject: [gecode-users] implementing branching heuristics

Hello,

based on my general theory of branching heuristics,
I would like to take some standard backtracking CSP solvers,
where I can just replace the variable ordering heuristics
(responsible for choosing the branching variable),
and there I would like to plug-in my generic
heuristics instead --- I expect relevant
performance gains.

The whole theory has been developed in the context
of SAT, but it is applicable for any width of
branchings (not just binary branchings), and this
is actually one of its strengths.

If somebody wants to read about it, please have
a look at report #7 at

http://www.swan.ac.uk/compsci/research/reports/2008/index.html 

It should be fairly easy to apply my generic heuristics.
I looked a bit at Minion, but this looks too much
black-box to me.

I guess in principle with gecode it should be doable.
But the documentation is rather terse, and I also
couldn't find some standard solvers, where I just
would replace some functions regarding the heuristics.

Perhaps somebody can help me here?
Or, if somebody is interested, we could have a collaboration.
I actually expect a "quick victory", i.e., it should
be quickly implementable, and it should yield some
nice improvements under fairly general circumstances.

So, I hope somebody is interest in a 
quick paper which will revolutionise CSP ;-)
Actually, I think it will be interesting.

Oliver

P.S. Another field for possible collaboration
would be library development: I am developing
the OKlibrary (http://www.ok-sat-library.org),
a generative library for generalised SAT solving.
In principle the OKlibrary covers also CSP,
but I'm yet "pre-alpha" :-(.

P.S.P.S. I noticed in the documentation
of gecode that "branchings" etc. are
used in a from my point of view somewhat
non-standard sense. I'm using "branching"
etc. as used by the SAT community and as
explained in my article, but this seems to
me also compatible to the notions used
in the Handbook of Constraint Satisfaction.

-- 
Dr. Oliver Kullmann
Computer Science Department
Swansea University
Faraday Building, Singleton Park
Swansea SA2 8PP, UK
http://cs.swan.ac.uk/~csoliver/

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From malcolmr at cse.unsw.edu.au  Mon Jun  9 11:17:55 2008
From: malcolmr at cse.unsw.edu.au (Malcolm Ryan)
Date: Mon, 9 Jun 2008 19:17:55 +1000
Subject: [gecode-users] Search statistics
In-Reply-To: <002701c8c956$a274c070$e75e4150$@se>
References: <90A46E7B-DF01-4A49-BE14-511ACAB1B008@cse.unsw.edu.au>
	<002701c8c956$a274c070$e75e4150$@se>
Message-ID: <CCD7EFE2-A51B-4878-9267-475DA8E6FD6E@cse.unsw.edu.au>

I'm writing a paper about a constraint problem I'm working, comparing  
a couple of different representations. What statistics are appropriate  
to compare?

Malcolm

On 08/06/2008, at 8:58 PM, Christian Schulte wrote:

> Hi,
>
> here we go:
>
> - propagates: how many propagators implementing constraints have been
> executed.
>
> - clones and commits: search uses recomputation and cloning. Only  
> every so
> often a clone is created (increasing the number
>   of clones reported). When failure occurs, a new node (space) is
> recomputed: it is searched for the lowest copy in the
>   search tree. Then an additional copy is created from that copy and
> recomputation is used to recompute the node that
>   is actually node as next search node. For recomputation, the  
> decisions
> made by branching are replayed: each decision
>   replayed amounts to a commit operation.
>
> With other words, commits give how much effort has been spent on
> recomputation and clones how much effort has been spent on  
> recovering from
> failure (more or less).
>
> But the real meaningful numbers are the number of propagations and the
> number of failures, the rest is more implementation specific.
>
> I hope that helps
> Christian
>
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
>
>
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On  
> Behalf
> Of Malcolm Ryan
> Sent: Thursday, June 05, 2008 5:40 AM
> To: gecode list
> Subject: [gecode-users] Search statistics
>
> What are the precise meaning of the Clones, Commits and Propagates
> values given by a gecode.Statistics object?
>
> Malcolm
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users




From cschulte at kth.se  Mon Jun  9 11:25:11 2008
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 9 Jun 2008 11:25:11 +0200
Subject: [gecode-users] Search statistics
In-Reply-To: <CCD7EFE2-A51B-4878-9267-475DA8E6FD6E@cse.unsw.edu.au>
References: <90A46E7B-DF01-4A49-BE14-511ACAB1B008@cse.unsw.edu.au>	<002701c8c956$a274c070$e75e4150$@se>
	<CCD7EFE2-A51B-4878-9267-475DA8E6FD6E@cse.unsw.edu.au>
Message-ID: <003f01c8ca12$b8583630$2908a290$@se>

As said, the most important is failures: that describes how much search you
use and is a good measure how difficult your problem is (or if you compare
different models of the same problem, how good a model is: less search,
better model, provided runtime is better and memory does not explode). 

Then, of course: runtime and memory.

The rest does not matter.

Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Malcolm Ryan
Sent: Monday, June 09, 2008 11:18 AM
To: gecode list
Subject: Re: [gecode-users] Search statistics

I'm writing a paper about a constraint problem I'm working, comparing  
a couple of different representations. What statistics are appropriate  
to compare?

Malcolm

On 08/06/2008, at 8:58 PM, Christian Schulte wrote:

> Hi,
>
> here we go:
>
> - propagates: how many propagators implementing constraints have been
> executed.
>
> - clones and commits: search uses recomputation and cloning. Only  
> every so
> often a clone is created (increasing the number
>   of clones reported). When failure occurs, a new node (space) is
> recomputed: it is searched for the lowest copy in the
>   search tree. Then an additional copy is created from that copy and
> recomputation is used to recompute the node that
>   is actually node as next search node. For recomputation, the  
> decisions
> made by branching are replayed: each decision
>   replayed amounts to a commit operation.
>
> With other words, commits give how much effort has been spent on
> recomputation and clones how much effort has been spent on  
> recovering from
> failure (more or less).
>
> But the real meaningful numbers are the number of propagations and the
> number of failures, the rest is more implementation specific.
>
> I hope that helps
> Christian
>
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
>
>
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On  
> Behalf
> Of Malcolm Ryan
> Sent: Thursday, June 05, 2008 5:40 AM
> To: gecode list
> Subject: [gecode-users] Search statistics
>
> What are the precise meaning of the Clones, Commits and Propagates
> values given by a gecode.Statistics object?
>
> Malcolm
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From tack at ps.uni-sb.de  Mon Jun  9 11:38:01 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Mon, 9 Jun 2008 11:38:01 +0200
Subject: [gecode-users] Search statistics
In-Reply-To: <003f01c8ca12$b8583630$2908a290$@se>
References: <90A46E7B-DF01-4A49-BE14-511ACAB1B008@cse.unsw.edu.au>	<002701c8c956$a274c070$e75e4150$@se>
	<CCD7EFE2-A51B-4878-9267-475DA8E6FD6E@cse.unsw.edu.au>
	<003f01c8ca12$b8583630$2908a290$@se>
Message-ID: <E744DBD3-1AC8-446E-ACF2-D100CBF6D49B@ps.uni-sb.de>

Christian Schulte wrote:
> Then, of course: runtime and memory.

A word about memory:  If you are just benchmarking different models in  
Gecode/J, the peak memory figures should be good enough for relative  
comparisons.  They do not contain the overhead caused by the Java  
interface, however, so they are useless when comparing to other  
systems.  And you should probably also present them as relative numbers.

Guido




From mauriciotorob at gmail.com  Mon Jun  9 12:27:28 2008
From: mauriciotorob at gmail.com (Mauricio Toro)
Date: Mon, 9 Jun 2008 12:27:28 +0200
Subject: [gecode-users] Unless propagator
Message-ID: <a6b4b44a0806090327y720847d0yb9fe4159fb8694ed@mail.gmail.com>

Hello all,
First, thanks for all the help given to me in the past.
The "ask" and the "parallel conditional" propagators
are working very well now.

I need some help with another propagator which
should behave like this:

Unless <Boolean_var> do <something>

The idea is to execute <something> when
the Boolean_var is either false o it is not assigned.

The problem I am having is that it is calling
<something> multiple times.

These are the post and the propagate methods:

  UnlessProp::UnlessProp
  (Space* home,BoolView x,  AskBody * askbody)
    : UnaryPropagator<BoolView,PC_GEN_ASSIGNED>(home,x) {this->askbody =
askbody;}

  ExecStatus
  UnlessProp::post(Space* home, BoolView x,  AskBody * askbody) {
    if (x.one())
      {std::cout << "one" << std::endl << std::endl;}
    else if (x.zero())
      {std::cout << "something"; std::cout << "zero" << std::endl <<
std::endl;}
    else if (x.assigned())
      assert(x.none());
    else  // not assigned, not zero and not one
      std::cout << "something";

    (void) new (home) UnlessProp(home,x,askbody);    // ?
    return ES_OK;
  }

  ExecStatus
  UnlessProp::propagate(Space* home, ModEventDelta med) {

    return ES_SUBSUMED(this,sizeof(*this));
  }

Thanks,

Mauricio

-- 
Mauricio Toro Bermudez
Estudiante de Ingenier?a de Sistemas
Pontificia Universidad Javeriana, Colombia

Stagiare ? l'Ircam
1, place Igor-Stravinsky 75004 Paris,
France de 2008 ? 2009
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080609/db7a4474/attachment.htm>

From cschulte at kth.se  Mon Jun  9 13:14:09 2008
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 9 Jun 2008 13:14:09 +0200
Subject: [gecode-users] Unless propagator
In-Reply-To: <a6b4b44a0806090327y720847d0yb9fe4159fb8694ed@mail.gmail.com>
References: <a6b4b44a0806090327y720847d0yb9fe4159fb8694ed@mail.gmail.com>
Message-ID: <006801c8ca21$f05edf20$d11c9d60$@se>

The code does not make sense:

 - one() returns true, iff the variable is assigned to 1

 - zero() returns true, iff the variables is assigned to 0

 - none() returns true, uiff the variable is not assigned.

 

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Mauricio Toro
Sent: Monday, June 09, 2008 12:27 PM
To: users at gecode.org
Subject: [gecode-users] Unless propagator

 

Hello all,

 

First, thanks for all the help given to me in the past.

The "ask" and the "parallel conditional" propagators

are working very well now.

 

I need some help with another propagator which 

should behave like this:

 

Unless <Boolean_var> do <something>

 

The idea is to execute <something> when 

the Boolean_var is either false o it is not assigned.

 

The problem I am having is that it is calling 

<something> multiple times.

 

These are the post and the propagate methods:

 

  UnlessProp::UnlessProp

  (Space* home,BoolView x,  AskBody * askbody)

    : UnaryPropagator<BoolView,PC_GEN_ASSIGNED>(home,x) {this->askbody =
askbody;}

 

  ExecStatus

  UnlessProp::post(Space* home, BoolView x,  AskBody * askbody) {

    if (x.one()) 

      {std::cout << "one" << std::endl << std::endl;}

    else if (x.zero()) 

      {std::cout << "something"; std::cout << "zero" << std::endl <<
std::endl;}

    else if (x.assigned()) 

      assert(x.none());

    else  // not assigned, not zero and not one

      std::cout << "something";

    

    (void) new (home) UnlessProp(home,x,askbody);    // ?

    return ES_OK;

  }

 

  ExecStatus

  UnlessProp::propagate(Space* home, ModEventDelta med) {

   

    return ES_SUBSUMED(this,sizeof(*this));

  }

 

Thanks,

 

Mauricio


-- 
Mauricio Toro Bermudez
Estudiante de Ingenier?a de Sistemas
Pontificia Universidad Javeriana, Colombia

Stagiare ? l'Ircam
1, place Igor-Stravinsky 75004 Paris, 
France de 2008 ? 2009 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080609/b1fc8115/attachment.htm>

From O.Kullmann at swansea.ac.uk  Mon Jun  9 21:32:10 2008
From: O.Kullmann at swansea.ac.uk (Oliver Kullmann)
Date: Mon, 9 Jun 2008 20:32:10 +0100
Subject: [gecode-users] implementing branching heuristics
In-Reply-To: <002a01c8c958$37521390$a5f63ab0$@se>
References: <20080606195521.GH20911@cs-wsok.swansea.ac.uk>
	<002a01c8c958$37521390$a5f63ab0$@se>
Message-ID: <20080609193210.GQ20911@cs-wsok.swansea.ac.uk>

thanks for the information!

I'll have a look into the examples, and see whether I
can hack them.

Oliver

P.S. Regarding the documentation one finds the statement:

"We kindly ask that documentation is not installed anywhere in such a way that it will be indexed by search engines."

I wonder what is the reason for this? Actually, it creates a problem
for my system, since the complete documentation is mirrored on the
Internet, and I make available also all documentation of external
sources installed by the OKlibrary, and this should include Gecode.
Would it be enough if on the main page which links to the documentation
I set the meta-tags to "no search engines"?

Isn't the documentation also open-source?
Perhaps your reason is that search-engines shall point to
your site, not to others?
But this seems not compatible to me to the GPL licence, which
doesn't allow to put restrictions on further distribution?



On Sun, Jun 08, 2008 at 01:10:05PM +0200, Christian Schulte wrote:
> Hi,
> 
> please have a look at some of the examples that come with Gecode, there you
> find how branch (which in turn creates simple variable/value branchings) is
> used with different heuristics. There are two examples (black-hole.cc and
> queen-armies.cc) that have simple custom branchings which might give you
> some additional hints.
> 
> The current trunk has more support for predefined branchings (randomized,
> tie-breaking, etc) that should make it into Gecode 3.* (scheduled to be
> released around Sep/Oct). 
> 
> All the best
> Christian
> 
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
> 
> 
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Oliver Kullmann
> Sent: Friday, June 06, 2008 9:55 PM
> To: users at gecode.org
> Subject: [gecode-users] implementing branching heuristics
> 
> Hello,
> 
> based on my general theory of branching heuristics,
> I would like to take some standard backtracking CSP solvers,
> where I can just replace the variable ordering heuristics
> (responsible for choosing the branching variable),
> and there I would like to plug-in my generic
> heuristics instead --- I expect relevant
> performance gains.
> 
> The whole theory has been developed in the context
> of SAT, but it is applicable for any width of
> branchings (not just binary branchings), and this
> is actually one of its strengths.
> 
> If somebody wants to read about it, please have
> a look at report #7 at
> 
> http://www.swan.ac.uk/compsci/research/reports/2008/index.html 
> 
> It should be fairly easy to apply my generic heuristics.
> I looked a bit at Minion, but this looks too much
> black-box to me.
> 
> I guess in principle with gecode it should be doable.
> But the documentation is rather terse, and I also
> couldn't find some standard solvers, where I just
> would replace some functions regarding the heuristics.
> 
> Perhaps somebody can help me here?
> Or, if somebody is interested, we could have a collaboration.
> I actually expect a "quick victory", i.e., it should
> be quickly implementable, and it should yield some
> nice improvements under fairly general circumstances.
> 
> So, I hope somebody is interest in a 
> quick paper which will revolutionise CSP ;-)
> Actually, I think it will be interesting.
> 
> Oliver
> 
> P.S. Another field for possible collaboration
> would be library development: I am developing
> the OKlibrary (http://www.ok-sat-library.org),
> a generative library for generalised SAT solving.
> In principle the OKlibrary covers also CSP,
> but I'm yet "pre-alpha" :-(.
> 
> P.S.P.S. I noticed in the documentation
> of gecode that "branchings" etc. are
> used in a from my point of view somewhat
> non-standard sense. I'm using "branching"
> etc. as used by the SAT community and as
> explained in my article, but this seems to
> me also compatible to the notions used
> in the Handbook of Constraint Satisfaction.
> 
> -- 
> Dr. Oliver Kullmann
> Computer Science Department
> Swansea University
> Faraday Building, Singleton Park
> Swansea SA2 8PP, UK
> http://cs.swan.ac.uk/~csoliver/
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-- 
Dr. Oliver Kullmann
Computer Science Department
Swansea University
Faraday Building, Singleton Park
Swansea SA2 8PP, UK
http://cs.swan.ac.uk/~csoliver/



From tack at ps.uni-sb.de  Mon Jun  9 22:41:41 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Mon, 9 Jun 2008 22:41:41 +0200
Subject: [gecode-users] implementing branching heuristics
In-Reply-To: <20080609193210.GQ20911@cs-wsok.swansea.ac.uk>
References: <20080606195521.GH20911@cs-wsok.swansea.ac.uk>
	<002a01c8c958$37521390$a5f63ab0$@se>
	<20080609193210.GQ20911@cs-wsok.swansea.ac.uk>
Message-ID: <E2EB710B-A7ED-4576-82DF-48970C868E04@ps.uni-sb.de>

Oliver Kullmann wrote:
> P.S. Regarding the documentation one finds the statement:
>
> "We kindly ask that documentation is not installed anywhere in such  
> a way that it will be indexed by search engines."
>
> I wonder what is the reason for this? Actually, it creates a problem
> for my system, since the complete documentation is mirrored on the
> Internet, and I make available also all documentation of external
> sources installed by the OKlibrary, and this should include Gecode.
> Would it be enough if on the main page which links to the  
> documentation
> I set the meta-tags to "no search engines"?

Yes, that should do.

> Isn't the documentation also open-source?
> Perhaps your reason is that search-engines shall point to
> your site, not to others?
> But this seems not compatible to me to the GPL licence, which
> doesn't allow to put restrictions on further distribution?

The license we use is MIT, not GPL, but it also does not restrict  
redistribution. Of course, as we hold the copyright, we could add  
further restrictions as we like, but we don't.  We just kindly ask  
you.  The reason is exactly what you guessed, that we would like  
search engines to point to the main, most up-to-date version.

Cheers,
	Guido




From cschulte at kth.se  Mon Jun  9 22:42:02 2008
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 9 Jun 2008 22:42:02 +0200
Subject: [gecode-users] implementing branching heuristics
In-Reply-To: <20080609193210.GQ20911@cs-wsok.swansea.ac.uk>
References: <20080606195521.GH20911@cs-wsok.swansea.ac.uk>
	<002a01c8c958$37521390$a5f63ab0$@se>
	<20080609193210.GQ20911@cs-wsok.swansea.ac.uk>
Message-ID: <000801c8ca71$488f1170$d9ad3450$@se>

Yes, using a search engine should point always to the freshest version. It
is highly annoying if you get zillions of webpages all of which are out of
date (for example, Java and many other software packages require (or ask
for) the same).

Gecode is _not_ GPL, it is distributed under the MIT license (check the
license, please)! And we kindly ask. So if you want to make the life of
other users more miserable, than you are still allowed to do so ;-) However,
we just ask for common sense here.

I am unfamiliar which tag to set to not have stuff indexed, I am only
familiar with having a robots.txt file when using apache.

Cheers
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/

-----Original Message-----
From: Oliver Kullmann [mailto:O.Kullmann at swansea.ac.uk] 
Sent: Monday, June 09, 2008 9:32 PM
To: Christian Schulte; users at gecode.org
Subject: Re: [gecode-users] implementing branching heuristics

thanks for the information!

I'll have a look into the examples, and see whether I
can hack them.

Oliver

P.S. Regarding the documentation one finds the statement:

"We kindly ask that documentation is not installed anywhere in such a way
that it will be indexed by search engines."

I wonder what is the reason for this? Actually, it creates a problem
for my system, since the complete documentation is mirrored on the
Internet, and I make available also all documentation of external
sources installed by the OKlibrary, and this should include Gecode.
Would it be enough if on the main page which links to the documentation
I set the meta-tags to "no search engines"?

Isn't the documentation also open-source?
Perhaps your reason is that search-engines shall point to
your site, not to others?
But this seems not compatible to me to the GPL licence, which
doesn't allow to put restrictions on further distribution?



On Sun, Jun 08, 2008 at 01:10:05PM +0200, Christian Schulte wrote:
> Hi,
> 
> please have a look at some of the examples that come with Gecode, there
you
> find how branch (which in turn creates simple variable/value branchings)
is
> used with different heuristics. There are two examples (black-hole.cc and
> queen-armies.cc) that have simple custom branchings which might give you
> some additional hints.
> 
> The current trunk has more support for predefined branchings (randomized,
> tie-breaking, etc) that should make it into Gecode 3.* (scheduled to be
> released around Sep/Oct). 
> 
> All the best
> Christian
> 
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
> 
> 
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Oliver Kullmann
> Sent: Friday, June 06, 2008 9:55 PM
> To: users at gecode.org
> Subject: [gecode-users] implementing branching heuristics
> 
> Hello,
> 
> based on my general theory of branching heuristics,
> I would like to take some standard backtracking CSP solvers,
> where I can just replace the variable ordering heuristics
> (responsible for choosing the branching variable),
> and there I would like to plug-in my generic
> heuristics instead --- I expect relevant
> performance gains.
> 
> The whole theory has been developed in the context
> of SAT, but it is applicable for any width of
> branchings (not just binary branchings), and this
> is actually one of its strengths.
> 
> If somebody wants to read about it, please have
> a look at report #7 at
> 
> http://www.swan.ac.uk/compsci/research/reports/2008/index.html 
> 
> It should be fairly easy to apply my generic heuristics.
> I looked a bit at Minion, but this looks too much
> black-box to me.
> 
> I guess in principle with gecode it should be doable.
> But the documentation is rather terse, and I also
> couldn't find some standard solvers, where I just
> would replace some functions regarding the heuristics.
> 
> Perhaps somebody can help me here?
> Or, if somebody is interested, we could have a collaboration.
> I actually expect a "quick victory", i.e., it should
> be quickly implementable, and it should yield some
> nice improvements under fairly general circumstances.
> 
> So, I hope somebody is interest in a 
> quick paper which will revolutionise CSP ;-)
> Actually, I think it will be interesting.
> 
> Oliver
> 
> P.S. Another field for possible collaboration
> would be library development: I am developing
> the OKlibrary (http://www.ok-sat-library.org),
> a generative library for generalised SAT solving.
> In principle the OKlibrary covers also CSP,
> but I'm yet "pre-alpha" :-(.
> 
> P.S.P.S. I noticed in the documentation
> of gecode that "branchings" etc. are
> used in a from my point of view somewhat
> non-standard sense. I'm using "branching"
> etc. as used by the SAT community and as
> explained in my article, but this seems to
> me also compatible to the notions used
> in the Handbook of Constraint Satisfaction.
> 
> -- 
> Dr. Oliver Kullmann
> Computer Science Department
> Swansea University
> Faraday Building, Singleton Park
> Swansea SA2 8PP, UK
> http://cs.swan.ac.uk/~csoliver/
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-- 
Dr. Oliver Kullmann
Computer Science Department
Swansea University
Faraday Building, Singleton Park
Swansea SA2 8PP, UK
http://cs.swan.ac.uk/~csoliver/




From mauriciotorob at gmail.com  Mon Jun  9 23:45:29 2008
From: mauriciotorob at gmail.com (Mauricio Toro)
Date: Mon, 9 Jun 2008 23:45:29 +0200
Subject: [gecode-users] probabilistic choice process
Message-ID: <a6b4b44a0806091445o383dc494m5ee36341f602e28d@mail.gmail.com>

Hello all,
I am trying to write something in Gecode, which could
be a propagator, with this semantic:

when <boolean_var1, boolean_var2, ... boolean_varn> do <something with those
who are assigned to true>

I know, it seems difficult. But, any ideas are welcome.
It will be used to implement an interpreter for a probabilistic CCP
calculus.

Thanks !

Mauricio

-- 
Mauricio Toro Bermudez
Estudiante de Ingenier?a de Sistemas
Pontificia Universidad Javeriana, Colombia

Stagiare ? l'Ircam
1, place Igor-Stravinsky 75004 Paris,
France de 2008 ? 2009
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080609/fe31f859/attachment.htm>

From banerjed at rsise.anu.edu.au  Tue Jun 10 08:43:39 2008
From: banerjed at rsise.anu.edu.au (Debdeep Banerjee)
Date: Tue, 10 Jun 2008 16:43:39 +1000
Subject: [gecode-users] Intelligent backtracking methods
Message-ID: <484E229B.9020408@rsise.anu.edu.au>

Hi,
I want to know if the DFS search implements any intelligent backtracking 
methods (for example backjumping, conflict directed backjumping etc).

Thanking you.

With regards
Debdeep

-- 
Debdeep Banerjee
PhD Candidate
CSL/RSISE/NICTA
Australian National University
Email: debdeep.banerjee at rsise.anu.edu.au
Web:http://rsise.anu.edu.au/~banerjed





From cschulte at kth.se  Tue Jun 10 09:27:19 2008
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 10 Jun 2008 09:27:19 +0200
Subject: [gecode-users] Intelligent backtracking methods
In-Reply-To: <484E229B.9020408@rsise.anu.edu.au>
References: <484E229B.9020408@rsise.anu.edu.au>
Message-ID: <000101c8cacb$6ba66d20$42f34760$@se>

No, it is not. It is plain vanilla DFS.

However, you can implement your own search methods as Gecode features an
enormously powerful interface for programming search. In particular, as
search is based on recomputation and copying, any move in the tree is easy.
We exploit that, for example, to some extra pruning of the tree during
branch and bound search.

Cheers
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Debdeep Banerjee
Sent: Tuesday, June 10, 2008 8:44 AM
To: users at gecode.org
Subject: [gecode-users] Intelligent backtracking methods

Hi,
I want to know if the DFS search implements any intelligent backtracking 
methods (for example backjumping, conflict directed backjumping etc).

Thanking you.

With regards
Debdeep

-- 
Debdeep Banerjee
PhD Candidate
CSL/RSISE/NICTA
Australian National University
Email: debdeep.banerjee at rsise.anu.edu.au
Web:http://rsise.anu.edu.au/~banerjed



_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From banerjed at rsise.anu.edu.au  Tue Jun 10 09:34:15 2008
From: banerjed at rsise.anu.edu.au (Debdeep Banerjee)
Date: Tue, 10 Jun 2008 17:34:15 +1000
Subject: [gecode-users] Intelligent backtracking methods
In-Reply-To: <000101c8cacb$6ba66d20$42f34760$@se>
References: <484E229B.9020408@rsise.anu.edu.au>
	<000101c8cacb$6ba66d20$42f34760$@se>
Message-ID: <484E2E77.9010508@rsise.anu.edu.au>

Hi,

> However, you can implement your own search methods as Gecode features an
> enormously powerful interface for programming search. In particular, as
> search is based on recomputation and copying, any move in the tree is easy.
>   
Is there any paper or documentation for that recomputation stuff ?

with regards
Debdeep

-- 
Debdeep Banerjee
PhD Candidate
CSL/RSISE/NICTA
Australian National University
Email: debdeep.banerjee at rsise.anu.edu.au
Web:http://rsise.anu.edu.au/~banerjed





From cschulte at kth.se  Tue Jun 10 10:18:14 2008
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 10 Jun 2008 10:18:14 +0200
Subject: [gecode-users] Intelligent backtracking methods
In-Reply-To: <484E2E77.9010508@rsise.anu.edu.au>
References: <484E229B.9020408@rsise.anu.edu.au>	<000101c8cacb$6ba66d20$42f34760$@se>
	<484E2E77.9010508@rsise.anu.edu.au>
Message-ID: <000e01c8cad2$8c3bc790$a4b356b0$@se>

Not that much dedicated to Gecode in particular. But the interface is in
large aspects very close to the Mozart interface for search which is well
documented:
	http://web.it.kth.se/~cschulte/paper.html?id=Schulte:LNAI:2002

The only difference is how recomputation in detail works, but that becomes
rather obvious when checking how recomputation is implemented for the search
engines in Gecode (check the file reco-stack).

Cheers
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Debdeep Banerjee
Sent: Tuesday, June 10, 2008 9:34 AM
To: cschulte at kth.se; users at gecode.org
Subject: Re: [gecode-users] Intelligent backtracking methods

Hi,

> However, you can implement your own search methods as Gecode features an
> enormously powerful interface for programming search. In particular, as
> search is based on recomputation and copying, any move in the tree is
easy.
>   
Is there any paper or documentation for that recomputation stuff ?

with regards
Debdeep

-- 
Debdeep Banerjee
PhD Candidate
CSL/RSISE/NICTA
Australian National University
Email: debdeep.banerjee at rsise.anu.edu.au
Web:http://rsise.anu.edu.au/~banerjed



_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From cschulte at kth.se  Tue Jun 10 10:30:01 2008
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 10 Jun 2008 10:30:01 +0200
Subject: [gecode-users] probabilistic choice process
In-Reply-To: <a6b4b44a0806091445o383dc494m5ee36341f602e28d@mail.gmail.com>
References: <a6b4b44a0806091445o383dc494m5ee36341f602e28d@mail.gmail.com>
Message-ID: <000f01c8cad4$2cf5e890$86e1b9b0$@se>

Hi,

 

I actually do not understand your question nor its context. This user group
is dedicated to how to _use_ Gecode, a system designed for solving
combinatorial constraint problems.

 

Your questions go more into the direction of how to _abuse_ Gecode. The use
of constraints in CCP and its variants is completely different than the use
of constraints for  solving combinatorial problems. Constraints for CCP have
the following essential features:

 - to communicate you have to have basic constraints with which you can
build data structures. That's not available here.

 - for CCP you are interested in synchronization through entailment over
data structures. That's not available here.

 

So why bother with Gecode? It does not strike me as meaningful.

 

Sorry for being so frank

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Mauricio Toro
Sent: Monday, June 09, 2008 11:45 PM
To: users at gecode.org
Subject: [gecode-users] probabilistic choice process

 

Hello all,

 

I am trying to write something in Gecode, which could

be a propagator, with this semantic:

 

when <boolean_var1, boolean_var2, ... boolean_varn> do <something with those
who are assigned to true>

 

I know, it seems difficult. But, any ideas are welcome.

It will be used to implement an interpreter for a probabilistic CCP
calculus.

 

Thanks !

 

Mauricio

-- 
Mauricio Toro Bermudez
Estudiante de Ingenier?a de Sistemas
Pontificia Universidad Javeriana, Colombia

Stagiare ? l'Ircam
1, place Igor-Stravinsky 75004 Paris, 
France de 2008 ? 2009 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080610/ed5128f9/attachment.htm>

From tias.guns at cs.kuleuven.be  Tue Jun 10 14:27:45 2008
From: tias.guns at cs.kuleuven.be (Tias Guns)
Date: Tue, 10 Jun 2008 14:27:45 +0200
Subject: [gecode-users] Intelligent backtracking methods
In-Reply-To: <000e01c8cad2$8c3bc790$a4b356b0$@se>
References: <484E229B.9020408@rsise.anu.edu.au>
	<000101c8cacb$6ba66d20$42f34760$@se>
	<484E2E77.9010508@rsise.anu.edu.au>
	<000e01c8cad2$8c3bc790$a4b356b0$@se>
Message-ID: <op.uci8wjqiqa8xjr@demerzel.cs.kuleuven.be>

Just out of interesest, I wonder how this relates to the constraint store ?
More specifically, if a constraint does GECODE_REWRITE(...) I can imagine  
the space could be cloned at that point ? Anything further in the search  
space will be recomputed from that clone (with rewritten constraint) on,  
and backtracking to something before will be recomputed from an earlier  
clone (with original constraint) ?

Or is this independant, and will a recomputation (from a clone before the  
rewrite) just rewrite the constraint over and over again (for different  
recomputations) ?
Given the modular way Gecode is written, this latter seems rather  
plausible. It's just a bit surprising that would be so efficient...


Greetings,
Tias

On Tue, 10 Jun 2008 10:18:14 +0200, Christian Schulte <cschulte at kth.se>  
wrote:

> Not that much dedicated to Gecode in particular. But the interface is in
> large aspects very close to the Mozart interface for search which is well
> documented:
> 	http://web.it.kth.se/~cschulte/paper.html?id=Schulte:LNAI:2002
>
> The only difference is how recomputation in detail works, but that  
> becomes
> rather obvious when checking how recomputation is implemented for the  
> search
> engines in Gecode (check the file reco-stack).
>
> Cheers
> Christian
>
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
>
>
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On  
> Behalf
> Of Debdeep Banerjee
> Sent: Tuesday, June 10, 2008 9:34 AM
> To: cschulte at kth.se; users at gecode.org
> Subject: Re: [gecode-users] Intelligent backtracking methods
>
> Hi,
>
>> However, you can implement your own search methods as Gecode features an
>> enormously powerful interface for programming search. In particular, as
>> search is based on recomputation and copying, any move in the tree is
> easy.
>>
> Is there any paper or documentation for that recomputation stuff ?
>
> with regards
> Debdeep
>





From cschulte at kth.se  Tue Jun 10 14:41:34 2008
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 10 Jun 2008 14:41:34 +0200
Subject: [gecode-users] Intelligent backtracking methods
In-Reply-To: <op.uci8wjqiqa8xjr@demerzel.cs.kuleuven.be>
References: <484E229B.9020408@rsise.anu.edu.au>	<000101c8cacb$6ba66d20$42f34760$@se>	<484E2E77.9010508@rsise.anu.edu.au>	<000e01c8cad2$8c3bc790$a4b356b0$@se>
	<op.uci8wjqiqa8xjr@demerzel.cs.kuleuven.be>
Message-ID: <003f01c8caf7$510abc10$f3203430$@se>

Cloning is full cloning: not only the variables but everything is copied,
including propagators, branchings, what not.

So in your concrete example, if you keep a clone c of a space s and then do
something to s, it will not change c.

Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Tias Guns
Sent: Tuesday, June 10, 2008 2:28 PM
To: users at gecode.org
Subject: Re: [gecode-users] Intelligent backtracking methods

Just out of interesest, I wonder how this relates to the constraint store ?
More specifically, if a constraint does GECODE_REWRITE(...) I can imagine  
the space could be cloned at that point ? Anything further in the search  
space will be recomputed from that clone (with rewritten constraint) on,  
and backtracking to something before will be recomputed from an earlier  
clone (with original constraint) ?

Or is this independant, and will a recomputation (from a clone before the  
rewrite) just rewrite the constraint over and over again (for different  
recomputations) ?
Given the modular way Gecode is written, this latter seems rather  
plausible. It's just a bit surprising that would be so efficient...


Greetings,
Tias

On Tue, 10 Jun 2008 10:18:14 +0200, Christian Schulte <cschulte at kth.se>  
wrote:

> Not that much dedicated to Gecode in particular. But the interface is in
> large aspects very close to the Mozart interface for search which is well
> documented:
> 	http://web.it.kth.se/~cschulte/paper.html?id=Schulte:LNAI:2002
>
> The only difference is how recomputation in detail works, but that  
> becomes
> rather obvious when checking how recomputation is implemented for the  
> search
> engines in Gecode (check the file reco-stack).
>
> Cheers
> Christian
>
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
>
>
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On  
> Behalf
> Of Debdeep Banerjee
> Sent: Tuesday, June 10, 2008 9:34 AM
> To: cschulte at kth.se; users at gecode.org
> Subject: Re: [gecode-users] Intelligent backtracking methods
>
> Hi,
>
>> However, you can implement your own search methods as Gecode features an
>> enormously powerful interface for programming search. In particular, as
>> search is based on recomputation and copying, any move in the tree is
> easy.
>>
> Is there any paper or documentation for that recomputation stuff ?
>
> with regards
> Debdeep
>



_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From O.Kullmann at swansea.ac.uk  Tue Jun 10 20:21:03 2008
From: O.Kullmann at swansea.ac.uk (Oliver Kullmann)
Date: Tue, 10 Jun 2008 19:21:03 +0100
Subject: [gecode-users] implementing branching heuristics
In-Reply-To: <000801c8ca71$488f1170$d9ad3450$@se>
References: <20080606195521.GH20911@cs-wsok.swansea.ac.uk>
	<002a01c8c958$37521390$a5f63ab0$@se>
	<20080609193210.GQ20911@cs-wsok.swansea.ac.uk>
	<000801c8ca71$488f1170$d9ad3450$@se>
Message-ID: <20080610182103.GE29993@cs-wsok.swansea.ac.uk>

On Mon, Jun 09, 2008 at 10:42:02PM +0200, Christian Schulte wrote:
> Yes, using a search engine should point always to the freshest version. It
> is highly annoying if you get zillions of webpages all of which are out of
> date (for example, Java and many other software packages require (or ask
> for) the same).
>

I'll see.
 
> Gecode is _not_ GPL, it is distributed under the MIT license (check the
> license, please)! And we kindly ask. So if you want to make the life of
> other users more miserable, than you are still allowed to do so ;-) However,
> we just ask for common sense here.
> 

Of course! My question was not about "why on earth ...", but I was asking
from a similar position --- with my library I have the same problem,
and so I'm interested in the argument.
And regarding licence issues, I'm always curious out of necessity
regarding legal details --- since I'm in the same position, and
need to care!

> I am unfamiliar which tag to set to not have stuff indexed, I am only
> familiar with having a robots.txt file when using apache.
> 

I'll first set the meta-tags, and if nevertheless some pages will
be indexed, I'll do something about it.

Thanks

Oliver


> Cheers
> Christian
> 
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
> 
> -----Original Message-----
> From: Oliver Kullmann [mailto:O.Kullmann at swansea.ac.uk] 
> Sent: Monday, June 09, 2008 9:32 PM
> To: Christian Schulte; users at gecode.org
> Subject: Re: [gecode-users] implementing branching heuristics
> 
> thanks for the information!
> 
> I'll have a look into the examples, and see whether I
> can hack them.
> 
> Oliver
> 
> P.S. Regarding the documentation one finds the statement:
> 
> "We kindly ask that documentation is not installed anywhere in such a way
> that it will be indexed by search engines."
> 
> I wonder what is the reason for this? Actually, it creates a problem
> for my system, since the complete documentation is mirrored on the
> Internet, and I make available also all documentation of external
> sources installed by the OKlibrary, and this should include Gecode.
> Would it be enough if on the main page which links to the documentation
> I set the meta-tags to "no search engines"?
> 
> Isn't the documentation also open-source?
> Perhaps your reason is that search-engines shall point to
> your site, not to others?
> But this seems not compatible to me to the GPL licence, which
> doesn't allow to put restrictions on further distribution?
> 
> 
> 
> On Sun, Jun 08, 2008 at 01:10:05PM +0200, Christian Schulte wrote:
> > Hi,
> > 
> > please have a look at some of the examples that come with Gecode, there
> you
> > find how branch (which in turn creates simple variable/value branchings)
> is
> > used with different heuristics. There are two examples (black-hole.cc and
> > queen-armies.cc) that have simple custom branchings which might give you
> > some additional hints.
> > 
> > The current trunk has more support for predefined branchings (randomized,
> > tie-breaking, etc) that should make it into Gecode 3.* (scheduled to be
> > released around Sep/Oct). 
> > 
> > All the best
> > Christian
> > 
> > --
> > Christian Schulte, www.ict.kth.se/~cschulte/
> > 
> > 
> > -----Original Message-----
> > From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> > Of Oliver Kullmann
> > Sent: Friday, June 06, 2008 9:55 PM
> > To: users at gecode.org
> > Subject: [gecode-users] implementing branching heuristics
> > 
> > Hello,
> > 
> > based on my general theory of branching heuristics,
> > I would like to take some standard backtracking CSP solvers,
> > where I can just replace the variable ordering heuristics
> > (responsible for choosing the branching variable),
> > and there I would like to plug-in my generic
> > heuristics instead --- I expect relevant
> > performance gains.
> > 
> > The whole theory has been developed in the context
> > of SAT, but it is applicable for any width of
> > branchings (not just binary branchings), and this
> > is actually one of its strengths.
> > 
> > If somebody wants to read about it, please have
> > a look at report #7 at
> > 
> > http://www.swan.ac.uk/compsci/research/reports/2008/index.html 
> > 
> > It should be fairly easy to apply my generic heuristics.
> > I looked a bit at Minion, but this looks too much
> > black-box to me.
> > 
> > I guess in principle with gecode it should be doable.
> > But the documentation is rather terse, and I also
> > couldn't find some standard solvers, where I just
> > would replace some functions regarding the heuristics.
> > 
> > Perhaps somebody can help me here?
> > Or, if somebody is interested, we could have a collaboration.
> > I actually expect a "quick victory", i.e., it should
> > be quickly implementable, and it should yield some
> > nice improvements under fairly general circumstances.
> > 
> > So, I hope somebody is interest in a 
> > quick paper which will revolutionise CSP ;-)
> > Actually, I think it will be interesting.
> > 
> > Oliver
> > 
> > P.S. Another field for possible collaboration
> > would be library development: I am developing
> > the OKlibrary (http://www.ok-sat-library.org),
> > a generative library for generalised SAT solving.
> > In principle the OKlibrary covers also CSP,
> > but I'm yet "pre-alpha" :-(.
> > 
> > P.S.P.S. I noticed in the documentation
> > of gecode that "branchings" etc. are
> > used in a from my point of view somewhat
> > non-standard sense. I'm using "branching"
> > etc. as used by the SAT community and as
> > explained in my article, but this seems to
> > me also compatible to the notions used
> > in the Handbook of Constraint Satisfaction.
> > 
> > -- 
> > Dr. Oliver Kullmann
> > Computer Science Department
> > Swansea University
> > Faraday Building, Singleton Park
> > Swansea SA2 8PP, UK
> > http://cs.swan.ac.uk/~csoliver/
> > 
> > _______________________________________________
> > Gecode users mailing list
> > users at gecode.org
> > https://www.gecode.org/mailman/listinfo/gecode-users
> 
> -- 
> Dr. Oliver Kullmann
> Computer Science Department
> Swansea University
> Faraday Building, Singleton Park
> Swansea SA2 8PP, UK
> http://cs.swan.ac.uk/~csoliver/

-- 
Dr. Oliver Kullmann
Computer Science Department
Swansea University
Faraday Building, Singleton Park
Swansea SA2 8PP, UK
http://cs.swan.ac.uk/~csoliver/



From O.Kullmann at swansea.ac.uk  Tue Jun 10 20:37:44 2008
From: O.Kullmann at swansea.ac.uk (Oliver Kullmann)
Date: Tue, 10 Jun 2008 19:37:44 +0100
Subject: [gecode-users] implementing branching heuristics
In-Reply-To: <E2EB710B-A7ED-4576-82DF-48970C868E04@ps.uni-sb.de>
References: <20080606195521.GH20911@cs-wsok.swansea.ac.uk>
	<002a01c8c958$37521390$a5f63ab0$@se>
	<20080609193210.GQ20911@cs-wsok.swansea.ac.uk>
	<E2EB710B-A7ED-4576-82DF-48970C868E04@ps.uni-sb.de>
Message-ID: <20080610183744.GF29993@cs-wsok.swansea.ac.uk>

On Mon, Jun 09, 2008 at 10:41:41PM +0200, Guido Tack wrote:
> Oliver Kullmann wrote:
> >P.S. Regarding the documentation one finds the statement:
> >
> >"We kindly ask that documentation is not installed anywhere in such  
> >a way that it will be indexed by search engines."
> >
> >I wonder what is the reason for this? Actually, it creates a problem
> >for my system, since the complete documentation is mirrored on the
> >Internet, and I make available also all documentation of external
> >sources installed by the OKlibrary, and this should include Gecode.
> >Would it be enough if on the main page which links to the  
> >documentation
> >I set the meta-tags to "no search engines"?
> 
> Yes, that should do.
>

Just an idea: The html-documentation you distribute
could have already every page with the meta-tags set.
This would prevent some accidental mistakes.

Now sensitised to the issue (it didn't occur to me
before), if I take some action (for my *own* library,
and my own documentation), then I'll introduce a switch
such that by default every web-page has the meta-tags set
appropriately (on the user-side).
With doxygen this should be quite easy to
do, and for the other web-pages I have a little
m4-based "content management system".

Just to mention; thanks for the reply.

Oliver  

-- 
Dr. Oliver Kullmann
Computer Science Department
Swansea University
Faraday Building, Singleton Park
Swansea SA2 8PP, UK
http://cs.swan.ac.uk/~csoliver/



From cschulte at kth.se  Wed Jun 11 11:56:27 2008
From: cschulte at kth.se (Christian Schulte)
Date: Wed, 11 Jun 2008 11:56:27 +0200
Subject: [gecode-users] implementing branching heuristics
In-Reply-To: <20080610183744.GF29993@cs-wsok.swansea.ac.uk>
References: <20080606195521.GH20911@cs-wsok.swansea.ac.uk>	<002a01c8c958$37521390$a5f63ab0$@se>	<20080609193210.GQ20911@cs-wsok.swansea.ac.uk>	<E2EB710B-A7ED-4576-82DF-48970C868E04@ps.uni-sb.de>
	<20080610183744.GF29993@cs-wsok.swansea.ac.uk>
Message-ID: <001201c8cba9$6b23d0c0$416b7240$@se>

Actually, that's a good one. Thanks. We should generate it always with meta
comments and rip them out for what is on our webpage.

Cheers
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Oliver Kullmann
Sent: Tuesday, June 10, 2008 8:38 PM
To: Guido Tack
Cc: users at gecode.org
Subject: Re: [gecode-users] implementing branching heuristics

On Mon, Jun 09, 2008 at 10:41:41PM +0200, Guido Tack wrote:
> Oliver Kullmann wrote:
> >P.S. Regarding the documentation one finds the statement:
> >
> >"We kindly ask that documentation is not installed anywhere in such  
> >a way that it will be indexed by search engines."
> >
> >I wonder what is the reason for this? Actually, it creates a problem
> >for my system, since the complete documentation is mirrored on the
> >Internet, and I make available also all documentation of external
> >sources installed by the OKlibrary, and this should include Gecode.
> >Would it be enough if on the main page which links to the  
> >documentation
> >I set the meta-tags to "no search engines"?
> 
> Yes, that should do.
>

Just an idea: The html-documentation you distribute
could have already every page with the meta-tags set.
This would prevent some accidental mistakes.

Now sensitised to the issue (it didn't occur to me
before), if I take some action (for my *own* library,
and my own documentation), then I'll introduce a switch
such that by default every web-page has the meta-tags set
appropriately (on the user-side).
With doxygen this should be quite easy to
do, and for the other web-pages I have a little
m4-based "content management system".

Just to mention; thanks for the reply.

Oliver  

-- 
Dr. Oliver Kullmann
Computer Science Department
Swansea University
Faraday Building, Singleton Park
Swansea SA2 8PP, UK
http://cs.swan.ac.uk/~csoliver/

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From josel2820 at gmail.com  Thu Jun 12 02:26:16 2008
From: josel2820 at gmail.com (Jose Luis _)
Date: Wed, 11 Jun 2008 19:26:16 -0500
Subject: [gecode-users] Question about Gist
Message-ID: <f5fee82a0806111726m69ee0217idb50414c63f4943b@mail.gmail.com>

Greetings,
I wonder if I can have a small simple example in how to use Gist.
>From what Ive read I must implement a class which extends from Inspector.
But I couldnt get it to work.
Thank you in advance.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080611/5995987e/attachment.htm>

From josel2820 at gmail.com  Thu Jun 12 02:26:16 2008
From: josel2820 at gmail.com (Jose Luis _)
Date: Wed, 11 Jun 2008 19:26:16 -0500
Subject: [gecode-users] Question about Gist
Message-ID: <f5fee82a0806111726m69ee0217idb50414c63f4943b@mail.gmail.com>

Greetings,
I wonder if I can have a small simple example in how to use Gist.
>From what Ive read I must implement a class which extends from Inspector.
But I couldnt get it to work.
Thank you in advance.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080611/5995987e/attachment-0001.htm>

From tack at ps.uni-sb.de  Thu Jun 12 07:33:54 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Thu, 12 Jun 2008 07:33:54 +0200
Subject: [gecode-users] Question about Gist
In-Reply-To: <f5fee82a0806111726m69ee0217idb50414c63f4943b@mail.gmail.com>
References: <f5fee82a0806111726m69ee0217idb50414c63f4943b@mail.gmail.com>
Message-ID: <C69AB239-506E-4B8C-AFA4-23EA7EC1C7CD@ps.uni-sb.de>

Jose Luis _ wrote:

> Greetings,
> I wonder if I can have a small simple example in how to use Gist.
> From what Ive read I must implement a class which extends from  
> Inspector.
> But I couldnt get it to work.

Are you using Java or C++?

Cheers,
	Guido




From mauriciotorob at gmail.com  Thu Jun 12 12:10:38 2008
From: mauriciotorob at gmail.com (Mauricio Toro)
Date: Thu, 12 Jun 2008 12:10:38 +0200
Subject: [gecode-users] How to compile faster gecode programs
Message-ID: <a6b4b44a0806120310y48248165w1c212234243c39b4@mail.gmail.com>

Hello all,
I've been developing an application with Gecode.
I am compiling this way:

g++ -I. -DNDEBUG -fvisibility=hidden -fPIC -Wextra -Wall -pipe -ggdb -O3
-fno-strict-aliasing -finline-limit=3000 -ffast-math    \
 -o examples/nttcfo  examples/nttcfo.cc -lgecodesearch -lgecodecpltset
 -lgecodeset -lgecodeint -lgecodeminimodel -lgecodeserialization
-lgecodekernel -lgecodesupport -L
/System/Library/Frameworks/MidiShare.framework/MidiShare

It has been great for the developement, but now, I want the compilation
and the application to run faster and I don't want to add support
for assertions, ggdb, debug symbols, etc.

How should I compile?

Additionally, I would like to know if it matters when say
-lgecodecpltset -lgecodeserialization, etc
when I am not using those APIs.

Thanks

-- 
Mauricio Toro Bermudez
Estudiante de Ingenier?a de Sistemas
Pontificia Universidad Javeriana, Colombia

Stagiare ? l'Ircam
1, place Igor-Stravinsky 75004 Paris,
France de 2008 ? 2009
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080612/f9b06b38/attachment.htm>

From tack at ps.uni-sb.de  Thu Jun 12 12:38:37 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Thu, 12 Jun 2008 12:38:37 +0200
Subject: [gecode-users] How to compile faster gecode programs
In-Reply-To: <a6b4b44a0806120310y48248165w1c212234243c39b4@mail.gmail.com>
References: <a6b4b44a0806120310y48248165w1c212234243c39b4@mail.gmail.com>
Message-ID: <95E3C5AA-9F4B-4AB4-BBE4-479A6A1598F6@ps.uni-sb.de>

Mauricio Toro wrote:
> I've been developing an application with Gecode.
> I am compiling this way:
>
> g++ -I. -DNDEBUG -fvisibility=hidden -fPIC -Wextra -Wall -pipe -ggdb  
> -O3 -fno-strict-aliasing -finline-limit=3000 -ffast-math    \
> 	 -o examples/nttcfo  examples/nttcfo.cc -lgecodesearch - 
> lgecodecpltset  -lgecodeset -lgecodeint -lgecodeminimodel - 
> lgecodeserialization -lgecodekernel -lgecodesupport -L /System/ 
> Library/Frameworks/MidiShare.framework/MidiShare
>
> It has been great for the developement, but now, I want the  
> compilation
> and the application to run faster and I don't want to add support
> for assertions, ggdb, debug symbols, etc.

You already used full optimization (-O3), and no assertions are  
compiled in (-DNDEBUG).  The only thing left are the symbols (-ggdb),  
which shouldn't do much harm.

> How should I compile?

Exactly the way you did.

> Additionally, I would like to know if it matters when say
> -lgecodecpltset -lgecodeserialization, etc
> when I am not using those APIs.

If you don't need them, you don't have to link them, but that won't  
change your executable's efficiency. A slightly faster system can be  
built by disabling set variables when you compile Gecode, i.e., using  
the --disable-set-vars configure switch.  But I doubt the performance  
will be really noticeably faster for you.

Cheers,
	Guido




From tack at ps.uni-sb.de  Thu Jun 12 16:43:12 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Thu, 12 Jun 2008 16:43:12 +0200
Subject: [gecode-users] Question about Gist
In-Reply-To: <f5fee82a0806120709p661d25a5p24ac532745ec18f7@mail.gmail.com>
References: <f5fee82a0806111726m69ee0217idb50414c63f4943b@mail.gmail.com>
	<C69AB239-506E-4B8C-AFA4-23EA7EC1C7CD@ps.uni-sb.de>
	<f5fee82a0806120709p661d25a5p24ac532745ec18f7@mail.gmail.com>
Message-ID: <FD93AE9A-6CC0-402F-BDE6-95C87D86CCFA@ps.uni-sb.de>

Jose Luis _ wrote:

> 2008/6/12 Guido Tack <tack at ps.uni-sb.de>:
> Jose Luis _ wrote:
>
> Greetings,
> I wonder if I can have a small simple example in how to use Gist.
> From what Ive read I must implement a class which extends from  
> Inspector.
> But I couldnt get it to work.
>
> Are you using Java or C++?
>
> I Am using C++, thanks.

The easiest way is to use the Gist::PrintingInspector.  For this, just  
implement a function

void  print(std::ostream& os) {...}

that outputs the current state to the stream os (look at the examples  
that come with Gecode, like queens.cc).  Then call Gist like this:

Gecode::Gist::PrintingInspector<YourModelClass> pi("Name of your  
model");
YourModelClass* s = new YourModelClass();
Gecode::explore(s, &pi);
delete s;

If you want something more fancy, just write your own inspector.  All  
you have to do is implement the function inspect, which gets the space  
of the node that has been double-clicked.

Cheers,
	Guido

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080612/b420d41a/attachment.htm>

From mauriciotorob at gmail.com  Fri Jun 13 13:20:40 2008
From: mauriciotorob at gmail.com (Mauricio Toro)
Date: Fri, 13 Jun 2008 13:20:40 +0200
Subject: [gecode-users] Reified Domain and relation propagators for Sets are
	too slow
Message-ID: <a6b4b44a0806130420t7ac0de38o3c3132b2a3ce2e33@mail.gmail.com>

Hello all,
I am doing extensive use of
Gecode::rel<http://www.gecode.org/gecode-doc-latest/group__TaskModelSetRel.html#ga5e2a7f2de88428535b7d2c57021791f>
(Space
*home, IntVar x<http://www.gecode.org/gecode-doc-latest/kakuro_8cc.html#e928e6fd222358d27be0a56a8ade81ce>,
SetRelType r, SetVar s,BoolVar b)
and
Gecode::dom<http://www.gecode.org/gecode-doc-latest/group__TaskModelSetDom.html#gc81dd15456e59c5888bc0da4c1fa0fc8>
(Space
*home, SetVar x<http://www.gecode.org/gecode-doc-latest/kakuro_8cc.html#e928e6fd222358d27be0a56a8ade81ce>,
SetRelType r, int i,BoolVar b)

This makes my program run really slow. I saw the implementation and this
functions call the subset propagator. But, I don't think it is necessary.
Is there a way to to make them faster? perhaps writting a propagator for

Integer \in Set
IntVar \in Set

Instead of

{Integer} subset of Set and {IntVar} subset of Set ?

Any ideas are welcomed,

Thanks

-- 
Mauricio Toro Bermudez
Estudiante de Ingenier?a de Sistemas
Pontificia Universidad Javeriana, Colombia

Stagiare ? l'Ircam
1, place Igor-Stravinsky 75004 Paris,
France de 2008 ? 2009
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080613/e7530976/attachment.htm>

From tack at ps.uni-sb.de  Fri Jun 13 23:21:46 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Fri, 13 Jun 2008 23:21:46 +0200
Subject: [gecode-users] Reified Domain and relation propagators for Sets
	are too slow
In-Reply-To: <a6b4b44a0806130420t7ac0de38o3c3132b2a3ce2e33@mail.gmail.com>
References: <a6b4b44a0806130420t7ac0de38o3c3132b2a3ce2e33@mail.gmail.com>
Message-ID: <8F97AB3F-655C-4167-B926-89DBF2EB2F58@ps.uni-sb.de>

Mauricio Toro wrote:
> I am doing extensive use of
> Gecode::rel (Space *home, IntVar x, SetRelType r, SetVar s,BoolVar b)
> and
> Gecode::dom (Space *home, SetVar x, SetRelType r, int i,BoolVar b)
>
> This makes my program run really slow. I saw the implementation and  
> this
> functions call the subset propagator. But, I don't think it is  
> necessary.
> Is there a way to to make them faster? perhaps writting a propagator  
> for
>
> Integer \in Set
> IntVar \in Set
>
> Instead of
>
> {Integer} subset of Set and {IntVar} subset of Set ?

The inferences you have to make for IntVars are quite similar to those  
for sets, so I wouldn't expect too big an overhead there.  I guess a  
dedicated propagator for int arguments might be slightly better, but I  
don't know how much difference it would make.  Note that the subset  
propagator is instantiated with a constant set view, so in fact it is  
a specialized version.  But just give it a try, the reified int \in  
SetVar propagator shouldn't be hard to do.

Guido




From malcolmr at cse.unsw.edu.au  Mon Jun 16 06:58:48 2008
From: malcolmr at cse.unsw.edu.au (Malcolm Ryan)
Date: Mon, 16 Jun 2008 14:58:48 +1000
Subject: [gecode-users] Gecode/J: Assertion failure
Message-ID: <8699618D-08AF-4D4B-84DD-FC43A435B19E@cse.unsw.edu.au>

I just got the following crash in my Gecode/J program:

java: /home/malcolmr/include/gecode/int/extensional/tuple-set.icc:88:  
bool Gecode::TupleSet::TupleSetI::finalized() const: Assertion `(excess
  == -1 && domsize >= 0) || (excess != -1 && domsize == -1)' failed.

I'll look into it and see if I can reproduce it reliably.

Malcolm



From mauriciotorob at gmail.com  Mon Jun 16 16:53:01 2008
From: mauriciotorob at gmail.com (Mauricio Toro)
Date: Mon, 16 Jun 2008 16:53:01 +0200
Subject: [gecode-users] Copy the domain from variable to another in diff.
	spaces
Message-ID: <a6b4b44a0806160753l56e333eeka4279b3573d63623@mail.gmail.com>

Hello all,


I am doing an application with Gecode using several Spaces.

I need to copy the domain from IntVars and SetVars from one Space to
another.

But, once I copy the domain, the old space is deleted, therefore I do not

want some sort of "channel" constraint.


For example:


Space * space1;

IntVar x(space1, 1,10);

IntSet y;

copythedomain(x,y);

//do some computation

delete space1;

Space * space2;

IntVar z(space2,1,100);

copythedomain(z,y);

//do some computation

delete space2;


I tried with these constraints:

dom(space1,x,y); dom(space2,z,y);

But they did not work.


What can I do?


Thanks !!

-- 
Mauricio Toro Bermudez
Estudiante de Ingenier?a de Sistemas
Pontificia Universidad Javeriana, Colombia

Stagiare ? l'Ircam
1, place Igor-Stravinsky 75004 Paris,
France de 2008 ? 2009
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080616/d80e03da/attachment.htm>

From mauriciotorob at gmail.com  Mon Jun 16 16:53:01 2008
From: mauriciotorob at gmail.com (Mauricio Toro)
Date: Mon, 16 Jun 2008 16:53:01 +0200
Subject: [gecode-users] Copy the domain from variable to another in diff.
	spaces
Message-ID: <a6b4b44a0806160753l56e333eeka4279b3573d63623@mail.gmail.com>

Hello all,


I am doing an application with Gecode using several Spaces.

I need to copy the domain from IntVars and SetVars from one Space to
another.

But, once I copy the domain, the old space is deleted, therefore I do not

want some sort of "channel" constraint.


For example:


Space * space1;

IntVar x(space1, 1,10);

IntSet y;

copythedomain(x,y);

//do some computation

delete space1;

Space * space2;

IntVar z(space2,1,100);

copythedomain(z,y);

//do some computation

delete space2;


I tried with these constraints:

dom(space1,x,y); dom(space2,z,y);

But they did not work.


What can I do?


Thanks !!

-- 
Mauricio Toro Bermudez
Estudiante de Ingenier?a de Sistemas
Pontificia Universidad Javeriana, Colombia

Stagiare ? l'Ircam
1, place Igor-Stravinsky 75004 Paris,
France de 2008 ? 2009
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080616/d80e03da/attachment-0001.htm>

From tack at ps.uni-sb.de  Mon Jun 16 17:49:15 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Mon, 16 Jun 2008 17:49:15 +0200
Subject: [gecode-users] Copy the domain from variable to another in
	diff. spaces
In-Reply-To: <a6b4b44a0806160753l56e333eeka4279b3573d63623@mail.gmail.com>
References: <a6b4b44a0806160753l56e333eeka4279b3573d63623@mail.gmail.com>
Message-ID: <702F4506-B7E8-4524-AD87-281141B50605@ps.uni-sb.de>

Mauricio Toro wrote:

> Hello all,
>
> I am doing an application with Gecode using several Spaces.
> I need to copy the domain from IntVars and SetVars from one Space to  
> another.
> But, once I copy the domain, the old space is deleted, therefore I  
> do not
> want some sort of "channel" constraint.
>
> For example:
>
> Space * space1;
> IntVar x(space1, 1,10);
> IntSet y;
> copythedomain(x,y);

What do you mean here, that the set y should reflect the current  
domain of x?

> //do some computation
> delete space1;
> Space * space2;
> IntVar z(space2,1,100);
> copythedomain(z,y);

And now, what should the result be?  Do you expect y to be overwritten  
with the domain of z, or intersected?  Or do you expect z to be  
constrained to the value of y? (I guess the latter)

> //do some computation
> delete space2;
>
> I tried with these constraints:
> dom(space1,x,y); dom(space2,z,y);
> But they did not work.

An IntSet is never modified by a call to dom, after all, it's not a  
constraint variable!  It works exactly the other way around: the  
variable domain is constrained to be a subset of the IntSet.

> What can I do?

The code is not tested, but this is approximately how it should work:

void copythedomain(Space* home, IntVar from, IntVar to) {
   IntVarRanges fromR(from);
   IntSet fromS(fromR);
   dom(home, to, fromS);
}

Note that home has to be the space that "to" lives in, and you don't  
need the space that "from" lives in.

Cheers,
	Guido




From mauriciotorob at gmail.com  Mon Jun 16 18:03:01 2008
From: mauriciotorob at gmail.com (Mauricio Toro)
Date: Mon, 16 Jun 2008 18:03:01 +0200
Subject: [gecode-users] Copy the domain from variable to another in
	diff. spaces
In-Reply-To: <702F4506-B7E8-4524-AD87-281141B50605@ps.uni-sb.de>
References: <a6b4b44a0806160753l56e333eeka4279b3573d63623@mail.gmail.com>
	<702F4506-B7E8-4524-AD87-281141B50605@ps.uni-sb.de>
Message-ID: <a6b4b44a0806160903m3a5409e1iebe72df3abbc5e08@mail.gmail.com>

I am going to try those ideas !!
And.. do you have any suggerence to do the same
but with SetVars instead of IntVars?

Thanks

2008/6/16 Guido Tack <tack at ps.uni-sb.de>:

> Mauricio Toro wrote:
>
>  Hello all,
>>
>> I am doing an application with Gecode using several Spaces.
>> I need to copy the domain from IntVars and SetVars from one Space to
>> another.
>> But, once I copy the domain, the old space is deleted, therefore I do not
>> want some sort of "channel" constraint.
>>
>> For example:
>>
>> Space * space1;
>> IntVar x(space1, 1,10);
>> IntSet y;
>> copythedomain(x,y);
>>
>
> What do you mean here, that the set y should reflect the current domain of
> x?
>
>  //do some computation
>> delete space1;
>> Space * space2;
>> IntVar z(space2,1,100);
>> copythedomain(z,y);
>>
>
> And now, what should the result be?  Do you expect y to be overwritten with
> the domain of z, or intersected?  Or do you expect z to be constrained to
> the value of y? (I guess the latter)
>
>  //do some computation
>> delete space2;
>>
>> I tried with these constraints:
>> dom(space1,x,y); dom(space2,z,y);
>> But they did not work.
>>
>
> An IntSet is never modified by a call to dom, after all, it's not a
> constraint variable!  It works exactly the other way around: the variable
> domain is constrained to be a subset of the IntSet.
>
>  What can I do?
>>
>
> The code is not tested, but this is approximately how it should work:
>
> void copythedomain(Space* home, IntVar from, IntVar to) {
>  IntVarRanges fromR(from);
>  IntSet fromS(fromR);
>  dom(home, to, fromS);
> }
>
> Note that home has to be the space that "to" lives in, and you don't need
> the space that "from" lives in.
>
> Cheers,
>        Guido
>
>


-- 
Mauricio Toro Bermudez
Estudiante de Ingenier?a de Sistemas
Pontificia Universidad Javeriana, Colombia

Stagiare ? l'Ircam
1, place Igor-Stravinsky 75004 Paris,
France de 2008 ? 2009
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080616/2516baa7/attachment.htm>

From mauriciotorob at gmail.com  Mon Jun 16 18:10:40 2008
From: mauriciotorob at gmail.com (Mauricio Toro)
Date: Mon, 16 Jun 2008 18:10:40 +0200
Subject: [gecode-users] papers to cite
Message-ID: <a6b4b44a0806160910u6a0e399dicd2f42f932e879e1@mail.gmail.com>

Hello,
I am writting a tech report about my implementation of CCP
and I want argue that using Gecode is a better choice
than using Mozart-Oz for doing Concurrent Constraint Programming.

I know you guys do not like that idea of doing CCP with Gecode,
but I was wondering if you can give reference some papers about:

- the performance tests where Gecode is compared with other
constraint solvers.
- why is the idea of using fixpoints and spaces more efficient
than the threads and nested spaces used in mozart?
- why are propagators in gecode so efficient?
- why we do not use combinators in gecode?

and related information...

Thanks

Mauricio


-- 
Mauricio Toro Bermudez
Estudiante de Ingenier?a de Sistemas
Pontificia Universidad Javeriana, Colombia

Stagiare ? l'Ircam
1, place Igor-Stravinsky 75004 Paris,
France de 2008 ? 2009
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080616/4fdb9b8f/attachment.htm>

From tack at ps.uni-sb.de  Tue Jun 17 09:37:20 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Tue, 17 Jun 2008 09:37:20 +0200
Subject: [gecode-users] Copy the domain from variable to another in
	diff. spaces
In-Reply-To: <a6b4b44a0806160903m3a5409e1iebe72df3abbc5e08@mail.gmail.com>
References: <a6b4b44a0806160753l56e333eeka4279b3573d63623@mail.gmail.com>
	<702F4506-B7E8-4524-AD87-281141B50605@ps.uni-sb.de>
	<a6b4b44a0806160903m3a5409e1iebe72df3abbc5e08@mail.gmail.com>
Message-ID: <84E4BF72-3297-4204-8512-CA69D9031036@ps.uni-sb.de>

Mauricio Toro wrote:

> I am going to try those ideas !!
>
> And.. do you have any suggerence to do the same
> but with SetVars instead of IntVars?

You'll have to use SetVarGlbRanges, SetVarLubRanges, and the cardMin/ 
cardMax function of SetVars.

Guido




From filip.konvicka at logis.cz  Tue Jun 17 16:26:47 2008
From: filip.konvicka at logis.cz (=?UTF-8?B?RmlsaXAgS29udmnEjWth?=)
Date: Tue, 17 Jun 2008 16:26:47 +0200
Subject: [gecode-users] FloatVar alpha release
Message-ID: <4857C9A7.2080009@logis.cz>

Dear all,

sorry for taking so long, here's the initial version of our float 
variable efforts. The purpose of this release is to get initial feedback 
and start discussions about both the design and implementation.

The code has been lying here for at least a month and we're currently 
busy with many other things, but I do not want to wait any longer so I 
hope that any feedback we might get from you will make us improve what 
we've done so far. Any feedback is highly welcome!


The patch (float.zip/float.patch) is generated against the 2.1.1 
release. I hope I've included all that is necessary.

The changes to Gecode itself are the float.patch and the float.vis file 
(that goes to the source root directory, where "variables.vsl" resides). 
The change involves adding a new variable type "slot" to Gecode, without 
adding a corresponding variable implementation.

The actual implementation of "FloatVars" is in float_var.hpp and 
float_view.hpp. These are template classes that are instantiated in your 
application based on what interval library implementation you use with 
them. We provide a specialization of the templates for Boost.Interval, 
which ( to make things more obscure :-) ) can be used with multiple 
low-level FP libraries itself.

The release includes:

template<typename DomainType> struct FloatVarImp;
- a "concept", unspecialized template FloatVar implementation
   class and an associated delta class

template<typename IntervalArg>
struct FloatVarImp<boost::numeric::interval<IntervalArg> >;
- specialization of the above template for Boost.Interval.

- Delta and View classes for the same


I also include a preview of propagator implementations for 
boost::numeric::interval<double> (see float_prop_preview.zip). Now these 
are really a preview (although we are currently using similar code in 
our development branch) and need some serious work that I hope I get to 
soon. The provided propagators are:
- binary minimum, maximum
- binary relational and reifieed binary relational (lq, gq, eq)
- arithmetic (add, sub, mul, div)

The intended changes include changing the classes to templates to 
support other Boost.Interval types and renaming of the propagators.

Overall, I'd like to address at least the following topics before a 
"beta" release:
- Finish the propagators and maybe provide a simple "splitting" branching.
- Support explicit instantiation of the templates. This means moving 
implementation out of the .hpp files, both for the variable and propagators.
- Verify the overall design. And this is my question to you all - is 
there some reason to have a Delta class at all? (I always forget what 
the deltas are supposed to represent...)


Cheers,
Filip






-------------- next part --------------
A non-text attachment was scrubbed...
Name: float.zip
Type: application/x-zip-compressed
Size: 8569 bytes
Desc: not available
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080617/71f7c82a/attachment.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: float_prop_preview.zip
Type: application/x-zip-compressed
Size: 4392 bytes
Desc: not available
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080617/71f7c82a/attachment-0001.bin>

From cschulte at kth.se  Tue Jun 17 20:01:58 2008
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 17 Jun 2008 20:01:58 +0200
Subject: [gecode-users] papers to cite
In-Reply-To: <a6b4b44a0806160910u6a0e399dicd2f42f932e879e1@mail.gmail.com>
References: <a6b4b44a0806160910u6a0e399dicd2f42f932e879e1@mail.gmail.com>
Message-ID: <000001c8d0a4$3d3226d0$b7967470$@se>

Sorry, but actually I did not express that I do not like what you do. 

 

I just said that CCP is about communication and synchronization which
presupposes the exchange of meaningful messages. This is impossible in
Gecode and hence Oz is by definition the better choice for CCP as Gecode is
no choice. As said, no opinion, just a fact.

 

Please, check the resources we provide so that you can do your own scholar
work.

 

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Mauricio Toro
Sent: Monday, June 16, 2008 6:11 PM
To: gecode list
Subject: [gecode-users] papers to cite

 

Hello,

 

I am writting a tech report about my implementation of CCP

and I want argue that using Gecode is a better choice

than using Mozart-Oz for doing Concurrent Constraint Programming.

 

I know you guys do not like that idea of doing CCP with Gecode,

but I was wondering if you can give reference some papers about:

 

- the performance tests where Gecode is compared with other

constraint solvers.

- why is the idea of using fixpoints and spaces more efficient

than the threads and nested spaces used in mozart?

- why are propagators in gecode so efficient?

- why we do not use combinators in gecode?

 

and related information...

 

Thanks

 

Mauricio

 


-- 
Mauricio Toro Bermudez
Estudiante de Ingenier?a de Sistemas
Pontificia Universidad Javeriana, Colombia

Stagiare ? l'Ircam
1, place Igor-Stravinsky 75004 Paris, 
France de 2008 ? 2009 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080617/657dd017/attachment.htm>

From carlvall at gmail.com  Wed Jun 18 01:38:03 2008
From: carlvall at gmail.com (Juan Carlos)
Date: Tue, 17 Jun 2008 18:38:03 -0500
Subject: [gecode-users] about the backtrack
Message-ID: <34d172b40806171638l5315e81eke1d1cfd4461e85c2@mail.gmail.com>

Hello:

In order to find the best solution of  a problem that I'm working on, I have
to branch over an IntVarArray , so  I have created a custom branch with an
heuristic. (like in the black hole or queens example).  And use the BAB
engine.

This  branching works fine, but it could be improved if the vars that should
be unassingned after  a basic solution is found are selected in a different
way. I mean like a custom backtrack with a function that selects the best
var to be reassigned.

Is that possible?  how ? .

thank you.


PD: I had deleted a lot of old messages of the list, so I dont know if
anyone has asked this before. Sorry if this question has been asked.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080617/8053f0b9/attachment.htm>

From tack at ps.uni-sb.de  Wed Jun 18 11:05:01 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Wed, 18 Jun 2008 11:05:01 +0200
Subject: [gecode-users] about the backtrack
In-Reply-To: <34d172b40806171638l5315e81eke1d1cfd4461e85c2@mail.gmail.com>
References: <34d172b40806171638l5315e81eke1d1cfd4461e85c2@mail.gmail.com>
Message-ID: <53ED0A4C-E63C-4E00-99C2-E19535B7C2A9@ps.uni-sb.de>

Juan Carlos wrote:
> In order to find the best solution of  a problem that I'm working  
> on, I have to branch over an IntVarArray , so  I have created a  
> custom branch with an heuristic. (like in the black hole or queens  
> example).  And use the BAB engine.
>
> This  branching works fine, but it could be improved if the vars  
> that should be unassingned after  a basic solution is found are  
> selected in a different way. I mean like a custom backtrack with a  
> function that selects the best var to be reassigned.

Backtracking in Gecode is based on copying and recomputation, and  
therefore does not "unassign" any variables.  When you backtrack, you  
restore a previous state in the search tree (for example that of the  
parent of the current search node), and then commit to another of its  
remaining alternatives.  The only way to determine where search  
proceeds is therefore in the branching.

Maybe, if you explain in a little more detail how you would like the  
search to behave, we can help you cast that idea into your custom  
branching.

Cheers,
	Guido




From carlvall at gmail.com  Wed Jun 18 21:05:21 2008
From: carlvall at gmail.com (Juan Carlos)
Date: Wed, 18 Jun 2008 12:05:21 -0700
Subject: [gecode-users] about the backtrack
In-Reply-To: <34d172b40806181100h514daf5at962040766fdd317e@mail.gmail.com>
References: <34d172b40806171638l5315e81eke1d1cfd4461e85c2@mail.gmail.com>
	<53ED0A4C-E63C-4E00-99C2-E19535B7C2A9@ps.uni-sb.de>
	<34d172b40806181100h514daf5at962040766fdd317e@mail.gmail.com>
Message-ID: <34d172b40806181205k62079883l6c1373c8847aa5f2@mail.gmail.com>

> Now I see, I was confused about how the backtrack works.
>
> The idea is a Local Search Method,  first find a basic solution, and then
> make little changes  till the best solution is found, here are the steps:
>
> 1)choose the best value for each variable (this value is selected by a
> function based on external information), once  all the variables had been
> assigned thats a basic solution.
> 2) Based on that solution , re-assign some variables in order to find a
> better solution in a fast way. The variables that are going to  be
> re-inserted are chosen by a function based on external information and the
> value  is chosen by the same function of step 1.
> 3) repeat 2 till no solution left.
>
> By external information I mean the information of the problem instance.
>
> Now I have some ideas about how to implement this local search but they are
> not clear yet. Any suggestions are welcome.
>
> Thank you.
>
> Juan Carlos
>
>
> On Wed, Jun 18, 2008 at 2:05 AM, Guido Tack <tack at ps.uni-sb.de> wrote:
>
>> Juan Carlos wrote:
>>
>>> In order to find the best solution of  a problem that I'm working on, I
>>> have to branch over an IntVarArray , so  I have created a custom branch with
>>> an heuristic. (like in the black hole or queens example).  And use the BAB
>>> engine.
>>>
>>> This  branching works fine, but it could be improved if the vars that
>>> should be unassingned after  a basic solution is found are selected in a
>>> different way. I mean like a custom backtrack with a function that selects
>>> the best var to be reassigned.
>>>
>>
>> Backtracking in Gecode is based on copying and recomputation, and
>> therefore does not "unassign" any variables.  When you backtrack, you
>> restore a previous state in the search tree (for example that of the parent
>> of the current search node), and then commit to another of its remaining
>> alternatives.  The only way to determine where search proceeds is therefore
>> in the branching.
>>
>> Maybe, if you explain in a little more detail how you would like the
>> search to behave, we can help you cast that idea into your custom branching.
>>
>> Cheers,
>>        Guido
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080618/2fff61e2/attachment.htm>

From tack at ps.uni-sb.de  Wed Jun 18 22:08:06 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Wed, 18 Jun 2008 22:08:06 +0200
Subject: [gecode-users] about the backtrack
In-Reply-To: <34d172b40806181205k62079883l6c1373c8847aa5f2@mail.gmail.com>
References: <34d172b40806171638l5315e81eke1d1cfd4461e85c2@mail.gmail.com>
	<53ED0A4C-E63C-4E00-99C2-E19535B7C2A9@ps.uni-sb.de>
	<34d172b40806181100h514daf5at962040766fdd317e@mail.gmail.com>
	<34d172b40806181205k62079883l6c1373c8847aa5f2@mail.gmail.com>
Message-ID: <F9B3A78A-7DE4-4697-9677-3E8A410EA085@ps.uni-sb.de>

Juan Carlos wrote:

> Now I see, I was confused about how the backtrack works.
>
> The idea is a Local Search Method,  first find a basic solution, and  
> then make little changes  till the best solution is found, here are  
> the steps:
>
> 1)choose the best value for each variable (this value is selected by  
> a function based on external information), once  all the variables  
> had been assigned thats a basic solution.
> 2) Based on that solution , re-assign some variables in order to  
> find a better solution in a fast way. The variables that are going  
> to  be re-inserted are chosen by a function based on external  
> information and the value  is chosen by the same function of step 1.
> 3) repeat 2 till no solution left.
>
> By external information I mean the information of the problem  
> instance.
>
> Now I have some ideas about how to implement this local search but  
> they are not clear yet. Any suggestions are welcome.

That sounds a lot like large neighborhood search.  I'd try using a  
plain BAB search to find a solution, and then start a nested search,  
where you create a new space, assign some of the variables, and run  
some limited BAB (e.g. using a time limit).  Once you find a better  
solution there, you reuse that for the original, "master" BAB search.  
If you don't find a better solution within the time limit, just go on  
in the master search.
To implement this, you'll probably have to implement your own search  
engines or at least modifiy ours, but it should be possible.

Cheers,
	Guido




From carlvall at gmail.com  Wed Jun 18 23:20:18 2008
From: carlvall at gmail.com (Juan Carlos)
Date: Wed, 18 Jun 2008 16:20:18 -0500
Subject: [gecode-users] about the backtrack
In-Reply-To: <F9B3A78A-7DE4-4697-9677-3E8A410EA085@ps.uni-sb.de>
References: <34d172b40806171638l5315e81eke1d1cfd4461e85c2@mail.gmail.com>
	<53ED0A4C-E63C-4E00-99C2-E19535B7C2A9@ps.uni-sb.de>
	<34d172b40806181100h514daf5at962040766fdd317e@mail.gmail.com>
	<34d172b40806181205k62079883l6c1373c8847aa5f2@mail.gmail.com>
	<F9B3A78A-7DE4-4697-9677-3E8A410EA085@ps.uni-sb.de>
Message-ID: <34d172b40806181420r6b529b34j2f1f6902f286ced0@mail.gmail.com>

Exactly! is large neighborhood search. And I get your idea is very clever.
thanks.

Juan Carlos.

On Wed, Jun 18, 2008 at 3:08 PM, Guido Tack <tack at ps.uni-sb.de> wrote:

> Juan Carlos wrote:
>
>  Now I see, I was confused about how the backtrack works.
>>
>> The idea is a Local Search Method,  first find a basic solution, and then
>> make little changes  till the best solution is found, here are the steps:
>>
>> 1)choose the best value for each variable (this value is selected by a
>> function based on external information), once  all the variables had been
>> assigned thats a basic solution.
>> 2) Based on that solution , re-assign some variables in order to find a
>> better solution in a fast way. The variables that are going to  be
>> re-inserted are chosen by a function based on external information and the
>> value  is chosen by the same function of step 1.
>> 3) repeat 2 till no solution left.
>>
>> By external information I mean the information of the problem instance.
>>
>> Now I have some ideas about how to implement this local search but they
>> are not clear yet. Any suggestions are welcome.
>>
>
> That sounds a lot like large neighborhood search.  I'd try using a plain
> BAB search to find a solution, and then start a nested search, where you
> create a new space, assign some of the variables, and run some limited BAB
> (e.g. using a time limit).  Once you find a better solution there, you reuse
> that for the original, "master" BAB search. If you don't find a better
> solution within the time limit, just go on in the master search.
> To implement this, you'll probably have to implement your own search
> engines or at least modifiy ours, but it should be possible.
>
> Cheers,
>        Guido
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080618/d32716ee/attachment.htm>

From mauriciotorob at gmail.com  Thu Jun 19 07:59:14 2008
From: mauriciotorob at gmail.com (Mauricio Toro)
Date: Thu, 19 Jun 2008 07:59:14 +0200
Subject: [gecode-users] about the backtrack
In-Reply-To: <a6b4b44a0806181427p137a7b2ci9ef0951fab03ec05@mail.gmail.com>
References: <34d172b40806171638l5315e81eke1d1cfd4461e85c2@mail.gmail.com>
	<53ED0A4C-E63C-4E00-99C2-E19535B7C2A9@ps.uni-sb.de>
	<34d172b40806181100h514daf5at962040766fdd317e@mail.gmail.com>
	<34d172b40806181205k62079883l6c1373c8847aa5f2@mail.gmail.com>
	<F9B3A78A-7DE4-4697-9677-3E8A410EA085@ps.uni-sb.de>
	<34d172b40806181420r6b529b34j2f1f6902f286ced0@mail.gmail.com>
	<a6b4b44a0806181427p137a7b2ci9ef0951fab03ec05@mail.gmail.com>
Message-ID: <a6b4b44a0806182259l70bd3f73w4a1c2b5b07c2fc02@mail.gmail.com>

Hello Juan Carlos, Guido and all,
Can you give some information about how to run the BAB search with a time
limit?
I am interesting in that too.

Thanks,

Mauricio

2008/6/18 Juan Carlos <carlvall at gmail.com>:

> Exactly! is large neighborhood search. And I get your idea is very clever.
> thanks.
>
> Juan Carlos.
>
> On Wed, Jun 18, 2008 at 3:08 PM, Guido Tack <tack at ps.uni-sb.de> wrote:
>
>> Juan Carlos wrote:
>>
>>  Now I see, I was confused about how the backtrack works.
>>>
>>> The idea is a Local Search Method,  first find a basic solution, and then
>>> make little changes  till the best solution is found, here are the steps:
>>>
>>> 1)choose the best value for each variable (this value is selected by a
>>> function based on external information), once  all the variables had been
>>> assigned thats a basic solution.
>>> 2) Based on that solution , re-assign some variables in order to find a
>>> better solution in a fast way. The variables that are going to  be
>>> re-inserted are chosen by a function based on external information and the
>>> value  is chosen by the same function of step 1.
>>> 3) repeat 2 till no solution left.
>>>
>>> By external information I mean the information of the problem instance.
>>>
>>> Now I have some ideas about how to implement this local search but they
>>> are not clear yet. Any suggestions are welcome.
>>>
>>
>> That sounds a lot like large neighborhood search.  I'd try using a plain
>> BAB search to find a solution, and then start a nested search, where you
>> create a new space, assign some of the variables, and run some limited BAB
>> (e.g. using a time limit).  Once you find a better solution there, you reuse
>> that for the original, "master" BAB search. If you don't find a better
>> solution within the time limit, just go on in the master search.
>> To implement this, you'll probably have to implement your own search
>> engines or at least modifiy ours, but it should be possible.
>>
>> Cheers,
>>        Guido
>>
>>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>


-- 
Mauricio Toro Bermudez
Estudiante de Ingenier?a de Sistemas
Pontificia Universidad Javeriana, Colombia

Stagiare ? l'Ircam
1, place Igor-Stravinsky 75004 Paris,
France de 2008 ? 2009



-- 
Mauricio Toro Bermudez
Estudiante de Ingenier?a de Sistemas
Pontificia Universidad Javeriana, Colombia

Stagiare ? l'Ircam
1, place Igor-Stravinsky 75004 Paris,
France de 2008 ? 2009
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080619/737c003b/attachment.htm>

From tack at ps.uni-sb.de  Thu Jun 19 09:26:11 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Thu, 19 Jun 2008 09:26:11 +0200
Subject: [gecode-users] about the backtrack
In-Reply-To: <a6b4b44a0806182259l70bd3f73w4a1c2b5b07c2fc02@mail.gmail.com>
References: <34d172b40806171638l5315e81eke1d1cfd4461e85c2@mail.gmail.com>
	<53ED0A4C-E63C-4E00-99C2-E19535B7C2A9@ps.uni-sb.de>
	<34d172b40806181100h514daf5at962040766fdd317e@mail.gmail.com>
	<34d172b40806181205k62079883l6c1373c8847aa5f2@mail.gmail.com>
	<F9B3A78A-7DE4-4697-9677-3E8A410EA085@ps.uni-sb.de>
	<34d172b40806181420r6b529b34j2f1f6902f286ced0@mail.gmail.com>
	<a6b4b44a0806181427p137a7b2ci9ef0951fab03ec05@mail.gmail.com>
	<a6b4b44a0806182259l70bd3f73w4a1c2b5b07c2fc02@mail.gmail.com>
Message-ID: <FDC1A20C-7EB0-4D5B-9D9F-D309248D534A@ps.uni-sb.de>

Mauricio Toro wrote:
> Can you give some information about how to run the BAB search with a  
> time limit?
> I am interesting in that too.

Please read the documentation on BAB and Stop objects, in particular  
TimeStop.

Cheers,
	Guido




From cschulte at kth.se  Thu Jun 19 11:17:43 2008
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 19 Jun 2008 11:17:43 +0200
Subject: [gecode-users] about the backtrack
In-Reply-To: <a6b4b44a0806182259l70bd3f73w4a1c2b5b07c2fc02@mail.gmail.com>
References: <34d172b40806171638l5315e81eke1d1cfd4461e85c2@mail.gmail.com>	<53ED0A4C-E63C-4E00-99C2-E19535B7C2A9@ps.uni-sb.de>	<34d172b40806181100h514daf5at962040766fdd317e@mail.gmail.com>	<34d172b40806181205k62079883l6c1373c8847aa5f2@mail.gmail.com>	<F9B3A78A-7DE4-4697-9677-3E8A410EA085@ps.uni-sb.de>	<34d172b40806181420r6b529b34j2f1f6902f286ced0@mail.gmail.com>	<a6b4b44a0806181427p137a7b2ci9ef0951fab03ec05@mail.gmail.com>
	<a6b4b44a0806182259l70bd3f73w4a1c2b5b07c2fc02@mail.gmail.com>
Message-ID: <001201c8d1ed$54ea3a70$febeaf50$@se>

That?s explained in the documentation. Look for stop objects.

 

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Mauricio Toro
Sent: Thursday, June 19, 2008 7:59 AM
To: gecode list
Subject: [gecode-users] about the backtrack

 


Hello Juan Carlos, Guido and all,

 

Can you give some information about how to run the BAB search with a time
limit?

I am interesting in that too.

 

Thanks,

 

Mauricio

 

2008/6/18 Juan Carlos <carlvall at gmail.com>:

Exactly! is large neighborhood search. And I get your idea is very clever.
thanks. 

Juan Carlos. 

 

On Wed, Jun 18, 2008 at 3:08 PM, Guido Tack <tack at ps.uni-sb.de> wrote:

Juan Carlos wrote:

Now I see, I was confused about how the backtrack works.

The idea is a Local Search Method,  first find a basic solution, and then
make little changes  till the best solution is found, here are the steps:

1)choose the best value for each variable (this value is selected by a
function based on external information), once  all the variables had been
assigned thats a basic solution.
2) Based on that solution , re-assign some variables in order to find a
better solution in a fast way. The variables that are going to  be
re-inserted are chosen by a function based on external information and the
value  is chosen by the same function of step 1.
3) repeat 2 till no solution left.

By external information I mean the information of the problem instance.

Now I have some ideas about how to implement this local search but they are
not clear yet. Any suggestions are welcome.

 

That sounds a lot like large neighborhood search.  I'd try using a plain BAB
search to find a solution, and then start a nested search, where you create
a new space, assign some of the variables, and run some limited BAB (e.g.
using a time limit).  Once you find a better solution there, you reuse that
for the original, "master" BAB search. If you don't find a better solution
within the time limit, just go on in the master search.
To implement this, you'll probably have to implement your own search engines
or at least modifiy ours, but it should be possible.

Cheers,
       Guido

 

 

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




-- 
Mauricio Toro Bermudez
Estudiante de Ingenier?a de Sistemas
Pontificia Universidad Javeriana, Colombia

Stagiare ? l'Ircam
1, place Igor-Stravinsky 75004 Paris, 
France de 2008 ? 2009 




-- 
Mauricio Toro Bermudez
Estudiante de Ingenier?a de Sistemas
Pontificia Universidad Javeriana, Colombia

Stagiare ? l'Ircam
1, place Igor-Stravinsky 75004 Paris, 
France de 2008 ? 2009 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080619/e7ecec95/attachment.htm>

From David.Rijsman at quintiq.com  Fri Jun 20 14:12:55 2008
From: David.Rijsman at quintiq.com (David Rijsman)
Date: Fri, 20 Jun 2008 14:12:55 +0200
Subject: [gecode-users] Compiling using Visual C++ 2005 for 64 bit
Message-ID: <485BBAE7.D4D3.0085.0@quintiq.com>

Dear All,

I am trying to compile gecode 2.1.1 on windows for 64 bit machines using the Visual C++ Compiler 2005 professional edition. I have no trouble building the application for 32 bit (as this is the default). 

I checked the 'configure --help' and see no feature for 64 bit compiling. Does anybody know which (if any) compile and or link options I have to pass to configure to compile for 64 bits?

thanks,





David J Rijsman
Software Architect
Quintiq
 
T +31 (0)73 691 07 39
F +31 (0)73 691 07 54
M +31 (0)62 127 68 29
E david.rijsman at quintiq.nl
I www.quintiq.com



This message contains information that may be privileged or confidential and is the property of Quintiq. It is only intended for the person to whom it is addressed. If you are not the intended recipient, you are not authorized to read, print, retain, copy, disseminate, distribute or use this message or any part thereof. If you have received this message in error, please notify the sender immediately and delete all copies of this message. Please note that e-mails are susceptible to change, therefore they are not binding.



From David.Rijsman at quintiq.com  Fri Jun 20 17:17:08 2008
From: David.Rijsman at quintiq.com (David Rijsman)
Date: Fri, 20 Jun 2008 17:17:08 +0200
Subject: [gecode-users] Building 64 bit visual
Message-ID: <485BE613.D4D3.0085.0@quintiq.com>

Dear All,

in my previous e-mail I have asked how to compile for 64 bit and it is actually not that hard, instead of opening Visual Studio 2005 Command Prompt we open Visual Studio 2005 x64 Win64 Command Prompt and the rest is the same as described in earlier e-mails in this group.

I do have one suggestion for future releases in the configure tool creating the makefile. It would be nice to have access to a pre and or a postfix, as an option for configure, for the {DLL,LIB,LINK}SUFFIX and or the {LIB,LINK}PREFIX. This would enable me to support a 32 and 64 bit version of the same application in the same directory both using Gecode without having to go into the makefile to change things manually.

thanks,

David J Rijsman
Software Architect
Quintiq
 
T +31 (0)73 691 07 39
F +31 (0)73 691 07 54
M +31 (0)62 127 68 29
E david.rijsman at quintiq.nl
I www.quintiq.com



This message contains information that may be privileged or confidential and is the property of Quintiq. It is only intended for the person to whom it is addressed. If you are not the intended recipient, you are not authorized to read, print, retain, copy, disseminate, distribute or use this message or any part thereof. If you have received this message in error, please notify the sender immediately and delete all copies of this message. Please note that e-mails are susceptible to change, therefore they are not binding.



From chris at cmears.id.au  Sat Jun 21 06:19:57 2008
From: chris at cmears.id.au (Chris Mears)
Date: Sat, 21 Jun 2008 14:19:57 +1000
Subject: [gecode-users] Return value of Branching::commit
Message-ID: <87ej6ra07m.fsf@loki.cmears.id.au>

Hello,

How should the return value of commit be constructed in a custom
Branching class?  In the QueenArmies example (copied below), a single
constraint is posted whose ModEvent value is converted into an
ExecStatus value by me_failed, and that ExecStatus is returned.

virtual ExecStatus commit(Space* home, const BranchingDesc* d, 
                          unsigned int a) {
    QueenArmies *q = static_cast<QueenArmies*>(home);
    const PosValDesc<bool,2> *pvd = static_cast<const PosValDesc<bool,2>*>(d);
    bool val = a == 0 ? pvd->val() : !pvd->val();
    return me_failed(Int::BoolView(q->w[pvd->pos()]).eq(q, val))
         ? ES_FAILED
         : ES_OK;
}

However, what if a commit posts many constraints?  Is it necessary to
observe the ModEvent returned by every posted constraint, and return
ES_FAILED if any of them returns ME_INT_FAILED?

(My overall aim is to implement some kind of dynamic symmetry breaking.
If a search node branches left with (X = v) and right with (X /= v), I'd
like to post additional constraints on the right branch -- for example,
if X and Y are symmetric, I'd also post (Y /= v). )



From tack at ps.uni-sb.de  Sat Jun 21 09:24:11 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Sat, 21 Jun 2008 09:24:11 +0200
Subject: [gecode-users] Return value of Branching::commit
In-Reply-To: <87ej6ra07m.fsf@loki.cmears.id.au>
References: <87ej6ra07m.fsf@loki.cmears.id.au>
Message-ID: <6BF3B5C8-49AA-4CFD-8605-8D95E3444321@ps.uni-sb.de>

Chris Mears wrote:
> How should the return value of commit be constructed in a custom
> Branching class?  In the QueenArmies example (copied below), a single
> constraint is posted whose ModEvent value is converted into an
> ExecStatus value by me_failed, and that ExecStatus is returned.
[...]
> However, what if a commit posts many constraints?  Is it necessary to
> observe the ModEvent returned by every posted constraint, and return
> ES_FAILED if any of them returns ME_INT_FAILED?

Yes.  You can use the GECODE_ME_CHECK and GECODE_ES_CHECK macros, like  
this:

GECODE_ME_CHECK(Int::BoolView(q->w[pvd->pos()]).eq(q, val));
GECODE_ME_CHECK(something else);
GECODE_ES_CHECK(call some constraint posting function that returns an  
ExecStatus);
return ES_OK;

The macros return ES_FAILED if the ModEvent or ExecStatus is failed,  
and otherwise do nothing.

> (My overall aim is to implement some kind of dynamic symmetry  
> breaking.
> If a search node branches left with (X = v) and right with (X /= v),  
> I'd
> like to post additional constraints on the right branch -- for  
> example,
> if X and Y are symmetric, I'd also post (Y /= v). )

Yes, that's no problem.

Cheers,
	Guido




From cschulte at kth.se  Mon Jun 23 10:27:19 2008
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 23 Jun 2008 10:27:19 +0200
Subject: [gecode-users] Building 64 bit visual
In-Reply-To: <485BE613.D4D3.0085.0@quintiq.com>
References: <485BE613.D4D3.0085.0@quintiq.com>
Message-ID: <000001c8d50a$f698afd0$e3ca0f70$@se>

Okay, we'll do that with the next release. Note though, that according to
Windows policy applications for 32 and 64 bit go into different places.

Cheers
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of David Rijsman
Sent: Friday, June 20, 2008 5:17 PM
To: users at gecode.org
Subject: [gecode-users] Building 64 bit visual

Dear All,

in my previous e-mail I have asked how to compile for 64 bit and it is
actually not that hard, instead of opening Visual Studio 2005 Command Prompt
we open Visual Studio 2005 x64 Win64 Command Prompt and the rest is the same
as described in earlier e-mails in this group.

I do have one suggestion for future releases in the configure tool creating
the makefile. It would be nice to have access to a pre and or a postfix, as
an option for configure, for the {DLL,LIB,LINK}SUFFIX and or the
{LIB,LINK}PREFIX. This would enable me to support a 32 and 64 bit version of
the same application in the same directory both using Gecode without having
to go into the makefile to change things manually.

thanks,

David J Rijsman
Software Architect
Quintiq
 
T +31 (0)73 691 07 39
F +31 (0)73 691 07 54
M +31 (0)62 127 68 29
E david.rijsman at quintiq.nl
I www.quintiq.com



This message contains information that may be privileged or confidential and
is the property of Quintiq. It is only intended for the person to whom it is
addressed. If you are not the intended recipient, you are not authorized to
read, print, retain, copy, disseminate, distribute or use this message or
any part thereof. If you have received this message in error, please notify
the sender immediately and delete all copies of this message. Please note
that e-mails are susceptible to change, therefore they are not binding.

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From zayenz at gmail.com  Mon Jun 23 11:16:16 2008
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Mon, 23 Jun 2008 11:16:16 +0200
Subject: [gecode-users] Gecode/J: Assertion failure
In-Reply-To: <8699618D-08AF-4D4B-84DD-FC43A435B19E@cse.unsw.edu.au>
References: <8699618D-08AF-4D4B-84DD-FC43A435B19E@cse.unsw.edu.au>
Message-ID: <63b5c8b00806230216g352f4716o2b59c8e06ecd9753@mail.gmail.com>

Hi,

On Mon, Jun 16, 2008 at 6:58 AM, Malcolm Ryan <malcolmr at cse.unsw.edu.au> wrote:
> I just got the following crash in my Gecode/J program:
>
> java: /home/malcolmr/include/gecode/int/extensional/tuple-set.icc:88:
> bool Gecode::TupleSet::TupleSetI::finalized() const: Assertion `(excess
>  == -1 && domsize >= 0) || (excess != -1 && domsize == -1)' failed.

This is bad, the TupleSet assertion shouldn't trigger in a normal program.

Do you know what the last method called in your program is before the
failure? With that information, I might be able to find out what the
problem is.

Kind regards,
Mikael Lagerkvist

-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/



From cschulte at kth.se  Mon Jun 23 13:33:13 2008
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 23 Jun 2008 13:33:13 +0200
Subject: [gecode-users] What do you do with Gecode?
Message-ID: <006501c8d524$f2bd72a0$d83857e0$@se>

Dear users,

We would like to collect some input from you, our users, about what you do
with Gecode. 

We would like to use the information for two purposes. First, we would like
to make the information available on the website so that other potential
users can see whether Gecode is suitable for them and what has been your
experience. Second, we would like to use the information ourselves to better
understand what our users do and how we can better support them.

The kind of information we are interested in is:

Confidential:	yes/no (is the information only for our internal use)
Name:			your name including affiliation, or research
			division, etc
Category:		commercial/research/education
Summary:		One line summary of what you do		
What:			What do you do with Gecode?
Why:			Why do you use Gecode?
Essential:		What are the most essential aspects/benefits/etc of
			using Gecode. Could you do what you do
                  with any other available system? Why or why not?
URL:			Where is additional information if any (or a link to
			a paper, deliverable, product, etc)

Below is a form that you can fill in and send to:
	survey at gecode.org

We would appreciate if you could send the information as soon as possible as
we are currently planning the future of Gecode (what will Gecode 3.* and
later look like). If new information arises or you want to update the
information, please send anytime, we will keep the information up to date.

We promise to take your information very seriously.

All the best
Christian for the Gecode team

--
Christian Schulte, www.ict.kth.se/~cschulte/

The order of fields does not matter, and the text can (should) be html
including links.

[CONFIDENTIAL]
NO
[NAME]
Your name
[CATEGORY]
COMMERCIAL/RESEARCH/EDUCATION
[SUMMARY]
ONE LINE OF SUMMARY (HEADLINE)
[WHAT]
Short description of what you do. Several lines.
[WHY]
Short description of why you use Gecode. Several lines.
[ESSENTIAL]
What makes Gecode essential for you (optional) 
[URL] 
A link to something (optional)






From andy at snikt.net  Tue Jun 24 17:58:16 2008
From: andy at snikt.net (Andreas Happe)
Date: Tue, 24 Jun 2008 17:58:16 +0200
Subject: [gecode-users] Personnel scheduling problem
Message-ID: <71125746-C041-49F5-ABF2-442B4A82ACA1@snikt.net>

Hi,
I'm trying to schedule personnel depending upon attributes.

Per person I have multiple vectors:

< id, attr_1, attr_2, attr_3, .., attr_n>
where attr_n is an integer in [0,1]. There are various vectors to  
model the
various combinations of attributes that the person might fulfill.

e.g.:
1, 0, 0, 0, 1
1, 0, 0, 1, 1

would describe a person with id 1 that can either supply attribute 4  
or attribute (3 and 4).

a timeslot has a vector that describes the needed attribute, i.e.:

<1, 1, 2, 1> : 1 * attr1, 1 * attr2, 2*attr3, 1*attr3

I created a matrix with all people and their attributes:

1, 0, 0, 0, 1
1, 0, 0, 1, 1
2, 1, 1, 0, 0

What I want now is to create subsets of the people-matrix with a  
distinct contraint
for the first column (so that a person can only be assigned once) and  
another
constraint that states that sum(column_(i+1)) >= timeslot_i.

The constraints wouldn't be the problem but I'm out in the dark how to  
create the subset :(

Is this an usable approach to the problem? I tried to find some  
introduction documents
to gecode but so far failed.

Thank you in advance,
Andreas Happe



From tack at ps.uni-sb.de  Wed Jun 25 07:40:27 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Wed, 25 Jun 2008 07:40:27 +0200
Subject: [gecode-users] Personnel scheduling problem
In-Reply-To: <71125746-C041-49F5-ABF2-442B4A82ACA1@snikt.net>
References: <71125746-C041-49F5-ABF2-442B4A82ACA1@snikt.net>
Message-ID: <869CF493-8492-4ECC-9762-E1304D17DD05@ps.uni-sb.de>

Andreas Happe wrote:

> Hi,
> I'm trying to schedule personnel depending upon attributes.
>
> Per person I have multiple vectors:
>
> < id, attr_1, attr_2, attr_3, .., attr_n>
> where attr_n is an integer in [0,1]. There are various vectors to
> model the
> various combinations of attributes that the person might fulfill.
>
> e.g.:
> 1, 0, 0, 0, 1
> 1, 0, 0, 1, 1
>
> would describe a person with id 1 that can either supply attribute 4
> or attribute (3 and 4).
>
> a timeslot has a vector that describes the needed attribute, i.e.:
>
> <1, 1, 2, 1> : 1 * attr1, 1 * attr2, 2*attr3, 1*attr3
>
> I created a matrix with all people and their attributes:
>
> 1, 0, 0, 0, 1
> 1, 0, 0, 1, 1
> 2, 1, 1, 0, 0
>
> What I want now is to create subsets of the people-matrix with a
> distinct contraint
> for the first column (so that a person can only be assigned once) and
> another
> constraint that states that sum(column_(i+1)) >= timeslot_i.
>
> The constraints wouldn't be the problem but I'm out in the dark how to
> create the subset :(

I'd introduce one Boolean variable per attribute vector.  Then the  
subset constraint would be something like sum(b with the same id) ==  
1, stating that exactly one of the BoolVars that correspond to the  
same person must be true.

The supply constraint would be sum(b[j]*attr[i+1,j]) >= timeslot[i].   
I'm not sure this gives you enough propagation, but it's something you  
could experiment with.

Cheers,
	Guido




From cschulte at kth.se  Wed Jun 25 15:10:11 2008
From: cschulte at kth.se (Christian Schulte)
Date: Wed, 25 Jun 2008 15:10:11 +0200
Subject: [gecode-users] FloatVar alpha release
In-Reply-To: <4857C9A7.2080009@logis.cz>
References: <4857C9A7.2080009@logis.cz>
Message-ID: <000501c8d6c4$d35de7e0$7a19b7a0$@se>

Dear Filip,

thanks for the contribution. When we release Gecode 3.0.0 (late autumn) we will check whether we can make it an experimental contribution.

Thanks for your effort!

All the best
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Filip Konvicka
Sent: Tuesday, June 17, 2008 4:27 PM
To: users at gecode.org
Cc: Lubo? Moric
Subject: [gecode-users] FloatVar alpha release

Dear all,

sorry for taking so long, here's the initial version of our float variable efforts. The purpose of this release is to get initial feedback and start discussions about both the design and implementation.

The code has been lying here for at least a month and we're currently busy with many other things, but I do not want to wait any longer so I hope that any feedback we might get from you will make us improve what we've done so far. Any feedback is highly welcome!


The patch (float.zip/float.patch) is generated against the 2.1.1 release. I hope I've included all that is necessary.

The changes to Gecode itself are the float.patch and the float.vis file (that goes to the source root directory, where "variables.vsl" resides). 
The change involves adding a new variable type "slot" to Gecode, without adding a corresponding variable implementation.

The actual implementation of "FloatVars" is in float_var.hpp and float_view.hpp. These are template classes that are instantiated in your application based on what interval library implementation you use with them. We provide a specialization of the templates for Boost.Interval, which ( to make things more obscure :-) ) can be used with multiple low-level FP libraries itself.

The release includes:

template<typename DomainType> struct FloatVarImp;
- a "concept", unspecialized template FloatVar implementation
   class and an associated delta class

template<typename IntervalArg>
struct FloatVarImp<boost::numeric::interval<IntervalArg> >;
- specialization of the above template for Boost.Interval.

- Delta and View classes for the same


I also include a preview of propagator implementations for boost::numeric::interval<double> (see float_prop_preview.zip). Now these are really a preview (although we are currently using similar code in our development branch) and need some serious work that I hope I get to soon. The provided propagators are:
- binary minimum, maximum
- binary relational and reifieed binary relational (lq, gq, eq)
- arithmetic (add, sub, mul, div)

The intended changes include changing the classes to templates to support other Boost.Interval types and renaming of the propagators.

Overall, I'd like to address at least the following topics before a "beta" release:
- Finish the propagators and maybe provide a simple "splitting" branching.
- Support explicit instantiation of the templates. This means moving implementation out of the .hpp files, both for the variable and propagators.
- Verify the overall design. And this is my question to you all - is there some reason to have a Delta class at all? (I always forget what the deltas are supposed to represent...)


Cheers,
Filip










From David.Rijsman at quintiq.com  Wed Jun 25 15:53:17 2008
From: David.Rijsman at quintiq.com (David Rijsman)
Date: Wed, 25 Jun 2008 15:53:17 +0200
Subject: [gecode-users] FloatVar alpha release
In-Reply-To: <000501c8d6c4$d35de7e0$7a19b7a0$@se>
References: <4857C9A7.2080009@logis.cz>
 <000501c8d6c4$d35de7e0$7a19b7a0$@se>
Message-ID: <486269EC.D4D3.0085.0@quintiq.com>

Being on the topic of 3.0.0, is there documentation on what might make
it in 3.0.0 and what has been postponed and or rejected?

David J Rijsman
Software Architect
Quintiq
 
T +31 (0)73 691 07 39
F +31 (0)73 691 07 54
M +31 (0)62 127 68 29
E david.rijsman at quintiq.nl
I www.quintiq.com


>>> 
From: 	"Christian Schulte" <cschulte at kth.se>
To:	"'Filip Konvi?ka'" <filip.konvicka at logis.cz>,
<users at gecode.org>
CC:	"'Lubo? Moric'" <lubomir.moric at logis.cz>
Date: 	6/25/2008 3:12 PM
Subject: 	Re: [gecode-users] FloatVar alpha release

Dear Filip,

thanks for the contribution. When we release Gecode 3.0.0 (late autumn)
we will check whether we can make it an experimental contribution.

Thanks for your effort!

All the best
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/ 

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On
Behalf Of Filip Konvicka
Sent: Tuesday, June 17, 2008 4:27 PM
To: users at gecode.org 
Cc: Lubo? Moric
Subject: [gecode-users] FloatVar alpha release

Dear all,

sorry for taking so long, here's the initial version of our float
variable efforts. The purpose of this release is to get initial feedback
and start discussions about both the design and implementation.

The code has been lying here for at least a month and we're currently
busy with many other things, but I do not want to wait any longer so I
hope that any feedback we might get from you will make us improve what
we've done so far. Any feedback is highly welcome!


The patch (float.zip/float.patch) is generated against the 2.1.1
release. I hope I've included all that is necessary.

The changes to Gecode itself are the float.patch and the float.vis file
(that goes to the source root directory, where "variables.vsl" resides).

The change involves adding a new variable type "slot" to Gecode,
without adding a corresponding variable implementation.

The actual implementation of "FloatVars" is in float_var.hpp and
float_view.hpp. These are template classes that are instantiated in your
application based on what interval library implementation you use with
them. We provide a specialization of the templates for Boost.Interval,
which ( to make things more obscure :-) ) can be used with multiple
low-level FP libraries itself.

The release includes:

template<typename DomainType> struct FloatVarImp;
- a "concept", unspecialized template FloatVar implementation
   class and an associated delta class

template<typename IntervalArg>
struct FloatVarImp<boost::numeric::interval<IntervalArg> >;
- specialization of the above template for Boost.Interval.

- Delta and View classes for the same


I also include a preview of propagator implementations for
boost::numeric::interval<double> (see float_prop_preview.zip). Now these
are really a preview (although we are currently using similar code in
our development branch) and need some serious work that I hope I get to
soon. The provided propagators are:
- binary minimum, maximum
- binary relational and reifieed binary relational (lq, gq, eq)
- arithmetic (add, sub, mul, div)

The intended changes include changing the classes to templates to
support other Boost.Interval types and renaming of the propagators.

Overall, I'd like to address at least the following topics before a
"beta" release:
- Finish the propagators and maybe provide a simple "splitting"
branching.
- Support explicit instantiation of the templates. This means moving
implementation out of the .hpp files, both for the variable and
propagators.
- Verify the overall design. And this is my question to you all - is
there some reason to have a Delta class at all? (I always forget what
the deltas are supposed to represent...)


Cheers,
Filip








_______________________________________________
Gecode users mailing list
users at gecode.org 
https://www.gecode.org/mailman/listinfo/gecode-users


This message contains information that may be privileged or confidential
and is the property of Quintiq. It is only intended for the person to
whom it is addressed. If you are not the intended recipient, you are not
authorized to read, print, retain, copy, disseminate, distribute or use
this message or any part thereof. If you have received this message in
error, please notify the sender immediately and delete all copies of
this message. Please note that e-mails are susceptible to change,
therefore they are not binding.



From cschulte at kth.se  Wed Jun 25 16:25:42 2008
From: cschulte at kth.se (Christian Schulte)
Date: Wed, 25 Jun 2008 16:25:42 +0200
Subject: [gecode-users] FloatVar alpha release
In-Reply-To: <486269EC.D4D3.0085.0@quintiq.com>
References: <4857C9A7.2080009@logis.cz> <000501c8d6c4$d35de7e0$7a19b7a0$@se>
	<486269EC.D4D3.0085.0@quintiq.com>
Message-ID: <000901c8d6cf$599ced10$0cd6c730$@se>

Dear David,

we were just in the process to compile our plans and ask for your wishes. Give me just a few more hours ;-)

Cheers
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of David Rijsman
Sent: Wednesday, June 25, 2008 3:53 PM
To: users at gecode.org
Subject: Re: [gecode-users] FloatVar alpha release

Being on the topic of 3.0.0, is there documentation on what might make
it in 3.0.0 and what has been postponed and or rejected?

David J Rijsman
Software Architect
Quintiq
 
T +31 (0)73 691 07 39
F +31 (0)73 691 07 54
M +31 (0)62 127 68 29
E david.rijsman at quintiq.nl
I www.quintiq.com


>>> 
From: 	"Christian Schulte" <cschulte at kth.se>
To:	"'Filip Konvi?ka'" <filip.konvicka at logis.cz>,
<users at gecode.org>
CC:	"'Lubo? Moric'" <lubomir.moric at logis.cz>
Date: 	6/25/2008 3:12 PM
Subject: 	Re: [gecode-users] FloatVar alpha release

Dear Filip,

thanks for the contribution. When we release Gecode 3.0.0 (late autumn)
we will check whether we can make it an experimental contribution.

Thanks for your effort!

All the best
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/ 

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On
Behalf Of Filip Konvicka
Sent: Tuesday, June 17, 2008 4:27 PM
To: users at gecode.org 
Cc: Lubo? Moric
Subject: [gecode-users] FloatVar alpha release

Dear all,

sorry for taking so long, here's the initial version of our float
variable efforts. The purpose of this release is to get initial feedback
and start discussions about both the design and implementation.

The code has been lying here for at least a month and we're currently
busy with many other things, but I do not want to wait any longer so I
hope that any feedback we might get from you will make us improve what
we've done so far. Any feedback is highly welcome!


The patch (float.zip/float.patch) is generated against the 2.1.1
release. I hope I've included all that is necessary.

The changes to Gecode itself are the float.patch and the float.vis file
(that goes to the source root directory, where "variables.vsl" resides).

The change involves adding a new variable type "slot" to Gecode,
without adding a corresponding variable implementation.

The actual implementation of "FloatVars" is in float_var.hpp and
float_view.hpp. These are template classes that are instantiated in your
application based on what interval library implementation you use with
them. We provide a specialization of the templates for Boost.Interval,
which ( to make things more obscure :-) ) can be used with multiple
low-level FP libraries itself.

The release includes:

template<typename DomainType> struct FloatVarImp;
- a "concept", unspecialized template FloatVar implementation
   class and an associated delta class

template<typename IntervalArg>
struct FloatVarImp<boost::numeric::interval<IntervalArg> >;
- specialization of the above template for Boost.Interval.

- Delta and View classes for the same


I also include a preview of propagator implementations for
boost::numeric::interval<double> (see float_prop_preview.zip). Now these
are really a preview (although we are currently using similar code in
our development branch) and need some serious work that I hope I get to
soon. The provided propagators are:
- binary minimum, maximum
- binary relational and reifieed binary relational (lq, gq, eq)
- arithmetic (add, sub, mul, div)

The intended changes include changing the classes to templates to
support other Boost.Interval types and renaming of the propagators.

Overall, I'd like to address at least the following topics before a
"beta" release:
- Finish the propagators and maybe provide a simple "splitting"
branching.
- Support explicit instantiation of the templates. This means moving
implementation out of the .hpp files, both for the variable and
propagators.
- Verify the overall design. And this is my question to you all - is
there some reason to have a Delta class at all? (I always forget what
the deltas are supposed to represent...)


Cheers,
Filip








_______________________________________________
Gecode users mailing list
users at gecode.org 
https://www.gecode.org/mailman/listinfo/gecode-users


This message contains information that may be privileged or confidential
and is the property of Quintiq. It is only intended for the person to
whom it is addressed. If you are not the intended recipient, you are not
authorized to read, print, retain, copy, disseminate, distribute or use
this message or any part thereof. If you have received this message in
error, please notify the sender immediately and delete all copies of
this message. Please note that e-mails are susceptible to change,
therefore they are not binding.

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From cschulte at kth.se  Wed Jun 25 16:26:18 2008
From: cschulte at kth.se (Christian Schulte)
Date: Wed, 25 Jun 2008 16:26:18 +0200
Subject: [gecode-users] FloatVar alpha release
In-Reply-To: <48624BE7.6@logis.cz>
References: <4857C9A7.2080009@logis.cz> <000501c8d6c4$d35de7e0$7a19b7a0$@se>
	<48624BE7.6@logis.cz>
Message-ID: <000c01c8d6cf$6ef62aa0$4ce27fe0$@se>

Okay, great. Looking forward! Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: Filip Konvi?ka [mailto:filip.konvicka at logis.cz] 
Sent: Wednesday, June 25, 2008 3:45 PM
To: cschulte at kth.se
Cc: users at gecode.org; 'Lubo? Moric'
Subject: Re: [gecode-users] FloatVar alpha release

Hi Christian,

we're quite close to making another release. My mere releasing the alpha 
version made us take a look at our code again and much of the work I 
described is already done. I'll review the code personally over the next 
few weeks and I'll submit it as soon as possible.

Cheers,
Filip

> Dear Filip,
>
> thanks for the contribution. When we release Gecode 3.0.0 (late autumn) we will check whether we can make it an experimental contribution.
>
> Thanks for your effort!
>
> All the best
> Christian
>
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
>
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Filip Konvicka
> Sent: Tuesday, June 17, 2008 4:27 PM
> To: users at gecode.org
> Cc: Lubo? Moric
> Subject: [gecode-users] FloatVar alpha release
>
> Dear all,
>
> sorry for taking so long, here's the initial version of our float variable efforts. The purpose of this release is to get initial feedback and start discussions about both the design and implementation.
>
> The code has been lying here for at least a month and we're currently busy with many other things, but I do not want to wait any longer so I hope that any feedback we might get from you will make us improve what we've done so far. Any feedback is highly welcome!
>
>
> The patch (float.zip/float.patch) is generated against the 2.1.1 release. I hope I've included all that is necessary.
>
> The changes to Gecode itself are the float.patch and the float.vis file (that goes to the source root directory, where "variables.vsl" resides). 
> The change involves adding a new variable type "slot" to Gecode, without adding a corresponding variable implementation.
>
> The actual implementation of "FloatVars" is in float_var.hpp and float_view.hpp. These are template classes that are instantiated in your application based on what interval library implementation you use with them. We provide a specialization of the templates for Boost.Interval, which ( to make things more obscure :-) ) can be used with multiple low-level FP libraries itself.
>
> The release includes:
>
> template<typename DomainType> struct FloatVarImp;
> - a "concept", unspecialized template FloatVar implementation
>    class and an associated delta class
>
> template<typename IntervalArg>
> struct FloatVarImp<boost::numeric::interval<IntervalArg> >;
> - specialization of the above template for Boost.Interval.
>
> - Delta and View classes for the same
>
>
> I also include a preview of propagator implementations for boost::numeric::interval<double> (see float_prop_preview.zip). Now these are really a preview (although we are currently using similar code in our development branch) and need some serious work that I hope I get to soon. The provided propagators are:
> - binary minimum, maximum
> - binary relational and reifieed binary relational (lq, gq, eq)
> - arithmetic (add, sub, mul, div)
>
> The intended changes include changing the classes to templates to support other Boost.Interval types and renaming of the propagators.
>
> Overall, I'd like to address at least the following topics before a "beta" release:
> - Finish the propagators and maybe provide a simple "splitting" branching.
> - Support explicit instantiation of the templates. This means moving implementation out of the .hpp files, both for the variable and propagators.
> - Verify the overall design. And this is my question to you all - is there some reason to have a Delta class at all? (I always forget what the deltas are supposed to represent...)
>
>
> Cheers,
> Filip
>
>
>
>
>
>
>
>   


-- 
Filip Konvi?ka

LOGIS, s.r.o.
tel. +420 556 841 100
mob. +420 736 758 714





From filip.konvicka at logis.cz  Wed Jun 25 15:45:11 2008
From: filip.konvicka at logis.cz (=?UTF-8?B?RmlsaXAgS29udmnEjWth?=)
Date: Wed, 25 Jun 2008 15:45:11 +0200
Subject: [gecode-users] FloatVar alpha release
In-Reply-To: <000501c8d6c4$d35de7e0$7a19b7a0$@se>
References: <4857C9A7.2080009@logis.cz> <000501c8d6c4$d35de7e0$7a19b7a0$@se>
Message-ID: <48624BE7.6@logis.cz>

Hi Christian,

we're quite close to making another release. My mere releasing the alpha 
version made us take a look at our code again and much of the work I 
described is already done. I'll review the code personally over the next 
few weeks and I'll submit it as soon as possible.

Cheers,
Filip

> Dear Filip,
>
> thanks for the contribution. When we release Gecode 3.0.0 (late autumn) we will check whether we can make it an experimental contribution.
>
> Thanks for your effort!
>
> All the best
> Christian
>
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
>
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Filip Konvicka
> Sent: Tuesday, June 17, 2008 4:27 PM
> To: users at gecode.org
> Cc: Lubo? Moric
> Subject: [gecode-users] FloatVar alpha release
>
> Dear all,
>
> sorry for taking so long, here's the initial version of our float variable efforts. The purpose of this release is to get initial feedback and start discussions about both the design and implementation.
>
> The code has been lying here for at least a month and we're currently busy with many other things, but I do not want to wait any longer so I hope that any feedback we might get from you will make us improve what we've done so far. Any feedback is highly welcome!
>
>
> The patch (float.zip/float.patch) is generated against the 2.1.1 release. I hope I've included all that is necessary.
>
> The changes to Gecode itself are the float.patch and the float.vis file (that goes to the source root directory, where "variables.vsl" resides). 
> The change involves adding a new variable type "slot" to Gecode, without adding a corresponding variable implementation.
>
> The actual implementation of "FloatVars" is in float_var.hpp and float_view.hpp. These are template classes that are instantiated in your application based on what interval library implementation you use with them. We provide a specialization of the templates for Boost.Interval, which ( to make things more obscure :-) ) can be used with multiple low-level FP libraries itself.
>
> The release includes:
>
> template<typename DomainType> struct FloatVarImp;
> - a "concept", unspecialized template FloatVar implementation
>    class and an associated delta class
>
> template<typename IntervalArg>
> struct FloatVarImp<boost::numeric::interval<IntervalArg> >;
> - specialization of the above template for Boost.Interval.
>
> - Delta and View classes for the same
>
>
> I also include a preview of propagator implementations for boost::numeric::interval<double> (see float_prop_preview.zip). Now these are really a preview (although we are currently using similar code in our development branch) and need some serious work that I hope I get to soon. The provided propagators are:
> - binary minimum, maximum
> - binary relational and reifieed binary relational (lq, gq, eq)
> - arithmetic (add, sub, mul, div)
>
> The intended changes include changing the classes to templates to support other Boost.Interval types and renaming of the propagators.
>
> Overall, I'd like to address at least the following topics before a "beta" release:
> - Finish the propagators and maybe provide a simple "splitting" branching.
> - Support explicit instantiation of the templates. This means moving implementation out of the .hpp files, both for the variable and propagators.
> - Verify the overall design. And this is my question to you all - is there some reason to have a Delta class at all? (I always forget what the deltas are supposed to represent...)
>
>
> Cheers,
> Filip
>
>
>
>
>
>
>
>   


-- 
Filip Konvi?ka

LOGIS, s.r.o.
tel. +420 556 841 100
mob. +420 736 758 714




From cschulte at kth.se  Wed Jun 25 18:07:15 2008
From: cschulte at kth.se (Christian Schulte)
Date: Wed, 25 Jun 2008 18:07:15 +0200
Subject: [gecode-users] Gecode 3.0.0: What we will do. What do you want?
Message-ID: <003101c8d6dd$8af3d050$a0db70f0$@se>

Dear all,

as mentioned, we are planning for Gecode 3.0.0. Before going into detail, I
would like to share with you the goals we wanted to achieve with the
previous major releases and the goals we want to achieve with 3.0 (and even
4.0).

Gecode 1.0.0 was the first version where we believed that we had arrived at
something that was reasonably complete and robust to be useful to other
users but us. The focus has been in particular on getting the basic
architecture sufficiently mature.

Gecode 2.0.0 achieved a complete set of abstractions needed to do efficient
propagation including incremental propagation. We are quite confident that
the level of completeness and maturity we reached for propagation will be
sufficient for some time to come. Subsequent releases fixed (and will fix)
lots of not-so-easy-to-catch bugs as we have been stepping up Gecode's
quality.

Gecode 3.0.0 will shift the focus away from propagation. The main focus will
be documentation and search.

In more detail, Gecode 3.0.0 will feature:
 - a complete rework of branching, including randomization and support for
tie-breaking (already finished)
 - abstractions for cost-based optimization (just define a cost function,
done)
 - a first shot at parallel search (working really great, but integration
and legal aspects are not yet resolved)
 - the first stable version of Gist as an interactive search tool (almost
done, we have made amazing progress and have 
   attained a level of efficiency and scalability we thought impossible)
 - apart from that the usual small stuff, much of it devoted to make Gecode
easier to explain
 - we might re-optimize the crucial abstractions for 64 bit rather than for
32 bit instead (should we? should we optimize both?)

The other big thing will be to deliver documentation with Gecode apart from
the extensive reference documentation it already comes with. The following
topics (as of today's understanding) will be covered:
 (a) Modeling with Gecode: How to do CP models with Gecode. This will be
concerned with Gecode-specific aspects
     and not be an introduction to CP.
 (b) Programming Propagators: That will explain the basic issues, the
underlying architecture, but also all the programming
     techniques we developed so far.
 (c) Programming Branchings: Rather simple.
 (d) Programming Exploration: how to construct own search engines with a
focus on how recomputation works in detail.
 (e) Programming Variables: how to provide new variable implementations.
This is now really easy.

The biggest piece will be (b). Together with Gecode 3.0.0 we will definitely
release (a) and maybe a short draft of (b). (d) will not come with 3.0.0,
(c) and (e) might come. We have not yet decided whether anything but (a)
will be released as a freely available document. Depending on our academic
publications anything but (a) might be delayed.

The later versions of Gecode 3.* will gradually improve the search
capabilities, including a better LDS, abstractions for large neighborhood
search, automatic configuration of recomputation, etc...

There will be a Gecode 2.3.0 release that will change the way memory
management is done. This version will also be submitted to the MiniZinc
Challenge 2008. It might (to make our live easier) already contain parts
mentioned above as parts of 3.0.0.

The long term vision is that Gecode 4.0.0 will be something that is fully
backed up with high-quality documentation, has very advanced parallel search
facilities, and might have unique inference modules (elimination of
redundant propagators, automatic choice of consistency level, SAC, ...).

What I did not mention is that we will add new propagators (and new variable
types, thanks to Filip) if we find the time and we get the requests. But we
do hope that we will see contributions here in the hopefully not-so-far
future from our users.

Last thing, time:
	- Gecode 2.3.0:	end of summer
	- Gecode 3.0.0:	late autumn
	- Gecode 4.0.0:	late autumn 2009

Okay, that was long and boring. Sorry!

Now: What do you want? How can you help us? Are we missing something really
important? Is there something fundamentally wrong?

All the best
Christian on behalf of the Gecode team

--
Christian Schulte, www.ict.kth.se/~cschulte/






From javimena at gmail.com  Wed Jun 25 19:20:18 2008
From: javimena at gmail.com (=?ISO-8859-1?Q?Javier_Andr=E9s_Mena_Zapata?=)
Date: Wed, 25 Jun 2008 12:20:18 -0500
Subject: [gecode-users] Gecode 3.0.0: What we will do. What do you want?
In-Reply-To: <003101c8d6dd$8af3d050$a0db70f0$@se>
References: <003101c8d6dd$8af3d050$a0db70f0$@se>
Message-ID: <80537a260806251020q5e9e0736gd91afdb813f8f79@mail.gmail.com>

Hi,

I think one important thing missing in Gecode is direct support to modeling
scheduling problems. There has been always  said (several papers, not
Gecode) that that CP is the way to go if you want to model scheduling
problems, but when one tries to implement those ideas in Gecode the
difficulties arrives quickly, mainly because the missing of direct support
to modelling scheduling problems and because the documentation is not very
detailed when you want to model new search engines and branchings. You will
address those issues in the next versions of Gecode, so in the future it
will not be a great problem.

I'm very interested in the support of scheduling functions in Gecode, and I
would be glad to contribute an initial implementation, if you plan to
include those functions in the main line of Gecode (that's no a requirement,
but an idea).

When you say "parallel support", do you mean multi-core support? or
distributed support?.

IMHO.

Thanks for taking us into account.

On Wed, Jun 25, 2008 at 11:07 AM, Christian Schulte <cschulte at kth.se> wrote:

> Dear all,
>
> as mentioned, we are planning for Gecode 3.0.0. Before going into detail,
> I
> would like to share with you the goals we wanted to achieve with the
> previous major releases and the goals we want to achieve with 3.0 (and even
> 4.0).
>
> Gecode 1.0.0 was the first version where we believed that we had arrived at
> something that was reasonably complete and robust to be useful to other
> users but us. The focus has been in particular on getting the basic
> architecture sufficiently mature.
>
> Gecode 2.0.0 achieved a complete set of abstractions needed to do efficient
> propagation including incremental propagation. We are quite confident that
> the level of completeness and maturity we reached for propagation will be
> sufficient for some time to come. Subsequent releases fixed (and will fix)
> lots of not-so-easy-to-catch bugs as we have been stepping up Gecode's
> quality.
>
> Gecode 3.0.0 will shift the focus away from propagation. The main focus
> will
> be documentation and search.
>
> In more detail, Gecode 3.0.0 will feature:
>  - a complete rework of branching, including randomization and support for
> tie-breaking (already finished)
>  - abstractions for cost-based optimization (just define a cost function,
> done)
>  - a first shot at parallel search (working really great, but integration
> and legal aspects are not yet resolved)
>  - the first stable version of Gist as an interactive search tool (almost
> done, we have made amazing progress and have
>   attained a level of efficiency and scalability we thought impossible)
>  - apart from that the usual small stuff, much of it devoted to make Gecode
> easier to explain
>  - we might re-optimize the crucial abstractions for 64 bit rather than for
> 32 bit instead (should we? should we optimize both?)
>
> The other big thing will be to deliver documentation with Gecode apart from
> the extensive reference documentation it already comes with. The following
> topics (as of today's understanding) will be covered:
>  (a) Modeling with Gecode: How to do CP models with Gecode. This will be
> concerned with Gecode-specific aspects
>     and not be an introduction to CP.
>  (b) Programming Propagators: That will explain the basic issues, the
> underlying architecture, but also all the programming
>     techniques we developed so far.
>  (c) Programming Branchings: Rather simple.
>  (d) Programming Exploration: how to construct own search engines with a
> focus on how recomputation works in detail.
>  (e) Programming Variables: how to provide new variable implementations.
> This is now really easy.
>
> The biggest piece will be (b). Together with Gecode 3.0.0 we will
> definitely
> release (a) and maybe a short draft of (b). (d) will not come with 3.0.0,
> (c) and (e) might come. We have not yet decided whether anything but (a)
> will be released as a freely available document. Depending on our academic
> publications anything but (a) might be delayed.
>
> The later versions of Gecode 3.* will gradually improve the search
> capabilities, including a better LDS, abstractions for large neighborhood
> search, automatic configuration of recomputation, etc...
>
> There will be a Gecode 2.3.0 release that will change the way memory
> management is done. This version will also be submitted to the MiniZinc
> Challenge 2008. It might (to make our live easier) already contain parts
> mentioned above as parts of 3.0.0.
>
> The long term vision is that Gecode 4.0.0 will be something that is fully
> backed up with high-quality documentation, has very advanced parallel
> search
> facilities, and might have unique inference modules (elimination of
> redundant propagators, automatic choice of consistency level, SAC, ...).
>
> What I did not mention is that we will add new propagators (and new
> variable
> types, thanks to Filip) if we find the time and we get the requests. But we
> do hope that we will see contributions here in the hopefully not-so-far
> future from our users.
>
> Last thing, time:
>        - Gecode 2.3.0: end of summer
>        - Gecode 3.0.0: late autumn
>        - Gecode 4.0.0: late autumn 2009
>
> Okay, that was long and boring. Sorry!
>
> Now: What do you want? How can you help us? Are we missing something really
> important? Is there something fundamentally wrong?
>
> All the best
> Christian on behalf of the Gecode team
>
> --
> Christian Schulte, www.ict.kth.se/~cschulte/<http://www.ict.kth.se/%7Ecschulte/>
>
>
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>



-- 
"El primer paso para llegar a alg?n sitio, es decidir no quedarse en donde
se est?"
John Piermont Morgan

Javier Andr?s Mena Zapata
http://StrategicDecision.net/
+57 (2) 318 1000 ext. 2910
Cali - Colombia
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080625/e4edd8b8/attachment.htm>

From mauriciotorob at gmail.com  Wed Jun 25 19:23:52 2008
From: mauriciotorob at gmail.com (Mauricio Toro)
Date: Wed, 25 Jun 2008 19:23:52 +0200
Subject: [gecode-users] Gecode 3.0.0: What we will do. What do you want?
In-Reply-To: <80537a260806251020q5e9e0736gd91afdb813f8f79@mail.gmail.com>
References: <003101c8d6dd$8af3d050$a0db70f0$@se>
	<80537a260806251020q5e9e0736gd91afdb813f8f79@mail.gmail.com>
Message-ID: <a6b4b44a0806251023u3b66d5adx7106708b2aae1b64@mail.gmail.com>

Hello,
I am always having problems with bus error, and there is not an easy
way to debug those errors. Would it be possible to do something about it?
Also, some documentation about how to develop new propagators
should be included.

cheers,

Mauricio

2008/6/25 Javier Andr?s Mena Zapata <javimena at gmail.com>:

> Hi,
>
> I think one important thing missing in Gecode is direct support to modeling
> scheduling problems. There has been always  said (several papers, not
> Gecode) that that CP is the way to go if you want to model scheduling
> problems, but when one tries to implement those ideas in Gecode the
> difficulties arrives quickly, mainly because the missing of direct support
> to modelling scheduling problems and because the documentation is not very
> detailed when you want to model new search engines and branchings. You will
> address those issues in the next versions of Gecode, so in the future it
> will not be a great problem.
>
> I'm very interested in the support of scheduling functions in Gecode, and I
> would be glad to contribute an initial implementation, if you plan to
> include those functions in the main line of Gecode (that's no a requirement,
> but an idea).
>
> When you say "parallel support", do you mean multi-core support? or
> distributed support?.
>
> IMHO.
>
> Thanks for taking us into account.
>
>
> On Wed, Jun 25, 2008 at 11:07 AM, Christian Schulte <cschulte at kth.se>
> wrote:
>
>> Dear all,
>>
>> as mentioned, we are planning for Gecode 3.0.0. Before going into detail,
>> I
>> would like to share with you the goals we wanted to achieve with the
>> previous major releases and the goals we want to achieve with 3.0 (and
>> even
>> 4.0).
>>
>> Gecode 1.0.0 was the first version where we believed that we had arrived
>> at
>> something that was reasonably complete and robust to be useful to other
>> users but us. The focus has been in particular on getting the basic
>> architecture sufficiently mature.
>>
>> Gecode 2.0.0 achieved a complete set of abstractions needed to do
>> efficient
>> propagation including incremental propagation. We are quite confident that
>> the level of completeness and maturity we reached for propagation will be
>> sufficient for some time to come. Subsequent releases fixed (and will fix)
>> lots of not-so-easy-to-catch bugs as we have been stepping up Gecode's
>> quality.
>>
>> Gecode 3.0.0 will shift the focus away from propagation. The main focus
>> will
>> be documentation and search.
>>
>> In more detail, Gecode 3.0.0 will feature:
>>  - a complete rework of branching, including randomization and support for
>> tie-breaking (already finished)
>>  - abstractions for cost-based optimization (just define a cost function,
>> done)
>>  - a first shot at parallel search (working really great, but integration
>> and legal aspects are not yet resolved)
>>  - the first stable version of Gist as an interactive search tool (almost
>> done, we have made amazing progress and have
>>   attained a level of efficiency and scalability we thought impossible)
>>  - apart from that the usual small stuff, much of it devoted to make
>> Gecode
>> easier to explain
>>  - we might re-optimize the crucial abstractions for 64 bit rather than
>> for
>> 32 bit instead (should we? should we optimize both?)
>>
>> The other big thing will be to deliver documentation with Gecode apart
>> from
>> the extensive reference documentation it already comes with. The following
>> topics (as of today's understanding) will be covered:
>>  (a) Modeling with Gecode: How to do CP models with Gecode. This will be
>> concerned with Gecode-specific aspects
>>     and not be an introduction to CP.
>>  (b) Programming Propagators: That will explain the basic issues, the
>> underlying architecture, but also all the programming
>>     techniques we developed so far.
>>  (c) Programming Branchings: Rather simple.
>>  (d) Programming Exploration: how to construct own search engines with a
>> focus on how recomputation works in detail.
>>  (e) Programming Variables: how to provide new variable implementations.
>> This is now really easy.
>>
>> The biggest piece will be (b). Together with Gecode 3.0.0 we will
>> definitely
>> release (a) and maybe a short draft of (b). (d) will not come with 3.0.0,
>> (c) and (e) might come. We have not yet decided whether anything but (a)
>> will be released as a freely available document. Depending on our academic
>> publications anything but (a) might be delayed.
>>
>> The later versions of Gecode 3.* will gradually improve the search
>> capabilities, including a better LDS, abstractions for large neighborhood
>> search, automatic configuration of recomputation, etc...
>>
>> There will be a Gecode 2.3.0 release that will change the way memory
>> management is done. This version will also be submitted to the MiniZinc
>> Challenge 2008. It might (to make our live easier) already contain parts
>> mentioned above as parts of 3.0.0.
>>
>> The long term vision is that Gecode 4.0.0 will be something that is fully
>> backed up with high-quality documentation, has very advanced parallel
>> search
>> facilities, and might have unique inference modules (elimination of
>> redundant propagators, automatic choice of consistency level, SAC, ...).
>>
>> What I did not mention is that we will add new propagators (and new
>> variable
>> types, thanks to Filip) if we find the time and we get the requests. But
>> we
>> do hope that we will see contributions here in the hopefully not-so-far
>> future from our users.
>>
>> Last thing, time:
>>        - Gecode 2.3.0: end of summer
>>        - Gecode 3.0.0: late autumn
>>        - Gecode 4.0.0: late autumn 2009
>>
>> Okay, that was long and boring. Sorry!
>>
>> Now: What do you want? How can you help us? Are we missing something
>> really
>> important? Is there something fundamentally wrong?
>>
>> All the best
>> Christian on behalf of the Gecode team
>>
>> --
>> Christian Schulte, www.ict.kth.se/~cschulte/<http://www.ict.kth.se/%7Ecschulte/>
>>
>>
>>
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
>
>
>
> --
> "El primer paso para llegar a alg?n sitio, es decidir no quedarse en donde
> se est?"
> John Piermont Morgan
>
> Javier Andr?s Mena Zapata
> http://StrategicDecision.net/
> +57 (2) 318 1000 ext. 2910
> Cali - Colombia
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>


-- 
Mauricio Toro Bermudez
Estudiante de Ingenier?a de Sistemas
Pontificia Universidad Javeriana, Colombia

Stagiare ? l'Ircam
1, place Igor-Stravinsky 75004 Paris,
France de 2008 ? 2009
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080625/3adc00a5/attachment.htm>

From tack at ps.uni-sb.de  Wed Jun 25 19:39:43 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Wed, 25 Jun 2008 19:39:43 +0200
Subject: [gecode-users] Gecode 3.0.0: What we will do. What do you want?
In-Reply-To: <a6b4b44a0806251023u3b66d5adx7106708b2aae1b64@mail.gmail.com>
References: <003101c8d6dd$8af3d050$a0db70f0$@se>
	<80537a260806251020q5e9e0736gd91afdb813f8f79@mail.gmail.com>
	<a6b4b44a0806251023u3b66d5adx7106708b2aae1b64@mail.gmail.com>
Message-ID: <D1D596AC-4C49-4826-BF92-BE9879BF2D7C@ps.uni-sb.de>

Mauricio Toro wrote:
> I am always having problems with bus error, and there is not an easy
> way to debug those errors. Would it be possible to do something  
> about it?

With a debug build (configure --enable-debug) and a debugger like gdb,  
it's usually quite easy to find the reasons for bus errors and the  
like.  If that's not enough, you should try valgrind, it does an  
excellent job verifying that you use the memory correctly.

Guido




From cschulte at kth.se  Wed Jun 25 19:51:20 2008
From: cschulte at kth.se (Christian Schulte)
Date: Wed, 25 Jun 2008 19:51:20 +0200
Subject: [gecode-users] Gecode 3.0.0: What we will do. What do you want?
In-Reply-To: <80537a260806251020q5e9e0736gd91afdb813f8f79@mail.gmail.com>
References: <003101c8d6dd$8af3d050$a0db70f0$@se>
	<80537a260806251020q5e9e0736gd91afdb813f8f79@mail.gmail.com>
Message-ID: <000c01c8d6ec$1380c050$3a8240f0$@se>

Hi,

 

you are very right about scheduling. We know that it is essential. The way
to go as we understand is to have the scheduling propagators and then add a
modeling layer for scheduling problems on top (like minimodel does dor
arithmetic constraints etc), so that?s actually two issues.

 

If you want to make a start we would of course offer support. But I believe
that it would be better still if more than a single person would go about
it.

 

Parallel means multiple threads (so multi-core or multi CPU). I just got an
8 core machine, so you see why this is bound to happen ;-)

 

Cheers

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Javier Andr?s Mena Zapata
Sent: Wednesday, June 25, 2008 7:20 PM
Cc: users at gecode.org
Subject: Re: [gecode-users] Gecode 3.0.0: What we will do. What do you want?

 

Hi,

I think one important thing missing in Gecode is direct support to modeling
scheduling problems. There has been always  said (several papers, not
Gecode) that that CP is the way to go if you want to model scheduling
problems, but when one tries to implement those ideas in Gecode the
difficulties arrives quickly, mainly because the missing of direct support
to modelling scheduling problems and because the documentation is not very
detailed when you want to model new search engines and branchings. You will
address those issues in the next versions of Gecode, so in the future it
will not be a great problem.

I'm very interested in the support of scheduling functions in Gecode, and I
would be glad to contribute an initial implementation, if you plan to
include those functions in the main line of Gecode (that's no a requirement,
but an idea).

When you say "parallel support", do you mean multi-core support? or
distributed support?.

IMHO.

Thanks for taking us into account.

On Wed, Jun 25, 2008 at 11:07 AM, Christian Schulte <cschulte at kth.se> wrote:

Dear all,

as mentioned, we are planning for Gecode 3.0.0. Before going into detail, I
would like to share with you the goals we wanted to achieve with the
previous major releases and the goals we want to achieve with 3.0 (and even
4.0).

Gecode 1.0.0 was the first version where we believed that we had arrived at
something that was reasonably complete and robust to be useful to other
users but us. The focus has been in particular on getting the basic
architecture sufficiently mature.

Gecode 2.0.0 achieved a complete set of abstractions needed to do efficient
propagation including incremental propagation. We are quite confident that
the level of completeness and maturity we reached for propagation will be
sufficient for some time to come. Subsequent releases fixed (and will fix)
lots of not-so-easy-to-catch bugs as we have been stepping up Gecode's
quality.

Gecode 3.0.0 will shift the focus away from propagation. The main focus will
be documentation and search.

In more detail, Gecode 3.0.0 will feature:
 - a complete rework of branching, including randomization and support for
tie-breaking (already finished)
 - abstractions for cost-based optimization (just define a cost function,
done)
 - a first shot at parallel search (working really great, but integration
and legal aspects are not yet resolved)
 - the first stable version of Gist as an interactive search tool (almost
done, we have made amazing progress and have
  attained a level of efficiency and scalability we thought impossible)
 - apart from that the usual small stuff, much of it devoted to make Gecode
easier to explain
 - we might re-optimize the crucial abstractions for 64 bit rather than for
32 bit instead (should we? should we optimize both?)

The other big thing will be to deliver documentation with Gecode apart from
the extensive reference documentation it already comes with. The following
topics (as of today's understanding) will be covered:
 (a) Modeling with Gecode: How to do CP models with Gecode. This will be
concerned with Gecode-specific aspects
    and not be an introduction to CP.
 (b) Programming Propagators: That will explain the basic issues, the
underlying architecture, but also all the programming
    techniques we developed so far.
 (c) Programming Branchings: Rather simple.
 (d) Programming Exploration: how to construct own search engines with a
focus on how recomputation works in detail.
 (e) Programming Variables: how to provide new variable implementations.
This is now really easy.

The biggest piece will be (b). Together with Gecode 3.0.0 we will definitely
release (a) and maybe a short draft of (b). (d) will not come with 3.0.0,
(c) and (e) might come. We have not yet decided whether anything but (a)
will be released as a freely available document. Depending on our academic
publications anything but (a) might be delayed.

The later versions of Gecode 3.* will gradually improve the search
capabilities, including a better LDS, abstractions for large neighborhood
search, automatic configuration of recomputation, etc...

There will be a Gecode 2.3.0 release that will change the way memory
management is done. This version will also be submitted to the MiniZinc
Challenge 2008. It might (to make our live easier) already contain parts
mentioned above as parts of 3.0.0.

The long term vision is that Gecode 4.0.0 will be something that is fully
backed up with high-quality documentation, has very advanced parallel search
facilities, and might have unique inference modules (elimination of
redundant propagators, automatic choice of consistency level, SAC, ...).

What I did not mention is that we will add new propagators (and new variable
types, thanks to Filip) if we find the time and we get the requests. But we
do hope that we will see contributions here in the hopefully not-so-far
future from our users.

Last thing, time:
       - Gecode 2.3.0: end of summer
       - Gecode 3.0.0: late autumn
       - Gecode 4.0.0: late autumn 2009

Okay, that was long and boring. Sorry!

Now: What do you want? How can you help us? Are we missing something really
important? Is there something fundamentally wrong?

All the best
Christian on behalf of the Gecode team

--
Christian Schulte, www.ict.kth.se/~cschulte/
<http://www.ict.kth.se/%7Ecschulte/> 




_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




-- 
"El primer paso para llegar a alg?n sitio, es decidir no quedarse en donde
se est?"
John Piermont Morgan

Javier Andr?s Mena Zapata
http://StrategicDecision.net/
+57 (2) 318 1000 ext. 2910
Cali - Colombia 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080625/39856d53/attachment.htm>

From cschulte at kth.se  Wed Jun 25 19:53:10 2008
From: cschulte at kth.se (Christian Schulte)
Date: Wed, 25 Jun 2008 19:53:10 +0200
Subject: [gecode-users] Gecode 3.0.0: What we will do. What do you want?
In-Reply-To: <a6b4b44a0806251023u3b66d5adx7106708b2aae1b64@mail.gmail.com>
References: <003101c8d6dd$8af3d050$a0db70f0$@se>	<80537a260806251020q5e9e0736gd91afdb813f8f79@mail.gmail.com>
	<a6b4b44a0806251023u3b66d5adx7106708b2aae1b64@mail.gmail.com>
Message-ID: <001a01c8d6ec$54ef6460$fece2d20$@se>

Hi,

 

bus errors can be found using a normal debugger. That?s not really an issue
with Gecode (well, Gecode might have some bugs but bus errors most likely
not).

 

As it comes to documentation, the part (b) should give you what you want.

 

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Mauricio Toro
Sent: Wednesday, June 25, 2008 7:24 PM
To: users at gecode.org
Subject: Re: [gecode-users] Gecode 3.0.0: What we will do. What do you want?

 

Hello,

 

I am always having problems with bus error, and there is not an easy

way to debug those errors. Would it be possible to do something about it?

Also, some documentation about how to develop new propagators 

should be included.

 

cheers,

 

Mauricio

2008/6/25 Javier Andr?s Mena Zapata <javimena at gmail.com>:

Hi,

I think one important thing missing in Gecode is direct support to modeling
scheduling problems. There has been always  said (several papers, not
Gecode) that that CP is the way to go if you want to model scheduling
problems, but when one tries to implement those ideas in Gecode the
difficulties arrives quickly, mainly because the missing of direct support
to modelling scheduling problems and because the documentation is not very
detailed when you want to model new search engines and branchings. You will
address those issues in the next versions of Gecode, so in the future it
will not be a great problem.

I'm very interested in the support of scheduling functions in Gecode, and I
would be glad to contribute an initial implementation, if you plan to
include those functions in the main line of Gecode (that's no a requirement,
but an idea).

When you say "parallel support", do you mean multi-core support? or
distributed support?.

IMHO.

Thanks for taking us into account.

 

On Wed, Jun 25, 2008 at 11:07 AM, Christian Schulte <cschulte at kth.se> wrote:

Dear all,

as mentioned, we are planning for Gecode 3.0.0. Before going into detail, I
would like to share with you the goals we wanted to achieve with the
previous major releases and the goals we want to achieve with 3.0 (and even
4.0).

Gecode 1.0.0 was the first version where we believed that we had arrived at
something that was reasonably complete and robust to be useful to other
users but us. The focus has been in particular on getting the basic
architecture sufficiently mature.

Gecode 2.0.0 achieved a complete set of abstractions needed to do efficient
propagation including incremental propagation. We are quite confident that
the level of completeness and maturity we reached for propagation will be
sufficient for some time to come. Subsequent releases fixed (and will fix)
lots of not-so-easy-to-catch bugs as we have been stepping up Gecode's
quality.

Gecode 3.0.0 will shift the focus away from propagation. The main focus will
be documentation and search.

In more detail, Gecode 3.0.0 will feature:
 - a complete rework of branching, including randomization and support for
tie-breaking (already finished)
 - abstractions for cost-based optimization (just define a cost function,
done)
 - a first shot at parallel search (working really great, but integration
and legal aspects are not yet resolved)
 - the first stable version of Gist as an interactive search tool (almost
done, we have made amazing progress and have
  attained a level of efficiency and scalability we thought impossible)
 - apart from that the usual small stuff, much of it devoted to make Gecode
easier to explain
 - we might re-optimize the crucial abstractions for 64 bit rather than for
32 bit instead (should we? should we optimize both?)

The other big thing will be to deliver documentation with Gecode apart from
the extensive reference documentation it already comes with. The following
topics (as of today's understanding) will be covered:
 (a) Modeling with Gecode: How to do CP models with Gecode. This will be
concerned with Gecode-specific aspects
    and not be an introduction to CP.
 (b) Programming Propagators: That will explain the basic issues, the
underlying architecture, but also all the programming
    techniques we developed so far.
 (c) Programming Branchings: Rather simple.
 (d) Programming Exploration: how to construct own search engines with a
focus on how recomputation works in detail.
 (e) Programming Variables: how to provide new variable implementations.
This is now really easy.

The biggest piece will be (b). Together with Gecode 3.0.0 we will definitely
release (a) and maybe a short draft of (b). (d) will not come with 3.0.0,
(c) and (e) might come. We have not yet decided whether anything but (a)
will be released as a freely available document. Depending on our academic
publications anything but (a) might be delayed.

The later versions of Gecode 3.* will gradually improve the search
capabilities, including a better LDS, abstractions for large neighborhood
search, automatic configuration of recomputation, etc...

There will be a Gecode 2.3.0 release that will change the way memory
management is done. This version will also be submitted to the MiniZinc
Challenge 2008. It might (to make our live easier) already contain parts
mentioned above as parts of 3.0.0.

The long term vision is that Gecode 4.0.0 will be something that is fully
backed up with high-quality documentation, has very advanced parallel search
facilities, and might have unique inference modules (elimination of
redundant propagators, automatic choice of consistency level, SAC, ...).

What I did not mention is that we will add new propagators (and new variable
types, thanks to Filip) if we find the time and we get the requests. But we
do hope that we will see contributions here in the hopefully not-so-far
future from our users.

Last thing, time:
       - Gecode 2.3.0: end of summer
       - Gecode 3.0.0: late autumn
       - Gecode 4.0.0: late autumn 2009

Okay, that was long and boring. Sorry!

Now: What do you want? How can you help us? Are we missing something really
important? Is there something fundamentally wrong?

All the best
Christian on behalf of the Gecode team

--
Christian Schulte, www.ict.kth.se/~cschulte/
<http://www.ict.kth.se/%7Ecschulte/> 




_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users





-- 
"El primer paso para llegar a alg?n sitio, es decidir no quedarse en donde
se est?"
John Piermont Morgan

Javier Andr?s Mena Zapata
http://StrategicDecision.net/
+57 (2) 318 1000 ext. 2910
Cali - Colombia 
_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




-- 
Mauricio Toro Bermudez
Estudiante de Ingenier?a de Sistemas
Pontificia Universidad Javeriana, Colombia

Stagiare ? l'Ircam
1, place Igor-Stravinsky 75004 Paris, 
France de 2008 ? 2009 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20080625/55810cb2/attachment.htm>

From malcolmr at cse.unsw.edu.au  Thu Jun 26 10:24:31 2008
From: malcolmr at cse.unsw.edu.au (Malcolm Ryan)
Date: Thu, 26 Jun 2008 18:24:31 +1000
Subject: [gecode-users] Gecode 3.0.0: What we will do. What do you want?
In-Reply-To: <003101c8d6dd$8af3d050$a0db70f0$@se>
References: <003101c8d6dd$8af3d050$a0db70f0$@se>
Message-ID: <CAC04853-9411-4925-BF94-C95A8E94C4B3@cse.unsw.edu.au>

On 26/06/2008, at 2:07 AM, Christian Schulte wrote:
> Now: What do you want? How can you help us? Are we missing something  
> really
> important? Is there something fundamentally wrong?

Firstly, let me thank you for a fabulous tool and better support than  
any free software I've encountered before. Research software is not  
usually any near the quality of Gecode and you deserve high acclaim  
for your work.

As for improvements, in the short term I think the push to fill out  
the documentation is important. In the longer term, it would be good  
to see more visualisation and debugging tools. If you make an error in  
your constraint definitions, at the moment it is very difficult to  
detect and isolate the problem. It is also hard to visualise whether  
your constraint system is propagating and searching efficiently. It  
would be very nice to have a graphical way to watch the propagation of  
information around the constraint graph.

Like any programming language, there are good and bad ways of writing  
constraint systems. At the moment the modelling problem remains a  
black art, only really properly understood by a few. I think it will  
remain that way as long as constraint propagation remains a black box.  
Solving this may require a significant about of HCI work, but I think  
it would be very valuable in the long run.

Malcolm



From David.Rijsman at quintiq.com  Thu Jun 26 11:29:32 2008
From: David.Rijsman at quintiq.com (David Rijsman)
Date: Thu, 26 Jun 2008 11:29:32 +0200
Subject: [gecode-users] Gecode 3.0.0: What we will do. What do you	want?
In-Reply-To: <CAC04853-9411-4925-BF94-C95A8E94C4B3@cse.unsw.edu.au>
References: <003101c8d6dd$8af3d050$a0db70f0$@se>
	<CAC04853-9411-4925-BF94-C95A8E94C4B3@cse.unsw.edu.au>
Message-ID: <48637D9B.D4D3.0085.0@quintiq.com>

I fully agree with Malcolm, on all remarks! 

I really like the open structure of Gecode, it is extremely easy to interface to another system but it seems that for debugging and visualization this is no longer valid. It is great to have gist but I require to have my own information and visualization both for the logic as the control. For logic Gecode is open enough for me to create information on the constraint network and also on domain reductions after adding constraints, but for the control I had no other option than to add code into the existing code base. This is not really what you want in an open system, I like to add code but not into existing files.  I will potentially have to redo my work for every release (especially 3.0.0 will have new branching and lots of more control). 

- What would be nice is to have is access to events in the control, with appropriate data, such that I can use this in my own system.

hope this makes sense,


David J Rijsman
Software Architect
Quintiq
 
T +31 (0)73 691 07 39
F +31 (0)73 691 07 54
M +31 (0)62 127 68 29
E david.rijsman at quintiq.nl
I www.quintiq.com


>>> 
From: 	Malcolm Ryan <malcolmr at cse.unsw.edu.au>
To:	gecode list <users at gecode.org>
Date: 	6/26/2008 10:26 AM
Subject: 	Re: [gecode-users] Gecode 3.0.0: What we will do. What do you want?

On 26/06/2008, at 2:07 AM, Christian Schulte wrote:
> Now: What do you want? How can you help us? Are we missing something  
> really
> important? Is there something fundamentally wrong?

Firstly, let me thank you for a fabulous tool and better support than  
any free software I've encountered before. Research software is not  
usually any near the quality of Gecode and you deserve high acclaim  
for your work.

As for improvements, in the short term I think the push to fill out  
the documentation is important. In the longer term, it would be good  
to see more visualisation and debugging tools. If you make an error in  
your constraint definitions, at the moment it is very difficult to  
detect and isolate the problem. It is also hard to visualise whether  
your constraint system is propagating and searching efficiently. It  
would be very nice to have a graphical way to watch the propagation of  
information around the constraint graph.

Like any programming language, there are good and bad ways of writing  
constraint systems. At the moment the modelling problem remains a  
black art, only really properly understood by a few. I think it will  
remain that way as long as constraint propagation remains a black box.  
Solving this may require a significant about of HCI work, but I think  
it would be very valuable in the long run.

Malcolm

_______________________________________________
Gecode users mailing list
users at gecode.org 
https://www.gecode.org/mailman/listinfo/gecode-users


This message contains information that may be privileged or confidential and is the property of Quintiq. It is only intended for the person to whom it is addressed. If you are not the intended recipient, you are not authorized to read, print, retain, copy, disseminate, distribute or use this message or any part thereof. If you have received this message in error, please notify the sender immediately and delete all copies of this message. Please note that e-mails are susceptible to change, therefore they are not binding.



From cschulte at kth.se  Thu Jun 26 14:51:28 2008
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 26 Jun 2008 14:51:28 +0200
Subject: [gecode-users] Gecode 3.0.0: What we will do. What do you	want?
In-Reply-To: <48637D9B.D4D3.0085.0@quintiq.com>
References: <003101c8d6dd$8af3d050$a0db70f0$@se>	<CAC04853-9411-4925-BF94-C95A8E94C4B3@cse.unsw.edu.au>
	<48637D9B.D4D3.0085.0@quintiq.com>
Message-ID: <000c01c8d78b$59d4bf80$0d7e3e80$@se>

Dear David and Malcolm,

thanks for the nice and kind remarks. Highly appreciated.

Let me please go off a little bit into today's philosophy lecture (I know
it's another bore). One thing that we completely resist in Gecode is
anticipating the future (as in what could potentially be useful). We do what
we understand and where we also know it will be used and how it will be
used. That we try to do as simple, general, and efficient as possible. We
never do guesswork, if it does not have an application right now we won't do
anything. Otherwise one will guess and one will always make the wrong guess.
I think this commitment to simplicity is one of the really strong aspects of
Gecode. No fluff, no code infected with bitrot, nothing. I know it sounds
heretic but my now 15 years of system building experience has taught me that
lesson.

Of course, what we do in our research is something else again.

But if you have a clear picture of what it is what you want we will for sure
try to come up with something (here the "we" could of course include you)!
The scenario of hacking the system is definitely not anything we want!

I wrote down Malcolm's cry for better tools. It's a pity, we know something
that should do exactly what Malcolm desires but we do not have the
resources... But we will try harder to find the resources.

Cheers
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of David Rijsman
Sent: Thursday, June 26, 2008 11:30 AM
To: users at gecode.org
Subject: Re: [gecode-users] Gecode 3.0.0: What we will do. What do you want?

I fully agree with Malcolm, on all remarks! 

I really like the open structure of Gecode, it is extremely easy to
interface to another system but it seems that for debugging and
visualization this is no longer valid. It is great to have gist but I
require to have my own information and visualization both for the logic as
the control. For logic Gecode is open enough for me to create information on
the constraint network and also on domain reductions after adding
constraints, but for the control I had no other option than to add code into
the existing code base. This is not really what you want in an open system,
I like to add code but not into existing files.  I will potentially have to
redo my work for every release (especially 3.0.0 will have new branching and
lots of more control). 

- What would be nice is to have is access to events in the control, with
appropriate data, such that I can use this in my own system.

hope this makes sense,


David J Rijsman
Software Architect
Quintiq
 
T +31 (0)73 691 07 39
F +31 (0)73 691 07 54
M +31 (0)62 127 68 29
E david.rijsman at quintiq.nl
I www.quintiq.com


>>> 
From: 	Malcolm Ryan <malcolmr at cse.unsw.edu.au>
To:	gecode list <users at gecode.org>
Date: 	6/26/2008 10:26 AM
Subject: 	Re: [gecode-users] Gecode 3.0.0: What we will do. What do
you want?

On 26/06/2008, at 2:07 AM, Christian Schulte wrote:
> Now: What do you want? How can you help us? Are we missing something  
> really
> important? Is there something fundamentally wrong?

Firstly, let me thank you for a fabulous tool and better support than  
any free software I've encountered before. Research software is not  
usually any near the quality of Gecode and you deserve high acclaim  
for your work.

As for improvements, in the short term I think the push to fill out  
the documentation is important. In the longer term, it would be good  
to see more visualisation and debugging tools. If you make an error in  
your constraint definitions, at the moment it is very difficult to  
detect and isolate the problem. It is also hard to visualise whether  
your constraint system is propagating and searching efficiently. It  
would be very nice to have a graphical way to watch the propagation of  
information around the constraint graph.

Like any programming language, there are good and bad ways of writing  
constraint systems. At the moment the modelling problem remains a  
black art, only really properly understood by a few. I think it will  
remain that way as long as constraint propagation remains a black box.  
Solving this may require a significant about of HCI work, but I think  
it would be very valuable in the long run.

Malcolm

_______________________________________________
Gecode users mailing list
users at gecode.org 
https://www.gecode.org/mailman/listinfo/gecode-users


This message contains information that may be privileged or confidential and
is the property of Quintiq. It is only intended for the person to whom it is
addressed. If you are not the intended recipient, you are not authorized to
read, print, retain, copy, disseminate, distribute or use this message or
any part thereof. If you have received this message in error, please notify
the sender immediately and delete all copies of this message. Please note
that e-mails are susceptible to change, therefore they are not binding.

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




