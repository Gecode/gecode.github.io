From chaosangel at gmx.de  Thu Oct  2 17:04:01 2008
From: chaosangel at gmx.de (Max)
Date: Thu, 02 Oct 2008 17:04:01 +0200
Subject: [gecode-users] Feature support of gecode for SMT system
Message-ID: <48E4E2E1.3080704@gmx.de>

Hi
i'm currently working on integrating a CSP Solver into another solver 
(ASP), similar to SMT (Sat Modulo Theories).
I want to use gecode, as it seems free and flexible.

I tried to experiment a bit, but it is very hard to find the needed 
functionality because of the missing documentation. (If the tutorial is 
already in work, maybe you could send me a draft version of it)

My question is, is gecode capable of the following things:

Comparing boolean values with integer equations:
I need constraints of the following syntax,
b1 == X > Y
b2 == W <= Z*X + 14
etc...
All variables on the right side are integer values. The b's on the left 
side shall be boolean variables.
So if the constraint X > Y is fullfilled, b1 must be true, if b1 is set 
to false, then X > Y does not hold.
I tried to post this, but it does not seem to be supported this way:
[...]
 IntVarArray x;
 BoolVar y;
 post(this, x[0] > x[1] + 30 == y);
[...]

Backtracking in means of manual, incremental variable assignment.
I want to set my constraints and restrict the domains of the variables 
without a choicepoint,
then i manually set my (boolean) variables to be true or false. 
Sometimes i want to backtrack this setting of variables, undoing the 
setting of the variables.
Is there another way than copying my Space and having a copy of each 
assignment manually?
Or maybe you know a way to do this a better way, i dont want to set all 
variables to a new value, since  everything would have to be recomputed.


Post Division:
[...]
post(this, x[0] / x[1] == 42);
[...]
Why is division not supported?

Learning: Which constraint failed:
If there is no solution for my problem, can gecode deliver me a reason 
(for learning)?
So which constraints failed or something like that?


Thank you in advance,
Max Ostrowski




From tack at ps.uni-sb.de  Thu Oct  2 17:49:43 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Thu, 2 Oct 2008 17:49:43 +0200
Subject: [gecode-users] Feature support of gecode for SMT system
In-Reply-To: <48E4E2E1.3080704@gmx.de>
References: <48E4E2E1.3080704@gmx.de>
Message-ID: <EE73BE34-8098-4AC2-9F0A-E88301EF7592@ps.uni-sb.de>

Max wrote:

> I tried to experiment a bit, but it is very hard to find the needed
> functionality because of the missing documentation. (If the tutorial  
> is
> already in work, maybe you could send me a draft version of it)

I'm afraid it's not yet in a state to be sent around.

> My question is, is gecode capable of the following things:
>
> Comparing boolean values with integer equations:
> I need constraints of the following syntax,
> b1 == X > Y
> b2 == W <= Z*X + 14
> etc...
> All variables on the right side are integer values. The b's on the  
> left
> side shall be boolean variables.
> So if the constraint X > Y is fullfilled, b1 must be true, if b1 is  
> set
> to false, then X > Y does not hold.
> I tried to post this, but it does not seem to be supported this way:
> [...]
> IntVarArray x;
> BoolVar y;
> post(this, x[0] > x[1] + 30 == y);
> [...]

It's called "reified propagators", and it's supported.  If you want to  
use the post syntax from minimodel.hh, you can do as follows:
post(this, eqv(~(x[0] > x[1] + 30), y));

Many constraints have reified versions, you can identify them in the  
reference documentation by their additional BoolVar argument.

> Backtracking in means of manual, incremental variable assignment.
> I want to set my constraints and restrict the domains of the variables
> without a choicepoint,
> then i manually set my (boolean) variables to be true or false.
> Sometimes i want to backtrack this setting of variables, undoing the
> setting of the variables.
> Is there another way than copying my Space and having a copy of each
> assignment manually?
> Or maybe you know a way to do this a better way, i dont want to set  
> all
> variables to a new value, since  everything would have to be  
> recomputed.

There's no other way than copying and recomputation in Gecode to undo  
changes in variable domains.

> Post Division:
> [...]
> post(this, x[0] / x[1] == 42);
> [...]
> Why is division not supported?

It's an oversight, we'll add it to the next version.  You can still  
post division directly, without the minimodel interface:
div(this, x0, x1, IntVar(this, 42, 42));
There's no specialized version for constant integers (yet).

> Learning: Which constraint failed:
> If there is no solution for my problem, can gecode deliver me a reason
> (for learning)?
> So which constraints failed or something like that?

No, that's currently not possible (and IIRC has been discussed here  
before, maybe you want to have a look at the archives).

Cheers,
	Guido




From denys.duchier at univ-orleans.fr  Fri Oct  3 21:31:22 2008
From: denys.duchier at univ-orleans.fr (Denys Duchier)
Date: Fri, 03 Oct 2008 21:31:22 +0200
Subject: [gecode-users] posting a reified equality constraint
Message-ID: <8763o9v5kl.fsf@univ-orleans.fr>

I am stumped on something that is completely trivial.  How do I "post"
the reified constraint (X=k)=B where X is an IntVar, k is an int and B
is a BoolVar?

Cheers,

--Denys



From tack at ps.uni-sb.de  Fri Oct  3 23:27:18 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Fri, 3 Oct 2008 23:27:18 +0200
Subject: [gecode-users] posting a reified equality constraint
In-Reply-To: <8763o9v5kl.fsf@univ-orleans.fr>
References: <8763o9v5kl.fsf@univ-orleans.fr>
Message-ID: <159D45D9-3251-4EC0-A7B8-DA68DE89E564@ps.uni-sb.de>

Denys Duchier wrote:

> I am stumped on something that is completely trivial.  How do I "post"
> the reified constraint (X=k)=B where X is an IntVar, k is an int and B
> is a BoolVar?

Reified constraints seem to be en vogue these days ;-)

post(this, eqv(~(X == k), B));

would be one solution,

dom(this, X, k, k, B);

another.

Cheers,
	Guido




From denys.duchier at univ-orleans.fr  Sat Oct  4 13:08:39 2008
From: denys.duchier at univ-orleans.fr (Denys Duchier)
Date: Sat, 04 Oct 2008 13:08:39 +0200
Subject: [gecode-users] posting a reified equality constraint
In-Reply-To: <159D45D9-3251-4EC0-A7B8-DA68DE89E564@ps.uni-sb.de> (Guido Tack's
	message of "Fri, 3 Oct 2008 23:27:18 +0200")
References: <8763o9v5kl.fsf@univ-orleans.fr>
	<159D45D9-3251-4EC0-A7B8-DA68DE89E564@ps.uni-sb.de>
Message-ID: <87y714ty6g.fsf@univ-orleans.fr>

Guido Tack <tack at ps.uni-sb.de> writes:

> post(this, eqv(~(X == k), B));

Thanks!  Is there some reason that minimodel.hh does not provide
overloadings such as the one below instead?


Gecode::MiniModel::BoolExpr
operator==(const Gecode::MiniModel::LinRel<Gecode::IntVar>& e,
	   const Gecode::MiniModel::BoolExpr& b)
{ return eqv(~e,b); }


Cheers,

--Denys



From chaosangel at gmx.de  Sat Oct  4 14:18:49 2008
From: chaosangel at gmx.de (Max)
Date: Sat, 04 Oct 2008 14:18:49 +0200
Subject: [gecode-users] Why are my variables not constrained
Message-ID: <48E75F29.4010405@gmx.de>

At first, thank you for the answers to my other questions.
As reified constraints seem to be en vogue, i tried them myself:

post(this, x[0] > x[1] + 30);
post(this, x[2] - x[0] == 45);

This constraints my variables to the following
x = {[31..1455], [0..1424], [76..1500], [0..1500]}

Now i want to make the first constraint reified

post(this, eqv((x[0] > x[1] + 30), y));
post(this, x[2] - x[0] == 45);

This constraints my variables to
{[0..1455], [0..1500], [45..1500], [0..1500]} und y= [0..1]
So x[0] and x[1] are less constrained, because y is not decided.
But, if i now post

post(this, eqv((x[0] > x[1] + 30), y));
post(this, x[2] - x[0] == 45);
post(this, y == 1);

I do get the same constraints, so why are x[0-1] not constrained
{[0..1455], [0..1500], [45..1500], [0..1500]} and y= 1



By the way, is there a smarter way to set y (variables in general) ?

Tank you in advance

Max



From chaosangel at gmx.de  Sat Oct  4 14:36:33 2008
From: chaosangel at gmx.de (Max)
Date: Sat, 04 Oct 2008 14:36:33 +0200
Subject: [gecode-users] Why are my variables not constrained
In-Reply-To: <48E75F29.4010405@gmx.de>
References: <48E75F29.4010405@gmx.de>
Message-ID: <48E76351.5060503@gmx.de>

Furthermore the constraint is never applied.

 x(this,3,0,1500)


 post(this, eqv((x[0] > x[1] + 30), y));
 post(this, x[2] - x[0] == 45);
 post(this, x[0] == 2); // 2 cant be greater than x[1]+30
 post(this, y == 1); // the constrained must hold

 branch(this, x, INT_VAR_SIZE_MIN, INT_VAL_SPLIT_MAX);
 (PS: How do i branch on a single variable (BoolVar y) and where can i 
find such information by myself)

So, the first constraint must aplly, as y is set to 1, it can not apply, 
since 2 > 0 +30 is false

But i do get valid answers, so what am i doing wrong, did i 
misunderstand the eqv?

Tank you in advance and sorry for my clumsiness.

Max Ostrowski





Max wrote:
> At first, thank you for the answers to my other questions.
> As reified constraints seem to be en vogue, i tried them myself:
>
> post(this, x[0] > x[1] + 30);
> post(this, x[2] - x[0] == 45);
>
> This constraints my variables to the following
> x = {[31..1455], [0..1424], [76..1500], [0..1500]}
>
> Now i want to make the first constraint reified
>
> post(this, eqv((x[0] > x[1] + 30), y));
> post(this, x[2] - x[0] == 45);
>
> This constraints my variables to
> {[0..1455], [0..1500], [45..1500], [0..1500]} und y= [0..1]
> So x[0] and x[1] are less constrained, because y is not decided.
> But, if i now post
>
> post(this, eqv((x[0] > x[1] + 30), y));
> post(this, x[2] - x[0] == 45);
> post(this, y == 1);
>
> I do get the same constraints, so why are x[0-1] not constrained
> {[0..1455], [0..1500], [45..1500], [0..1500]} and y= 1
>
>
>
> By the way, is there a smarter way to set y (variables in general) ?
>
> Tank you in advance
>
> Max
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>   




From tack at ps.uni-sb.de  Sat Oct  4 16:44:21 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Sat, 4 Oct 2008 16:44:21 +0200
Subject: [gecode-users] Why are my variables not constrained
In-Reply-To: <48E76351.5060503@gmx.de>
References: <48E75F29.4010405@gmx.de> <48E76351.5060503@gmx.de>
Message-ID: <CDFF0238-E52E-48EE-B7D9-045119430E1B@ps.uni-sb.de>

Hi!

This problem is going to be in the FAQ we're preparing... ;-)

When you post a constraint, only the immediate consequences are  
sometimes propagated to the variables.  You have to start constraint  
propagation by asking the space for its status (using the status()  
function).  And of course even then, not all logical consequences of  
the constraints are propagated to the variables, as propagation is not  
complete.  You have to use search in order to find actual solutions or  
prove that there is none.

> branch(this, x, INT_VAR_SIZE_MIN, INT_VAL_SPLIT_MAX);
> (PS: How do i branch on a single variable (BoolVar y) and where can i
> find such information by myself)

You have to create a BoolVarArgs of size 1, let's call it bva, and set  
bva[0] = b if b is the BoolVar you want to branch on.  To find this  
kind of information, we can currently only advise you to look at the  
examples that come with Gecode, and the API documentation.  In this  
case, the documentation of branch tells you it needs BoolVarArgs.

Cheers,
	Guido




From tack at ps.uni-sb.de  Sun Oct  5 13:01:35 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Sun, 5 Oct 2008 13:01:35 +0200
Subject: [gecode-users] Why are my variables not constrained
In-Reply-To: <48E76351.5060503@gmx.de>
References: <48E75F29.4010405@gmx.de> <48E76351.5060503@gmx.de>
Message-ID: <718AC3EE-4542-4ADF-9AF3-94791A03A982@ps.uni-sb.de>

Max wrote:

> Furthermore the constraint is never applied.
>
> x(this,3,0,1500)
>
>
> post(this, eqv((x[0] > x[1] + 30), y));

Sorry, I just realized a problem with this statement... It should  
rather read

post(this, tt( eqv((x[0] > x[1] + 30), y)) );

Otherwise, the post statement returns a BoolVar that is constrained to  
the truth value of the equivalence.  Unfortunately, gcc doesn't warn  
about the ignored return value (I don't know about Microsoft cl)!

Please try again.  Btw, you don't have to use status() if you already  
use a search engine.  Only when you want to trigger propagation  
yourself, e.g. to inspect the variable domains after posting all the  
constraints.

Cheers,
	Guido




From chaosangel at gmx.de  Sun Oct  5 13:03:33 2008
From: chaosangel at gmx.de (Max)
Date: Sun, 05 Oct 2008 13:03:33 +0200
Subject: [gecode-users] Why are my variables not constrained 2
Message-ID: <48E89F05.8080102@gmx.de>

I'm sorry for not answering to the last topic, but i seem to have 
problems with the mailing list, i hope this message will be seen.

Thank you for the hint with the status function, that should be what i need.
I found an example in the exmaples folder and tried my little example 
and can not explain the results:


class MyConstraint : public Space
{
    public:
        MyConstraint() : Space(), x(this,1,0,150), y(this,1,0,1)
        {
              post(this, eqv((x[0] != 0), y[0]));
              post(this, x[0] == 0);
              post(this, y[0] == 1);
              status();
       

}

        MyConstraint(bool share, MyConstraint& cp) : Space(share, cp)
        {
            x.update(this, share, cp.x);
            y.update(this, share, cp.y);
        }

        virtual Space* copy(bool share)
        {
            return new MyConstraint(share, *this);
        }

        IntVarArray x;
        BoolVarArray y;
};


int main(int args, char** argv)
{
    MyConstraint* myC = new MyConstraint();
    Search::Options so;
    DFS<MyConstraint> e(myC,so); // depth first search
    delete myC;                    // Constraints can be thrown away, 
they are copied
   
    MyConstraint* temp = e.next();
    temp->status();
    while(temp != NULL) // find all solutions
    {
        std::cout << temp->x << " und y= " << temp->y << std::endl;
        temp = e.next();
    }

    return 0;
}



The intended meaning should be, x=0, y=1, if y==1 then x !=0

As a result i get:
{0} und y= {1}

The ssame results with branching on y (without setting it to 1)
i do get 2 results
{0} und y= {1}
{0} und y= {0}

So the first constraint is never apllied, what am i doing wrong ?!?!

Tank you for the help.





From chaosangel at gmx.de  Sun Oct  5 13:59:41 2008
From: chaosangel at gmx.de (Max)
Date: Sun, 05 Oct 2008 13:59:41 +0200
Subject: [gecode-users] Why are my variables not constrained
In-Reply-To: <718AC3EE-4542-4ADF-9AF3-94791A03A982@ps.uni-sb.de>
References: <48E75F29.4010405@gmx.de> <48E76351.5060503@gmx.de>
	<718AC3EE-4542-4ADF-9AF3-94791A03A982@ps.uni-sb.de>
Message-ID: <48E8AC2D.1020604@gmx.de>

Thank you very much, it now works as intended. Great !
I hope i will get along with the documentation, it is hard to find 
things like tt or eqv or the function how to branch manually or something.
I will keep annoying you if i have further questions.
Thank you all for the help.

Best regards.
Max


Guido Tack wrote:
> Max wrote:
>
>   
>> Furthermore the constraint is never applied.
>>
>> x(this,3,0,1500)
>>
>>
>> post(this, eqv((x[0] > x[1] + 30), y));
>>     
>
> Sorry, I just realized a problem with this statement... It should  
> rather read
>
> post(this, tt( eqv((x[0] > x[1] + 30), y)) );
>
> Otherwise, the post statement returns a BoolVar that is constrained to  
> the truth value of the equivalence.  Unfortunately, gcc doesn't warn  
> about the ignored return value (I don't know about Microsoft cl)!
>
> Please try again.  Btw, you don't have to use status() if you already  
> use a search engine.  Only when you want to trigger propagation  
> yourself, e.g. to inspect the variable domains after posting all the  
> constraints.
>
> Cheers,
> 	Guido
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>   




From filip.konvicka at logis.cz  Mon Oct  6 07:48:40 2008
From: filip.konvicka at logis.cz (=?UTF-8?B?RmlsaXAgS29udmnEjWth?=)
Date: Mon, 06 Oct 2008 07:48:40 +0200
Subject: [gecode-users] Docs bugs
Message-ID: <gcc8v9$anm$1@ger.gmane.org>

Hi,

in case you haven't fixed that yet for 3.0, of course :-)

Linear boolean constraints like

void Gecode::linear  ( Space *  home,
   const BoolVarArgs &  x,
   IntRelType  r,
   int  c,
   BoolVar  b,
   IntConLevel  icl,
   PropKind  pk
  )

seem to have docs in the "Linear constraints over integer variables" 
topic (2.2.0 chm), whereas the "Linear constraints over Boolean 
variables" topic is more or less empty (or is this intentional?)

And now for some hair-splitting :-)

   ViewArray (Space *home, int m)
   Allocate array with m variables.

Should probably be "m views". Now that's pedantic, innit?

Cheers,
Filip




From tack at ps.uni-sb.de  Mon Oct  6 10:02:15 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Mon, 6 Oct 2008 10:02:15 +0200
Subject: [gecode-users] Docs bugs
In-Reply-To: <gcc8v9$anm$1@ger.gmane.org>
References: <gcc8v9$anm$1@ger.gmane.org>
Message-ID: <D4F2075F-4ECE-4216-8043-EA35A83D914A@ps.uni-sb.de>

Filip Konvi?ka wrote:
> in case you haven't fixed that yet for 3.0, of course :-)
>
> Linear boolean constraints like
>
> void Gecode::linear  ( Space *  home,
>   const BoolVarArgs &  x,
>   IntRelType  r,
>   int  c,
>   BoolVar  b,
>   IntConLevel  icl,
>   PropKind  pk
>  )
>
> seem to have docs in the "Linear constraints over integer variables"
> topic (2.2.0 chm), whereas the "Linear constraints over Boolean
> variables" topic is more or less empty (or is this intentional?)

Argh, this is a weird bug in doxygen.  The documentation comments in  
the source code are in the correct group.  Actually, the generated  
documentation doesn't make any sense.
http://www.gecode.org/gecode-doc-latest/group__TaskModelIntLinearInt.html
The functions list mentions the IntVar versions, but the documentation  
below is for the BoolVar versions...  We should file a doxygen bug  
report, I guess, and look for a workaround.

> And now for some hair-splitting :-)
>
>   ViewArray (Space *home, int m)
>   Allocate array with m variables.
>
> Should probably be "m views". Now that's pedantic, innit?

Thanks a lot anyway ;-)

Cheers,
	Guido




From cschulte at kth.se  Mon Oct  6 10:14:45 2008
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 6 Oct 2008 10:14:45 +0200
Subject: [gecode-users] posting a reified equality constraint
In-Reply-To: <159D45D9-3251-4EC0-A7B8-DA68DE89E564@ps.uni-sb.de>
References: <8763o9v5kl.fsf@univ-orleans.fr>
	<159D45D9-3251-4EC0-A7B8-DA68DE89E564@ps.uni-sb.de>
Message-ID: <000001c9278b$97fb0e40$c7f12ac0$@se>

And the most straightforward one, would be:
	rel(this, X, IRT_EQ, k, b)

Cheers
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Guido Tack
Sent: Friday, October 03, 2008 11:27 PM
To: Denys Duchier
Cc: users at gecode.org
Subject: Re: [gecode-users] posting a reified equality constraint

Denys Duchier wrote:

> I am stumped on something that is completely trivial.  How do I "post"
> the reified constraint (X=k)=B where X is an IntVar, k is an int and B
> is a BoolVar?

Reified constraints seem to be en vogue these days ;-)

post(this, eqv(~(X == k), B));

would be one solution,

dom(this, X, k, k, B);

another.

Cheers,
        Guido


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From denys.duchier at univ-orleans.fr  Mon Oct  6 14:45:31 2008
From: denys.duchier at univ-orleans.fr (Denys Duchier)
Date: Mon, 06 Oct 2008 14:45:31 +0200
Subject: [gecode-users] Why are my variables not constrained
In-Reply-To: <718AC3EE-4542-4ADF-9AF3-94791A03A982@ps.uni-sb.de> (Guido Tack's
	message of "Sun, 5 Oct 2008 13:01:35 +0200")
References: <48E75F29.4010405@gmx.de> <48E76351.5060503@gmx.de>
	<718AC3EE-4542-4ADF-9AF3-94791A03A982@ps.uni-sb.de>
Message-ID: <877i8l6ges.fsf@tiny.univ-orleans.fr>

Guido Tack <tack at ps.uni-sb.de> writes:

> Otherwise, the post statement returns a BoolVar that is constrained to  
> the truth value of the equivalence.  Unfortunately, gcc doesn't warn  
> about the ignored return value (I don't know about Microsoft cl)!

you can ask gcc to warn on ignored return values by adding:

	__attribute__ ((warn_unused_result))

to the function's prototype.

Cheers,

--Denys



From tack at ps.uni-sb.de  Mon Oct  6 15:01:05 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Mon, 6 Oct 2008 15:01:05 +0200
Subject: [gecode-users] Why are my variables not constrained
In-Reply-To: <877i8l6ges.fsf@tiny.univ-orleans.fr>
References: <48E75F29.4010405@gmx.de> <48E76351.5060503@gmx.de>
	<718AC3EE-4542-4ADF-9AF3-94791A03A982@ps.uni-sb.de>
	<877i8l6ges.fsf@tiny.univ-orleans.fr>
Message-ID: <A8D9A765-620C-47EE-8CF6-589F967EAF07@ps.uni-sb.de>

Denys Duchier wrote:

> Guido Tack <tack at ps.uni-sb.de> writes:
>
>> Otherwise, the post statement returns a BoolVar that is constrained  
>> to
>> the truth value of the equivalence.  Unfortunately, gcc doesn't warn
>> about the ignored return value (I don't know about Microsoft cl)!
>
> you can ask gcc to warn on ignored return values by adding:
>
> 	__attribute__ ((warn_unused_result))
>
> to the function's prototype.

Right, thanks.  I thought -Wall (which includes -Wunused-value) would  
detect this, but apparently not for the result of function calls (I  
think this is because in ancient C all void functions returned int or  
something similarly relevant today...)

Cheers,
	Guido




From denys.duchier at univ-orleans.fr  Mon Oct  6 14:56:28 2008
From: denys.duchier at univ-orleans.fr (Denys Duchier)
Date: Mon, 06 Oct 2008 14:56:28 +0200
Subject: [gecode-users] posting a reified equality constraint
In-Reply-To: <000001c9278b$97fb0e40$c7f12ac0$@se> (Christian Schulte's message
	of "Mon, 6 Oct 2008 10:14:45 +0200")
References: <8763o9v5kl.fsf@univ-orleans.fr>
	<159D45D9-3251-4EC0-A7B8-DA68DE89E564@ps.uni-sb.de>
	<000001c9278b$97fb0e40$c7f12ac0$@se>
Message-ID: <87wsgl51c3.fsf@tiny.univ-orleans.fr>

"Christian Schulte" <cschulte at kth.se> writes:

> And the most straightforward one, would be:
> 	rel(this, X, IRT_EQ, k, b)

Thanks for all these enlightening ways of getting the job done :-)
Still, I am curious: is there a technical reason why overloadings have
not been provided to allow me to say simply: post(this, (X==k)==b )?

Cheers,

--Denys



From cschulte at kth.se  Mon Oct  6 17:03:34 2008
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 6 Oct 2008 17:03:34 +0200
Subject: [gecode-users] posting a reified equality constraint
In-Reply-To: <87wsgl51c3.fsf@tiny.univ-orleans.fr>
References: <8763o9v5kl.fsf@univ-orleans.fr>	<159D45D9-3251-4EC0-A7B8-DA68DE89E564@ps.uni-sb.de>	<000001c9278b$97fb0e40$c7f12ac0$@se>
	<87wsgl51c3.fsf@tiny.univ-orleans.fr>
Message-ID: <008e01c927c4$b4a475c0$1ded6140$@se>

The idea was to make reification explicit and distinguish it from equality
(which exists for Boolean variables).

Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Denys Duchier
Sent: Monday, October 06, 2008 2:56 PM
To: users at gecode.org
Subject: Re: [gecode-users] posting a reified equality constraint

"Christian Schulte" <cschulte at kth.se> writes:

> And the most straightforward one, would be:
>       rel(this, X, IRT_EQ, k, b)

Thanks for all these enlightening ways of getting the job done :-)
Still, I am curious: is there a technical reason why overloadings have
not been provided to allow me to say simply: post(this, (X==k)==b )?

Cheers,

--Denys

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From sebastien.laigre at gmail.com  Wed Oct  8 11:49:36 2008
From: sebastien.laigre at gmail.com (=?ISO-8859-1?Q?S=E9bastien_Laigre?=)
Date: Wed, 8 Oct 2008 11:49:36 +0200
Subject: [gecode-users] Creating a boolvar and testing if one condition at
	least is true
Message-ID: <842c20050810080249t8004035g488105b39131bbc8@mail.gmail.com>

Hi !

I'm starting with gecode, and it's a bit difficult for me.
I have 3 conditions, one of them must be true. So i want to put them
in an BoolArray. But I do not know how to do that.
For example, I would like to do
array[0] = x < y;
array[1] = a < b;
array[2] = c < d;
and that one (at least) condition of the array is true.

I hope I'm enought clear. Thank you in advance.



From tack at ps.uni-sb.de  Wed Oct  8 13:06:14 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Wed, 8 Oct 2008 13:06:14 +0200
Subject: [gecode-users] Creating a boolvar and testing if one condition
	at least is true
In-Reply-To: <842c20050810080249t8004035g488105b39131bbc8@mail.gmail.com>
References: <842c20050810080249t8004035g488105b39131bbc8@mail.gmail.com>
Message-ID: <56A63089-BF6A-4B95-A166-C8A98BECDC1C@ps.uni-sb.de>

S?bastien Laigre wrote:
> I'm starting with gecode, and it's a bit difficult for me.
> I have 3 conditions, one of them must be true. So i want to put them
> in an BoolArray. But I do not know how to do that.
> For example, I would like to do
> array[0] = x < y;
> array[1] = a < b;
> array[2] = c < d;
> and that one (at least) condition of the array is true.


You'd have to use something like the following:
BoolVarArray b(this, 3, 0, 1);
rel(this, x, IRT_LE, y, b[0]);
rel(this, a, IRT_LE, b, b[1]);
rel(this, c, IRT_LE, d, b[2]);
rel(this, BOT_OR, b, 1);

(this isn't tested, but you should get the idea)

Cheers,
	Guido

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2436 bytes
Desc: not available
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20081008/1a79b44c/attachment.bin>

From denys.duchier at univ-orleans.fr  Wed Oct  8 21:14:31 2008
From: denys.duchier at univ-orleans.fr (Denys Duchier)
Date: Wed, 08 Oct 2008 21:14:31 +0200
Subject: [gecode-users] staged search
Message-ID: <87fxn6c31k.fsf@univ-orleans.fr>

is there a way to do something like this:

    - post some constraints
    - then distribute on these vars
    - then post some more constraints
    - then distribute on these other vars

Cheers,

--Denys



From cschulte at kth.se  Wed Oct  8 21:33:36 2008
From: cschulte at kth.se (Christian Schulte)
Date: Wed, 8 Oct 2008 21:33:36 +0200
Subject: [gecode-users] staged search
In-Reply-To: <87fxn6c31k.fsf@univ-orleans.fr>
References: <87fxn6c31k.fsf@univ-orleans.fr>
Message-ID: <001101c9297c$c26ff350$474fd9f0$@se>

Yes,  but what do you want to do exactly? Take a solution of the first stage
and then continue with the second stage?

Cheers
Christian

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Denys Duchier
Sent: Wednesday, October 08, 2008 9:15 PM
To: users at gecode.org
Subject: [gecode-users] staged search

is there a way to do something like this:

    - post some constraints
    - then distribute on these vars
    - then post some more constraints
    - then distribute on these other vars

Cheers,

--Denys

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From denys.duchier at univ-orleans.fr  Wed Oct  8 22:19:47 2008
From: denys.duchier at univ-orleans.fr (Denys Duchier)
Date: Wed, 08 Oct 2008 22:19:47 +0200
Subject: [gecode-users] staged search
In-Reply-To: <001101c9297c$c26ff350$474fd9f0$@se> (Christian Schulte's message
	of "Wed, 8 Oct 2008 21:33:36 +0200")
References: <87fxn6c31k.fsf@univ-orleans.fr>
	<001101c9297c$c26ff350$474fd9f0$@se>
Message-ID: <874p3mc00s.fsf@univ-orleans.fr>

"Christian Schulte" <cschulte at kth.se> writes:

> Yes,  but what do you want to do exactly? Take a solution of the first stage
> and then continue with the second stage?

more or less, except of course it might not be a "complete" solution
(only the vars distributed over would be determined, but there might be
other vars that would be taken care of in the second stage).

I was more precisely wondering whether such a staged search could
integrate transparently into gist: the first stage would produce a
prefix of the search tree, while the second stage would produce the
extension of that search tree to "full" solutions.

Probably the answer is no, but it would be so amazingly nice if it were
yes ;-)

Cheers,

--Denys



From cschulte at kth.se  Wed Oct  8 23:00:53 2008
From: cschulte at kth.se (Christian Schulte)
Date: Wed, 8 Oct 2008 23:00:53 +0200
Subject: [gecode-users] staged search
In-Reply-To: <874p3mc00s.fsf@univ-orleans.fr>
References: <87fxn6c31k.fsf@univ-orleans.fr>	<001101c9297c$c26ff350$474fd9f0$@se>
	<874p3mc00s.fsf@univ-orleans.fr>
Message-ID: <000001c92988$f41e3040$dc5a90c0$@se>

Ah, okay. Yes, "solution" I used in the sense that the branching is done not
that the variables are all assigned. Remember, what a search engine returns
is just a space where all branching have been tried.

What should work in principle (that might be an idea to have in Gecode 3.0):
One has a branching that has a single choice point with a single
alternative. The single alternative executes a method of the space
(actually, as branchings can be programmed one can already do this and
that's not even difficult...), so the branching just stores which message is
to be executed (hmmm, maybe not so easy have to think some more. Gecode used
to have first class closures combining a space and a method but as I did not
understand what it could be useful for, I kicked it out even before 1.0.0).
Just executing a statically defined method is okay). Then in that method you
post your additional constraints and new branching (good knows whether you
can create new branching in a branching but I think yes as we had this
before on this list). This approach utilizes the fact that you can have
multiple branching that are tried in order of creation.

Some examples have custom-programmed branching: so that could be a starting
point.

Okay, sorry for thinking in public.

Cheers
Christian

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Denys Duchier
Sent: Wednesday, October 08, 2008 10:20 PM
To: users at gecode.org
Subject: Re: [gecode-users] staged search

"Christian Schulte" <cschulte at kth.se> writes:

> Yes,  but what do you want to do exactly? Take a solution of the first
stage
> and then continue with the second stage?

more or less, except of course it might not be a "complete" solution
(only the vars distributed over would be determined, but there might be
other vars that would be taken care of in the second stage).

I was more precisely wondering whether such a staged search could
integrate transparently into gist: the first stage would produce a
prefix of the search tree, while the second stage would produce the
extension of that search tree to "full" solutions.

Probably the answer is no, but it would be so amazingly nice if it were
yes ;-)

Cheers,

--Denys

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From denys.duchier at univ-orleans.fr  Wed Oct  8 23:03:38 2008
From: denys.duchier at univ-orleans.fr (Denys Duchier)
Date: Wed, 08 Oct 2008 23:03:38 +0200
Subject: [gecode-users] staged search
In-Reply-To: <874p3mc00s.fsf@univ-orleans.fr> (Denys Duchier's message of
	"Wed, 08 Oct 2008 22:19:47 +0200")
References: <87fxn6c31k.fsf@univ-orleans.fr>
	<001101c9297c$c26ff350$474fd9f0$@se> <874p3mc00s.fsf@univ-orleans.fr>
Message-ID: <874p3majf9.fsf@univ-orleans.fr>

you may still be wondering why I would want to do something like this.
I am really, really, really embarassed to admit this, but what prompted
this line of thought was the "historical" example about how constraint
and search evolved:

	- from generate and test
        - to test and generate
        - then on to propagate and distribute

see e.g. the introduction to that rather old lecture series I gave at
ESSLLI in 2000:

http://www.univ-orleans.fr/lifo/Members/duchier/teaching/ESSLLI-2000/node1.html#chapter.introduction

which shows the search trees corresponding to each of the techniques.

Especially, I was wondering how to demonstrate in Gist the "generate and
test" case.  This was very easy to model in Mozart/Oz: first distribute,
then post the constraints.

This is what started me thinking about "staged" search (which is a
generalization of what is required for that example).

So, it's a bit embarassing because my original motivation was so
ridiculously trivial, but I think that the generalization raises
interesting questions... you may of course disagree, and I wouldn't
blame you :-)

Cheers,

--Denys



From denys.duchier at univ-orleans.fr  Wed Oct  8 23:58:52 2008
From: denys.duchier at univ-orleans.fr (Denys Duchier)
Date: Wed, 08 Oct 2008 23:58:52 +0200
Subject: [gecode-users] staged search
In-Reply-To: <000001c92988$f41e3040$dc5a90c0$@se> (Christian Schulte's message
	of "Wed, 8 Oct 2008 23:00:53 +0200")
References: <87fxn6c31k.fsf@univ-orleans.fr>
	<001101c9297c$c26ff350$474fd9f0$@se> <874p3mc00s.fsf@univ-orleans.fr>
	<000001c92988$f41e3040$dc5a90c0$@se>
Message-ID: <87k5ci92ar.fsf@univ-orleans.fr>

"Christian Schulte" <cschulte at kth.se> writes:

> What should work in principle (that might be an idea to have in Gecode 3.0):
> One has a branching that has a single choice point with a single
> alternative. The single alternative executes a method of the space

hmm... currently, the branching is specified in the script's
constructor.  would it make sense to conservatively extend this
interface with an additional e.g. "continuation()" method that would be
called when the space reaches a state where it no longer has an active
"branching".  The "continuation()" might install new variables,
constraints, and a branching.  The search would bottom out when no new
branching has been installed.  The default inmplementation of
"continuation()" would do nothing and thus bottom out.

Is this a completely ridiculous idea?

Cheers,

--Denys



From cschulte at kth.se  Thu Oct  9 00:05:10 2008
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 9 Oct 2008 00:05:10 +0200
Subject: [gecode-users] staged search
In-Reply-To: <87k5ci92ar.fsf@univ-orleans.fr>
References: <87fxn6c31k.fsf@univ-orleans.fr>	<001101c9297c$c26ff350$474fd9f0$@se>
	<874p3mc00s.fsf@univ-orleans.fr>	<000001c92988$f41e3040$dc5a90c0$@se>
	<87k5ci92ar.fsf@univ-orleans.fr>
Message-ID: <000301c92991$eefacb60$ccf06220$@se>

That would more or less do the same I have been rambling on. However, it
would require a new feature while branchings would already do the trick
(more or less). For a user there should be no real visible difference.

Christian

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Denys Duchier
Sent: Wednesday, October 08, 2008 11:59 PM
To: users at gecode.org
Subject: Re: [gecode-users] staged search

"Christian Schulte" <cschulte at kth.se> writes:

> What should work in principle (that might be an idea to have in Gecode
3.0):
> One has a branching that has a single choice point with a single
> alternative. The single alternative executes a method of the space

hmm... currently, the branching is specified in the script's
constructor.  would it make sense to conservatively extend this
interface with an additional e.g. "continuation()" method that would be
called when the space reaches a state where it no longer has an active
"branching".  The "continuation()" might install new variables,
constraints, and a branching.  The search would bottom out when no new
branching has been installed.  The default inmplementation of
"continuation()" would do nothing and thus bottom out.

Is this a completely ridiculous idea?

Cheers,

--Denys

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From denys.duchier at univ-orleans.fr  Thu Oct  9 00:19:30 2008
From: denys.duchier at univ-orleans.fr (Denys Duchier)
Date: Thu, 09 Oct 2008 00:19:30 +0200
Subject: [gecode-users] staged search
In-Reply-To: <000301c92991$eefacb60$ccf06220$@se> (Christian Schulte's message
	of "Thu, 9 Oct 2008 00:05:10 +0200")
References: <87fxn6c31k.fsf@univ-orleans.fr>
	<001101c9297c$c26ff350$474fd9f0$@se> <874p3mc00s.fsf@univ-orleans.fr>
	<000001c92988$f41e3040$dc5a90c0$@se> <87k5ci92ar.fsf@univ-orleans.fr>
	<000301c92991$eefacb60$ccf06220$@se>
Message-ID: <87bpxu91cd.fsf@univ-orleans.fr>

"Christian Schulte" <cschulte at kth.se> writes:

> That would more or less do the same I have been rambling on. However, it
> would require a new feature while branchings would already do the trick
> (more or less). For a user there should be no real visible difference.

Ah! that would be great... but, I am afraid that I am a little too
stupid (and short on time) to figure it out on my own.  Is there an
example I can look at, that would help me understand how to do this?

Cheers,

--Denys




From zayenz at gmail.com  Thu Oct  9 08:05:32 2008
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Thu, 9 Oct 2008 08:05:32 +0200
Subject: [gecode-users] staged search
In-Reply-To: <87bpxu91cd.fsf@univ-orleans.fr>
References: <87fxn6c31k.fsf@univ-orleans.fr>
	<001101c9297c$c26ff350$474fd9f0$@se> <874p3mc00s.fsf@univ-orleans.fr>
	<000001c92988$f41e3040$dc5a90c0$@se> <87k5ci92ar.fsf@univ-orleans.fr>
	<000301c92991$eefacb60$ccf06220$@se> <87bpxu91cd.fsf@univ-orleans.fr>
Message-ID: <63b5c8b00810082305j25ece5b6lb15f25708c0e2ca2@mail.gmail.com>

On Thu, Oct 9, 2008 at 12:19 AM, Denys Duchier
<denys.duchier at univ-orleans.fr> wrote:
> Ah! that would be great... but, I am afraid that I am a little too
> stupid (and short on time) to figure it out on my own.  Is there an
> example I can look at, that would help me understand how to do this?

Hi,

First of all, there are two examples in Gecode that come with custom
branchings, Black hole patience and Peaceable Coexisting Armies of
Queens.

However, I got interested in your discussion, and started thinking
about how it could be done in a nice way. By constructing a unary
branching that stores a member function pointer to a function in the
space, you can get you desired functionality. I tried it (code below),
and it works just as you wanted. The code solves the Queens-problem,
but you could  modify it for any other problem, member-functions that
take parameters, and so on.

Searching for the first solution for Queens-6 using generate-and-test
takes about 12 thousand failures. A pdf from Gist of the search-tree
is at http://www.ict.kth.se/~zayenz/gentest.pdf. You can see where the
two MemberFunctionBranchings kick in since they are unary (the first
adds the real branching and the propagator-adding branching, the
second adds the propagators).

Cheers,
Mikael

<code>
/* -*- mode: C++; c-basic-offset: 2; indent-tabs-mode: nil -*- */
/*
 *  Main authors:
 *     Mikael Lagerkvist <lagerkvist at gecode.org>
 *
 *  Copyright:
 *     Mikael Lagerkvist, 2008
 *
 *  Last modified:
 *     $Date: 2008-10-09 07:48:15 +0200 (Wed, 09 Oct 2008) $ by
$Author: zayenz $
 *     $Revision: 7912 $
 *
 *  This file is part of Gecode, the generic constraint
 *  development environment:
 *     http://www.gecode.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining
 *  a copy of this software and associated documentation files (the
 *  "Software"), to deal in the Software without restriction, including
 *  without limitation the rights to use, copy, modify, merge, publish,
 *  distribute, sublicense, and/or sell copies of the Software, and to
 *  permit persons to whom the Software is furnished to do so, subject to
 *  the following conditions:
 *
 *  The above copyright notice and this permission notice shall be
 *  included in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 *  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 *  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 *  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

#include "examples/support.hh"
#include <gecode/minimodel.hh>

/** \brief Branching for calling a space member function.
 */
template <class Model>
class MemberFunctionBranch : Branching {
public:
  /// Type of the member-function to call
  typedef void (Model::*MemberFunction)();
private:
  /// Member function to call
  MemberFunction mf;
  /// Call member function just once
  bool done;
  /// Minimal branching description storing no information
  struct Description : public BranchingDesc {
    /// Initialize description for branching \a b, number of alternatives \a a.
    Description(const Branching* b, unsigned int a) : BranchingDesc(b,a) {}
    /// Report size occupied
    virtual size_t size(void) const {
      return sizeof(Description);
    }
  };

  /// Construct branching
  MemberFunctionBranch(Space* home, MemberFunction mf0)
    : Branching(home), mf(mf0), done(false) {}
  /// Copy constructor
  MemberFunctionBranch(Space* home, bool share,
                       MemberFunctionBranch<Model>& b)
    : Branching(home, share, b), mf(b.mf), done(b.done) {}

public:
  /// Check status of branching, return true if alternatives left.
  virtual bool status(const Space*) const {
    return !done;
  }
  /// Return branching description
  virtual BranchingDesc* description(const Space*) const {
    assert(!done);
    return new Description(this, 1);
  }
  /// Perform commit
  virtual ExecStatus commit(Space* home, const BranchingDesc*,
                            unsigned int) {
    done = true;
    Model* model = static_cast<Model*>(home);
    (void) (model->*mf)();
    return ES_OK;
  }
  /// Copy branching
  virtual Actor* copy(Space* home, bool share) {
    return new (home) MemberFunctionBranch(home, share, *this);
  }
  /// Reflection name
  virtual const char* name(void) const {
    return "MemberFunctionBranch";
  }
  /// Post branching
  static void post(Space* home, MemberFunction mf) {
    (void) new (home) MemberFunctionBranch<Model>(home,mf);
  }
};


/**
 * \brief %Example: n-%Queens puzzle with member function branchings
 *
 * \ingroup ExProblem
 */
class QueensMF : public Example {
protected:
  /// Position of queens on boards
  IntVarArray q;
public:
  void addbranch(void) {
    branch(this, q, INT_VAR_SIZE_MIN, INT_VAL_MIN);
    MemberFunctionBranch<QueensMF>::post(this, &QueensMF::addprop);
  }
  void addprop(void) {
    const int n = q.size();
    for (int i = 0; i<n; i++)
      for (int j = i+1; j<n; j++) {
        post(this, q[i] != q[j]);
        post(this, q[i]+i != q[j]+j);
        post(this, q[i]-i != q[j]-j);
      }
  }
  /// The actual problem
  QueensMF(const SizeOptions& opt)
    : q(this,opt.size(),0,opt.size()-1) {
    MemberFunctionBranch<QueensMF>::post(this, &QueensMF::addbranch);
  }

  /// Constructor for cloning \a s
  QueensMF(bool share, QueensMF& s) : Example(share,s) {
    q.update(this, share, s.q);
  }

  /// Perform copying during cloning
  virtual Space*
  copy(bool share) {
    return new QueensMF(share,*this);
  }

  /// Print solution
  virtual void
  print(std::ostream& os) {
    os << "\t";
    for (int i = 0; i < q.size(); i++) {
      os << q[i] << ", ";
      if ((i+1) % 10 == 0)
        os << std::endl << "\t";
    }
    os << std::endl;
  }

  /// Make variables available for visualisation
  virtual void
  getVars(Gecode::Reflection::VarMap& vm, bool registerOnly) {
    vm.putArray(this,q,"q", registerOnly);
  }
};

/** \brief Main-function
 *  \relates QueensMF
 */
int
main(int argc, char* argv[]) {
  SizeOptions opt("QueensMF");
  opt.iterations(500);
  opt.size(6);
  opt.parse(argc,argv);
  Example::run<QueensMF,DFS,SizeOptions>(opt);
  return 0;
}

// STATISTICS: example-any
</code>

-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/



From zayenz at gmail.com  Thu Oct  9 11:11:32 2008
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Thu, 9 Oct 2008 11:11:32 +0200
Subject: [gecode-users] staged search
In-Reply-To: <63b5c8b00810082305j25ece5b6lb15f25708c0e2ca2@mail.gmail.com>
References: <87fxn6c31k.fsf@univ-orleans.fr>
	<001101c9297c$c26ff350$474fd9f0$@se> <874p3mc00s.fsf@univ-orleans.fr>
	<000001c92988$f41e3040$dc5a90c0$@se> <87k5ci92ar.fsf@univ-orleans.fr>
	<000301c92991$eefacb60$ccf06220$@se> <87bpxu91cd.fsf@univ-orleans.fr>
	<63b5c8b00810082305j25ece5b6lb15f25708c0e2ca2@mail.gmail.com>
Message-ID: <63b5c8b00810090211r714e1c10td393afb15932c598@mail.gmail.com>

On Thu, Oct 9, 2008 at 8:05 AM, Mikael Zayenz Lagerkvist
<zayenz at gmail.com> wrote:
> I tried it (code below), and it works just as you wanted.

Hi again,

Christian pointed out to me that I had a small problem in my posted
code - if the member-function called gave a failure, then things could
go bad. Thus I've modified the code (see below) so that the
member-function returns an ExecStatus that the MemberFunctionBranching
can return.

Cheers,
Mikael

<code>
/* -*- mode: C++; c-basic-offset: 2; indent-tabs-mode: nil -*- */
/*
 *  Main authors:
 *     Mikael Lagerkvist <lagerkvist at gecode.org>
 *
 *  Copyright:
 *     Mikael Lagerkvist, 2008
 *
 *  Last modified:
 *     $Date: 2008-10-09 07:48:15 +0200 (Wed, 09 Oct 2008) $ by
$Author: zayenz $
 *     $Revision: 7912 $
 *
 *  This file is part of Gecode, the generic constraint
 *  development environment:
 *     http://www.gecode.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining
 *  a copy of this software and associated documentation files (the
 *  "Software"), to deal in the Software without restriction, including
 *  without limitation the rights to use, copy, modify, merge, publish,
 *  distribute, sublicense, and/or sell copies of the Software, and to
 *  permit persons to whom the Software is furnished to do so, subject to
 *  the following conditions:
 *
 *  The above copyright notice and this permission notice shall be
 *  included in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 *  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 *  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 *  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

#include "examples/support.hh"
#include <gecode/minimodel.hh>

/** \brief Branching for calling a space member function.
 */
template <class Model>
class MemberFunctionBranch : Branching {
public:
  /// Type of the member-function to call
  typedef ExecStatus (Model::*MemberFunction)();
private:
  /// Member function to call
  MemberFunction mf;
  /// Call member function just once
  bool done;

  /// Minimal branching description storing no information
  struct Description : public BranchingDesc {
    /// Initialize description for branching \a b, number of alternatives \a a.
    Description(const Branching* b, unsigned int a) : BranchingDesc(b,a) {}
    /// Report size occupied
    virtual size_t size(void) const { return sizeof(Description); }
  };

  /// Construct branching
  MemberFunctionBranch(Space* home, MemberFunction mf0)
    : Branching(home), mf(mf0), done(false) {}
  /// Copy constructor
  MemberFunctionBranch(Space* home, bool share,
                       MemberFunctionBranch<Model>& b)
    : Branching(home, share, b), mf(b.mf), done(b.done) {}

public:
  /// Check status of branching, return true if alternatives left.
  virtual bool status(const Space*) const {
    return !done;
  }
  /// Return branching description
  virtual BranchingDesc* description(const Space*) const {
    assert(!done);
    return new Description(this, 1);
  }
  /// Perform commit
  virtual ExecStatus commit(Space* home, const BranchingDesc*, unsigned int) {
    done = true;
    Model* model = static_cast<Model*>(home);
    return (model->*mf)();
  }
  /// Copy branching
  virtual Actor* copy(Space* home, bool share) {
    return new (home) MemberFunctionBranch(home, share, *this);
  }
  /// Reflection name
  virtual const char* name(void) const {
    return "MemberFunctionBranch";
  }
  /// Post branching
  static void post(Space* home, MemberFunction mf) {
    (void) new (home) MemberFunctionBranch<Model>(home,mf);
  }
};


/**
 * \brief %Example: n-%Queens puzzle with member function branchings
 *
 * \ingroup ExProblem
 */
class QueensMF : public Example {
protected:
  /// Position of queens on boards
  IntVarArray q;
public:
  ExecStatus addbranch(void) {
    branch(this, q, INT_VAR_SIZE_MIN, INT_VAL_MIN);
    MemberFunctionBranch<QueensMF>::post(this, &QueensMF::addprop);
    return failed() ? ES_FAILED : ES_OK;
  }
  ExecStatus addprop(void) {
    const int n = q.size();
    for (int i = 0; i<n; i++)
      for (int j = i+1; j<n; j++) {
        post(this, q[i] != q[j]);
        post(this, q[i]+i != q[j]+j);
        post(this, q[i]-i != q[j]-j);
      }
    return failed() ? ES_FAILED : ES_OK;
  }
  /// The actual problem
  QueensMF(const SizeOptions& opt)
    : q(this,opt.size(),0,opt.size()-1) {
    MemberFunctionBranch<QueensMF>::post(this, &QueensMF::addbranch);
  }

  /// Constructor for cloning \a s
  QueensMF(bool share, QueensMF& s) : Example(share,s) {
    q.update(this, share, s.q);
  }

  /// Perform copying during cloning
  virtual Space*
  copy(bool share) {
    return new QueensMF(share,*this);
  }

  /// Print solution
  virtual void
  print(std::ostream& os) {
    os << "\t";
    for (int i = 0; i < q.size(); i++) {
      os << q[i] << ", ";
      if ((i+1) % 10 == 0)
        os << std::endl << "\t";
    }
    os << std::endl;
  }

  /// Make variables available for visualisation
  virtual void
  getVars(Gecode::Reflection::VarMap& vm, bool registerOnly) {
    vm.putArray(this,q,"q", registerOnly);
  }
};

/** \brief Main-function
 *  \relates QueensMF
 */
int
main(int argc, char* argv[]) {
  SizeOptions opt("QueensMF");
  opt.iterations(500);
  opt.size(6);
  opt.parse(argc,argv);
  Example::run<QueensMF,DFS,SizeOptions>(opt);
  return 0;
}

// STATISTICS: example-any
</code>

-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/



From denys.duchier at univ-orleans.fr  Thu Oct  9 14:58:17 2008
From: denys.duchier at univ-orleans.fr (Denys Duchier)
Date: Thu, 09 Oct 2008 14:58:17 +0200
Subject: [gecode-users] staged search
In-Reply-To: <63b5c8b00810090211r714e1c10td393afb15932c598@mail.gmail.com>
	(Mikael Zayenz Lagerkvist's message of "Thu, 9 Oct 2008 11:11:32
	+0200")
References: <87fxn6c31k.fsf@univ-orleans.fr>
	<001101c9297c$c26ff350$474fd9f0$@se> <874p3mc00s.fsf@univ-orleans.fr>
	<000001c92988$f41e3040$dc5a90c0$@se> <87k5ci92ar.fsf@univ-orleans.fr>
	<000301c92991$eefacb60$ccf06220$@se> <87bpxu91cd.fsf@univ-orleans.fr>
	<63b5c8b00810082305j25ece5b6lb15f25708c0e2ca2@mail.gmail.com>
	<63b5c8b00810090211r714e1c10td393afb15932c598@mail.gmail.com>
Message-ID: <87bpxuylg6.fsf@tiny.univ-orleans.fr>

"Mikael Zayenz Lagerkvist" <zayenz at gmail.com> writes:

> On Thu, Oct 9, 2008 at 8:05 AM, Mikael Zayenz Lagerkvist
> <zayenz at gmail.com> wrote:
>> I tried it (code below), and it works just as you wanted.

This is wonderful!  I ask a stupid question and I get a pony! :-)

It works great!  Thank you very much.  I hope something like this will
be considered for official inclusion.

Cheers,

--Denys



From zayenz at gmail.com  Thu Oct  9 15:13:23 2008
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Thu, 9 Oct 2008 15:13:23 +0200
Subject: [gecode-users] staged search
In-Reply-To: <87bpxuylg6.fsf@tiny.univ-orleans.fr>
References: <87fxn6c31k.fsf@univ-orleans.fr>
	<001101c9297c$c26ff350$474fd9f0$@se> <874p3mc00s.fsf@univ-orleans.fr>
	<000001c92988$f41e3040$dc5a90c0$@se> <87k5ci92ar.fsf@univ-orleans.fr>
	<000301c92991$eefacb60$ccf06220$@se> <87bpxu91cd.fsf@univ-orleans.fr>
	<63b5c8b00810082305j25ece5b6lb15f25708c0e2ca2@mail.gmail.com>
	<63b5c8b00810090211r714e1c10td393afb15932c598@mail.gmail.com>
	<87bpxuylg6.fsf@tiny.univ-orleans.fr>
Message-ID: <63b5c8b00810090613u487f90b7x6ea970d2cbaa2ba3@mail.gmail.com>

On Thu, Oct 9, 2008 at 2:58 PM, Denys Duchier
<denys.duchier at univ-orleans.fr> wrote:
> It works great!  Thank you very much.  I hope something like this will
> be considered for official inclusion.

I will most probably add something like it to Gecode for the next
release. The code is simple, easy, and it fills a purpose so it is
easily motivated.

Cheers,
Mikael

-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/



From paranoic.pum at gmail.com  Fri Oct 10 05:55:25 2008
From: paranoic.pum at gmail.com (David Przybilla)
Date: Thu, 9 Oct 2008 22:55:25 -0500
Subject: [gecode-users] Using/Implementing Advisors
Message-ID: <fb1020c60810092055x4bb366et3e0391436ba7762e@mail.gmail.com>

Hello,
Is there any document about how to use/implement Advisors in Gecode?

Googling a bit I found this in Schulte's Website:
"Pengyu Zhao, Using Advisors in Gecode. KTH - Royal Institute of Technology,
Stockholm, Sweden, Master thesis, ongoing."
I wonder whether that document is ready.

Thank you in Advance
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20081009/fc78bd4d/attachment.htm>

From zayenz at gmail.com  Fri Oct 10 12:01:29 2008
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Fri, 10 Oct 2008 12:01:29 +0200
Subject: [gecode-users] Using/Implementing Advisors
In-Reply-To: <fb1020c60810092055x4bb366et3e0391436ba7762e@mail.gmail.com>
References: <fb1020c60810092055x4bb366et3e0391436ba7762e@mail.gmail.com>
Message-ID: <63b5c8b00810100301o59012846j99449a3b15356b42@mail.gmail.com>

On Fri, Oct 10, 2008 at 5:55 AM, David Przybilla <paranoic.pum at gmail.com> wrote:
> Is there any document about how to use/implement Advisors in Gecode?

There is no introductory documentation. The design and reasoning
behind advisors is reported in "Advisors for Incremental Propagation"
[1]. For examples of how to use advisors there are some propagators
that use them, for example the layered graph propagator (for regular
constraints, gecode/int/extensional/layered-graph.icc), the GAC-Schema
propagator (table constraints,
gecode/int/extensional/incremental.icc), and the Boolean linear
in-equation propagator (gecode/int/linear/bool-int.icc).

In general (not knowing what you intend to use it for), the typical
case is that a set of subscriptions to variables are replaced with a
corresponding set of advisors that react to modifications to the
variables. Typical use-cases might be to maintain some propagator
state and/or avoid scheduling the propagator when no propagation can
be done. There are a couple of things to keep in mind when writing a
propagator that uses advisors:
 * The advise-function should follow the information in the documentation [2]
 * The delta-information may be empty if the modifications to the
variable is very complex.
 * The propagator should take care to recognize when it is subsumed.
 * If an initial run of propagation is needed, a propagator not using
subscriptions needs to schedule itself on creation.
 * Advisors are maintained in propagators using a Council, and if
needed are accessed using the Advisors-iterator.

And also, as always when doing a propagator, be sure to test it thoroughly.

Cheers,
Mikael

[1] http://www.gecode.org/paper.html?id=LagerkvistSchulte:CP:2007
[2] http://www.gecode.org/gecode-doc-latest/classGecode_1_1Propagator.html#93f6a78f3613c3afa9a7afe7984da89d

--
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/



From filip.konvicka at logis.cz  Mon Oct 13 10:05:56 2008
From: filip.konvicka at logis.cz (=?UTF-8?B?RmlsaXAgS29udmnEjWth?=)
Date: Mon, 13 Oct 2008 10:05:56 +0200
Subject: [gecode-users] FloatVars for 2.2.0 update
Message-ID: <gcuvle$hr0$1@ger.gmane.org>

Dear all,

Here is yet another update of FloatVars for Gecode 2.2.0. This fixes 
many bugs and you are advised to use this version instead of the 
previous ones.

In case that you already have a patched Gecode 2.2.0 from a previous 
version, you may safely re-use that.


Changelog (2008-10-13)

- Major speedup in linear constraints (using FPU state saver now).
- Fixed boolean argument passing for reified constraints.
- Fixed negative scale views' min/max functions.
- Fixed arithmetic propagator implementation of * and /.
- Fixed reified linear constraint entailment detection.

Changelog (2008-09-02):

- Fixed binary arithmetic operator ('min' and 'max' operators)
- Added a patch for Gecode 2.2.0.

Changelog (2008-08-27):

- Basic support for reflection and serialization. This has not been
tested at all!
- Assignment branching was added. See Gecode::Float::Assign_minmax().
- Some cleanup and small fixes here and there.


Cheers,
Filip
-------------- next part --------------
A non-text attachment was scrubbed...
Name: floatvar-20081013.zip
Type: application/zip
Size: 55539 bytes
Desc: not available
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20081013/13866010/attachment.zip>

From chaosangel at gmx.de  Mon Oct 13 14:00:38 2008
From: chaosangel at gmx.de (Max)
Date: Mon, 13 Oct 2008 14:00:38 +0200
Subject: [gecode-users] Learning in GeCode/SMT
Message-ID: <48F33866.2020006@gmx.de>

At first am just forwarding my private mail contact with Guido Tack, as 
it may be interesting to other on the mailing list.

Thank you for the answer. Its a pity that the learning techniques have 
not made it into CSP yet.
I want to integrate a CSP solver into an ASP Solver, a reasoning system 
for logic programs.
The advantage of learning from CSP solvers would be to get a good 
"reason" why literals/constraints can be propagated. SAT and ASP systems 
use a learning approach based on "reasons" and conflict-learning. So my 
system could use the reasons of the CSP solver to produce better 
conflicts and prune the search space. If it is not supported i will have 
to use a trivial reason, which means a constraint rule applies because 
of all other constraint rules the same variable occurs in. But this 
reason is not very specific and is not very applicable for backjumping.

Maybe someone of the SMT (Sat Modulo Theory) area reads this message and 
can provide information on how this is done in SMT Solvers, as they 
incorporate CSP into SAT and using learning techniques. But all systems 
i found up to now seam to have written their own theory(CSP) solver.
So if someone knows a CSP library capable of producing non trivial 
reasons and maybe doing conflict analysis, it would be great to post 
them here. Or maybe someone has an understaning how the SMT people do 
the things they do.

Best regards,

Max Ostrowski





 > Hi.
 >
 > Max wrote:
> you probably already know me from the GeCode mailing list.
> I just have a silly? question that i do not wanted to post on the list.
> It regards learning in gecode.
> I'm not very familiar with constraint programming but it seems to me 
> that things like backjumping and conflict learning already made it 
> into the current CSP systems.
> Found a paper: Backjump-based backtracking for constraint satisfaction 
> problems by Rina Dechter and Daniel Frost
>
> So, does GeCode really not support learning and backjumping? Because 
> these features seem to be necessary for my diploma thesis and gecode 
> seems to be a state of the art CSP solver and one of the best looking. 
> So my first question would be: Why it is not supported? - and my 
> second barefaced question- : Do you know a similar CSP lib where it is 
> supported?

It is not supported (and won't be in the near future), because no one 
knows how to do it properly.  The work by Dechter et al uses a naive 
model, where CSPs are represented entirely by binary constraints which 
are given as lists of allowed pairs of values.  In this setup, learning 
is relatively straightforward.  In a realistic, propagation-based 
constraint solver, it is not.
That also answers your second question: I don't know of any realistic 
library that does learning.  None of the commercial packages (ILOG 
Solver, SICStus Prolog, B-Prolog) incorporates learning, nor does any of 
the other free libraries like Choco or Minion.  The closest you can get 
is the work on "Propagation = Lazy Clause Generation" 
(http://www.cs.bgu.ac.il/~mcodish/Papers/Pages/cp07.html), this is the 
most promising attempt at using SAT learning technology for CP solving I 
know of (but it's quite different from classic CP solvers).

Btw, you can ask questions like this on the mailing list, no problem.  
It's about why we do/don't do certain things, so it definitely fits!  
Maybe you can elaborate how learning is important for what you want to do.

Cheers,
    Guido



From tack at ps.uni-sb.de  Mon Oct 13 15:37:18 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Mon, 13 Oct 2008 15:37:18 +0200
Subject: [gecode-users] Learning in GeCode/SMT
In-Reply-To: <48F33866.2020006@gmx.de>
References: <48F33866.2020006@gmx.de>
Message-ID: <359522CB-1650-4016-8BA4-291B136C8B18@ps.uni-sb.de>

Just as a quick follow-up, Choco used to have a feature called  
explanations, which would probably do what you're looking for, but as  
far as I understand, they have been removed from the current release.

Cheers,
	Guido

Max wrote:

> At first am just forwarding my private mail contact with Guido Tack,  
> as
> it may be interesting to other on the mailing list.
>
> Thank you for the answer. Its a pity that the learning techniques have
> not made it into CSP yet.
> I want to integrate a CSP solver into an ASP Solver, a reasoning  
> system
> for logic programs.
> The advantage of learning from CSP solvers would be to get a good
> "reason" why literals/constraints can be propagated. SAT and ASP  
> systems
> use a learning approach based on "reasons" and conflict-learning. So  
> my
> system could use the reasons of the CSP solver to produce better
> conflicts and prune the search space. If it is not supported i will  
> have
> to use a trivial reason, which means a constraint rule applies because
> of all other constraint rules the same variable occurs in. But this
> reason is not very specific and is not very applicable for  
> backjumping.
>
> Maybe someone of the SMT (Sat Modulo Theory) area reads this message  
> and
> can provide information on how this is done in SMT Solvers, as they
> incorporate CSP into SAT and using learning techniques. But all  
> systems
> i found up to now seam to have written their own theory(CSP) solver.
> So if someone knows a CSP library capable of producing non trivial
> reasons and maybe doing conflict analysis, it would be great to post
> them here. Or maybe someone has an understaning how the SMT people do
> the things they do.
>
> Best regards,
>
> Max Ostrowski
>
>
>
>
>
>> Hi.
>>
>> Max wrote:
>> you probably already know me from the GeCode mailing list.
>> I just have a silly? question that i do not wanted to post on the  
>> list.
>> It regards learning in gecode.
>> I'm not very familiar with constraint programming but it seems to me
>> that things like backjumping and conflict learning already made it
>> into the current CSP systems.
>> Found a paper: Backjump-based backtracking for constraint  
>> satisfaction
>> problems by Rina Dechter and Daniel Frost
>>
>> So, does GeCode really not support learning and backjumping? Because
>> these features seem to be necessary for my diploma thesis and gecode
>> seems to be a state of the art CSP solver and one of the best  
>> looking.
>> So my first question would be: Why it is not supported? - and my
>> second barefaced question- : Do you know a similar CSP lib where it  
>> is
>> supported?
>
> It is not supported (and won't be in the near future), because no one
> knows how to do it properly.  The work by Dechter et al uses a naive
> model, where CSPs are represented entirely by binary constraints which
> are given as lists of allowed pairs of values.  In this setup,  
> learning
> is relatively straightforward.  In a realistic, propagation-based
> constraint solver, it is not.
> That also answers your second question: I don't know of any realistic
> library that does learning.  None of the commercial packages (ILOG
> Solver, SICStus Prolog, B-Prolog) incorporates learning, nor does  
> any of
> the other free libraries like Choco or Minion.  The closest you can  
> get
> is the work on "Propagation = Lazy Clause Generation"
> (http://www.cs.bgu.ac.il/~mcodish/Papers/Pages/cp07.html), this is the
> most promising attempt at using SAT learning technology for CP  
> solving I
> know of (but it's quite different from classic CP solvers).
>
> Btw, you can ask questions like this on the mailing list, no problem.
> It's about why we do/don't do certain things, so it definitely fits!
> Maybe you can elaborate how learning is important for what you want  
> to do.
>
> Cheers,
>    Guido
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users




From chaosangel at gmx.de  Mon Oct 13 23:57:59 2008
From: chaosangel at gmx.de (Max)
Date: Mon, 13 Oct 2008 23:57:59 +0200
Subject: [gecode-users] Learning in GeCode/SMT
In-Reply-To: <359522CB-1650-4016-8BA4-291B136C8B18@ps.uni-sb.de>
References: <48F33866.2020006@gmx.de>
	<359522CB-1650-4016-8BA4-291B136C8B18@ps.uni-sb.de>
Message-ID: <48F3C467.5000701@gmx.de>

Thank you for the advice with Choco, i will have a look at, but 
currently i tend to use GeCode.

    The work by Dechter et al uses a naive
    model, where CSPs are represented entirely by binary constraints which
    are given as lists of allowed pairs of values.  In this setup,  
    learning
    is relatively straightforward.  In a realistic, propagation-based
    constraint solver, it is not.


I finally managed to read "Dechter - Backjump-based backtracking for 
constraint satisfaction" and i think it is not restricted to Binary 
Constraints, because it is mentioned several times. And i have not found 
the list of allowed pairs in the paper, i thought of nogoods as set of 
domains, not explicit values. But i can not evaluate the possibilities, 
because i have no idea of how constraint solver do work. I hope the CSP 
community will have access to learning algorithms in the future, because 
i see a huge potential in them.
By the way, can anybody say how the Benchmarks of the paper were made if 
no implementations exists of such solvers. I haven't found that in the text.


Best regards,

Max Ostrowski




Guido Tack wrote:
> Just as a quick follow-up, Choco used to have a feature called  
> explanations, which would probably do what you're looking for, but as  
> far as I understand, they have been removed from the current release.
>
> Cheers,
> 	Guido
>
> Max wrote:
>
>   
>> At first am just forwarding my private mail contact with Guido Tack,  
>> as
>> it may be interesting to other on the mailing list.
>>
>> Thank you for the answer. Its a pity that the learning techniques have
>> not made it into CSP yet.
>> I want to integrate a CSP solver into an ASP Solver, a reasoning  
>> system
>> for logic programs.
>> The advantage of learning from CSP solvers would be to get a good
>> "reason" why literals/constraints can be propagated. SAT and ASP  
>> systems
>> use a learning approach based on "reasons" and conflict-learning. So  
>> my
>> system could use the reasons of the CSP solver to produce better
>> conflicts and prune the search space. If it is not supported i will  
>> have
>> to use a trivial reason, which means a constraint rule applies because
>> of all other constraint rules the same variable occurs in. But this
>> reason is not very specific and is not very applicable for  
>> backjumping.
>>
>> Maybe someone of the SMT (Sat Modulo Theory) area reads this message  
>> and
>> can provide information on how this is done in SMT Solvers, as they
>> incorporate CSP into SAT and using learning techniques. But all  
>> systems
>> i found up to now seam to have written their own theory(CSP) solver.
>> So if someone knows a CSP library capable of producing non trivial
>> reasons and maybe doing conflict analysis, it would be great to post
>> them here. Or maybe someone has an understaning how the SMT people do
>> the things they do.
>>
>> Best regards,
>>
>> Max Ostrowski
>>
>>
>>
>>
>>
>>     
>>> Hi.
>>>
>>> Max wrote:
>>> you probably already know me from the GeCode mailing list.
>>> I just have a silly? question that i do not wanted to post on the  
>>> list.
>>> It regards learning in gecode.
>>> I'm not very familiar with constraint programming but it seems to me
>>> that things like backjumping and conflict learning already made it
>>> into the current CSP systems.
>>> Found a paper: Backjump-based backtracking for constraint  
>>> satisfaction
>>> problems by Rina Dechter and Daniel Frost
>>>
>>> So, does GeCode really not support learning and backjumping? Because
>>> these features seem to be necessary for my diploma thesis and gecode
>>> seems to be a state of the art CSP solver and one of the best  
>>> looking.
>>> So my first question would be: Why it is not supported? - and my
>>> second barefaced question- : Do you know a similar CSP lib where it  
>>> is
>>> supported?
>>>       
>> It is not supported (and won't be in the near future), because no one
>> knows how to do it properly.  The work by Dechter et al uses a naive
>> model, where CSPs are represented entirely by binary constraints which
>> are given as lists of allowed pairs of values.  In this setup,  
>> learning
>> is relatively straightforward.  In a realistic, propagation-based
>> constraint solver, it is not.
>> That also answers your second question: I don't know of any realistic
>> library that does learning.  None of the commercial packages (ILOG
>> Solver, SICStus Prolog, B-Prolog) incorporates learning, nor does  
>> any of
>> the other free libraries like Choco or Minion.  The closest you can  
>> get
>> is the work on "Propagation = Lazy Clause Generation"
>> (http://www.cs.bgu.ac.il/~mcodish/Papers/Pages/cp07.html), this is the
>> most promising attempt at using SAT learning technology for CP  
>> solving I
>> know of (but it's quite different from classic CP solvers).
>>
>> Btw, you can ask questions like this on the mailing list, no problem.
>> It's about why we do/don't do certain things, so it definitely fits!
>> Maybe you can elaborate how learning is important for what you want  
>> to do.
>>
>> Cheers,
>>    Guido
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>>     
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>   




From tack at ps.uni-sb.de  Tue Oct 14 09:10:53 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Tue, 14 Oct 2008 09:10:53 +0200
Subject: [gecode-users] Learning in GeCode/SMT
In-Reply-To: <48F3C467.5000701@gmx.de>
References: <48F33866.2020006@gmx.de>
	<359522CB-1650-4016-8BA4-291B136C8B18@ps.uni-sb.de>
	<48F3C467.5000701@gmx.de>
Message-ID: <42317016-7E49-4050-81AC-0C29CA672CF9@ps.uni-sb.de>

Max wrote:
> I finally managed to read "Dechter - Backjump-based backtracking for
> constraint satisfaction" and i think it is not restricted to Binary
> Constraints, because it is mentioned several times. And i have not  
> found
> the list of allowed pairs in the paper, i thought of nogoods as set of
> domains, not explicit values.

The constraints are given in extension, as tables of allowed tuples  
(see e.g. Fig. 1).  And you're right, the techniques generalize to non- 
binary constraints, but I don't see how they generalize to non- 
extensional constraints.

The problem is that systems like Gecode, ILOG Solver, Choco, SICStus  
Prolog etc use propagators implementing the constraints.  This  
technique is not mentioned in Dechter's paper (it is similar to what  
they describe as "Backtracking with arc consistency" in 6.3).  When  
your constraints are implemented by propagators, it is much harder to  
explain the reason a certain value was removed from a domain.

> But i can not evaluate the possibilities,
> because i have no idea of how constraint solver do work. I hope the  
> CSP
> community will have access to learning algorithms in the future,  
> because
> i see a huge potential in them.

Sure, learning is what makes SAT solvers so powerful.  It is an  
extremely interesting area of research, but it simply isn't understood  
well enough to integrate into propagation-based CP solvers yet.

> By the way, can anybody say how the Benchmarks of the paper were  
> made if
> no implementations exists of such solvers. I haven't found that in  
> the text.

I haven't found any benchmarks in that particular paper.  There are  
probably prototype implementations of the techniques, maybe you can  
ask the authors.

Cheers,
	Guido




From mauriciotorob at gmail.com  Mon Oct 20 13:38:01 2008
From: mauriciotorob at gmail.com (Mauricio Toro)
Date: Mon, 20 Oct 2008 13:38:01 +0200
Subject: [gecode-users] Compiling in Mac OS X: .dmg Vs makefile
Message-ID: <a6b4b44a0810200438i6008ee08sc09eb81f0d2d42af@mail.gmail.com>

Hello all,
I am trying to distribute some software developed for Mac OS X Leopard Intel
using Gecode. I have a problem. I compile my software using a Gecode 2.2.2
installed using make, make install, etc and it works great. When I try to
load
my software in another Mac OS X Leopard Intel computer using Gecode 2.2.2
installed using the .dmg package, Gecode cannot be loaded and therefore
my software cannot be opened.

I am compiling my software this way:

g++  -o examples/philosopherspd2.pd_darwin examples/philosopherspd2.cpp
-I/Applications/Pd-extended.app/Contents/Resources/src/
-I/usr/local/include/flext/ -DFLEXT_SYS=2 -lflext-pd_s -undefined
dynamic_lookup -bundle -I. -lgecodesearch -lgecodecpltset  -lgecodeset
-lgecodeint -lgecodeminimodel -lgecodeserialization -lgecodekernel
-lgecodesupport -ffast-math -O3


How can I compile it in order to make it work with the framework

installed by the .dmg package?


Should I do it like this?

g++  -o examples/philosopherspd2.pd_darwin examples/philosopherspd2.cpp
-I/Applications/Pd-extended.app/Contents/Resources/src/
-I/usr/local/include/flext/ -DFLEXT_SYS=2 -lflext-pd_s -undefined
dynamic_lookup -bundle
-I. -L /Library/Frameworks/gecode.framework/gecode -ffast-math -O3


Thanks,


Mauricio

-- 
Mauricio Toro Bermudez
Estudiante de Ingenier?a de Sistemas
Pontificia Universidad Javeriana, Colombia

Stagiare ? l'Ircam
1, place Igor-Stravinsky 75004 Paris,
France de 2008 ? 2009
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20081020/64e6ab83/attachment.htm>

From tack at ps.uni-sb.de  Mon Oct 20 14:02:46 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Mon, 20 Oct 2008 14:02:46 +0200
Subject: [gecode-users] Compiling in Mac OS X: .dmg Vs makefile
In-Reply-To: <a6b4b44a0810200438i6008ee08sc09eb81f0d2d42af@mail.gmail.com>
References: <a6b4b44a0810200438i6008ee08sc09eb81f0d2d42af@mail.gmail.com>
Message-ID: <F0F5E130-6ACE-4136-8BAB-B603F8687A89@ps.uni-sb.de>

Mauricio Toro wrote:
> I am trying to distribute some software developed for Mac OS X  
> Leopard Intel
> using Gecode. I have a problem. I compile my software using a Gecode  
> 2.2.2
> installed using make, make install, etc and it works great. When I  
> try to load
> my software in another Mac OS X Leopard Intel computer using Gecode  
> 2.2.2
> installed using the .dmg package, Gecode cannot be loaded and  
> therefore
> my software cannot be opened.

I guess it's Gecode 2.2.0, or you're a time traveler ;-)

> I am compiling my software this way:
> g++  -o examples/philosopherspd2.pd_darwin examples/ 
> philosopherspd2.cpp -I/Applications/Pd-extended.app/Contents/ 
> Resources/src/ -I/usr/local/include/flext/ -DFLEXT_SYS=2 -lflext- 
> pd_s -undefined dynamic_lookup -bundle -I. -lgecodesearch - 
> lgecodecpltset  -lgecodeset -lgecodeint -lgecodeminimodel - 
> lgecodeserialization -lgecodekernel -lgecodesupport -ffast-math -O3
>
> How can I compile it in order to make it work with the framework
> installed by the .dmg package?
>
> Should I do it like this?
> g++  -o examples/philosopherspd2.pd_darwin examples/ 
> philosopherspd2.cpp -I/Applications/Pd-extended.app/Contents/ 
> Resources/src/ -I/usr/local/include/flext/ -DFLEXT_SYS=2 -lflext- 
> pd_s -undefined dynamic_lookup -bundle -I. -L /Library/Frameworks/ 
> gecode.framework/gecode -ffast-math -O3

It should suffice to specify -framework gecode as an option when  
linking, and you shouldn't need any -I option for the gecode headers.   
Please consult Apple's documentation on frameworks, or consider  
linking gecode statically into your software (so that you don't have  
to rely on it being installed).

Cheers,
	Guido




From mauriciotorob at gmail.com  Mon Oct 20 14:06:00 2008
From: mauriciotorob at gmail.com (Mauricio Toro)
Date: Mon, 20 Oct 2008 14:06:00 +0200
Subject: [gecode-users] Compiling in Mac OS X: .dmg Vs makefile
In-Reply-To: <F0F5E130-6ACE-4136-8BAB-B603F8687A89@ps.uni-sb.de>
References: <a6b4b44a0810200438i6008ee08sc09eb81f0d2d42af@mail.gmail.com>
	<F0F5E130-6ACE-4136-8BAB-B603F8687A89@ps.uni-sb.de>
Message-ID: <a6b4b44a0810200506y3d22b863o472b2a43493c3bf6@mail.gmail.com>

I am going to check the information about the Mac frameworks.However, it
seams better to link Gecode statically to my software.
How can I do this?

Thanks,

Mauricio

2008/10/20 Guido Tack <tack at ps.uni-sb.de>

> Mauricio Toro wrote:
>
>> I am trying to distribute some software developed for Mac OS X Leopard
>> Intel
>> using Gecode. I have a problem. I compile my software using a Gecode 2.2.2
>> installed using make, make install, etc and it works great. When I try to
>> load
>> my software in another Mac OS X Leopard Intel computer using Gecode 2.2.2
>> installed using the .dmg package, Gecode cannot be loaded and therefore
>> my software cannot be opened.
>>
>
> I guess it's Gecode 2.2.0, or you're a time traveler ;-)
>
>  I am compiling my software this way:
>> g++  -o examples/philosopherspd2.pd_darwin examples/philosopherspd2.cpp
>> -I/Applications/Pd-extended.app/Contents/Resources/src/
>> -I/usr/local/include/flext/ -DFLEXT_SYS=2 -lflext-pd_s -undefined
>> dynamic_lookup -bundle -I. -lgecodesearch -lgecodecpltset  -lgecodeset
>> -lgecodeint -lgecodeminimodel -lgecodeserialization -lgecodekernel
>> -lgecodesupport -ffast-math -O3
>>
>> How can I compile it in order to make it work with the framework
>> installed by the .dmg package?
>>
>> Should I do it like this?
>> g++  -o examples/philosopherspd2.pd_darwin examples/philosopherspd2.cpp
>> -I/Applications/Pd-extended.app/Contents/Resources/src/
>> -I/usr/local/include/flext/ -DFLEXT_SYS=2 -lflext-pd_s -undefined
>> dynamic_lookup -bundle -I. -L /Library/Frameworks/gecode.framework/gecode
>> -ffast-math -O3
>>
>
> It should suffice to specify -framework gecode as an option when linking,
> and you shouldn't need any -I option for the gecode headers.  Please consult
> Apple's documentation on frameworks, or consider linking gecode statically
> into your software (so that you don't have to rely on it being installed).
>
> Cheers,
>        Guido
>
>


-- 
Mauricio Toro Bermudez
Estudiante de Ingenier?a de Sistemas
Pontificia Universidad Javeriana, Colombia

Stagiare ? l'Ircam
1, place Igor-Stravinsky 75004 Paris,
France de 2008 ? 2009
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20081020/843efd34/attachment.htm>

From tack at ps.uni-sb.de  Mon Oct 20 14:25:34 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Mon, 20 Oct 2008 14:25:34 +0200
Subject: [gecode-users] Compiling in Mac OS X: .dmg Vs makefile
In-Reply-To: <a6b4b44a0810200506y3d22b863o472b2a43493c3bf6@mail.gmail.com>
References: <a6b4b44a0810200438i6008ee08sc09eb81f0d2d42af@mail.gmail.com>
	<F0F5E130-6ACE-4136-8BAB-B603F8687A89@ps.uni-sb.de>
	<a6b4b44a0810200506y3d22b863o472b2a43493c3bf6@mail.gmail.com>
Message-ID: <C083A691-C066-4AB5-8699-64AEF3E80B3B@ps.uni-sb.de>

Mauricio Toro wrote:

> I am going to check the information about the Mac frameworks.
> However, it seams better to link Gecode statically to my software.
> How can I do this?

Configure gecode with --enable-static --disable-shared, and then link  
as usual.  I think it currently doesn't work to give both --enable- 
shared and --enable-static at the same time.  You should make sure  
that your program actually links the static libs (install them  
somewhere different from the shared libs, or use the -static switch  
when linking your program).

Cheers,
	Guido




From slaash19 at free.fr  Mon Oct 20 15:29:13 2008
From: slaash19 at free.fr (matt)
Date: Mon, 20 Oct 2008 15:29:13 +0200
Subject: [gecode-users] under windows xp...
Message-ID: <48FC87A9.2040306@free.fr>

Hi, i have some problems to use gecode under windows...
So first i have download the package for windows 
(Gecode-2.2.0-Qt-x86.msi (32-bit) 
<http://www.gecode.org/download/Gecode-2.2.0-Qt-x86.msi>) and installed 
it under "C:\Gecode", i set the variable path "C:\Gecode\bin" and i use 
cygwin, and when i try to compile the example like "baseline.cc" it 
doesn't work, i have the following errors:
" In file included from c:/Gecode/gecode/support.hh:89, from 
baselinde.cc:38:
c:/Gecode/gecode/support/memory.icc:80: error: expected constructor, 
destruct or type conversion before 'void' "
 and so many errors like this...
Maybe someone can tell me what's wrong or tell me exactly how to install 
and an example of "how to compile..."
Thanks! =)



From zayenz at gmail.com  Mon Oct 20 15:56:35 2008
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Mon, 20 Oct 2008 15:56:35 +0200
Subject: [gecode-users] under windows xp...
In-Reply-To: <48FC87A9.2040306@free.fr>
References: <48FC87A9.2040306@free.fr>
Message-ID: <63b5c8b00810200656y1797664r24eb0278a9d28b1e@mail.gmail.com>

Hi,

The basic information we need to help anybody is Gecode version
(check), platform (half check, XP or Vista?), and compiler. Using my
magic deduction-capabilities I see that you are using gcc, which is
not the compiler we use for the pre-compiled Windows packages (as
stated on http://www.gecode.org/download.html).

In general we recommend the use of the Visual Studio C++ compiler on
Windows. See the mailing list-archives for more information.

Cheers,
Mikael

On Mon, Oct 20, 2008 at 3:29 PM, matt <slaash19 at free.fr> wrote:
> Hi, i have some problems to use gecode under windows...
> So first i have download the package for windows
> (Gecode-2.2.0-Qt-x86.msi (32-bit)
> <http://www.gecode.org/download/Gecode-2.2.0-Qt-x86.msi>) and installed
> it under "C:\Gecode", i set the variable path "C:\Gecode\bin" and i use
> cygwin, and when i try to compile the example like "baseline.cc" it
> doesn't work, i have the following errors:
> " In file included from c:/Gecode/gecode/support.hh:89, from
> baselinde.cc:38:
> c:/Gecode/gecode/support/memory.icc:80: error: expected constructor,
> destruct or type conversion before 'void' "
>  and so many errors like this...
> Maybe someone can tell me what's wrong or tell me exactly how to install
> and an example of "how to compile..."
> Thanks! =)
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>



-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/



From benoitlaurent at neuf.fr  Mon Oct 20 18:03:45 2008
From: benoitlaurent at neuf.fr (benoitlaurent at neuf.fr)
Date: Mon, 20 Oct 2008 12:03:45 -0400
Subject: [gecode-users] Maximal consistent assignment
Message-ID: <8CB00E48CAD65AC-218C-148@FRR3-L29.sis.aol.com>

Hello,

My question may be stupid but I am a newbie with Gecode.
I would like to implement the notion of partial consistent assignment (http://www.fi.muni.cz/~hanka/publ/sac05.pdf).
More precisely, I am looking for a maximal consistent assignment.
Is it natively managed in GECODE ?

I made a first attempt : I added a dummy value in the domain of each variable. During the search process, I put constraints on the number of "unassigned variables" to minimise it. Is it the proper way to deal with partial consistent assignment in GECODE ?

Thanks in advance.

Beno?t
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20081020/3ce07cc6/attachment.htm>

From zayenz at gmail.com  Tue Oct 21 07:26:24 2008
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Tue, 21 Oct 2008 07:26:24 +0200
Subject: [gecode-users] Maximal consistent assignment
In-Reply-To: <8CB00E48CAD65AC-218C-148@FRR3-L29.sis.aol.com>
References: <8CB00E48CAD65AC-218C-148@FRR3-L29.sis.aol.com>
Message-ID: <63b5c8b00810202226i7e2e88ata174de993fa608e6@mail.gmail.com>

On Mon, Oct 20, 2008 at 6:03 PM,  <benoitlaurent at neuf.fr> wrote:
> More precisely, I am looking for a maximal consistent assignment.
> Is it natively managed in GECODE ?

No, it is not implemented in Gecode.

> I made a first attempt : I added a dummy value in the domain of each
> variable. During the search process, I put constraints on the number of
> "unassigned variables" to minimise it. Is it the proper way to deal with
> partial consistent assignment in GECODE ?

Given that a partial consistent assignment/maximal consistent
assignment is more of a meta-property of a constraint problem, I would
not try to encode it into the problem. Instead I would modify the
search procedure so that it records the maximal consistent assignments
it finds.

Cheers,
Mikael

-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/



From benoitlaurent at neuf.fr  Tue Oct 21 10:11:48 2008
From: benoitlaurent at neuf.fr (benoitlaurent at neuf.fr)
Date: Tue, 21 Oct 2008 04:11:48 -0400
Subject: [gecode-users] Re :  Maximal consistent assignment
In-Reply-To: <63b5c8b00810202226i7e2e88ata174de993fa608e6@mail.gmail.com>
Message-ID: <8CB016BCC20ACB5-D7C-366@FRR3-L16.sis.aol.com>




On Mon, Oct 20, 2008 at 6:03 PM,  <benoitlaurent at neuf.fr> wrote:
>> More precisely, I am looking for a maximal consistent assignment.
>> Is it natively managed in GECODE ?

>No, it is not implemented in Gecode.

>> I made a first attempt : I added a dummy value in the domain of each
>> variable. During the search process, I put constraints on the number of
>> "unassigned variables" to minimise it. Is it the proper way to deal with
>> partial consistent assignment in GECODE ?

>Given that a partial consistent assignment/maximal consistent
>assignment is more of a meta-property of a constraint problem, I would
>not try to encode it into the problem. Instead I would modify the
>search procedure so that it records the maximal consistent assignments
>it finds.

Your answer rises two questions.
1) I used the number of "unassigned variables" to constrain the search and to speed up
the branch-and-bound process. If I do not use dummy values any more, I won't be able to do so.
2) As I said before, I am not an expert with GECODE. How can I record partial assignments ?

Thanks in advance.

Beno?t



 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20081021/ddae2f00/attachment.htm>

From zayenz at gmail.com  Tue Oct 21 11:00:02 2008
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Tue, 21 Oct 2008 11:00:02 +0200
Subject: [gecode-users] Re :  Maximal consistent assignment
In-Reply-To: <8CB016BCC20ACB5-D7C-366@FRR3-L16.sis.aol.com>
References: <63b5c8b00810202226i7e2e88ata174de993fa608e6@mail.gmail.com>
	<8CB016BCC20ACB5-D7C-366@FRR3-L16.sis.aol.com>
Message-ID: <63b5c8b00810210200k7a1cb6afvdb8c4da5f439c36@mail.gmail.com>

On Tue, Oct 21, 2008 at 10:11 AM,  <benoitlaurent at neuf.fr> wrote:
> 1) I used the number of "unassigned variables" to constrain the search and
> to speed up
> the branch-and-bound process. If I do not use dummy values any more, I won't
> be able to do so.

I'm not sure how this is achieved: if you require at least x variables
assigned, then you won't know that you can't assign more variables
until an assignment fails, aborting the search anyway. As I don't have
any knowledge of what to use (maximal) partial assignments for, I'm
not really the person discuss this. Anyway, on to the next part...

> 2) As I said before, I am not an expert with GECODE. How can I record
> partial assignments ?

The definition of a partial assignment is just the set of assigned
variables as long as propagation does not detect failure. Thus
whenever a new node is explored and it is not failed, you have a
larger set. At his point in the search you should record it. Places to
insert your code could be in the search-procedure for example, or you
could write your own dfs-exploration. Gecode does not expose any APIs
for reacting to events during the search-process (see [1]).

You said you are searching for a maximal partial assignment, that is
the set of assignments in a node where assignment of any other
variable to any other value gives failure. You can get this
indirectly, for example, by having a standard search and testing the
nodes as you explore them. The test is if the node is directly above
only failures given that you try all possible assignment of variables
to values. Not sure about the efficiency of this method though.

Cheers,
Mikael

[1] http://article.gmane.org/gmane.comp.lib.gecode.user/1701

--
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/



From benoitlaurent at neuf.fr  Thu Oct 23 11:44:41 2008
From: benoitlaurent at neuf.fr (benoitlaurent at neuf.fr)
Date: Thu, 23 Oct 2008 05:44:41 -0400
Subject: [gecode-users] Own branching strategy - commit
Message-ID: <8CB030B1B671545-F38-B2D@FRR5-L30.sis.aol.com>

Hello,
I would like to implement my own branching strategy. I examined the black-hole.cc and the queen-arimes.cc files but I do not understand very well the commit method. More precisely :
- what is the "a" parameter for ? 
- what are nq and eq ?
Thanks in advance.
Beno?t

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20081023/0e51103d/attachment.htm>

From zayenz at gmail.com  Thu Oct 23 13:07:47 2008
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Thu, 23 Oct 2008 13:07:47 +0200
Subject: [gecode-users] Own branching strategy - commit
In-Reply-To: <8CB030B1B671545-F38-B2D@FRR5-L30.sis.aol.com>
References: <8CB030B1B671545-F38-B2D@FRR5-L30.sis.aol.com>
Message-ID: <63b5c8b00810230407v634eb0dbyc0948cc67bdda0f8@mail.gmail.com>

On Thu, Oct 23, 2008 at 11:44 AM,  <benoitlaurent at neuf.fr> wrote:
> I would like to implement my own branching strategy. I examined the
> black-hole.cc and the queen-arimes.cc files but I do not understand very
> well the commit method. More precisely :
> - what is the "a" parameter for ?

The a is for the alternative to commit to [1] (0 or 1 for a binary branching).

> - what are nq and eq ?

Tell-methods in IntViews [2].

Cheers,
Mikael

[1] http://www.gecode.org/gecode-doc-latest/classGecode_1_1Branching.html#7a0e89bd55fa607406575710ddde29d1
[2] http://www.gecode.org/gecode-doc-latest/classGecode_1_1Int_1_1IntView.html


-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/



From sebastien.laigre at gmail.com  Fri Oct 24 13:01:35 2008
From: sebastien.laigre at gmail.com (=?ISO-8859-1?Q?S=E9bastien_Laigre?=)
Date: Fri, 24 Oct 2008 13:01:35 +0200
Subject: [gecode-users] Compile Gecode with visual C++
Message-ID: <842c20050810240401x631c54b8mecf2fad5360ed519@mail.gmail.com>

Hello,

I do not understand well what I have to install to compile with visual C++
2008. I think no, but to be sure : Do I need cygwin ?
Do I have QT installed or is it only for gist ? Is gist essential ?


Thank you in advance.


S?bastien
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20081024/63a141bf/attachment.htm>

From tack at ps.uni-sb.de  Fri Oct 24 14:19:56 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Fri, 24 Oct 2008 14:19:56 +0200
Subject: [gecode-users] Compile Gecode with visual C++
In-Reply-To: <842c20050810240401x631c54b8mecf2fad5360ed519@mail.gmail.com>
References: <842c20050810240401x631c54b8mecf2fad5360ed519@mail.gmail.com>
Message-ID: <44B42FA5-ED10-4AC2-BB07-838DE336638C@ps.uni-sb.de>

S?bastien Laigre wrote:
> I do not understand well what I have to install to compile with  
> visual C++ 2008. I think no, but to be sure : Do I need cygwin ?

Yes, you need cygwin for make, perl and some other tools.  You don't  
need cygwin if you use the precompiled binary version of Gecode, though.

> Do I have QT installed or is it only for gist ? Is gist essential ?

QT is only needed for Gist, and Gist is not essential.

Cheers,
	Guido

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2436 bytes
Desc: not available
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20081024/bbd06ceb/attachment.bin>

From slaash19 at free.fr  Fri Oct 24 14:04:04 2008
From: slaash19 at free.fr (matt)
Date: Fri, 24 Oct 2008 14:04:04 +0200
Subject: [gecode-users] Visual c++ express and gecode...
Message-ID: <4901B9B4.8080503@free.fr>

Hi,
i downloaded and installed visual studio c++ express (2008), and the 
configuration :

Properties configuration -> command line : /Od /I "c:\Gecode" /D "WIN32" 
/D "_DEBUG" /D "_CONSOLE" /D "_UNICODE" /D "UNICODE" /Gm /EHsc /RTC1 
/MDd /Fo"Debug\\" /Fd"Debug\vc90.pdb" /W3 /nologo /c /ZI /TP 
/errorReport:prompt

Porperties configuration -> links : command line : /OUT:"C:\Documents 
and Settings\matt\Mes documents\etudes 08 09\contraintes - outils 
dev\Test1\test\Debug\test.exe" /INCREMENTAL /NOLOGO 
/LIBPATH:"c:\Gecode\lib" /MANIFEST 
/MANIFESTFILE:"Debug\test.exe.intermediate.manifest" 
/MANIFESTUAC:"level='asInvoker' uiAccess='false'" /DEBUG 
/PDB:"c:\Documents and Settings\matt\Mes documents\etudes 08 
09\contraintes - outils dev\Test1\test\Debug\test.pdb" 
/SUBSYSTEM:CONSOLE /DYNAMICBASE /NXCOMPAT /MACHINE:X86 
/ERRORREPORT:PROMPT GecodeSupport.lib GecodeKernel.lib GecodeSearch.lib 
GecodeInt.lib GecodeMinimodel.lib  kernel32.lib user32.lib gdi32.lib 
winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib 
oleaut32.lib uuid.lib odbc32.lib odbccp32.lib

So after, i tried to compile the baseline.cc example and i got this report:

1>baseline.cc
1>c:\gecode\c++ examples\baseline.cc(46) : error C2504: 'Example' : 
classe de base non d?finie
1>c:\gecode\c++ examples\baseline.cc(49) : error C2146: erreur de 
syntaxe : absence de ';' avant l'identificateur 'x'
1>c:\gecode\c++ examples\baseline.cc(49) : error C4430: sp?cificateur de 
type manquant - int est pris en compte par d?faut. Remarque : C++ ne 
prend pas en charge int par d?faut
1>c:\gecode\c++ examples\baseline.cc(49) : error C4430: sp?cificateur de 
type manquant - int est pris en compte par d?faut. Remarque : C++ ne 
prend pas en charge int par d?faut
1>c:\gecode\c++ examples\baseline.cc(52) : error C4430: sp?cificateur de 
type manquant - int est pris en compte par d?faut. Remarque : C++ ne 
prend pas en charge int par d?faut
1>c:\gecode\c++ examples\baseline.cc(52) : error C2143: erreur de 
syntaxe : absence de ',' avant '&'
1>c:\gecode\c++ examples\baseline.cc(63) : error C2143: erreur de 
syntaxe : absence de ';' avant '*'
1>c:\gecode\c++ examples\baseline.cc(63) : error C2433: 
'Baseline::Space' : 'virtual' non autoris? sur les d?clarations de donn?es
1>c:\gecode\c++ examples\baseline.cc(63) : error C4430: sp?cificateur de 
type manquant - int est pris en compte par d?faut. Remarque : C++ ne 
prend pas en charge int par d?faut
1>c:\gecode\c++ examples\baseline.cc(64) : error C4430: sp?cificateur de 
type manquant - int est pris en compte par d?faut. Remarque : C++ ne 
prend pas en charge int par d?faut
1>c:\gecode\c++ examples\baseline.cc(66) : warning C4183: 'copy' : type 
de retour manquant ; fonction membre retournant 'int' prise par d?faut
1>c:\gecode\c++ examples\baseline.cc(52) : warning C4355: 'this' : 
utilis? dans la liste des initialiseurs membre de base
1>c:\gecode\c++ examples\baseline.cc(52) : error C2614: 'Baseline' : 
initialisation de membre non conforme : 'x' n'est ni une base ni un membre
1>c:\gecode\c++ examples\baseline.cc(54) : error C2065: 'x' : 
identificateur non d?clar?
1>c:\gecode\c++ examples\baseline.cc(54) : error C2065: 'INT_VAR_NONE' : 
identificateur non d?clar?
1>c:\gecode\c++ examples\baseline.cc(54) : error C2065: 'INT_VAL_MIN' : 
identificateur non d?clar?
1>c:\gecode\c++ examples\baseline.cc(54) : error C3861: 'branch' : 
identificateur introuvable
1>c:\gecode\c++ examples\baseline.cc(58) : error C2614: 'Baseline' : 
initialisation de membre non conforme : 'Example' n'est ni une base ni 
un membre
1>c:\gecode\c++ examples\baseline.cc(59) : error C2065: 'x' : 
identificateur non d?clar?
1>c:\gecode\c++ examples\baseline.cc(59) : error C2228: la partie gauche 
de '.update' doit avoir un class/struct/union
1>        le type est ''unknown-type''
1>c:\gecode\c++ examples\baseline.cc(59) : error C2039: 'x' : n'est pas 
membre de 'Baseline'
1>        c:\gecode\c++ examples\baseline.cc(46) : voir la d?claration 
de 'Baseline'
1>c:\gecode\c++ examples\baseline.cc(65) : error C2440: 'return' : 
impossible de convertir de 'Baseline *' en 'int *'
1>        Les types point?s n'ont aucun rapport entre eux ; conversion 
n?cessitant reinterpret_cast, cast de style C ou cast de style fonction
1>c:\gecode\c++ examples\baseline.cc(78) : error C2065: 'Options' : 
identificateur non d?clar?
1>c:\gecode\c++ examples\baseline.cc(78) : error C2146: erreur de 
syntaxe : absence de ';' avant l'identificateur 'opt'
1>c:\gecode\c++ examples\baseline.cc(78) : error C3861: 'opt' : 
identificateur introuvable
1>c:\gecode\c++ examples\baseline.cc(79) : error C2065: 'opt' : 
identificateur non d?clar?
1>c:\gecode\c++ examples\baseline.cc(79) : error C2228: la partie gauche 
de '.iterations' doit avoir un class/struct/union
1>        le type est ''unknown-type''
1>c:\gecode\c++ examples\baseline.cc(80) : error C2065: 'opt' : 
identificateur non d?clar?
1>c:\gecode\c++ examples\baseline.cc(80) : error C2228: la partie gauche 
de '.solutions' doit avoir un class/struct/union
1>        le type est ''unknown-type''
1>c:\gecode\c++ examples\baseline.cc(81) : error C2065: 'opt' : 
identificateur non d?clar?
1>c:\gecode\c++ examples\baseline.cc(81) : error C2228: la partie gauche 
de '.parse' doit avoir un class/struct/union
1>        le type est ''unknown-type''
1>c:\gecode\c++ examples\baseline.cc(82) : error C2653: 'Example' : 
n'est pas un nom de classe ni d'espace de noms
1>c:\gecode\c++ examples\baseline.cc(82) : error C2065: 'run' : 
identificateur non d?clar?
1>c:\gecode\c++ examples\baseline.cc(82) : error C2275: 'Baseline' : 
utilisation non conforme de ce type comme expression
1>        c:\gecode\c++ examples\baseline.cc(46) : voir la d?claration 
de 'Baseline'
1>c:\gecode\c++ examples\baseline.cc(82) : error C2065: 'DFS' : 
identificateur non d?clar?
1>c:\gecode\c++ examples\baseline.cc(82) : error C2065: 'Options' : 
identificateur non d?clar?
1>c:\gecode\c++ examples\baseline.cc(82) : error C2065: 'opt' : 
identificateur non d?clar?

So i don't understand very well where is the problem, i think i forgot 
something but what and where? :\
Anybody know how to do? Please help me...
Thanks!




From cschulte at kth.se  Fri Oct 24 14:30:22 2008
From: cschulte at kth.se (Christian Schulte)
Date: Fri, 24 Oct 2008 14:30:22 +0200
Subject: [gecode-users] Visual c++ express and gecode...
In-Reply-To: <4901B9B4.8080503@free.fr>
References: <4901B9B4.8080503@free.fr>
Message-ID: <000f01c935d4$48c3cc20$da4b6460$@se>

We just recently had a long discussion about this, please check this list's
archive!

CS

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of matt
Sent: Friday, October 24, 2008 2:04 PM
To: users at gecode.org
Subject: [gecode-users] Visual c++ express and gecode...

Hi,
i downloaded and installed visual studio c++ express (2008), and the 
configuration :

Properties configuration -> command line : /Od /I "c:\Gecode" /D "WIN32" 
/D "_DEBUG" /D "_CONSOLE" /D "_UNICODE" /D "UNICODE" /Gm /EHsc /RTC1 
/MDd /Fo"Debug\\" /Fd"Debug\vc90.pdb" /W3 /nologo /c /ZI /TP 
/errorReport:prompt

Porperties configuration -> links : command line : /OUT:"C:\Documents 
and Settings\matt\Mes documents\etudes 08 09\contraintes - outils 
dev\Test1\test\Debug\test.exe" /INCREMENTAL /NOLOGO 
/LIBPATH:"c:\Gecode\lib" /MANIFEST 
/MANIFESTFILE:"Debug\test.exe.intermediate.manifest" 
/MANIFESTUAC:"level='asInvoker' uiAccess='false'" /DEBUG 
/PDB:"c:\Documents and Settings\matt\Mes documents\etudes 08 
09\contraintes - outils dev\Test1\test\Debug\test.pdb" 
/SUBSYSTEM:CONSOLE /DYNAMICBASE /NXCOMPAT /MACHINE:X86 
/ERRORREPORT:PROMPT GecodeSupport.lib GecodeKernel.lib GecodeSearch.lib 
GecodeInt.lib GecodeMinimodel.lib  kernel32.lib user32.lib gdi32.lib 
winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib 
oleaut32.lib uuid.lib odbc32.lib odbccp32.lib

So after, i tried to compile the baseline.cc example and i got this report:

1>baseline.cc
1>c:\gecode\c++ examples\baseline.cc(46) : error C2504: 'Example' : 
classe de base non d?finie
1>c:\gecode\c++ examples\baseline.cc(49) : error C2146: erreur de 
syntaxe : absence de ';' avant l'identificateur 'x'
1>c:\gecode\c++ examples\baseline.cc(49) : error C4430: sp?cificateur de 
type manquant - int est pris en compte par d?faut. Remarque : C++ ne 
prend pas en charge int par d?faut
1>c:\gecode\c++ examples\baseline.cc(49) : error C4430: sp?cificateur de 
type manquant - int est pris en compte par d?faut. Remarque : C++ ne 
prend pas en charge int par d?faut
1>c:\gecode\c++ examples\baseline.cc(52) : error C4430: sp?cificateur de 
type manquant - int est pris en compte par d?faut. Remarque : C++ ne 
prend pas en charge int par d?faut
1>c:\gecode\c++ examples\baseline.cc(52) : error C2143: erreur de 
syntaxe : absence de ',' avant '&'
1>c:\gecode\c++ examples\baseline.cc(63) : error C2143: erreur de 
syntaxe : absence de ';' avant '*'
1>c:\gecode\c++ examples\baseline.cc(63) : error C2433: 
'Baseline::Space' : 'virtual' non autoris? sur les d?clarations de donn?es
1>c:\gecode\c++ examples\baseline.cc(63) : error C4430: sp?cificateur de 
type manquant - int est pris en compte par d?faut. Remarque : C++ ne 
prend pas en charge int par d?faut
1>c:\gecode\c++ examples\baseline.cc(64) : error C4430: sp?cificateur de 
type manquant - int est pris en compte par d?faut. Remarque : C++ ne 
prend pas en charge int par d?faut
1>c:\gecode\c++ examples\baseline.cc(66) : warning C4183: 'copy' : type 
de retour manquant ; fonction membre retournant 'int' prise par d?faut
1>c:\gecode\c++ examples\baseline.cc(52) : warning C4355: 'this' : 
utilis? dans la liste des initialiseurs membre de base
1>c:\gecode\c++ examples\baseline.cc(52) : error C2614: 'Baseline' : 
initialisation de membre non conforme : 'x' n'est ni une base ni un membre
1>c:\gecode\c++ examples\baseline.cc(54) : error C2065: 'x' : 
identificateur non d?clar?
1>c:\gecode\c++ examples\baseline.cc(54) : error C2065: 'INT_VAR_NONE' : 
identificateur non d?clar?
1>c:\gecode\c++ examples\baseline.cc(54) : error C2065: 'INT_VAL_MIN' : 
identificateur non d?clar?
1>c:\gecode\c++ examples\baseline.cc(54) : error C3861: 'branch' : 
identificateur introuvable
1>c:\gecode\c++ examples\baseline.cc(58) : error C2614: 'Baseline' : 
initialisation de membre non conforme : 'Example' n'est ni une base ni 
un membre
1>c:\gecode\c++ examples\baseline.cc(59) : error C2065: 'x' : 
identificateur non d?clar?
1>c:\gecode\c++ examples\baseline.cc(59) : error C2228: la partie gauche 
de '.update' doit avoir un class/struct/union
1>        le type est ''unknown-type''
1>c:\gecode\c++ examples\baseline.cc(59) : error C2039: 'x' : n'est pas 
membre de 'Baseline'
1>        c:\gecode\c++ examples\baseline.cc(46) : voir la d?claration 
de 'Baseline'
1>c:\gecode\c++ examples\baseline.cc(65) : error C2440: 'return' : 
impossible de convertir de 'Baseline *' en 'int *'
1>        Les types point?s n'ont aucun rapport entre eux ; conversion 
n?cessitant reinterpret_cast, cast de style C ou cast de style fonction
1>c:\gecode\c++ examples\baseline.cc(78) : error C2065: 'Options' : 
identificateur non d?clar?
1>c:\gecode\c++ examples\baseline.cc(78) : error C2146: erreur de 
syntaxe : absence de ';' avant l'identificateur 'opt'
1>c:\gecode\c++ examples\baseline.cc(78) : error C3861: 'opt' : 
identificateur introuvable
1>c:\gecode\c++ examples\baseline.cc(79) : error C2065: 'opt' : 
identificateur non d?clar?
1>c:\gecode\c++ examples\baseline.cc(79) : error C2228: la partie gauche 
de '.iterations' doit avoir un class/struct/union
1>        le type est ''unknown-type''
1>c:\gecode\c++ examples\baseline.cc(80) : error C2065: 'opt' : 
identificateur non d?clar?
1>c:\gecode\c++ examples\baseline.cc(80) : error C2228: la partie gauche 
de '.solutions' doit avoir un class/struct/union
1>        le type est ''unknown-type''
1>c:\gecode\c++ examples\baseline.cc(81) : error C2065: 'opt' : 
identificateur non d?clar?
1>c:\gecode\c++ examples\baseline.cc(81) : error C2228: la partie gauche 
de '.parse' doit avoir un class/struct/union
1>        le type est ''unknown-type''
1>c:\gecode\c++ examples\baseline.cc(82) : error C2653: 'Example' : 
n'est pas un nom de classe ni d'espace de noms
1>c:\gecode\c++ examples\baseline.cc(82) : error C2065: 'run' : 
identificateur non d?clar?
1>c:\gecode\c++ examples\baseline.cc(82) : error C2275: 'Baseline' : 
utilisation non conforme de ce type comme expression
1>        c:\gecode\c++ examples\baseline.cc(46) : voir la d?claration 
de 'Baseline'
1>c:\gecode\c++ examples\baseline.cc(82) : error C2065: 'DFS' : 
identificateur non d?clar?
1>c:\gecode\c++ examples\baseline.cc(82) : error C2065: 'Options' : 
identificateur non d?clar?
1>c:\gecode\c++ examples\baseline.cc(82) : error C2065: 'opt' : 
identificateur non d?clar?

So i don't understand very well where is the problem, i think i forgot 
something but what and where? :\
Anybody know how to do? Please help me...
Thanks!


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From paranoic.pum at gmail.com  Sun Oct 26 05:22:51 2008
From: paranoic.pum at gmail.com (David Przybilla)
Date: Sat, 25 Oct 2008 23:22:51 -0500
Subject: [gecode-users] BoolVars, Intvars and Channeling
Message-ID: <fb1020c60810252122p1be724aan67eb345db306a9fb@mail.gmail.com>

In gecode 1 it was possible to use BoolVars and IntVars interchangeably,
that means that a function which received a BoolVar could receive an Intvar
and a function which received an IntVar could received a BoolVar as an
argument.
Im porting a library from gecode 1 to Gecode 2
The solution I had found for these function callings is to create a new
variable and post a channeling constraint
I wonder if there is another way to achieve this, and if posting this new
constraint would affect the performance.

Thank you in advance.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20081025/90da45b4/attachment.htm>

From zayenz at gmail.com  Mon Oct 27 08:29:14 2008
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Mon, 27 Oct 2008 08:29:14 +0100
Subject: [gecode-users] BoolVars, Intvars and Channeling
In-Reply-To: <fb1020c60810252122p1be724aan67eb345db306a9fb@mail.gmail.com>
References: <fb1020c60810252122p1be724aan67eb345db306a9fb@mail.gmail.com>
Message-ID: <63b5c8b00810270029w5d0d27c2x81b2fdcd2ba9d8e@mail.gmail.com>

On Sun, Oct 26, 2008 at 5:22 AM, David Przybilla <paranoic.pum at gmail.com> wrote:
> In gecode 1 it was possible to use BoolVars and IntVars interchangeably,
> that means that a function which received a BoolVar could receive an Intvar
> and a function which received an IntVar could received a BoolVar as an
> argument.

This change was made so that BoolVar's could be implemented more
efficiently - the memory requirements went down with about 50% and the
efficiency went up. For constraints that make sense for Booelan
variables, there are now post-functions that take BoolVar's instead of
IntVar's.

> Im porting a library from gecode 1 to Gecode 2
> The solution I had found for these function callings is to create a new
> variable and post a channeling constraint
> I wonder if there is another way to achieve this, and if posting this new
> constraint would affect the performance.

The channeling constraints are very cheap to propagate. However, in
most cases they should not be needed, since there are dedicated
propagators for constraints over Booleans which are more efficient
than the ones for integer variables. If possible, make sure that you
use the appropriate propagator for the type of variable that you have.

Cheers,
Mikael

-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/



From chaosangel at gmx.de  Tue Oct 28 12:58:22 2008
From: chaosangel at gmx.de (Max)
Date: Tue, 28 Oct 2008 12:58:22 +0100
Subject: [gecode-users] Generating constraints
Message-ID: <4906FE5E.4070302@gmx.de>

Hello all,

i currently try to post constraints and need your help.
I have my constraints not in a textual format, but in a self made tree 
structure of the form


                              rel">="
                             /         \
                           op+      const=5
                        /       \
                var=x       const=7


(i hope this is readable)

Now i want to generate and post a gecode constraint of it.
Is there an easy way to recursivly define a constraint, because it seems 
to me that there is no baseclass or something that can be used.

I wanted to to something of the form

GeCodeConstraint recursive_converter(MyConstraint)
{
       if "variable" return x;
       if "constant" return 5;
       if "op+" return recursive_converter(left_node) + 
recursive_converter(right_node);
       if "rel>=" return recursive_converter(left_node) >= 
recursive_converter(right_node); 
}


I i found for GeCodeConstraint was MiniModel::LinRel<>, is there 
something more uniform, because i want to use boolean and integer 
variables (reified constraints) and stuff.
(the arithmetic functions seem very generic returning a variable, but 
then a lot of extra variables would have to be generated)


Any ideas ?

2nd question:

Is there a way to post the value of a variable not in form of a 
constraint, so "branch" on a boolean variable but being able to undo it so

so
b[0].set(0);
//after some time
b[0].set(1);

without copying the whole space?

Thank you a lot.

Max



From zayenz at gmail.com  Tue Oct 28 13:26:19 2008
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Tue, 28 Oct 2008 13:26:19 +0100
Subject: [gecode-users] Generating constraints
In-Reply-To: <4906FE5E.4070302@gmx.de>
References: <4906FE5E.4070302@gmx.de>
Message-ID: <63b5c8b00810280526r6a15b738lba8e0cefa1ba2f28@mail.gmail.com>

Hi,

If you have a tree representing an expression, then you should write a
tree-analyzer (a tree-walker for example) that posts constraints that
correspond to the tree. This is how the linear expressions in Gecodes
MiniModel works. For more information on writing tree analyzers, see a
compiler text as it corresponds to instruction selection.

There is no way to undo a tell - you have to copy the space.

Cheers,
Mikael


On Tue, Oct 28, 2008 at 12:58 PM, Max <chaosangel at gmx.de> wrote:
> Hello all,
>
> i currently try to post constraints and need your help.
> I have my constraints not in a textual format, but in a self made tree
> structure of the form
>
>
>                              rel">="
>                             /         \
>                           op+      const=5
>                        /       \
>                var=x       const=7
>
>
> (i hope this is readable)
>
> Now i want to generate and post a gecode constraint of it.
> Is there an easy way to recursivly define a constraint, because it seems
> to me that there is no baseclass or something that can be used.
>
> I wanted to to something of the form
>
> GeCodeConstraint recursive_converter(MyConstraint)
> {
>       if "variable" return x;
>       if "constant" return 5;
>       if "op+" return recursive_converter(left_node) +
> recursive_converter(right_node);
>       if "rel>=" return recursive_converter(left_node) >=
> recursive_converter(right_node);
> }
>
>
> I i found for GeCodeConstraint was MiniModel::LinRel<>, is there
> something more uniform, because i want to use boolean and integer
> variables (reified constraints) and stuff.
> (the arithmetic functions seem very generic returning a variable, but
> then a lot of extra variables would have to be generated)
>
>
> Any ideas ?
>
> 2nd question:
>
> Is there a way to post the value of a variable not in form of a
> constraint, so "branch" on a boolean variable but being able to undo it so
>
> so
> b[0].set(0);
> //after some time
> b[0].set(1);
>
> without copying the whole space?
>
> Thank you a lot.
>
> Max
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>



-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/



From chaosangel at gmx.de  Tue Oct 28 13:55:53 2008
From: chaosangel at gmx.de (Max)
Date: Tue, 28 Oct 2008 13:55:53 +0100
Subject: [gecode-users] Generating constraints
In-Reply-To: <63b5c8b00810280526r6a15b738lba8e0cefa1ba2f28@mail.gmail.com>
References: <4906FE5E.4070302@gmx.de>
	<63b5c8b00810280526r6a15b738lba8e0cefa1ba2f28@mail.gmail.com>
Message-ID: <49070BD9.7090005@gmx.de>

I have no problem in writing a tree analyzer but i looked for a uniform 
representation of the variables, operators, relations and constants, so 
i do not have to write an extra function for all of them.
I want to write

recursive_function_call rfc(X):
IntVar temp;
//switch for operator
add(rfc(x1), ADD, rfc(x2), temp);
return temp;

I don't want to distinguish the leafs of the node at this step. So i 
need a uniform return value.
PS: Does it influence the performance if i use temporary variables for 
my constants.

IntVar x(this, 5,5);




Mikael Zayenz Lagerkvist wrote:
> Hi,
>
> If you have a tree representing an expression, then you should write a
> tree-analyzer (a tree-walker for example) that posts constraints that
> correspond to the tree. This is how the linear expressions in Gecodes
> MiniModel works. For more information on writing tree analyzers, see a
> compiler text as it corresponds to instruction selection.
>
> There is no way to undo a tell - you have to copy the space.
>
> Cheers,
> Mikael
>
>
> On Tue, Oct 28, 2008 at 12:58 PM, Max <chaosangel at gmx.de> wrote:
>   
>> Hello all,
>>
>> i currently try to post constraints and need your help.
>> I have my constraints not in a textual format, but in a self made tree
>> structure of the form
>>
>>
>>                              rel">="
>>                             /         \
>>                           op+      const=5
>>                        /       \
>>                var=x       const=7
>>
>>
>> (i hope this is readable)
>>
>> Now i want to generate and post a gecode constraint of it.
>> Is there an easy way to recursivly define a constraint, because it seems
>> to me that there is no baseclass or something that can be used.
>>
>> I wanted to to something of the form
>>
>> GeCodeConstraint recursive_converter(MyConstraint)
>> {
>>       if "variable" return x;
>>       if "constant" return 5;
>>       if "op+" return recursive_converter(left_node) +
>> recursive_converter(right_node);
>>       if "rel>=" return recursive_converter(left_node) >=
>> recursive_converter(right_node);
>> }
>>
>>
>> I i found for GeCodeConstraint was MiniModel::LinRel<>, is there
>> something more uniform, because i want to use boolean and integer
>> variables (reified constraints) and stuff.
>> (the arithmetic functions seem very generic returning a variable, but
>> then a lot of extra variables would have to be generated)
>>
>>
>> Any ideas ?
>>
>> 2nd question:
>>
>> Is there a way to post the value of a variable not in form of a
>> constraint, so "branch" on a boolean variable but being able to undo it so
>>
>> so
>> b[0].set(0);
>> //after some time
>> b[0].set(1);
>>
>> without copying the whole space?
>>
>> Thank you a lot.
>>
>> Max
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
>>     
>
>
>
>   




From cschulte at kth.se  Tue Oct 28 14:11:09 2008
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 28 Oct 2008 14:11:09 +0100
Subject: [gecode-users] Generating constraints
In-Reply-To: <49070BD9.7090005@gmx.de>
References: <4906FE5E.4070302@gmx.de>	<63b5c8b00810280526r6a15b738lba8e0cefa1ba2f28@mail.gmail.com>
	<49070BD9.7090005@gmx.de>
Message-ID: <001501c938fe$a5432720$efc97560$@se>

Yes, it is even worse: it sacrifices propagation! 

If you need to get started look to the code that posts propagators based on
LinExpr and LinRel values. That is actually nothing but a tree analyzer
posting the minimal number of required propagators for linear relations.

Cheers
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Max
Sent: Tuesday, October 28, 2008 1:56 PM
To: Mikael Zayenz Lagerkvist
Cc: users at gecode.org
Subject: Re: [gecode-users] Generating constraints

I have no problem in writing a tree analyzer but i looked for a uniform 
representation of the variables, operators, relations and constants, so 
i do not have to write an extra function for all of them.
I want to write

recursive_function_call rfc(X):
IntVar temp;
//switch for operator
add(rfc(x1), ADD, rfc(x2), temp);
return temp;

I don't want to distinguish the leafs of the node at this step. So i 
need a uniform return value.
PS: Does it influence the performance if i use temporary variables for 
my constants.

IntVar x(this, 5,5);




Mikael Zayenz Lagerkvist wrote:
> Hi,
>
> If you have a tree representing an expression, then you should write a
> tree-analyzer (a tree-walker for example) that posts constraints that
> correspond to the tree. This is how the linear expressions in Gecodes
> MiniModel works. For more information on writing tree analyzers, see a
> compiler text as it corresponds to instruction selection.
>
> There is no way to undo a tell - you have to copy the space.
>
> Cheers,
> Mikael
>
>
> On Tue, Oct 28, 2008 at 12:58 PM, Max <chaosangel at gmx.de> wrote:
>   
>> Hello all,
>>
>> i currently try to post constraints and need your help.
>> I have my constraints not in a textual format, but in a self made tree
>> structure of the form
>>
>>
>>                              rel">="
>>                             /         \
>>                           op+      const=5
>>                        /       \
>>                var=x       const=7
>>
>>
>> (i hope this is readable)
>>
>> Now i want to generate and post a gecode constraint of it.
>> Is there an easy way to recursivly define a constraint, because it seems
>> to me that there is no baseclass or something that can be used.
>>
>> I wanted to to something of the form
>>
>> GeCodeConstraint recursive_converter(MyConstraint)
>> {
>>       if "variable" return x;
>>       if "constant" return 5;
>>       if "op+" return recursive_converter(left_node) +
>> recursive_converter(right_node);
>>       if "rel>=" return recursive_converter(left_node) >=
>> recursive_converter(right_node);
>> }
>>
>>
>> I i found for GeCodeConstraint was MiniModel::LinRel<>, is there
>> something more uniform, because i want to use boolean and integer
>> variables (reified constraints) and stuff.
>> (the arithmetic functions seem very generic returning a variable, but
>> then a lot of extra variables would have to be generated)
>>
>>
>> Any ideas ?
>>
>> 2nd question:
>>
>> Is there a way to post the value of a variable not in form of a
>> constraint, so "branch" on a boolean variable but being able to undo it
so
>>
>> so
>> b[0].set(0);
>> //after some time
>> b[0].set(1);
>>
>> without copying the whole space?
>>
>> Thank you a lot.
>>
>> Max
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
>>     
>
>
>
>   


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From chaosangel at gmx.de  Tue Oct 28 14:35:39 2008
From: chaosangel at gmx.de (Max)
Date: Tue, 28 Oct 2008 14:35:39 +0100
Subject: [gecode-users] Generating constraints
In-Reply-To: <001501c938fe$a5432720$efc97560$@se>
References: <4906FE5E.4070302@gmx.de>	<63b5c8b00810280526r6a15b738lba8e0cefa1ba2f28@mail.gmail.com>	<49070BD9.7090005@gmx.de>
	<001501c938fe$a5432720$efc97560$@se>
Message-ID: <4907152B.50104@gmx.de>

I have written the code for the analyzer now, but i just wanted to avoid 
this code-bloating.

 46 void GecodeSolver::SearchSpace::generateConstraint(CSPConstraint c, 
unsigned int boolvar)
 47 {
 48
 49    if (c.getType() == CSPConstraint::RELATION)
 50    {
 51       CSPConstraint* x;
 52       CSPConstraint* y;
 53       CSPConstraint::Relation r = c.getRelation(x,y);
 54
 55       IntVar r1;
 56       IntVar r2;
 57       int i1;
 58       int i2;
 59       bool b1 =  false;
 60       bool b2 =  false;
 61       if (x->getType() == CSPConstraint::VARIABLE | x->getType() == 
CSPConstraint::OPERATOR)
 62       {
 63          r1 = generateVariable(*x);
 64          b1 = true;
 65       }
 66       else
 67       if (x->getType() == CSPConstraint::INTEGER)
 68       {
 69          i1 = x->getInteger();
 70       }
 71
 72       if (y->getType() == CSPConstraint::VARIABLE | y->getType() == 
CSPConstraint::OPERATOR)
 73       {
 74          r2 = generateVariable(*y);
 75          b1 = true;
 76       }
 77       else
 78       if (y->getType() == CSPConstraint::INTEGER)
 79       {
 80          i2 = y->getInteger();
 81       }
 82
 83       Gecode::IntRelType ir;
 84       switch(r)
 85       {
 86          case CSPConstraint::EQ:
 87                ir = IRT_EQ;
 88                break;
 89          case CSPConstraint::NE:
 90                ir = IRT_NQ;
 91                break;
 92          case CSPConstraint::LT:
 93                ir = IRT_LE;
 94                break;
 95          case CSPConstraint::LE:
 96                ir = IRT_LQ;
 97                break;
 98          case CSPConstraint::GE:
 99                ir = IRT_GQ;
100                break;
101          case CSPConstraint::GT:
102                ir = IRT_GR;
103                break;
104       }
105
106       if (b1)
107       {
108          if (b2)
109             Gecode::rel(this, r1, ir, r2, b_[boolvar]);
110          else
111             Gecode::rel(this, r1, ir, i2, b_[boolvar]);
112       }
113       else
114       {
115          if (b2)
116             Gecode::rel(this, i1, ir, r2, b_[boolvar]);
117          else
118             Gecode::rel(this, i1, ir, i2, b_[boolvar]);
119
120       }
121    }


This is not very nice, but maybe i have to change my tree structure for 
better code.
(as you can see i wanted to avoid all the different kind of variables of 
type IntVar and integer and all the if else constructs)
But, with this code written i do get some errors, because the rel method 
is not defined for constants
as:
- both arguments
- first argument

so i can not write

rel(this, 5, IRT_GR, x, b);

Why?
Do i have manually to flip the operands ?


Christian Schulte wrote:
> Yes, it is even worse: it sacrifices propagation! 
>   
> If you need to get started look to the code that posts propagators based on
> LinExpr and LinRel values. That is actually nothing but a tree analyzer
> posting the minimal number of required propagators for linear relations.
>
> Cheers
> Christian
>
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
>
>
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Max
> Sent: Tuesday, October 28, 2008 1:56 PM
> To: Mikael Zayenz Lagerkvist
> Cc: users at gecode.org
> Subject: Re: [gecode-users] Generating constraints
>
> I have no problem in writing a tree analyzer but i looked for a uniform 
> representation of the variables, operators, relations and constants, so 
> i do not have to write an extra function for all of them.
> I want to write
>
> recursive_function_call rfc(X):
> IntVar temp;
> //switch for operator
> add(rfc(x1), ADD, rfc(x2), temp);
> return temp;
>
> I don't want to distinguish the leafs of the node at this step. So i 
> need a uniform return value.
> PS: Does it influence the performance if i use temporary variables for 
> my constants.
>
> IntVar x(this, 5,5);
>
>
>
>
> Mikael Zayenz Lagerkvist wrote:
>   
>> Hi,
>>
>> If you have a tree representing an expression, then you should write a
>> tree-analyzer (a tree-walker for example) that posts constraints that
>> correspond to the tree. This is how the linear expressions in Gecodes
>> MiniModel works. For more information on writing tree analyzers, see a
>> compiler text as it corresponds to instruction selection.
>>
>> There is no way to undo a tell - you have to copy the space.
>>
>> Cheers,
>> Mikael
>>
>>
>> On Tue, Oct 28, 2008 at 12:58 PM, Max <chaosangel at gmx.de> wrote:
>>   
>>     
>>> Hello all,
>>>
>>> i currently try to post constraints and need your help.
>>> I have my constraints not in a textual format, but in a self made tree
>>> structure of the form
>>>
>>>
>>>                              rel">="
>>>                             /         \
>>>                           op+      const=5
>>>                        /       \
>>>                var=x       const=7
>>>
>>>
>>> (i hope this is readable)
>>>
>>> Now i want to generate and post a gecode constraint of it.
>>> Is there an easy way to recursivly define a constraint, because it seems
>>> to me that there is no baseclass or something that can be used.
>>>
>>> I wanted to to something of the form
>>>
>>> GeCodeConstraint recursive_converter(MyConstraint)
>>> {
>>>       if "variable" return x;
>>>       if "constant" return 5;
>>>       if "op+" return recursive_converter(left_node) +
>>> recursive_converter(right_node);
>>>       if "rel>=" return recursive_converter(left_node) >=
>>> recursive_converter(right_node);
>>> }
>>>
>>>
>>> I i found for GeCodeConstraint was MiniModel::LinRel<>, is there
>>> something more uniform, because i want to use boolean and integer
>>> variables (reified constraints) and stuff.
>>> (the arithmetic functions seem very generic returning a variable, but
>>> then a lot of extra variables would have to be generated)
>>>
>>>
>>> Any ideas ?
>>>
>>> 2nd question:
>>>
>>> Is there a way to post the value of a variable not in form of a
>>> constraint, so "branch" on a boolean variable but being able to undo it
>>>       
> so
>   
>>> so
>>> b[0].set(0);
>>> //after some time
>>> b[0].set(1);
>>>
>>> without copying the whole space?
>>>
>>> Thank you a lot.
>>>
>>> Max
>>>
>>> _______________________________________________
>>> Gecode users mailing list
>>> users at gecode.org
>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>>
>>>     
>>>       
>>
>>   
>>     
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>   




From cschulte at kth.se  Tue Oct 28 14:42:15 2008
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 28 Oct 2008 14:42:15 +0100
Subject: [gecode-users] Generating constraints
In-Reply-To: <4907152B.50104@gmx.de>
References: <4906FE5E.4070302@gmx.de>	<63b5c8b00810280526r6a15b738lba8e0cefa1ba2f28@mail.gmail.com>	<49070BD9.7090005@gmx.de>	<001501c938fe$a5432720$efc97560$@se>
	<4907152B.50104@gmx.de>
Message-ID: <001e01c93902$fd44c470$f7ce4d50$@se>

Yes, you have to flip (or just normalize your tree before).

Remember, Gecode is a library with a minimal interface: only variants that
matter for efficiency are there. That explains that some variants are just
not there. Maybe we should change that...

On a different take. Did you consider translating your representation to
MiniZinc and use the MiniZinc to FlatZinc converter and Gecode's flatzinc
interface?

Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Max
Sent: Tuesday, October 28, 2008 2:36 PM
To: Christian Schulte
Cc: 'Mikael Zayenz Lagerkvist'; users at gecode.org
Subject: Re: [gecode-users] Generating constraints

I have written the code for the analyzer now, but i just wanted to avoid 
this code-bloating.

 46 void GecodeSolver::SearchSpace::generateConstraint(CSPConstraint c, 
unsigned int boolvar)
 47 {
 48
 49    if (c.getType() == CSPConstraint::RELATION)
 50    {
 51       CSPConstraint* x;
 52       CSPConstraint* y;
 53       CSPConstraint::Relation r = c.getRelation(x,y);
 54
 55       IntVar r1;
 56       IntVar r2;
 57       int i1;
 58       int i2;
 59       bool b1 =  false;
 60       bool b2 =  false;
 61       if (x->getType() == CSPConstraint::VARIABLE | x->getType() == 
CSPConstraint::OPERATOR)
 62       {
 63          r1 = generateVariable(*x);
 64          b1 = true;
 65       }
 66       else
 67       if (x->getType() == CSPConstraint::INTEGER)
 68       {
 69          i1 = x->getInteger();
 70       }
 71
 72       if (y->getType() == CSPConstraint::VARIABLE | y->getType() == 
CSPConstraint::OPERATOR)
 73       {
 74          r2 = generateVariable(*y);
 75          b1 = true;
 76       }
 77       else
 78       if (y->getType() == CSPConstraint::INTEGER)
 79       {
 80          i2 = y->getInteger();
 81       }
 82
 83       Gecode::IntRelType ir;
 84       switch(r)
 85       {
 86          case CSPConstraint::EQ:
 87                ir = IRT_EQ;
 88                break;
 89          case CSPConstraint::NE:
 90                ir = IRT_NQ;
 91                break;
 92          case CSPConstraint::LT:
 93                ir = IRT_LE;
 94                break;
 95          case CSPConstraint::LE:
 96                ir = IRT_LQ;
 97                break;
 98          case CSPConstraint::GE:
 99                ir = IRT_GQ;
100                break;
101          case CSPConstraint::GT:
102                ir = IRT_GR;
103                break;
104       }
105
106       if (b1)
107       {
108          if (b2)
109             Gecode::rel(this, r1, ir, r2, b_[boolvar]);
110          else
111             Gecode::rel(this, r1, ir, i2, b_[boolvar]);
112       }
113       else
114       {
115          if (b2)
116             Gecode::rel(this, i1, ir, r2, b_[boolvar]);
117          else
118             Gecode::rel(this, i1, ir, i2, b_[boolvar]);
119
120       }
121    }


This is not very nice, but maybe i have to change my tree structure for 
better code.
(as you can see i wanted to avoid all the different kind of variables of 
type IntVar and integer and all the if else constructs)
But, with this code written i do get some errors, because the rel method 
is not defined for constants
as:
- both arguments
- first argument

so i can not write

rel(this, 5, IRT_GR, x, b);

Why?
Do i have manually to flip the operands ?


Christian Schulte wrote:
> Yes, it is even worse: it sacrifices propagation! 
>   
> If you need to get started look to the code that posts propagators based
on
> LinExpr and LinRel values. That is actually nothing but a tree analyzer
> posting the minimal number of required propagators for linear relations.
>
> Cheers
> Christian
>
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
>
>
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Max
> Sent: Tuesday, October 28, 2008 1:56 PM
> To: Mikael Zayenz Lagerkvist
> Cc: users at gecode.org
> Subject: Re: [gecode-users] Generating constraints
>
> I have no problem in writing a tree analyzer but i looked for a uniform 
> representation of the variables, operators, relations and constants, so 
> i do not have to write an extra function for all of them.
> I want to write
>
> recursive_function_call rfc(X):
> IntVar temp;
> //switch for operator
> add(rfc(x1), ADD, rfc(x2), temp);
> return temp;
>
> I don't want to distinguish the leafs of the node at this step. So i 
> need a uniform return value.
> PS: Does it influence the performance if i use temporary variables for 
> my constants.
>
> IntVar x(this, 5,5);
>
>
>
>
> Mikael Zayenz Lagerkvist wrote:
>   
>> Hi,
>>
>> If you have a tree representing an expression, then you should write a
>> tree-analyzer (a tree-walker for example) that posts constraints that
>> correspond to the tree. This is how the linear expressions in Gecodes
>> MiniModel works. For more information on writing tree analyzers, see a
>> compiler text as it corresponds to instruction selection.
>>
>> There is no way to undo a tell - you have to copy the space.
>>
>> Cheers,
>> Mikael
>>
>>
>> On Tue, Oct 28, 2008 at 12:58 PM, Max <chaosangel at gmx.de> wrote:
>>   
>>     
>>> Hello all,
>>>
>>> i currently try to post constraints and need your help.
>>> I have my constraints not in a textual format, but in a self made tree
>>> structure of the form
>>>
>>>
>>>                              rel">="
>>>                             /         \
>>>                           op+      const=5
>>>                        /       \
>>>                var=x       const=7
>>>
>>>
>>> (i hope this is readable)
>>>
>>> Now i want to generate and post a gecode constraint of it.
>>> Is there an easy way to recursivly define a constraint, because it seems
>>> to me that there is no baseclass or something that can be used.
>>>
>>> I wanted to to something of the form
>>>
>>> GeCodeConstraint recursive_converter(MyConstraint)
>>> {
>>>       if "variable" return x;
>>>       if "constant" return 5;
>>>       if "op+" return recursive_converter(left_node) +
>>> recursive_converter(right_node);
>>>       if "rel>=" return recursive_converter(left_node) >=
>>> recursive_converter(right_node);
>>> }
>>>
>>>
>>> I i found for GeCodeConstraint was MiniModel::LinRel<>, is there
>>> something more uniform, because i want to use boolean and integer
>>> variables (reified constraints) and stuff.
>>> (the arithmetic functions seem very generic returning a variable, but
>>> then a lot of extra variables would have to be generated)
>>>
>>>
>>> Any ideas ?
>>>
>>> 2nd question:
>>>
>>> Is there a way to post the value of a variable not in form of a
>>> constraint, so "branch" on a boolean variable but being able to undo it
>>>       
> so
>   
>>> so
>>> b[0].set(0);
>>> //after some time
>>> b[0].set(1);
>>>
>>> without copying the whole space?
>>>
>>> Thank you a lot.
>>>
>>> Max
>>>
>>> _______________________________________________
>>> Gecode users mailing list
>>> users at gecode.org
>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>>
>>>     
>>>       
>>
>>   
>>     
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>   


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From chaosangel at gmx.de  Tue Oct 28 14:53:52 2008
From: chaosangel at gmx.de (Max)
Date: Tue, 28 Oct 2008 14:53:52 +0100
Subject: [gecode-users] Generating constraints
In-Reply-To: <001e01c93902$fd44c470$f7ce4d50$@se>
References: <4906FE5E.4070302@gmx.de>	<63b5c8b00810280526r6a15b738lba8e0cefa1ba2f28@mail.gmail.com>	<49070BD9.7090005@gmx.de>	<001501c938fe$a5432720$efc97560$@se>
	<4907152B.50104@gmx.de> <001e01c93902$fd44c470$f7ce4d50$@se>
Message-ID: <49071970.3020209@gmx.de>

I'm using Gecode as a library (of course :-) ) and don't know if the 
performance will suffer using such an interface. I dont want to go back 
to textual representation, as i would have to build it.
Searching your online documentation i found nothing using "Zinc" or 
"minizinc" as search words. Only for FlatZinc i found an operation 
writing flatzinc output, but i would need the input. Where can i find it.
 
Max


Christian Schulte wrote:
> Yes, you have to flip (or just normalize your tree before).
>
> Remember, Gecode is a library with a minimal interface: only variants that
> matter for efficiency are there. That explains that some variants are just
> not there. Maybe we should change that...
>
> On a different take. Did you consider translating your representation to
> MiniZinc and use the MiniZinc to FlatZinc converter and Gecode's flatzinc
> interface?
>
> Christian
>
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
>
>
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Max
> Sent: Tuesday, October 28, 2008 2:36 PM
> To: Christian Schulte
> Cc: 'Mikael Zayenz Lagerkvist'; users at gecode.org
> Subject: Re: [gecode-users] Generating constraints
>
> I have written the code for the analyzer now, but i just wanted to avoid 
> this code-bloating.
>
>  46 void GecodeSolver::SearchSpace::generateConstraint(CSPConstraint c, 
> unsigned int boolvar)
>  47 {
>  48
>  49    if (c.getType() == CSPConstraint::RELATION)
>  50    {
>  51       CSPConstraint* x;
>  52       CSPConstraint* y;
>  53       CSPConstraint::Relation r = c.getRelation(x,y);
>  54
>  55       IntVar r1;
>  56       IntVar r2;
>  57       int i1;
>  58       int i2;
>  59       bool b1 =  false;
>  60       bool b2 =  false;
>  61       if (x->getType() == CSPConstraint::VARIABLE | x->getType() == 
> CSPConstraint::OPERATOR)
>  62       {
>  63          r1 = generateVariable(*x);
>  64          b1 = true;
>  65       }
>  66       else
>  67       if (x->getType() == CSPConstraint::INTEGER)
>  68       {
>  69          i1 = x->getInteger();
>  70       }
>  71
>  72       if (y->getType() == CSPConstraint::VARIABLE | y->getType() == 
> CSPConstraint::OPERATOR)
>  73       {
>  74          r2 = generateVariable(*y);
>  75          b1 = true;
>  76       }
>  77       else
>  78       if (y->getType() == CSPConstraint::INTEGER)
>  79       {
>  80          i2 = y->getInteger();
>  81       }
>  82
>  83       Gecode::IntRelType ir;
>  84       switch(r)
>  85       {
>  86          case CSPConstraint::EQ:
>  87                ir = IRT_EQ;
>  88                break;
>  89          case CSPConstraint::NE:
>  90                ir = IRT_NQ;
>  91                break;
>  92          case CSPConstraint::LT:
>  93                ir = IRT_LE;
>  94                break;
>  95          case CSPConstraint::LE:
>  96                ir = IRT_LQ;
>  97                break;
>  98          case CSPConstraint::GE:
>  99                ir = IRT_GQ;
> 100                break;
> 101          case CSPConstraint::GT:
> 102                ir = IRT_GR;
> 103                break;
> 104       }
> 105
> 106       if (b1)
> 107       {
> 108          if (b2)
> 109             Gecode::rel(this, r1, ir, r2, b_[boolvar]);
> 110          else
> 111             Gecode::rel(this, r1, ir, i2, b_[boolvar]);
> 112       }
> 113       else
> 114       {
> 115          if (b2)
> 116             Gecode::rel(this, i1, ir, r2, b_[boolvar]);
> 117          else
> 118             Gecode::rel(this, i1, ir, i2, b_[boolvar]);
> 119
> 120       }
> 121    }
>
>
> This is not very nice, but maybe i have to change my tree structure for 
> better code.
> (as you can see i wanted to avoid all the different kind of variables of 
> type IntVar and integer and all the if else constructs)
> But, with this code written i do get some errors, because the rel method 
> is not defined for constants
> as:
> - both arguments
> - first argument
>
> so i can not write
>
> rel(this, 5, IRT_GR, x, b);
>
> Why?
> Do i have manually to flip the operands ?
>
>
> Christian Schulte wrote:
>   
>> Yes, it is even worse: it sacrifices propagation! 
>>   
>> If you need to get started look to the code that posts propagators based
>>     
> on
>   
>> LinExpr and LinRel values. That is actually nothing but a tree analyzer
>> posting the minimal number of required propagators for linear relations.
>>
>> Cheers
>> Christian
>>
>> --
>> Christian Schulte, www.ict.kth.se/~cschulte/
>>
>>
>> -----Original Message-----
>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
>> Of Max
>> Sent: Tuesday, October 28, 2008 1:56 PM
>> To: Mikael Zayenz Lagerkvist
>> Cc: users at gecode.org
>> Subject: Re: [gecode-users] Generating constraints
>>
>> I have no problem in writing a tree analyzer but i looked for a uniform 
>> representation of the variables, operators, relations and constants, so 
>> i do not have to write an extra function for all of them.
>> I want to write
>>
>> recursive_function_call rfc(X):
>> IntVar temp;
>> //switch for operator
>> add(rfc(x1), ADD, rfc(x2), temp);
>> return temp;
>>
>> I don't want to distinguish the leafs of the node at this step. So i 
>> need a uniform return value.
>> PS: Does it influence the performance if i use temporary variables for 
>> my constants.
>>
>> IntVar x(this, 5,5);
>>
>>
>>
>>
>> Mikael Zayenz Lagerkvist wrote:
>>   
>>     
>>> Hi,
>>>
>>> If you have a tree representing an expression, then you should write a
>>> tree-analyzer (a tree-walker for example) that posts constraints that
>>> correspond to the tree. This is how the linear expressions in Gecodes
>>> MiniModel works. For more information on writing tree analyzers, see a
>>> compiler text as it corresponds to instruction selection.
>>>
>>> There is no way to undo a tell - you have to copy the space.
>>>
>>> Cheers,
>>> Mikael
>>>
>>>
>>> On Tue, Oct 28, 2008 at 12:58 PM, Max <chaosangel at gmx.de> wrote:
>>>   
>>>     
>>>       
>>>> Hello all,
>>>>
>>>> i currently try to post constraints and need your help.
>>>> I have my constraints not in a textual format, but in a self made tree
>>>> structure of the form
>>>>
>>>>
>>>>                              rel">="
>>>>                             /         \
>>>>                           op+      const=5
>>>>                        /       \
>>>>                var=x       const=7
>>>>
>>>>
>>>> (i hope this is readable)
>>>>
>>>> Now i want to generate and post a gecode constraint of it.
>>>> Is there an easy way to recursivly define a constraint, because it seems
>>>> to me that there is no baseclass or something that can be used.
>>>>
>>>> I wanted to to something of the form
>>>>
>>>> GeCodeConstraint recursive_converter(MyConstraint)
>>>> {
>>>>       if "variable" return x;
>>>>       if "constant" return 5;
>>>>       if "op+" return recursive_converter(left_node) +
>>>> recursive_converter(right_node);
>>>>       if "rel>=" return recursive_converter(left_node) >=
>>>> recursive_converter(right_node);
>>>> }
>>>>
>>>>
>>>> I i found for GeCodeConstraint was MiniModel::LinRel<>, is there
>>>> something more uniform, because i want to use boolean and integer
>>>> variables (reified constraints) and stuff.
>>>> (the arithmetic functions seem very generic returning a variable, but
>>>> then a lot of extra variables would have to be generated)
>>>>
>>>>
>>>> Any ideas ?
>>>>
>>>> 2nd question:
>>>>
>>>> Is there a way to post the value of a variable not in form of a
>>>> constraint, so "branch" on a boolean variable but being able to undo it
>>>>       
>>>>         
>> so
>>   
>>     
>>>> so
>>>> b[0].set(0);
>>>> //after some time
>>>> b[0].set(1);
>>>>
>>>> without copying the whole space?
>>>>
>>>> Thank you a lot.
>>>>
>>>> Max
>>>>
>>>> _______________________________________________
>>>> Gecode users mailing list
>>>> users at gecode.org
>>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>>>
>>>>     
>>>>       
>>>>         
>>>   
>>>     
>>>       
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
>>   
>>     
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>   




From tack at ps.uni-sb.de  Tue Oct 28 15:00:04 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Tue, 28 Oct 2008 15:00:04 +0100
Subject: [gecode-users] Generating constraints
In-Reply-To: <49071970.3020209@gmx.de>
References: <4906FE5E.4070302@gmx.de>	<63b5c8b00810280526r6a15b738lba8e0cefa1ba2f28@mail.gmail.com>	<49070BD9.7090005@gmx.de>	<001501c938fe$a5432720$efc97560$@se>
	<4907152B.50104@gmx.de> <001e01c93902$fd44c470$f7ce4d50$@se>
	<49071970.3020209@gmx.de>
Message-ID: <DD56FB50-399E-4830-8313-887CA3E2D7B2@ps.uni-sb.de>

Max wrote:

> I'm using Gecode as a library (of course :-) ) and don't know if the
> performance will suffer using such an interface. I dont want to go  
> back
> to textual representation, as i would have to build it.
> Searching your online documentation i found nothing using "Zinc" or
> "minizinc" as search words. Only for FlatZinc i found an operation
> writing flatzinc output, but i would need the input. Where can i  
> find it.

It's here:
http://www.gecode.org/flatzinc.html

Cheers,
	Guido




From tack at ps.uni-sb.de  Tue Oct 28 15:01:49 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Tue, 28 Oct 2008 15:01:49 +0100
Subject: [gecode-users] Generating constraints
In-Reply-To: <4907152B.50104@gmx.de>
References: <4906FE5E.4070302@gmx.de>	<63b5c8b00810280526r6a15b738lba8e0cefa1ba2f28@mail.gmail.com>	<49070BD9.7090005@gmx.de>
	<001501c938fe$a5432720$efc97560$@se> <4907152B.50104@gmx.de>
Message-ID: <C6BB3487-9B4F-4248-9D4B-363CE354A5A2@ps.uni-sb.de>

Max wrote:
> But, with this code written i do get some errors, because the rel  
> method
> is not defined for constants
> as:
> - both arguments
> - first argument
>
> so i can not write
>
> rel(this, 5, IRT_GR, x, b);
>
> Why?
> Do i have manually to flip the operands ?

You could also use the post functions from minimodel here:
post(this, tt(eqv(~(5 > x), b)));

They should accept constants in all positions (and if not, we'll have  
to fix it).

Cheers,
	Guido




From chaosangel at gmx.de  Tue Oct 28 15:47:35 2008
From: chaosangel at gmx.de (Max)
Date: Tue, 28 Oct 2008 15:47:35 +0100
Subject: [gecode-users] Generating constraints
In-Reply-To: <C6BB3487-9B4F-4248-9D4B-363CE354A5A2@ps.uni-sb.de>
References: <4906FE5E.4070302@gmx.de>	<63b5c8b00810280526r6a15b738lba8e0cefa1ba2f28@mail.gmail.com>	<49070BD9.7090005@gmx.de>
	<001501c938fe$a5432720$efc97560$@se> <4907152B.50104@gmx.de>
	<C6BB3487-9B4F-4248-9D4B-363CE354A5A2@ps.uni-sb.de>
Message-ID: <49072607.3020905@gmx.de>

Thanks for the link.

I'm not sure if i can use minimodel, do all the operators have the same 
return value?
I just tested it and 2 things occur to me:
Gecode::MiniModel::LinExpr<Gecode::IntVar> operator*(const 
Gecode::MiniModel::LinExpr<Gecode::IntVar>&, int)
Gecode::MiniModel::LinExpr<Gecode::IntVar> operator*(int, const 
Gecode::MiniModel::LinExpr<Gecode::IntVar>&)
do exists, but no variant of the operator which takes both sides a 
LinExpr<IntVar>
Furthermore a constant -> so an integer, cannot be converted to a linear 
expression.

Is there a reason for that, it would be so nice to implement it that way 
at least on my side of the code :-)


Guido Tack wrote:
> Max wrote:
>> But, with this code written i do get some errors, because the rel method
>> is not defined for constants
>> as:
>> - both arguments
>> - first argument
>>
>> so i can not write
>>
>> rel(this, 5, IRT_GR, x, b);
>>
>> Why?
>> Do i have manually to flip the operands ?
>
> You could also use the post functions from minimodel here:
> post(this, tt(eqv(~(5 > x), b)));
>
> They should accept constants in all positions (and if not, we'll have 
> to fix it).
>
> Cheers,
>     Guido
>




From chaosangel at gmx.de  Tue Oct 28 15:51:00 2008
From: chaosangel at gmx.de (Max)
Date: Tue, 28 Oct 2008 15:51:00 +0100
Subject: [gecode-users] Generating constraints
In-Reply-To: <C6BB3487-9B4F-4248-9D4B-363CE354A5A2@ps.uni-sb.de>
References: <4906FE5E.4070302@gmx.de>	<63b5c8b00810280526r6a15b738lba8e0cefa1ba2f28@mail.gmail.com>	<49070BD9.7090005@gmx.de>	<001501c938fe$a5432720$efc97560$@se>
	<4907152B.50104@gmx.de>
	<C6BB3487-9B4F-4248-9D4B-363CE354A5A2@ps.uni-sb.de>
Message-ID: <490726D4.3070206@gmx.de>

126 Gecode::MiniModel::LinExpr<IntVar> 
GecodeSolver::SearchSpace::generateVariable(CSPConstraint c)
127 {
...
135       CSPConstraint* a,*b;
136       switch(c.getOperator(a,b))
137       {
138          case CSPConstraint::PLUS:
139             return generateVariable(*a) + generateVariable(*b);
140          case CSPConstraint::MINUS:
141             return generateVariable(*a) - generateVariable(*b);
142          case CSPConstraint::TIMES:
143             return generateVariable(*a) * generateVariable(*b);
144          case CSPConstraint::DIVIDE:
145             return generateVariable(*a) / generateVariable(*b);
146          case CSPConstraint::ABS:
147             assert(false);
148
149       }
...
151    else
152    if (c.getType() == CSPConstraint::INTEGER)
153    {
154       return c.getInteger();
155    }

This way not supporting the conversion, i need an if/else for each call 
of generateVariable, (32cases).

Max


Guido Tack wrote:
> Max wrote:
>   
>> But, with this code written i do get some errors, because the rel  
>> method
>> is not defined for constants
>> as:
>> - both arguments
>> - first argument
>>
>> so i can not write
>>
>> rel(this, 5, IRT_GR, x, b);
>>
>> Why?
>> Do i have manually to flip the operands ?
>>     
>
> You could also use the post functions from minimodel here:
> post(this, tt(eqv(~(5 > x), b)));
>
> They should accept constants in all positions (and if not, we'll have  
> to fix it).
>
> Cheers,
> 	Guido
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>   




From zayenz at gmail.com  Tue Oct 28 16:08:59 2008
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Tue, 28 Oct 2008 16:08:59 +0100
Subject: [gecode-users] Generating constraints
In-Reply-To: <49072607.3020905@gmx.de>
References: <4906FE5E.4070302@gmx.de>
	<63b5c8b00810280526r6a15b738lba8e0cefa1ba2f28@mail.gmail.com>
	<49070BD9.7090005@gmx.de> <001501c938fe$a5432720$efc97560$@se>
	<4907152B.50104@gmx.de>
	<C6BB3487-9B4F-4248-9D4B-363CE354A5A2@ps.uni-sb.de>
	<49072607.3020905@gmx.de>
Message-ID: <63b5c8b00810280808r7c12861cxaaa15eab372c19ce@mail.gmail.com>

On Tue, Oct 28, 2008 at 3:47 PM, Max <chaosangel at gmx.de> wrote:
> I'm not sure if i can use minimodel, do all the operators have the same
> return value?
> I just tested it and 2 things occur to me:
> Gecode::MiniModel::LinExpr<Gecode::IntVar> operator*(const
> Gecode::MiniModel::LinExpr<Gecode::IntVar>&, int)
> Gecode::MiniModel::LinExpr<Gecode::IntVar> operator*(int, const
> Gecode::MiniModel::LinExpr<Gecode::IntVar>&)
> do exists, but no variant of the operator which takes both sides a
> LinExpr<IntVar>
> Furthermore a constant -> so an integer, cannot be converted to a linear
> expression.
>
> Is there a reason for that, it would be so nice to implement it that way at
> least on my side of the code :-)

The reason is that it implements linear expressions (hence the LinExpr
name), so no term of the type variable*variable is allowed.

Cheers,
Mikael

-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/



From ggutierrez at atlas.puj.edu.co  Tue Oct 28 17:46:16 2008
From: ggutierrez at atlas.puj.edu.co (Gustavo Gutierrez)
Date: Tue, 28 Oct 2008 17:46:16 +0100
Subject: [gecode-users] Reporting memory usage
Message-ID: <e7b0e5a40810280946v6bc84068i85fcee537d02d126@mail.gmail.com>

Hello,

I am working on an implementation of graph variables. In our design, each
constraint variable use some data structures allocated outside the gecode
heap. Is it possible to report the complete memory used by those variables
as part as the search engine statistics?. I can add an extra method to the
variable implementation that returns the memory allocated by all its data
structures but how can i make the space "aware" of such method?

Thanks in advance.
-- 
Gustavo Gutierrez
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20081028/bd11be04/attachment.htm>

From cschulte at kth.se  Tue Oct 28 18:19:53 2008
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 28 Oct 2008 18:19:53 +0100
Subject: [gecode-users] Reporting memory usage
In-Reply-To: <e7b0e5a40810280946v6bc84068i85fcee537d02d126@mail.gmail.com>
References: <e7b0e5a40810280946v6bc84068i85fcee537d02d126@mail.gmail.com>
Message-ID: <004801c93921$653e8570$2fbb9050$@se>

Hi,

 

Damn that's missing in Gecode. A space takes into account what external memory is allocated by propagators and branchings but not by variables.

 

It will also not be that straightforward (I would have to think a little) as a space does not maintain a list of all variables (in contrast to propagators and branchings).

 

Is it very important? If yes, we could try to come up with something and add it for 3.0. What do you do right now? Do you use the same memory management support for variables that is also used by the complete set variables?

 

Cheers

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Gustavo Gutierrez
Sent: Tuesday, October 28, 2008 5:46 PM
To: gecode at gecode.org
Subject: [gecode-users] Reporting memory usage

 

Hello,

I am working on an implementation of graph variables. In our design, each constraint variable use some data structures allocated outside the gecode heap. Is it possible to report the complete memory used by those variables as part as the search engine statistics?. I can add an extra method to the variable implementation that returns the memory allocated by all its data structures but how can i make the space "aware" of such method?

Thanks in advance. 
-- 
Gustavo Gutierrez

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20081028/3bb6501b/attachment.htm>

From Farshid.Hassani_Bijarbooneh.5391 at student.uu.se  Tue Oct 28 23:52:52 2008
From: Farshid.Hassani_Bijarbooneh.5391 at student.uu.se (Farshid Hassani bijarbooneh)
Date: Tue, 28 Oct 2008 23:52:52 +0100
Subject: [gecode-users] low cpu utilization
Message-ID: <20081028235252.twfpri68f4gs4sso@webmail6.uu.se>

Hello,

I?m working on a project in Gecode 2.2.0 and visual studio 2008, my  
project can run well and compute the right solutions, but the strange  
behavior is the CPU usage which is almost always about %50 and there  
is no other process occupying CPU. I?m running my code on an Intel  
Core 2 Duo T7300 2.0GHz and also I tried a few other CPU and seems  
it?s always the case. Is this normal or this is kind of a bottleneck?  
I can provide my code in case needed.

Best Regards,
Farshid





From zayenz at gmail.com  Wed Oct 29 07:11:59 2008
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Wed, 29 Oct 2008 07:11:59 +0100
Subject: [gecode-users] low cpu utilization
In-Reply-To: <20081028235252.twfpri68f4gs4sso@webmail6.uu.se>
References: <20081028235252.twfpri68f4gs4sso@webmail6.uu.se>
Message-ID: <63b5c8b00810282311k272f42f5v3139d964a3f5c7a5@mail.gmail.com>

Hi,

A Core 2 Duo is a dual core processor. Since Gecode is currently
shipping with only single-threaded search-engines, 50%CPU usage is
normal.

Cheers,
Mikael

On Tue, Oct 28, 2008 at 11:52 PM, Farshid Hassani bijarbooneh
<Farshid.Hassani_Bijarbooneh.5391 at student.uu.se> wrote:
> Hello,
>
> I?m working on a project in Gecode 2.2.0 and visual studio 2008, my
> project can run well and compute the right solutions, but the strange
> behavior is the CPU usage which is almost always about %50 and there
> is no other process occupying CPU. I?m running my code on an Intel
> Core 2 Duo T7300 2.0GHz and also I tried a few other CPU and seems
> it?s always the case. Is this normal or this is kind of a bottleneck?
> I can provide my code in case needed.
>
> Best Regards,
> Farshid
>
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>



-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/



From ggutierrez at atlas.puj.edu.co  Wed Oct 29 09:19:20 2008
From: ggutierrez at atlas.puj.edu.co (Gustavo Gutierrez)
Date: Wed, 29 Oct 2008 09:19:20 +0100
Subject: [gecode-users] Reporting memory usage
In-Reply-To: <004801c93921$653e8570$2fbb9050$@se>
References: <e7b0e5a40810280946v6bc84068i85fcee537d02d126@mail.gmail.com>
	<004801c93921$653e8570$2fbb9050$@se>
Message-ID: <e7b0e5a40810290119h5566c2e5rd812de02e1054d6a@mail.gmail.com>

On Tue, Oct 28, 2008 at 6:19 PM, Christian Schulte <cschulte at kth.se> wrote:

>  Hi,
>
>
>
> Damn that's missing in Gecode. A space takes into account what external
> memory is allocated by propagators and branchings but not by variables.
>
>
>
> It will also not be that straightforward (I would have to think a little)
> as a space does not maintain a list of all variables (in contrast to
> propagators and branchings).
>

> Is it very important? If yes, we could try to come up with something and
> add it for 3.0.
>
It would be nice and useful to have it but of course we can use some
workaround:  what we can do for now is to use some bash scripting to measure
the memory allocated by an specific process, unfortunately this is not so
standard from one operating system to another.




> What do you do right now? Do you use the same memory management support for
> variables that is also used by the complete set variables?
>
If i remember correctly, cpltset variables use an external library in the
buddy folder and use a disposer to free the memory allocated by additional
data structures. We are doing that right now. We are trying to use boost
libraries for our implementation and fortunately those libraries provide a
way to parametrize the allocator. The other possibility will be to use an
allocator that allocates memory from the gecode heap and *never* deallocate
it (this is because gecode memory manager takes care of that (am i right?).
Can you recommend or comment on the advantages of one approach over the
other?

Regards,
Gustavo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20081029/14efd642/attachment.htm>

From zayenz at gmail.com  Wed Oct 29 10:16:54 2008
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Wed, 29 Oct 2008 10:16:54 +0100
Subject: [gecode-users] Reporting memory usage
In-Reply-To: <e7b0e5a40810290119h5566c2e5rd812de02e1054d6a@mail.gmail.com>
References: <e7b0e5a40810280946v6bc84068i85fcee537d02d126@mail.gmail.com>
	<004801c93921$653e8570$2fbb9050$@se>
	<e7b0e5a40810290119h5566c2e5rd812de02e1054d6a@mail.gmail.com>
Message-ID: <63b5c8b00810290216s55388624tc33ad4326bbbc7aa@mail.gmail.com>

On Wed, Oct 29, 2008 at 9:19 AM, Gustavo Gutierrez
<ggutierrez at atlas.puj.edu.co> wrote:
> It would be nice and useful to have it but of course we can use some
> workaround:  what we can do for now is to use some bash scripting to measure
> the memory allocated by an specific process, unfortunately this is not so
> standard from one operating system to another.

For the memory-benchmarks on the Gecode web-page we use the memusage
tool from glibc. It is not terribly well-documented, but it is simple
and it gives an accurate measure of the total amount of memory that
your application allocates from the OS. The source for the script can
be viewed at [1].The script pre-loads the libmemusage.so library (part
of glibc) for measurements.

Cheers,
Mikael

[1] http://sources.redhat.com/cgi-bin/cvsweb.cgi/libc/malloc/memusage.sh?rev=1.10.2.7&content-type=text/x-cvsweb-markup&cvsroot=glibc

-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/



From chaosangel at gmx.de  Wed Oct 29 11:25:27 2008
From: chaosangel at gmx.de (Max)
Date: Wed, 29 Oct 2008 11:25:27 +0100
Subject: [gecode-users] Generating constraints
In-Reply-To: <001501c938fe$a5432720$efc97560$@se>
References: <4906FE5E.4070302@gmx.de>	<63b5c8b00810280526r6a15b738lba8e0cefa1ba2f28@mail.gmail.com>	<49070BD9.7090005@gmx.de>
	<001501c938fe$a5432720$efc97560$@se>
Message-ID: <49083A17.8060908@gmx.de>

I habe a little problem now with the operators.
Now i do not want to use the minimodel part und tried to convert my tree 
the long/boring way.
There is a little problem, all arithmetic functions seem to be 
implemented for variables only.
So  plus(this, v1,v2); is ok, but  plus(this, 5,v2); or plus(this, 
v1,5); is not.
Now Guido Tack somewhen wrote:

div(this, x0, x1, IntVar(this, 42, 42));
There's no specialized version for constant integers (yet).


But as i wanted to do something similiar, Christian Schulte answered:

Yes, it is even worse: it sacrifices propagation! 


So how can i post constants, not using minimodel. Is this the right way 
? (IntVar(this, 42,42))

Mfg
Max





Christian Schulte wrote:
> Yes, it is even worse: it sacrifices propagation! 
>
> If you need to get started look to the code that posts propagators based on
> LinExpr and LinRel values. That is actually nothing but a tree analyzer
> posting the minimal number of required propagators for linear relations.
>
> Cheers
> Christian
>
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
>
>
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Max
> Sent: Tuesday, October 28, 2008 1:56 PM
> To: Mikael Zayenz Lagerkvist
> Cc: users at gecode.org
> Subject: Re: [gecode-users] Generating constraints
>
> I have no problem in writing a tree analyzer but i looked for a uniform 
> representation of the variables, operators, relations and constants, so 
> i do not have to write an extra function for all of them.
> I want to write
>
> recursive_function_call rfc(X):
> IntVar temp;
> //switch for operator
> add(rfc(x1), ADD, rfc(x2), temp);
> return temp;
>
> I don't want to distinguish the leafs of the node at this step. So i 
> need a uniform return value.
> PS: Does it influence the performance if i use temporary variables for 
> my constants.
>
> IntVar x(this, 5,5);
>
>
>
>
> Mikael Zayenz Lagerkvist wrote:
>   
>> Hi,
>>
>> If you have a tree representing an expression, then you should write a
>> tree-analyzer (a tree-walker for example) that posts constraints that
>> correspond to the tree. This is how the linear expressions in Gecodes
>> MiniModel works. For more information on writing tree analyzers, see a
>> compiler text as it corresponds to instruction selection.
>>
>> There is no way to undo a tell - you have to copy the space.
>>
>> Cheers,
>> Mikael
>>
>>
>> On Tue, Oct 28, 2008 at 12:58 PM, Max <chaosangel at gmx.de> wrote:
>>   
>>     
>>> Hello all,
>>>
>>> i currently try to post constraints and need your help.
>>> I have my constraints not in a textual format, but in a self made tree
>>> structure of the form
>>>
>>>
>>>                              rel">="
>>>                             /         \
>>>                           op+      const=5
>>>                        /       \
>>>                var=x       const=7
>>>
>>>
>>> (i hope this is readable)
>>>
>>> Now i want to generate and post a gecode constraint of it.
>>> Is there an easy way to recursivly define a constraint, because it seems
>>> to me that there is no baseclass or something that can be used.
>>>
>>> I wanted to to something of the form
>>>
>>> GeCodeConstraint recursive_converter(MyConstraint)
>>> {
>>>       if "variable" return x;
>>>       if "constant" return 5;
>>>       if "op+" return recursive_converter(left_node) +
>>> recursive_converter(right_node);
>>>       if "rel>=" return recursive_converter(left_node) >=
>>> recursive_converter(right_node);
>>> }
>>>
>>>
>>> I i found for GeCodeConstraint was MiniModel::LinRel<>, is there
>>> something more uniform, because i want to use boolean and integer
>>> variables (reified constraints) and stuff.
>>> (the arithmetic functions seem very generic returning a variable, but
>>> then a lot of extra variables would have to be generated)
>>>
>>>
>>> Any ideas ?
>>>
>>> 2nd question:
>>>
>>> Is there a way to post the value of a variable not in form of a
>>> constraint, so "branch" on a boolean variable but being able to undo it
>>>       
> so
>   
>>> so
>>> b[0].set(0);
>>> //after some time
>>> b[0].set(1);
>>>
>>> without copying the whole space?
>>>
>>> Thank you a lot.
>>>
>>> Max
>>>
>>> _______________________________________________
>>> Gecode users mailing list
>>> users at gecode.org
>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>>
>>>     
>>>       
>>
>>   
>>     
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>   




From chaosangel at gmx.de  Wed Oct 29 11:34:48 2008
From: chaosangel at gmx.de (Max)
Date: Wed, 29 Oct 2008 11:34:48 +0100
Subject: [gecode-users] Generating constraints
In-Reply-To: <49083A17.8060908@gmx.de>
References: <4906FE5E.4070302@gmx.de>	<63b5c8b00810280526r6a15b738lba8e0cefa1ba2f28@mail.gmail.com>	<49070BD9.7090005@gmx.de>	<001501c938fe$a5432720$efc97560$@se>
	<49083A17.8060908@gmx.de>
Message-ID: <49083C48.2070802@gmx.de>

Sorry, it seems to me that i used minimodel functions or direct 
modellling or something.
How can i distinguish the function Gecode::plus/2IntVar from 
Gecode::plus/3IntVar and what is the difference.
And there exists no version of div returning an IntVar.
Mfg
Max

Max wrote:
> I habe a little problem now with the operators.
> Now i do not want to use the minimodel part und tried to convert my tree 
> the long/boring way.
> There is a little problem, all arithmetic functions seem to be 
> implemented for variables only.
> So  plus(this, v1,v2); is ok, but  plus(this, 5,v2); or plus(this, 
> v1,5); is not.
> Now Guido Tack somewhen wrote:
>
> div(this, x0, x1, IntVar(this, 42, 42));
> There's no specialized version for constant integers (yet).
>
>
> But as i wanted to do something similiar, Christian Schulte answered:
>
> Yes, it is even worse: it sacrifices propagation! 
>
>
> So how can i post constants, not using minimodel. Is this the right way 
> ? (IntVar(this, 42,42))
>
> Mfg
> Max
>
>
>
>
>
> Christian Schulte wrote:
>   
>> Yes, it is even worse: it sacrifices propagation! 
>>
>> If you need to get started look to the code that posts propagators based on
>> LinExpr and LinRel values. That is actually nothing but a tree analyzer
>> posting the minimal number of required propagators for linear relations.
>>
>> Cheers
>> Christian
>>
>> --
>> Christian Schulte, www.ict.kth.se/~cschulte/
>>
>>
>> -----Original Message-----
>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
>> Of Max
>> Sent: Tuesday, October 28, 2008 1:56 PM
>> To: Mikael Zayenz Lagerkvist
>> Cc: users at gecode.org
>> Subject: Re: [gecode-users] Generating constraints
>>
>> I have no problem in writing a tree analyzer but i looked for a uniform 
>> representation of the variables, operators, relations and constants, so 
>> i do not have to write an extra function for all of them.
>> I want to write
>>
>> recursive_function_call rfc(X):
>> IntVar temp;
>> //switch for operator
>> add(rfc(x1), ADD, rfc(x2), temp);
>> return temp;
>>
>> I don't want to distinguish the leafs of the node at this step. So i 
>> need a uniform return value.
>> PS: Does it influence the performance if i use temporary variables for 
>> my constants.
>>
>> IntVar x(this, 5,5);
>>
>>
>>
>>
>> Mikael Zayenz Lagerkvist wrote:
>>   
>>     
>>> Hi,
>>>
>>> If you have a tree representing an expression, then you should write a
>>> tree-analyzer (a tree-walker for example) that posts constraints that
>>> correspond to the tree. This is how the linear expressions in Gecodes
>>> MiniModel works. For more information on writing tree analyzers, see a
>>> compiler text as it corresponds to instruction selection.
>>>
>>> There is no way to undo a tell - you have to copy the space.
>>>
>>> Cheers,
>>> Mikael
>>>
>>>
>>> On Tue, Oct 28, 2008 at 12:58 PM, Max <chaosangel at gmx.de> wrote:
>>>   
>>>     
>>>       
>>>> Hello all,
>>>>
>>>> i currently try to post constraints and need your help.
>>>> I have my constraints not in a textual format, but in a self made tree
>>>> structure of the form
>>>>
>>>>
>>>>                              rel">="
>>>>                             /         \
>>>>                           op+      const=5
>>>>                        /       \
>>>>                var=x       const=7
>>>>
>>>>
>>>> (i hope this is readable)
>>>>
>>>> Now i want to generate and post a gecode constraint of it.
>>>> Is there an easy way to recursivly define a constraint, because it seems
>>>> to me that there is no baseclass or something that can be used.
>>>>
>>>> I wanted to to something of the form
>>>>
>>>> GeCodeConstraint recursive_converter(MyConstraint)
>>>> {
>>>>       if "variable" return x;
>>>>       if "constant" return 5;
>>>>       if "op+" return recursive_converter(left_node) +
>>>> recursive_converter(right_node);
>>>>       if "rel>=" return recursive_converter(left_node) >=
>>>> recursive_converter(right_node);
>>>> }
>>>>
>>>>
>>>> I i found for GeCodeConstraint was MiniModel::LinRel<>, is there
>>>> something more uniform, because i want to use boolean and integer
>>>> variables (reified constraints) and stuff.
>>>> (the arithmetic functions seem very generic returning a variable, but
>>>> then a lot of extra variables would have to be generated)
>>>>
>>>>
>>>> Any ideas ?
>>>>
>>>> 2nd question:
>>>>
>>>> Is there a way to post the value of a variable not in form of a
>>>> constraint, so "branch" on a boolean variable but being able to undo it
>>>>       
>>>>         
>> so
>>   
>>     
>>>> so
>>>> b[0].set(0);
>>>> //after some time
>>>> b[0].set(1);
>>>>
>>>> without copying the whole space?
>>>>
>>>> Thank you a lot.
>>>>
>>>> Max
>>>>
>>>> _______________________________________________
>>>> Gecode users mailing list
>>>> users at gecode.org
>>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>>>
>>>>     
>>>>       
>>>>         
>>>   
>>>     
>>>       
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
>>   
>>     
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>   




From Farshid.Hassani_Bijarbooneh.5391 at student.uu.se  Wed Oct 29 13:56:31 2008
From: Farshid.Hassani_Bijarbooneh.5391 at student.uu.se (Farshid Hassani bijarbooneh)
Date: Wed, 29 Oct 2008 13:56:31 +0100
Subject: [gecode-users] low cpu utilization
In-Reply-To: <63b5c8b00810282311k272f42f5v3139d964a3f5c7a5@mail.gmail.com>
References: <20081028235252.twfpri68f4gs4sso@webmail6.uu.se>
	<63b5c8b00810282311k272f42f5v3139d964a3f5c7a5@mail.gmail.com>
Message-ID: <20081029135631.p88om1dyz4cgcco0@webmail6.uu.se>

I also tried with Intel Pentium 4 2.8GHz which I'm sure is single core.

Cheers,
Farshid

Quoting Mikael Zayenz Lagerkvist <zayenz at gmail.com>:

> Hi,
>
> A Core 2 Duo is a dual core processor. Since Gecode is currently
> shipping with only single-threaded search-engines, 50%CPU usage is
> normal.
>
> Cheers,
> Mikael
>
> On Tue, Oct 28, 2008 at 11:52 PM, Farshid Hassani bijarbooneh
> <Farshid.Hassani_Bijarbooneh.5391 at student.uu.se> wrote:
>> Hello,
>>
>> I?m working on a project in Gecode 2.2.0 and visual studio 2008, my
>> project can run well and compute the right solutions, but the strange
>> behavior is the CPU usage which is almost always about %50 and there
>> is no other process occupying CPU. I?m running my code on an Intel
>> Core 2 Duo T7300 2.0GHz and also I tried a few other CPU and seems
>> it?s always the case. Is this normal or this is kind of a bottleneck?
>> I can provide my code in case needed.
>>
>> Best Regards,
>> Farshid
>>
>>
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
>
>
>
> --
> Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/
>






From tack at ps.uni-sb.de  Wed Oct 29 14:08:27 2008
From: tack at ps.uni-sb.de (Guido Tack)
Date: Wed, 29 Oct 2008 14:08:27 +0100
Subject: [gecode-users] low cpu utilization
In-Reply-To: <20081029135631.p88om1dyz4cgcco0@webmail6.uu.se>
References: <20081028235252.twfpri68f4gs4sso@webmail6.uu.se>
	<63b5c8b00810282311k272f42f5v3139d964a3f5c7a5@mail.gmail.com>
	<20081029135631.p88om1dyz4cgcco0@webmail6.uu.se>
Message-ID: <AAEDF732-2BE3-403D-88A6-65ED4E3AF4C0@ps.uni-sb.de>

Farshid Hassani bijarbooneh wrote:

> I also tried with Intel Pentium 4 2.8GHz which I'm sure is single  
> core.

It's single core, but it uses hyper threading, which means that it  
looks like dual core to the OS.  There's an information panel in  
Windows that shows the current CPU utilization, just have a look  
there.  I'm sure you'll see two CPUs, with one being at 100% load.

Cheers,
	Guido

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2436 bytes
Desc: not available
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20081029/2caeda1c/attachment.bin>

From chaosangel at gmx.de  Wed Oct 29 16:12:20 2008
From: chaosangel at gmx.de (Max)
Date: Wed, 29 Oct 2008 16:12:20 +0100
Subject: [gecode-users] global operator<<
Message-ID: <49087D54.2080302@gmx.de>

So, i'm not that experienced with dependent name lookup, so i asked a 
more experienced developer i know and he told me that your operator 
implementation is wrong.


I tried to print some results using

IntVarArray x;
std::cout << x;

In my test application it works, in my real application i do get an 
error that he can not find the operator for that type, or even worse, 
can not convert Gecode::IntVarArray to some of my types.

The problem is, that your operators are defined in global namespace. He 
send me a little example:

namespace XY {
  struct Bar {};
  std::ostream& operator<<(std::ostream& os, Bar&);
  void f() {
    Bar b;
    Clasp::Literal l;
    Gcode::Foo f;
    std::cout << b << std::endl; // 1. OK
    std::cout << l << std::endl; // 2. OK, ADL!
    std::cout << f << std::endl; // 3. Error!
  }
}

The first call is ok, trivial.
The second call is ok, because the operator<< for Clasp::Literal is 
defined in namespace Clasp, so argument dependent lookup finds the operator.
The third version throws an error, cannot convert from Gecode::Foo to 
XY::Bar because the namespace XY already has an operator, the global 
namespace is not searched for. ADL does not find the operator in 
namespace Gecode.


So, i hope everything is right i just said. Maybe you could move your 
operators to the gecode namespace, otherwise i would have to write
::operator<<(std::cout, myIntVar);

Thanks
Max



From Farshid.Hassani_Bijarbooneh.5391 at student.uu.se  Wed Oct 29 18:38:57 2008
From: Farshid.Hassani_Bijarbooneh.5391 at student.uu.se (Farshid Hassani bijarbooneh)
Date: Wed, 29 Oct 2008 18:38:57 +0100
Subject: [gecode-users] low cpu utilization
In-Reply-To: <AAEDF732-2BE3-403D-88A6-65ED4E3AF4C0@ps.uni-sb.de>
References: <20081028235252.twfpri68f4gs4sso@webmail6.uu.se>
	<63b5c8b00810282311k272f42f5v3139d964a3f5c7a5@mail.gmail.com>
	<20081029135631.p88om1dyz4cgcco0@webmail6.uu.se>
	<AAEDF732-2BE3-403D-88A6-65ED4E3AF4C0@ps.uni-sb.de>
Message-ID: <20081029183857.w3c3iesbw4sk88go@webmail6.uu.se>

Quoting Guido Tack <tack at ps.uni-sb.de>:

> Farshid Hassani bijarbooneh wrote:
>
>> I also tried with Intel Pentium 4 2.8GHz which I'm sure is single  core.
>
> It's single core, but it uses hyper threading, which means that it
> looks like dual core to the OS.  There's an information panel in
> Windows that shows the current CPU utilization, just have a look
> there.  I'm sure you'll see two CPUs, with one being at 100% load.
Thanks, I tried to set the affinity to one of the CPUs and now i can  
see that it really pushes that core to %100. I hope we will have the  
multi-core support in the next releases of Gecode.

Cheers,
Farshid
>
> Cheers,
> 	Guido






From cschulte at kth.se  Thu Oct 30 12:01:36 2008
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 30 Oct 2008 12:01:36 +0100
Subject: [gecode-users] Reporting memory usage
In-Reply-To: <e7b0e5a40810290119h5566c2e5rd812de02e1054d6a@mail.gmail.com>
References: <e7b0e5a40810280946v6bc84068i85fcee537d02d126@mail.gmail.com>	<004801c93921$653e8570$2fbb9050$@se>
	<e7b0e5a40810290119h5566c2e5rd812de02e1054d6a@mail.gmail.com>
Message-ID: <000f01c93a7e$e1c898c0$a559ca40$@se>

Hi,

 

The only reason to allocate globally and not from a space is if the allocated entities are shared among several spaces. That's the case for complete set variables as they use BDDs that might indeed be shared across spaces.

 

Unless you share across spaces you should always allocate from a space, it's much faster (an deallocation is automatic as soon as the space gets deleted)! But in any case, make sure that you do not leak memory

 

Cheers

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Gustavo Gutierrez
Sent: Wednesday, October 29, 2008 9:19 AM
To: Christian Schulte
Cc: gecode at gecode.org
Subject: Re: [gecode-users] Reporting memory usage

 

 

On Tue, Oct 28, 2008 at 6:19 PM, Christian Schulte <cschulte at kth.se> wrote:

Hi,

 

Damn that's missing in Gecode. A space takes into account what external memory is allocated by propagators and branchings but not by variables.

 

It will also not be that straightforward (I would have to think a little) as a space does not maintain a list of all variables (in contrast to propagators and branchings). 

 

Is it very important? If yes, we could try to come up with something and add it for 3.0.

It would be nice and useful to have it but of course we can use some workaround:  what we can do for now is to use some bash scripting to measure the memory allocated by an specific process, unfortunately this is not so standard from one operating system to another.

 

 

 

What do you do right now? Do you use the same memory management support for variables that is also used by the complete set variables?

If i remember correctly, cpltset variables use an external library in the buddy folder and use a disposer to free the memory allocated by additional data structures. We are doing that right now. We are trying to use boost libraries for our implementation and fortunately those libraries provide a way to parametrize the allocator. The other possibility will be to use an allocator that allocates memory from the gecode heap and *never* deallocate it (this is because gecode memory manager takes care of that (am i right?). Can you recommend or comment on the advantages of one approach over the other?

 

Regards,

Gustavo

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20081030/caacf7cc/attachment.htm>

From cschulte at kth.se  Thu Oct 30 12:05:08 2008
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 30 Oct 2008 12:05:08 +0100
Subject: [gecode-users] Generating constraints
In-Reply-To: <49083A17.8060908@gmx.de>
References: <4906FE5E.4070302@gmx.de>	<63b5c8b00810280526r6a15b738lba8e0cefa1ba2f28@mail.gmail.com>	<49070BD9.7090005@gmx.de>
	<001501c938fe$a5432720$efc97560$@se> <49083A17.8060908@gmx.de>
Message-ID: <001d01c93a7f$5f30c8a0$1d9259e0$@se>

Please do the following: familiarize yourself somehwat with what constraints
Gecode actually implements. That's well documented. Look to the examples
that come with Gecode.

Then, creating additional integer variables that are just constants is no
problem, the constants will be eliminated automatically if possible.

Then, what is more important (and that was what I referred to in my previous
email): make sure that you do not decompose a constraint into several
smaller constraints if not necessary. That is, you have to read how linear
works as opposed to plus and minus.

Cheers
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: Max [mailto:chaosangel at gmx.de] 
Sent: Wednesday, October 29, 2008 11:25 AM
To: Christian Schulte
Cc: 'Mikael Zayenz Lagerkvist'; users at gecode.org; Guido Tack
Subject: Re: [gecode-users] Generating constraints

I habe a little problem now with the operators.
Now i do not want to use the minimodel part und tried to convert my tree 
the long/boring way.
There is a little problem, all arithmetic functions seem to be 
implemented for variables only.
So  plus(this, v1,v2); is ok, but  plus(this, 5,v2); or plus(this, 
v1,5); is not.
Now Guido Tack somewhen wrote:

div(this, x0, x1, IntVar(this, 42, 42));
There's no specialized version for constant integers (yet).


But as i wanted to do something similiar, Christian Schulte answered:

Yes, it is even worse: it sacrifices propagation! 


So how can i post constants, not using minimodel. Is this the right way 
? (IntVar(this, 42,42))

Mfg
Max





Christian Schulte wrote:
> Yes, it is even worse: it sacrifices propagation! 
>
> If you need to get started look to the code that posts propagators based
on
> LinExpr and LinRel values. That is actually nothing but a tree analyzer
> posting the minimal number of required propagators for linear relations.
>
> Cheers
> Christian
>
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
>
>
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Max
> Sent: Tuesday, October 28, 2008 1:56 PM
> To: Mikael Zayenz Lagerkvist
> Cc: users at gecode.org
> Subject: Re: [gecode-users] Generating constraints
>
> I have no problem in writing a tree analyzer but i looked for a uniform 
> representation of the variables, operators, relations and constants, so 
> i do not have to write an extra function for all of them.
> I want to write
>
> recursive_function_call rfc(X):
> IntVar temp;
> //switch for operator
> add(rfc(x1), ADD, rfc(x2), temp);
> return temp;
>
> I don't want to distinguish the leafs of the node at this step. So i 
> need a uniform return value.
> PS: Does it influence the performance if i use temporary variables for 
> my constants.
>
> IntVar x(this, 5,5);
>
>
>
>
> Mikael Zayenz Lagerkvist wrote:
>   
>> Hi,
>>
>> If you have a tree representing an expression, then you should write a
>> tree-analyzer (a tree-walker for example) that posts constraints that
>> correspond to the tree. This is how the linear expressions in Gecodes
>> MiniModel works. For more information on writing tree analyzers, see a
>> compiler text as it corresponds to instruction selection.
>>
>> There is no way to undo a tell - you have to copy the space.
>>
>> Cheers,
>> Mikael
>>
>>
>> On Tue, Oct 28, 2008 at 12:58 PM, Max <chaosangel at gmx.de> wrote:
>>   
>>     
>>> Hello all,
>>>
>>> i currently try to post constraints and need your help.
>>> I have my constraints not in a textual format, but in a self made tree
>>> structure of the form
>>>
>>>
>>>                              rel">="
>>>                             /         \
>>>                           op+      const=5
>>>                        /       \
>>>                var=x       const=7
>>>
>>>
>>> (i hope this is readable)
>>>
>>> Now i want to generate and post a gecode constraint of it.
>>> Is there an easy way to recursivly define a constraint, because it seems
>>> to me that there is no baseclass or something that can be used.
>>>
>>> I wanted to to something of the form
>>>
>>> GeCodeConstraint recursive_converter(MyConstraint)
>>> {
>>>       if "variable" return x;
>>>       if "constant" return 5;
>>>       if "op+" return recursive_converter(left_node) +
>>> recursive_converter(right_node);
>>>       if "rel>=" return recursive_converter(left_node) >=
>>> recursive_converter(right_node);
>>> }
>>>
>>>
>>> I i found for GeCodeConstraint was MiniModel::LinRel<>, is there
>>> something more uniform, because i want to use boolean and integer
>>> variables (reified constraints) and stuff.
>>> (the arithmetic functions seem very generic returning a variable, but
>>> then a lot of extra variables would have to be generated)
>>>
>>>
>>> Any ideas ?
>>>
>>> 2nd question:
>>>
>>> Is there a way to post the value of a variable not in form of a
>>> constraint, so "branch" on a boolean variable but being able to undo it
>>>       
> so
>   
>>> so
>>> b[0].set(0);
>>> //after some time
>>> b[0].set(1);
>>>
>>> without copying the whole space?
>>>
>>> Thank you a lot.
>>>
>>> Max
>>>
>>> _______________________________________________
>>> Gecode users mailing list
>>> users at gecode.org
>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>>
>>>     
>>>       
>>
>>   
>>     
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>   





From ggutierrez at atlas.puj.edu.co  Thu Oct 30 12:10:09 2008
From: ggutierrez at atlas.puj.edu.co (Gustavo Gutierrez)
Date: Thu, 30 Oct 2008 12:10:09 +0100
Subject: [gecode-users] Reporting memory usage
In-Reply-To: <000f01c93a7e$e1c898c0$a559ca40$@se>
References: <e7b0e5a40810280946v6bc84068i85fcee537d02d126@mail.gmail.com>
	<004801c93921$653e8570$2fbb9050$@se>
	<e7b0e5a40810290119h5566c2e5rd812de02e1054d6a@mail.gmail.com>
	<000f01c93a7e$e1c898c0$a559ca40$@se>
Message-ID: <e7b0e5a40810300410q463aad18q81c0c41bf7cc49c2@mail.gmail.com>

On Thu, Oct 30, 2008 at 12:01 PM, Christian Schulte <cschulte at kth.se> wrote:

>  Hi,
>
>
>
> The only reason to allocate globally and not from a space is if the
> allocated entities are shared among several spaces. That's the case for
> complete set variables as they use BDDs that might indeed be shared across
> spaces.
>

It is also our case, in which a graph variable is partially represented by a
boost graph which is shared among spaces. If i understand you correctly
there is a way to allocate memory from the space and another one to allocate
memory from a "global" heap (still managed by gecode). Is this right?, or
when you talk about allocate globally you mean allocate from the operating
system?.


Regards,
Gustavo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20081030/8d355a6e/attachment.htm>

From cschulte at kth.se  Thu Oct 30 12:06:05 2008
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 30 Oct 2008 12:06:05 +0100
Subject: [gecode-users] global operator<<
In-Reply-To: <49087D54.2080302@gmx.de>
References: <49087D54.2080302@gmx.de>
Message-ID: <002301c93a7f$815d6910$84183b30$@se>

Thanks for the info, we'll check and fix it if needed for 3.0.

Thanks
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Max
Sent: Wednesday, October 29, 2008 4:12 PM
To: users at gecode.org
Subject: [gecode-users] global operator<<

So, i'm not that experienced with dependent name lookup, so i asked a 
more experienced developer i know and he told me that your operator 
implementation is wrong.


I tried to print some results using

IntVarArray x;
std::cout << x;

In my test application it works, in my real application i do get an 
error that he can not find the operator for that type, or even worse, 
can not convert Gecode::IntVarArray to some of my types.

The problem is, that your operators are defined in global namespace. He 
send me a little example:

namespace XY {
  struct Bar {};
  std::ostream& operator<<(std::ostream& os, Bar&);
  void f() {
    Bar b;
    Clasp::Literal l;
    Gcode::Foo f;
    std::cout << b << std::endl; // 1. OK
    std::cout << l << std::endl; // 2. OK, ADL!
    std::cout << f << std::endl; // 3. Error!
  }
}

The first call is ok, trivial.
The second call is ok, because the operator<< for Clasp::Literal is 
defined in namespace Clasp, so argument dependent lookup finds the operator.
The third version throws an error, cannot convert from Gecode::Foo to 
XY::Bar because the namespace XY already has an operator, the global 
namespace is not searched for. ADL does not find the operator in 
namespace Gecode.


So, i hope everything is right i just said. Maybe you could move your 
operators to the gecode namespace, otherwise i would have to write
::operator<<(std::cout, myIntVar);

Thanks
Max

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From filip.konvicka at logis.cz  Thu Oct 30 12:32:38 2008
From: filip.konvicka at logis.cz (=?UTF-8?B?RmlsaXAgS29udmnEjWth?=)
Date: Thu, 30 Oct 2008 12:32:38 +0100
Subject: [gecode-users] Reporting memory usage
In-Reply-To: <000f01c93a7e$e1c898c0$a559ca40$@se>
References: <e7b0e5a40810280946v6bc84068i85fcee537d02d126@mail.gmail.com>	<004801c93921$653e8570$2fbb9050$@se>	<e7b0e5a40810290119h5566c2e5rd812de02e1054d6a@mail.gmail.com>
	<000f01c93a7e$e1c898c0$a559ca40$@se>
Message-ID: <gec60p$1tr$1@ger.gmane.org>

Hi Christian,

actually this has been on my todo list for some time: I tend to use stl 
containers here and there in my branchings, so the nice thing here would 
be providing some allocators that allocate from space memory, which 
would enable us to use things like std::set, std::unordered_set etc. 
without hassle. Another nice thing is that I would no longer need to 
enforce calling destructors of members manually in "dispose()". I'll 
take a look at the space memory API to see whether it's possible.

Cheers,
Filip

> Hi,
> 
>  
> 
> The only reason to allocate globally and not from a space is if the 
> allocated entities are shared among several spaces. That's the case for 
> complete set variables as they use BDDs that might indeed be shared 
> across spaces.
> 
>  
> 
> Unless you share across spaces you should always allocate from a space, 
> it's much faster (an deallocation is automatic as soon as the space gets 
> deleted)! But in any case, make sure that you do not leak memory
> 
>  
> 
> Cheers
> 
> Christian
> 
>  
> 
> --
> 
> Christian Schulte, www.ict.kth.se/~cschulte/
> 
>  
> 
> *From:* users-bounces at gecode.org 
> [mailto:users-bounces at gecode.org] *On 
> Behalf Of *Gustavo Gutierrez
> *Sent:* Wednesday, October 29, 2008 9:19 AM
> *To:* Christian Schulte
> *Cc:* gecode at gecode.org
> *Subject:* Re: [gecode-users] Reporting memory usage
> 
>  
> 
>  
> 
> On Tue, Oct 28, 2008 at 6:19 PM, Christian Schulte 
> <cschulte at kth.se 
> <mailto:cschulte at kth.se>> wrote:
> 
> Hi,
> 
>  
> 
> Damn that's missing in Gecode. A space takes into account what external 
> memory is allocated by propagators and branchings but not by variables.
> 
>  
> 
> It will also not be that straightforward (I would have to think a 
> little) as a space does not maintain a list of all variables (in 
> contrast to propagators and branchings). 
> 
>      
> 
>     Is it very important? If yes, we could try to come up with something
>     and add it for 3.0.
> 
> It would be nice and useful to have it but of course we can use some 
> workaround:  what we can do for now is to use some bash scripting to 
> measure the memory allocated by an specific process, unfortunately this 
> is not so standard from one operating system to another.
> 
>  
> 
>  
> 
>  
> 
>     What do you do right now? Do you use the same memory management
>     support for variables that is also used by the complete set variables?
> 
> If i remember correctly, cpltset variables use an external library in 
> the buddy folder and use a disposer to free the memory allocated by 
> additional data structures. We are doing that right now. We are trying 
> to use boost libraries for our implementation and fortunately those 
> libraries provide a way to parametrize the allocator. The other 
> possibility will be to use an allocator that allocates memory from the 
> gecode heap and *never* deallocate it (this is because gecode memory 
> manager takes care of that (am i right?). Can you recommend or comment 
> on the advantages of one approach over the other?
> 
>  
> 
> Regards,
> 
> Gustavo
> 
>  
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users




From chaosangel at gmx.de  Thu Oct 30 13:21:05 2008
From: chaosangel at gmx.de (Max)
Date: Thu, 30 Oct 2008 13:21:05 +0100
Subject: [gecode-users] Generating constraints
In-Reply-To: <001d01c93a7f$5f30c8a0$1d9259e0$@se>
References: <4906FE5E.4070302@gmx.de>	<63b5c8b00810280526r6a15b738lba8e0cefa1ba2f28@mail.gmail.com>	<49070BD9.7090005@gmx.de>
	<001501c938fe$a5432720$efc97560$@se> <49083A17.8060908@gmx.de>
	<001d01c93a7f$5f30c8a0$1d9259e0$@se>
Message-ID: <4909A6B1.30501@gmx.de>

Christian Schulte wrote:
> Please do the following: familiarize yourself somehwat with what constraints
> Gecode actually implements. That's well documented. Look to the examples
> that come with Gecode.
>
> Then, creating additional integer variables that are just constants is no
> problem, the constants will be eliminated automatically if possible.
>   
Thank you, that is the way i i hoped it works. So i can set my 
constraints now.
> Then, what is more important (and that was what I referred to in my previous
> email): make sure that you do not decompose a constraint into several
> smaller constraints if not necessary. That is, you have to read how linear
> works as opposed to plus and minus.
>   
As i understand linear, it works for polynomials and operations over 
arrays of variables.
But i do not choose the constraints by myself, its more kind of an 
interpreter, as in Prolog, you write:

A=B+C.
B=C*D-15.
C::12..42.
B-D > C.

Some kind of this stuff, so i don't see the possibility to integrate 
linear's(and i do not want to search for them anaylzing the constraints).
Maybe in a later point of time i could use linear constraints in the 
input language if they are helpful, so time can be modelled as in.

timesteps(1..n).

timestep(X) #< timestep(X+1);

So far, thanks for your great help. I hope the normal arithmetic 
constraints are not too slow, but more important is that everything 
works fine.

Mfg
Max
> Cheers
> Christian
>
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
>
>
> -----Original Message-----
> From: Max [mailto:chaosangel at gmx.de] 
> Sent: Wednesday, October 29, 2008 11:25 AM
> To: Christian Schulte
> Cc: 'Mikael Zayenz Lagerkvist'; users at gecode.org; Guido Tack
> Subject: Re: [gecode-users] Generating constraints
>
> I habe a little problem now with the operators.
> Now i do not want to use the minimodel part und tried to convert my tree 
> the long/boring way.
> There is a little problem, all arithmetic functions seem to be 
> implemented for variables only.
> So  plus(this, v1,v2); is ok, but  plus(this, 5,v2); or plus(this, 
> v1,5); is not.
> Now Guido Tack somewhen wrote:
>
> div(this, x0, x1, IntVar(this, 42, 42));
> There's no specialized version for constant integers (yet).
>
>
> But as i wanted to do something similiar, Christian Schulte answered:
>
> Yes, it is even worse: it sacrifices propagation! 
>
>
> So how can i post constants, not using minimodel. Is this the right way 
> ? (IntVar(this, 42,42))
>
> Mfg
> Max
>
>
>
>
>
> Christian Schulte wrote:
>   
>> Yes, it is even worse: it sacrifices propagation! 
>>
>> If you need to get started look to the code that posts propagators based
>>     
> on
>   
>> LinExpr and LinRel values. That is actually nothing but a tree analyzer
>> posting the minimal number of required propagators for linear relations.
>>
>> Cheers
>> Christian
>>
>> --
>> Christian Schulte, www.ict.kth.se/~cschulte/
>>
>>
>> -----Original Message-----
>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
>> Of Max
>> Sent: Tuesday, October 28, 2008 1:56 PM
>> To: Mikael Zayenz Lagerkvist
>> Cc: users at gecode.org
>> Subject: Re: [gecode-users] Generating constraints
>>
>> I have no problem in writing a tree analyzer but i looked for a uniform 
>> representation of the variables, operators, relations and constants, so 
>> i do not have to write an extra function for all of them.
>> I want to write
>>
>> recursive_function_call rfc(X):
>> IntVar temp;
>> //switch for operator
>> add(rfc(x1), ADD, rfc(x2), temp);
>> return temp;
>>
>> I don't want to distinguish the leafs of the node at this step. So i 
>> need a uniform return value.
>> PS: Does it influence the performance if i use temporary variables for 
>> my constants.
>>
>> IntVar x(this, 5,5);
>>
>>
>>
>>
>> Mikael Zayenz Lagerkvist wrote:
>>   
>>     
>>> Hi,
>>>
>>> If you have a tree representing an expression, then you should write a
>>> tree-analyzer (a tree-walker for example) that posts constraints that
>>> correspond to the tree. This is how the linear expressions in Gecodes
>>> MiniModel works. For more information on writing tree analyzers, see a
>>> compiler text as it corresponds to instruction selection.
>>>
>>> There is no way to undo a tell - you have to copy the space.
>>>
>>> Cheers,
>>> Mikael
>>>
>>>
>>> On Tue, Oct 28, 2008 at 12:58 PM, Max <chaosangel at gmx.de> wrote:
>>>   
>>>     
>>>       
>>>> Hello all,
>>>>
>>>> i currently try to post constraints and need your help.
>>>> I have my constraints not in a textual format, but in a self made tree
>>>> structure of the form
>>>>
>>>>
>>>>                              rel">="
>>>>                             /         \
>>>>                           op+      const=5
>>>>                        /       \
>>>>                var=x       const=7
>>>>
>>>>
>>>> (i hope this is readable)
>>>>
>>>> Now i want to generate and post a gecode constraint of it.
>>>> Is there an easy way to recursivly define a constraint, because it seems
>>>> to me that there is no baseclass or something that can be used.
>>>>
>>>> I wanted to to something of the form
>>>>
>>>> GeCodeConstraint recursive_converter(MyConstraint)
>>>> {
>>>>       if "variable" return x;
>>>>       if "constant" return 5;
>>>>       if "op+" return recursive_converter(left_node) +
>>>> recursive_converter(right_node);
>>>>       if "rel>=" return recursive_converter(left_node) >=
>>>> recursive_converter(right_node);
>>>> }
>>>>
>>>>
>>>> I i found for GeCodeConstraint was MiniModel::LinRel<>, is there
>>>> something more uniform, because i want to use boolean and integer
>>>> variables (reified constraints) and stuff.
>>>> (the arithmetic functions seem very generic returning a variable, but
>>>> then a lot of extra variables would have to be generated)
>>>>
>>>>
>>>> Any ideas ?
>>>>
>>>> 2nd question:
>>>>
>>>> Is there a way to post the value of a variable not in form of a
>>>> constraint, so "branch" on a boolean variable but being able to undo it
>>>>       
>>>>         
>> so
>>   
>>     
>>>> so
>>>> b[0].set(0);
>>>> //after some time
>>>> b[0].set(1);
>>>>
>>>> without copying the whole space?
>>>>
>>>> Thank you a lot.
>>>>
>>>> Max
>>>>
>>>> _______________________________________________
>>>> Gecode users mailing list
>>>> users at gecode.org
>>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>>>
>>>>     
>>>>       
>>>>         
>>>   
>>>     
>>>       
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
>>   
>>     
>
>
>   




From cschulte at kth.se  Thu Oct 30 12:05:34 2008
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 30 Oct 2008 12:05:34 +0100
Subject: [gecode-users] Generating constraints
In-Reply-To: <49083C48.2070802@gmx.de>
References: <4906FE5E.4070302@gmx.de>	<63b5c8b00810280526r6a15b738lba8e0cefa1ba2f28@mail.gmail.com>	<49070BD9.7090005@gmx.de>	<001501c938fe$a5432720$efc97560$@se>
	<49083A17.8060908@gmx.de> <49083C48.2070802@gmx.de>
Message-ID: <002001c93a7f$6eac6820$4c053860$@se>

As said, check the docs.

Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: Max [mailto:chaosangel at gmx.de] 
Sent: Wednesday, October 29, 2008 11:35 AM
To: Christian Schulte
Cc: Guido Tack; 'Mikael Zayenz Lagerkvist'; users at gecode.org
Subject: Re: [gecode-users] Generating constraints

Sorry, it seems to me that i used minimodel functions or direct 
modellling or something.
How can i distinguish the function Gecode::plus/2IntVar from 
Gecode::plus/3IntVar and what is the difference.
And there exists no version of div returning an IntVar.
Mfg
Max

Max wrote:
> I habe a little problem now with the operators.
> Now i do not want to use the minimodel part und tried to convert my tree 
> the long/boring way.
> There is a little problem, all arithmetic functions seem to be 
> implemented for variables only.
> So  plus(this, v1,v2); is ok, but  plus(this, 5,v2); or plus(this, 
> v1,5); is not.
> Now Guido Tack somewhen wrote:
>
> div(this, x0, x1, IntVar(this, 42, 42));
> There's no specialized version for constant integers (yet).
>
>
> But as i wanted to do something similiar, Christian Schulte answered:
>
> Yes, it is even worse: it sacrifices propagation! 
>
>
> So how can i post constants, not using minimodel. Is this the right way 
> ? (IntVar(this, 42,42))
>
> Mfg
> Max
>
>
>
>
>
> Christian Schulte wrote:
>   
>> Yes, it is even worse: it sacrifices propagation! 
>>
>> If you need to get started look to the code that posts propagators based
on
>> LinExpr and LinRel values. That is actually nothing but a tree analyzer
>> posting the minimal number of required propagators for linear relations.
>>
>> Cheers
>> Christian
>>
>> --
>> Christian Schulte, www.ict.kth.se/~cschulte/
>>
>>
>> -----Original Message-----
>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On
Behalf
>> Of Max
>> Sent: Tuesday, October 28, 2008 1:56 PM
>> To: Mikael Zayenz Lagerkvist
>> Cc: users at gecode.org
>> Subject: Re: [gecode-users] Generating constraints
>>
>> I have no problem in writing a tree analyzer but i looked for a uniform 
>> representation of the variables, operators, relations and constants, so 
>> i do not have to write an extra function for all of them.
>> I want to write
>>
>> recursive_function_call rfc(X):
>> IntVar temp;
>> //switch for operator
>> add(rfc(x1), ADD, rfc(x2), temp);
>> return temp;
>>
>> I don't want to distinguish the leafs of the node at this step. So i 
>> need a uniform return value.
>> PS: Does it influence the performance if i use temporary variables for 
>> my constants.
>>
>> IntVar x(this, 5,5);
>>
>>
>>
>>
>> Mikael Zayenz Lagerkvist wrote:
>>   
>>     
>>> Hi,
>>>
>>> If you have a tree representing an expression, then you should write a
>>> tree-analyzer (a tree-walker for example) that posts constraints that
>>> correspond to the tree. This is how the linear expressions in Gecodes
>>> MiniModel works. For more information on writing tree analyzers, see a
>>> compiler text as it corresponds to instruction selection.
>>>
>>> There is no way to undo a tell - you have to copy the space.
>>>
>>> Cheers,
>>> Mikael
>>>
>>>
>>> On Tue, Oct 28, 2008 at 12:58 PM, Max <chaosangel at gmx.de> wrote:
>>>   
>>>     
>>>       
>>>> Hello all,
>>>>
>>>> i currently try to post constraints and need your help.
>>>> I have my constraints not in a textual format, but in a self made tree
>>>> structure of the form
>>>>
>>>>
>>>>                              rel">="
>>>>                             /         \
>>>>                           op+      const=5
>>>>                        /       \
>>>>                var=x       const=7
>>>>
>>>>
>>>> (i hope this is readable)
>>>>
>>>> Now i want to generate and post a gecode constraint of it.
>>>> Is there an easy way to recursivly define a constraint, because it
seems
>>>> to me that there is no baseclass or something that can be used.
>>>>
>>>> I wanted to to something of the form
>>>>
>>>> GeCodeConstraint recursive_converter(MyConstraint)
>>>> {
>>>>       if "variable" return x;
>>>>       if "constant" return 5;
>>>>       if "op+" return recursive_converter(left_node) +
>>>> recursive_converter(right_node);
>>>>       if "rel>=" return recursive_converter(left_node) >=
>>>> recursive_converter(right_node);
>>>> }
>>>>
>>>>
>>>> I i found for GeCodeConstraint was MiniModel::LinRel<>, is there
>>>> something more uniform, because i want to use boolean and integer
>>>> variables (reified constraints) and stuff.
>>>> (the arithmetic functions seem very generic returning a variable, but
>>>> then a lot of extra variables would have to be generated)
>>>>
>>>>
>>>> Any ideas ?
>>>>
>>>> 2nd question:
>>>>
>>>> Is there a way to post the value of a variable not in form of a
>>>> constraint, so "branch" on a boolean variable but being able to undo it
>>>>       
>>>>         
>> so
>>   
>>     
>>>> so
>>>> b[0].set(0);
>>>> //after some time
>>>> b[0].set(1);
>>>>
>>>> without copying the whole space?
>>>>
>>>> Thank you a lot.
>>>>
>>>> Max
>>>>
>>>> _______________________________________________
>>>> Gecode users mailing list
>>>> users at gecode.org
>>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>>>
>>>>     
>>>>       
>>>>         
>>>   
>>>     
>>>       
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
>>   
>>     
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>   





From cschulte at kth.se  Thu Oct 30 13:30:08 2008
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 30 Oct 2008 13:30:08 +0100
Subject: [gecode-users] Reporting memory usage
In-Reply-To: <e7b0e5a40810300410q463aad18q81c0c41bf7cc49c2@mail.gmail.com>
References: <e7b0e5a40810280946v6bc84068i85fcee537d02d126@mail.gmail.com>	
	<004801c93921$653e8570$2fbb9050$@se>	
	<e7b0e5a40810290119h5566c2e5rd812de02e1054d6a@mail.gmail.com>	
	<000f01c93a7e$e1c898c0$a559ca40$@se>
	<e7b0e5a40810300410q463aad18q81c0c41bf7cc49c2@mail.gmail.com>
Message-ID: <002901c93a8b$3fafc9c0$bf0f5d40$@se>

Globally can be whatever you fancy! So, typically via malloc or new. Gecode is very liberal (it is not Mozart ;-) )

 

Cheers

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: gustavo.ggutierrez at gmail.com [mailto:gustavo.ggutierrez at gmail.com] On Behalf Of Gustavo Gutierrez
Sent: Thursday, October 30, 2008 12:10 PM
To: Christian Schulte
Cc: gecode at gecode.org
Subject: Re: [gecode-users] Reporting memory usage

 

 

On Thu, Oct 30, 2008 at 12:01 PM, Christian Schulte <cschulte at kth.se> wrote:

Hi,

 

The only reason to allocate globally and not from a space is if the allocated entities are shared among several spaces. That's the case for complete set variables as they use BDDs that might indeed be shared across spaces.

 

It is also our case, in which a graph variable is partially represented by a boost graph which is shared among spaces. If i understand you correctly there is a way to allocate memory from the space and another one to allocate memory from a "global" heap (still managed by gecode). Is this right?, or when you talk about allocate globally you mean allocate from the operating system?.

 

 

Regards,

Gustavo

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20081030/073348f9/attachment.htm>

From cschulte at kth.se  Thu Oct 30 14:22:02 2008
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 30 Oct 2008 14:22:02 +0100
Subject: [gecode-users] Generating constraints
In-Reply-To: <4909A6B1.30501@gmx.de>
References: <4906FE5E.4070302@gmx.de>	<63b5c8b00810280526r6a15b738lba8e0cefa1ba2f28@mail.gmail.com>	<49070BD9.7090005@gmx.de>
	<001501c938fe$a5432720$efc97560$@se> <49083A17.8060908@gmx.de>
	<001d01c93a7f$5f30c8a0$1d9259e0$@se> <4909A6B1.30501@gmx.de>
Message-ID: <004601c93a92$7f29c590$7d7d50b0$@se>

Linear works for linear equations. A polynomial is something completely
different.

Then, as said earlier the way how to post linear constraints from nested
linear expressions you can find in minimodel.

Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: Max [mailto:chaosangel at gmx.de] 
Sent: Thursday, October 30, 2008 1:21 PM
To: Christian Schulte
Cc: 'Mikael Zayenz Lagerkvist'; users at gecode.org; 'Guido Tack'
Subject: Re: [gecode-users] Generating constraints

Christian Schulte wrote:
> Please do the following: familiarize yourself somehwat with what
constraints
> Gecode actually implements. That's well documented. Look to the examples
> that come with Gecode.
>
> Then, creating additional integer variables that are just constants is no
> problem, the constants will be eliminated automatically if possible.
>   
Thank you, that is the way i i hoped it works. So i can set my 
constraints now.
> Then, what is more important (and that was what I referred to in my
previous
> email): make sure that you do not decompose a constraint into several
> smaller constraints if not necessary. That is, you have to read how linear
> works as opposed to plus and minus.
>   
As i understand linear, it works for polynomials and operations over 
arrays of variables.
But i do not choose the constraints by myself, its more kind of an 
interpreter, as in Prolog, you write:

A=B+C.
B=C*D-15.
C::12..42.
B-D > C.

Some kind of this stuff, so i don't see the possibility to integrate 
linear's(and i do not want to search for them anaylzing the constraints).
Maybe in a later point of time i could use linear constraints in the 
input language if they are helpful, so time can be modelled as in.

timesteps(1..n).

timestep(X) #< timestep(X+1);

So far, thanks for your great help. I hope the normal arithmetic 
constraints are not too slow, but more important is that everything 
works fine.

Mfg
Max
> Cheers
> Christian
>
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
>
>
> -----Original Message-----
> From: Max [mailto:chaosangel at gmx.de] 
> Sent: Wednesday, October 29, 2008 11:25 AM
> To: Christian Schulte
> Cc: 'Mikael Zayenz Lagerkvist'; users at gecode.org; Guido Tack
> Subject: Re: [gecode-users] Generating constraints
>
> I habe a little problem now with the operators.
> Now i do not want to use the minimodel part und tried to convert my tree 
> the long/boring way.
> There is a little problem, all arithmetic functions seem to be 
> implemented for variables only.
> So  plus(this, v1,v2); is ok, but  plus(this, 5,v2); or plus(this, 
> v1,5); is not.
> Now Guido Tack somewhen wrote:
>
> div(this, x0, x1, IntVar(this, 42, 42));
> There's no specialized version for constant integers (yet).
>
>
> But as i wanted to do something similiar, Christian Schulte answered:
>
> Yes, it is even worse: it sacrifices propagation! 
>
>
> So how can i post constants, not using minimodel. Is this the right way 
> ? (IntVar(this, 42,42))
>
> Mfg
> Max
>
>
>
>
>
> Christian Schulte wrote:
>   
>> Yes, it is even worse: it sacrifices propagation! 
>>
>> If you need to get started look to the code that posts propagators based
>>     
> on
>   
>> LinExpr and LinRel values. That is actually nothing but a tree analyzer
>> posting the minimal number of required propagators for linear relations.
>>
>> Cheers
>> Christian
>>
>> --
>> Christian Schulte, www.ict.kth.se/~cschulte/
>>
>>
>> -----Original Message-----
>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On
Behalf
>> Of Max
>> Sent: Tuesday, October 28, 2008 1:56 PM
>> To: Mikael Zayenz Lagerkvist
>> Cc: users at gecode.org
>> Subject: Re: [gecode-users] Generating constraints
>>
>> I have no problem in writing a tree analyzer but i looked for a uniform 
>> representation of the variables, operators, relations and constants, so 
>> i do not have to write an extra function for all of them.
>> I want to write
>>
>> recursive_function_call rfc(X):
>> IntVar temp;
>> //switch for operator
>> add(rfc(x1), ADD, rfc(x2), temp);
>> return temp;
>>
>> I don't want to distinguish the leafs of the node at this step. So i 
>> need a uniform return value.
>> PS: Does it influence the performance if i use temporary variables for 
>> my constants.
>>
>> IntVar x(this, 5,5);
>>
>>
>>
>>
>> Mikael Zayenz Lagerkvist wrote:
>>   
>>     
>>> Hi,
>>>
>>> If you have a tree representing an expression, then you should write a
>>> tree-analyzer (a tree-walker for example) that posts constraints that
>>> correspond to the tree. This is how the linear expressions in Gecodes
>>> MiniModel works. For more information on writing tree analyzers, see a
>>> compiler text as it corresponds to instruction selection.
>>>
>>> There is no way to undo a tell - you have to copy the space.
>>>
>>> Cheers,
>>> Mikael
>>>
>>>
>>> On Tue, Oct 28, 2008 at 12:58 PM, Max <chaosangel at gmx.de> wrote:
>>>   
>>>     
>>>       
>>>> Hello all,
>>>>
>>>> i currently try to post constraints and need your help.
>>>> I have my constraints not in a textual format, but in a self made tree
>>>> structure of the form
>>>>
>>>>
>>>>                              rel">="
>>>>                             /         \
>>>>                           op+      const=5
>>>>                        /       \
>>>>                var=x       const=7
>>>>
>>>>
>>>> (i hope this is readable)
>>>>
>>>> Now i want to generate and post a gecode constraint of it.
>>>> Is there an easy way to recursivly define a constraint, because it
seems
>>>> to me that there is no baseclass or something that can be used.
>>>>
>>>> I wanted to to something of the form
>>>>
>>>> GeCodeConstraint recursive_converter(MyConstraint)
>>>> {
>>>>       if "variable" return x;
>>>>       if "constant" return 5;
>>>>       if "op+" return recursive_converter(left_node) +
>>>> recursive_converter(right_node);
>>>>       if "rel>=" return recursive_converter(left_node) >=
>>>> recursive_converter(right_node);
>>>> }
>>>>
>>>>
>>>> I i found for GeCodeConstraint was MiniModel::LinRel<>, is there
>>>> something more uniform, because i want to use boolean and integer
>>>> variables (reified constraints) and stuff.
>>>> (the arithmetic functions seem very generic returning a variable, but
>>>> then a lot of extra variables would have to be generated)
>>>>
>>>>
>>>> Any ideas ?
>>>>
>>>> 2nd question:
>>>>
>>>> Is there a way to post the value of a variable not in form of a
>>>> constraint, so "branch" on a boolean variable but being able to undo it
>>>>       
>>>>         
>> so
>>   
>>     
>>>> so
>>>> b[0].set(0);
>>>> //after some time
>>>> b[0].set(1);
>>>>
>>>> without copying the whole space?
>>>>
>>>> Thank you a lot.
>>>>
>>>> Max
>>>>
>>>> _______________________________________________
>>>> Gecode users mailing list
>>>> users at gecode.org
>>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>>>
>>>>     
>>>>       
>>>>         
>>>   
>>>     
>>>       
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
>>   
>>     
>
>
>   





From cschulte at kth.se  Thu Oct 30 14:40:14 2008
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 30 Oct 2008 14:40:14 +0100
Subject: [gecode-users] Reporting memory usage
In-Reply-To: <gec60p$1tr$1@ger.gmane.org>
References: <e7b0e5a40810280946v6bc84068i85fcee537d02d126@mail.gmail.com>	<004801c93921$653e8570$2fbb9050$@se>	<e7b0e5a40810290119h5566c2e5rd812de02e1054d6a@mail.gmail.com>	<000f01c93a7e$e1c898c0$a559ca40$@se>
	<gec60p$1tr$1@ger.gmane.org>
Message-ID: <004901c93a95$0a4ee310$1eeca930$@se>

Hi Filip,

The API for memory allocation has changed a lot in 3.0.0: it is now very
C++-ish but it does not implement the interface from the standard library
(the design we chose is based what we need and what we can specialize well
for efficiency). Turning one into the other should be not hard though.

Er, that is to say: look in 3.0 rather than in 2.*...

Cheers
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Filip Konvicka
Sent: Thursday, October 30, 2008 12:33 PM
To: users at gecode.org
Subject: Re: [gecode-users] Reporting memory usage

Hi Christian,

actually this has been on my todo list for some time: I tend to use stl 
containers here and there in my branchings, so the nice thing here would 
be providing some allocators that allocate from space memory, which 
would enable us to use things like std::set, std::unordered_set etc. 
without hassle. Another nice thing is that I would no longer need to 
enforce calling destructors of members manually in "dispose()". I'll 
take a look at the space memory API to see whether it's possible.

Cheers,
Filip

> Hi,
> 
>  
> 
> The only reason to allocate globally and not from a space is if the 
> allocated entities are shared among several spaces. That's the case for 
> complete set variables as they use BDDs that might indeed be shared 
> across spaces.
> 
>  
> 
> Unless you share across spaces you should always allocate from a space, 
> it's much faster (an deallocation is automatic as soon as the space gets 
> deleted)! But in any case, make sure that you do not leak memory
> 
>  
> 
> Cheers
> 
> Christian
> 
>  
> 
> --
> 
> Christian Schulte, www.ict.kth.se/~cschulte/
> 
>  
> 
> *From:* users-bounces at gecode.org 
> [mailto:users-bounces at gecode.org] *On 
> Behalf Of *Gustavo Gutierrez
> *Sent:* Wednesday, October 29, 2008 9:19 AM
> *To:* Christian Schulte
> *Cc:* gecode at gecode.org
> *Subject:* Re: [gecode-users] Reporting memory usage
> 
>  
> 
>  
> 
> On Tue, Oct 28, 2008 at 6:19 PM, Christian Schulte 
> <cschulte at kth.se 
> <mailto:cschulte at kth.se>> wrote:
> 
> Hi,
> 
>  
> 
> Damn that's missing in Gecode. A space takes into account what external 
> memory is allocated by propagators and branchings but not by variables.
> 
>  
> 
> It will also not be that straightforward (I would have to think a 
> little) as a space does not maintain a list of all variables (in 
> contrast to propagators and branchings). 
> 
>      
> 
>     Is it very important? If yes, we could try to come up with something
>     and add it for 3.0.
> 
> It would be nice and useful to have it but of course we can use some 
> workaround:  what we can do for now is to use some bash scripting to 
> measure the memory allocated by an specific process, unfortunately this 
> is not so standard from one operating system to another.
> 
>  
> 
>  
> 
>  
> 
>     What do you do right now? Do you use the same memory management
>     support for variables that is also used by the complete set variables?
> 
> If i remember correctly, cpltset variables use an external library in 
> the buddy folder and use a disposer to free the memory allocated by 
> additional data structures. We are doing that right now. We are trying 
> to use boost libraries for our implementation and fortunately those 
> libraries provide a way to parametrize the allocator. The other 
> possibility will be to use an allocator that allocates memory from the 
> gecode heap and *never* deallocate it (this is because gecode memory 
> manager takes care of that (am i right?). Can you recommend or comment 
> on the advantages of one approach over the other?
> 
>  
> 
> Regards,
> 
> Gustavo
> 
>  
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From gutierrez.gustavo at uclouvain.be  Thu Oct 30 14:39:24 2008
From: gutierrez.gustavo at uclouvain.be (Gustavo Gutierrez)
Date: Thu, 30 Oct 2008 14:39:24 +0100
Subject: [gecode-users] Reporting memory usage
In-Reply-To: <gec60p$1tr$1@ger.gmane.org>
References: <e7b0e5a40810280946v6bc84068i85fcee537d02d126@mail.gmail.com>
	<004801c93921$653e8570$2fbb9050$@se>
	<e7b0e5a40810290119h5566c2e5rd812de02e1054d6a@mail.gmail.com>
	<000f01c93a7e$e1c898c0$a559ca40$@se> <gec60p$1tr$1@ger.gmane.org>
Message-ID: <e7b0e5a40810300639m1d6df9a9w9bf355bc4a94d78c@mail.gmail.com>

On Thu, Oct 30, 2008 at 12:32 PM, Filip Konvi?ka <filip.konvicka at logis.cz>wrote:

> Hi Christian,
>
> actually this has been on my todo list for some time: I tend to use stl
> containers here and there in my branchings, so the nice thing here would
> be providing some allocators that allocate from space memory, which
> would enable us to use things like std::set, std::unordered_set etc.
> without hassle. Another nice thing is that I would no longer need to
> enforce calling destructors of members manually in "dispose()". I'll
> take a look at the space memory API to see whether it's possible.
>

I agree, it would be nice to have such thing in gecode. I have been using an
implementation of such allocator (attached to this mail). It would be nice
if we can discuss and improve it. I got this implementation from St?phane
Zampelli.



Regards,
Gustavo


>
> Cheers,
> Filip
>
> > Hi,
> >
> >
> >
> > The only reason to allocate globally and not from a space is if the
> > allocated entities are shared among several spaces. That's the case for
> > complete set variables as they use BDDs that might indeed be shared
> > across spaces.
> >
> >
> >
> > Unless you share across spaces you should always allocate from a space,
> > it's much faster (an deallocation is automatic as soon as the space gets
> > deleted)! But in any case, make sure that you do not leak memory
> >
> >
> >
> > Cheers
> >
> > Christian
> >
> >
> >
> > --
> >
> > Christian Schulte, www.ict.kth.se/~cschulte/
> >
> >
> >
> > *From:* users-bounces at gecode.org
> > [mailto:users-bounces at gecode.org] *On
> > Behalf Of *Gustavo Gutierrez
> > *Sent:* Wednesday, October 29, 2008 9:19 AM
> > *To:* Christian Schulte
> > *Cc:* gecode at gecode.org
> > *Subject:* Re: [gecode-users] Reporting memory usage
> >
> >
> >
> >
> >
> > On Tue, Oct 28, 2008 at 6:19 PM, Christian Schulte
> > <cschulte at kth.se
> > <mailto:cschulte at kth.se>> wrote:
> >
> > Hi,
> >
> >
> >
> > Damn that's missing in Gecode. A space takes into account what external
> > memory is allocated by propagators and branchings but not by variables.
> >
> >
> >
> > It will also not be that straightforward (I would have to think a
> > little) as a space does not maintain a list of all variables (in
> > contrast to propagators and branchings).
> >
> >
> >
> >     Is it very important? If yes, we could try to come up with something
> >     and add it for 3.0.
> >
> > It would be nice and useful to have it but of course we can use some
> > workaround:  what we can do for now is to use some bash scripting to
> > measure the memory allocated by an specific process, unfortunately this
> > is not so standard from one operating system to another.
> >
> >
> >
> >
> >
> >
> >
> >     What do you do right now? Do you use the same memory management
> >     support for variables that is also used by the complete set
> variables?
> >
> > If i remember correctly, cpltset variables use an external library in
> > the buddy folder and use a disposer to free the memory allocated by
> > additional data structures. We are doing that right now. We are trying
> > to use boost libraries for our implementation and fortunately those
> > libraries provide a way to parametrize the allocator. The other
> > possibility will be to use an allocator that allocates memory from the
> > gecode heap and *never* deallocate it (this is because gecode memory
> > manager takes care of that (am i right?). Can you recommend or comment
> > on the advantages of one approach over the other?
> >
> >
> >
> > Regards,
> >
> > Gustavo
> >
> >
> >
> >
> > ------------------------------------------------------------------------
> >
> > _______________________________________________
> > Gecode users mailing list
> > users at gecode.org
> > https://www.gecode.org/mailman/listinfo/gecode-users
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>



-- 
Gustavo Gutierrez
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20081030/f1480ea4/attachment.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: gecode_to_stl_allocator.hh
Type: application/octet-stream
Size: 2179 bytes
Desc: not available
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20081030/f1480ea4/attachment.obj>

From cschulte at kth.se  Thu Oct 30 15:47:22 2008
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 30 Oct 2008 15:47:22 +0100
Subject: [gecode-users] global operator<<
In-Reply-To: <49087D54.2080302@gmx.de>
References: <49087D54.2080302@gmx.de>
Message-ID: <006601c93a9e$6e40e400$4ac2ac00$@se>

Indeed, will be fixed in 3.0.0.

Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Max
Sent: Wednesday, October 29, 2008 4:12 PM
To: users at gecode.org
Subject: [gecode-users] global operator<<

So, i'm not that experienced with dependent name lookup, so i asked a 
more experienced developer i know and he told me that your operator 
implementation is wrong.


I tried to print some results using

IntVarArray x;
std::cout << x;

In my test application it works, in my real application i do get an 
error that he can not find the operator for that type, or even worse, 
can not convert Gecode::IntVarArray to some of my types.

The problem is, that your operators are defined in global namespace. He 
send me a little example:

namespace XY {
  struct Bar {};
  std::ostream& operator<<(std::ostream& os, Bar&);
  void f() {
    Bar b;
    Clasp::Literal l;
    Gcode::Foo f;
    std::cout << b << std::endl; // 1. OK
    std::cout << l << std::endl; // 2. OK, ADL!
    std::cout << f << std::endl; // 3. Error!
  }
}

The first call is ok, trivial.
The second call is ok, because the operator<< for Clasp::Literal is 
defined in namespace Clasp, so argument dependent lookup finds the operator.
The third version throws an error, cannot convert from Gecode::Foo to 
XY::Bar because the namespace XY already has an operator, the global 
namespace is not searched for. ADL does not find the operator in 
namespace Gecode.


So, i hope everything is right i just said. Maybe you could move your 
operators to the gecode namespace, otherwise i would have to write
::operator<<(std::cout, myIntVar);

Thanks
Max

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From filip.konvicka at logis.cz  Thu Oct 30 15:55:46 2008
From: filip.konvicka at logis.cz (=?UTF-8?B?RmlsaXAgS29udmnEjWth?=)
Date: Thu, 30 Oct 2008 15:55:46 +0100
Subject: [gecode-users] Reporting memory usage
In-Reply-To: <e7b0e5a40810300639m1d6df9a9w9bf355bc4a94d78c@mail.gmail.com>
References: <e7b0e5a40810280946v6bc84068i85fcee537d02d126@mail.gmail.com>	<004801c93921$653e8570$2fbb9050$@se>	<e7b0e5a40810290119h5566c2e5rd812de02e1054d6a@mail.gmail.com>	<000f01c93a7e$e1c898c0$a559ca40$@se>
	<gec60p$1tr$1@ger.gmane.org>
	<e7b0e5a40810300639m1d6df9a9w9bf355bc4a94d78c@mail.gmail.com>
Message-ID: <gechtm$f6d$1@ger.gmane.org>

> I agree, it would be nice to have such thing in gecode. I have been 
> using an implementation of such allocator (attached to this mail). It 
> would be nice if we can discuss and improve it. I got this 
> implementation from St?phane Zampelli.

Thanks! That seems like something I had in mind. I'll try it out, maybe 
fix a couple of things (I'll try to walk through the C++ standard 
regarding allocators), move out of the ::std namespace (why is it 
there?) and re-post back here for more discussions.

Cheers,
Filip





From cschulte at kth.se  Thu Oct 30 15:57:15 2008
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 30 Oct 2008 15:57:15 +0100
Subject: [gecode-users] Reporting memory usage
In-Reply-To: <e7b0e5a40810300639m1d6df9a9w9bf355bc4a94d78c@mail.gmail.com>
References: <e7b0e5a40810280946v6bc84068i85fcee537d02d126@mail.gmail.com>	<004801c93921$653e8570$2fbb9050$@se>	<e7b0e5a40810290119h5566c2e5rd812de02e1054d6a@mail.gmail.com>	<000f01c93a7e$e1c898c0$a559ca40$@se>
	<gec60p$1tr$1@ger.gmane.org>
	<e7b0e5a40810300639m1d6df9a9w9bf355bc4a94d78c@mail.gmail.com>
Message-ID: <006901c93a9f$ccbd5120$6637f360$@se>

That looks indeed easy enough. However I would like to have if you guys would integrate it into the gecode/support part as it is really useful.

 

Then, in 3.0.0 there will be three memory areas for allocation:

 - The global heap (there a normal stl allocator works anyway).

 - Space allocated memory: so one would just have to adapt to the new Gecode 3.0.0 memory management.

- Region allocated memory for temporary memory usage. That's new in 3.0.0.

 

Regions work as follows: if one has a space one can get a region for that space. One can allocate memory (very very efficiently) from a region. However, the memory will only be freed when the region is destructed. (Actually, what happens there is that all spaces for one thread share a small memory area and that a Region provides access to this shared memory area. If a request cannot be fulfilled from this area, memory will be allocated transparently from the heap). Very simple as you don't have to deallocate to a region, very efficient, and much cleaner than alloca.

 

So, what I would like to ask you guys: would you be willing to

 - Write stl allocators for both regions and spaces.

 - Test with your own programs that these allocators work.

 - Send me a patch for Gecode 3.0.0 so that I can integrate your stuff into the trunk into gecode/support (as a separate file).

 - Test the stuff again after I integrated.

 - Negotiate among you who does what.

 

Thanks in advance (hoping that you will jump at it).

 

Cheers

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Gustavo Gutierrez
Sent: Thursday, October 30, 2008 2:39 PM
To: Filip Konvi?ka
Cc: users at gecode.org
Subject: Re: [gecode-users] Reporting memory usage

 

 

On Thu, Oct 30, 2008 at 12:32 PM, Filip Konvi?ka <filip.konvicka at logis.cz> wrote:

Hi Christian,

actually this has been on my todo list for some time: I tend to use stl
containers here and there in my branchings, so the nice thing here would
be providing some allocators that allocate from space memory, which
would enable us to use things like std::set, std::unordered_set etc.
without hassle. Another nice thing is that I would no longer need to
enforce calling destructors of members manually in "dispose()". I'll
take a look at the space memory API to see whether it's possible.

 

I agree, it would be nice to have such thing in gecode. I have been using an implementation of such allocator (attached to this mail). It would be nice if we can discuss and improve it. I got this implementation from St?phane Zampelli.

 

 

 

Regards,

Gustavo

 


Cheers,
Filip


> Hi,
>
>
>
> The only reason to allocate globally and not from a space is if the
> allocated entities are shared among several spaces. That's the case for
> complete set variables as they use BDDs that might indeed be shared
> across spaces.
>
>
>
> Unless you share across spaces you should always allocate from a space,
> it's much faster (an deallocation is automatic as soon as the space gets
> deleted)! But in any case, make sure that you do not leak memory
>
>
>
> Cheers
>
> Christian
>
>
>
> --
>
> Christian Schulte, www.ict.kth.se/~cschulte/
>
>
>
> *From:* users-bounces at gecode.org
> [mailto:users-bounces at gecode.org] *On
> Behalf Of *Gustavo Gutierrez
> *Sent:* Wednesday, October 29, 2008 9:19 AM
> *To:* Christian Schulte
> *Cc:* gecode at gecode.org
> *Subject:* Re: [gecode-users] Reporting memory usage
>
>
>
>
>
> On Tue, Oct 28, 2008 at 6:19 PM, Christian Schulte
> <cschulte at kth.se

> <mailto:cschulte at kth.se>> wrote:
>
> Hi,
>
>
>
> Damn that's missing in Gecode. A space takes into account what external
> memory is allocated by propagators and branchings but not by variables.
>
>
>
> It will also not be that straightforward (I would have to think a
> little) as a space does not maintain a list of all variables (in
> contrast to propagators and branchings).
>
>
>
>     Is it very important? If yes, we could try to come up with something
>     and add it for 3.0.
>
> It would be nice and useful to have it but of course we can use some
> workaround:  what we can do for now is to use some bash scripting to
> measure the memory allocated by an specific process, unfortunately this
> is not so standard from one operating system to another.
>
>
>
>
>
>
>
>     What do you do right now? Do you use the same memory management
>     support for variables that is also used by the complete set variables?
>
> If i remember correctly, cpltset variables use an external library in
> the buddy folder and use a disposer to free the memory allocated by
> additional data structures. We are doing that right now. We are trying
> to use boost libraries for our implementation and fortunately those
> libraries provide a way to parametrize the allocator. The other
> possibility will be to use an allocator that allocates memory from the
> gecode heap and *never* deallocate it (this is because gecode memory
> manager takes care of that (am i right?). Can you recommend or comment
> on the advantages of one approach over the other?
>
>
>
> Regards,
>
> Gustavo
>
>
>
>

> ------------------------------------------------------------------------
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




-- 
Gustavo Gutierrez

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20081030/c8f0d2d9/attachment.htm>

From cschulte at kth.se  Thu Oct 30 15:57:53 2008
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 30 Oct 2008 15:57:53 +0100
Subject: [gecode-users] Reporting memory usage
In-Reply-To: <gechtm$f6d$1@ger.gmane.org>
References: <e7b0e5a40810280946v6bc84068i85fcee537d02d126@mail.gmail.com>	<004801c93921$653e8570$2fbb9050$@se>	<e7b0e5a40810290119h5566c2e5rd812de02e1054d6a@mail.gmail.com>	<000f01c93a7e$e1c898c0$a559ca40$@se>	<gec60p$1tr$1@ger.gmane.org>	<e7b0e5a40810300639m1d6df9a9w9bf355bc4a94d78c@mail.gmail.com>
	<gechtm$f6d$1@ger.gmane.org>
Message-ID: <007701c93a9f$e30e3520$a92a9f60$@se>

Filip, can you then also take into account my last messgae?

Cheers
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Filip Konvicka
Sent: Thursday, October 30, 2008 3:56 PM
To: users at gecode.org
Subject: Re: [gecode-users] Reporting memory usage

> I agree, it would be nice to have such thing in gecode. I have been 
> using an implementation of such allocator (attached to this mail). It 
> would be nice if we can discuss and improve it. I got this 
> implementation from St?phane Zampelli.

Thanks! That seems like something I had in mind. I'll try it out, maybe 
fix a couple of things (I'll try to walk through the C++ standard 
regarding allocators), move out of the ::std namespace (why is it 
there?) and re-post back here for more discussions.

Cheers,
Filip



_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From filip.konvicka at logis.cz  Thu Oct 30 16:01:13 2008
From: filip.konvicka at logis.cz (=?UTF-8?B?RmlsaXAgS29udmnEjWth?=)
Date: Thu, 30 Oct 2008 16:01:13 +0100
Subject: [gecode-users] Reporting memory usage
In-Reply-To: <007701c93a9f$e30e3520$a92a9f60$@se>
References: <e7b0e5a40810280946v6bc84068i85fcee537d02d126@mail.gmail.com>	<004801c93921$653e8570$2fbb9050$@se>	<e7b0e5a40810290119h5566c2e5rd812de02e1054d6a@mail.gmail.com>	<000f01c93a7e$e1c898c0$a559ca40$@se>	<gec60p$1tr$1@ger.gmane.org>	<e7b0e5a40810300639m1d6df9a9w9bf355bc4a94d78c@mail.gmail.com>
	<gechtm$f6d$1@ger.gmane.org> <007701c93a9f$e30e3520$a92a9f60$@se>
Message-ID: <4909CC39.3060808@logis.cz>

Sure, no problem - there's no point doing this for 2.2 anyway, is there? :-)

Cheers,
Filip

> Filip, can you then also take into account my last messgae?
>
> Cheers
> Christian
>
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
>
>
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Filip Konvicka
> Sent: Thursday, October 30, 2008 3:56 PM
> To: users at gecode.org
> Subject: Re: [gecode-users] Reporting memory usage
>
>   
>> I agree, it would be nice to have such thing in gecode. I have been 
>> using an implementation of such allocator (attached to this mail). It 
>> would be nice if we can discuss and improve it. I got this 
>> implementation from St?phane Zampelli.
>>     
>
> Thanks! That seems like something I had in mind. I'll try it out, maybe 
> fix a couple of things (I'll try to walk through the C++ standard 
> regarding allocators), move out of the ::std namespace (why is it 
> there?) and re-post back here for more discussions.
>
> Cheers,
> Filip
>
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>   


-- 
Filip Konvi?ka

LOGIS, s.r.o.
tel. +420 556 841 100
mob. +420 736 758 714




From ggutierrez at atlas.puj.edu.co  Thu Oct 30 16:10:56 2008
From: ggutierrez at atlas.puj.edu.co (Gustavo Gutierrez)
Date: Thu, 30 Oct 2008 16:10:56 +0100
Subject: [gecode-users] Reporting memory usage
In-Reply-To: <4909CC39.3060808@logis.cz>
References: <e7b0e5a40810280946v6bc84068i85fcee537d02d126@mail.gmail.com>
	<004801c93921$653e8570$2fbb9050$@se>
	<e7b0e5a40810290119h5566c2e5rd812de02e1054d6a@mail.gmail.com>
	<000f01c93a7e$e1c898c0$a559ca40$@se> <gec60p$1tr$1@ger.gmane.org>
	<e7b0e5a40810300639m1d6df9a9w9bf355bc4a94d78c@mail.gmail.com>
	<gechtm$f6d$1@ger.gmane.org> <007701c93a9f$e30e3520$a92a9f60$@se>
	<4909CC39.3060808@logis.cz>
Message-ID: <e7b0e5a40810300810m4641667fm5680b6c6dd20d88e@mail.gmail.com>

On Thu, Oct 30, 2008 at 4:01 PM, Filip Konvi?ka <filip.konvicka at logis.cz>wrote:

> Sure, no problem - there's no point doing this for 2.2 anyway, is there?
> :-)
>

Sure.

Regards,
Gustavo


>
> Cheers,
> Filip
>
> > Filip, can you then also take into account my last messgae?
> >
> > Cheers
> > Christian
> >
> > --
> > Christian Schulte, www.ict.kth.se/~cschulte/
> >
> >
> > -----Original Message-----
> > From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On
> Behalf Of Filip Konvicka
> > Sent: Thursday, October 30, 2008 3:56 PM
> > To: users at gecode.org
> > Subject: Re: [gecode-users] Reporting memory usage
> >
> >
> >> I agree, it would be nice to have such thing in gecode. I have been
> >> using an implementation of such allocator (attached to this mail). It
> >> would be nice if we can discuss and improve it. I got this
> >> implementation from St?phane Zampelli.
> >>
> >
> > Thanks! That seems like something I had in mind. I'll try it out, maybe
> > fix a couple of things (I'll try to walk through the C++ standard
> > regarding allocators), move out of the ::std namespace (why is it
> > there?) and re-post back here for more discussions.
> >
> > Cheers,
> > Filip
> >
> >
> >
> > _______________________________________________
> > Gecode users mailing list
> > users at gecode.org
> > https://www.gecode.org/mailman/listinfo/gecode-users
> >
> >
>
>
> --
> Filip Konvi?ka
>
> LOGIS, s.r.o.
> tel. +420 556 841 100
> mob. +420 736 758 714
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>



-- 
Gustavo Gutierrez
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20081030/4ba1b518/attachment.htm>

From filip.konvicka at logis.cz  Thu Oct 30 16:41:31 2008
From: filip.konvicka at logis.cz (=?UTF-8?B?RmlsaXAgS29udmnEjWth?=)
Date: Thu, 30 Oct 2008 16:41:31 +0100
Subject: [gecode-users] Reporting memory usage
In-Reply-To: <006901c93a9f$ccbd5120$6637f360$@se>
References: <e7b0e5a40810280946v6bc84068i85fcee537d02d126@mail.gmail.com>	<004801c93921$653e8570$2fbb9050$@se>	<e7b0e5a40810290119h5566c2e5rd812de02e1054d6a@mail.gmail.com>	<000f01c93a7e$e1c898c0$a559ca40$@se>	<gec60p$1tr$1@ger.gmane.org>	<e7b0e5a40810300639m1d6df9a9w9bf355bc4a94d78c@mail.gmail.com>
	<006901c93a9f$ccbd5120$6637f360$@se>
Message-ID: <4909D5AB.7070101@logis.cz>


> Regions work as follows: if one has a space one can get a region for 
> that space. One can allocate memory (very very efficiently) from a 
> region. However, the memory will only be freed when the region is 
> destructed. (Actually, what happens there is that all spaces for one 
> thread share a small memory area and that a Region provides access to 
> this shared memory area. If a request cannot be fulfilled from this 
> area, memory will be allocated transparently from the heap). Very simple 
> as you don't have to deallocate to a region, very efficient, and much 
> cleaner than alloca.

Great. So I reckon you can explicitly destroy the region as soon as 
you've finished using it. It'll be great fun using fast_pool_allocator 
on top of Gecode regions :-)

> So, what I would like to ask you guys: would you be willing to
> 
>  - Write stl allocators for both regions and spaces.
> 
>  - Test with your own programs that these allocators work.
> 
>  - Send me a patch for Gecode 3.0.0 so that I can integrate your stuff 
> into the trunk into gecode/support (as a separate file).
> 
>  - Test the stuff again after I integrated.
> 
>  - Negotiate among you who does what.

I'll try to port the code to support Gecode 3.0.0 memory API. It is 
little code so I think it should be fairly easy.

So Gustavo, I propose that you wait for me to do the initial work and 
once I post the new version here you can try it out.

As for testing...hm...I've not upgraded to 3.0 yet, so I don't have much 
to test with ATM. Much of what we have is somehow related to FloatVars, 
which probably don't work with 3.0 yet. The rest is some scheduling 
stuff, so I guess I could run these as we're using some custom data 
structures there (mostly vectors, but maybe also some hashmaps, will 
have to check).

BTW, I have a few more fixes for floatvars regarding memory management, 
as dispose() was not properly called for some branchings etc., so I 
guess I should post (yet) another update.

Cheers,
Filip




