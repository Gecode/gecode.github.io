From debdeep.banerjee at rsise.anu.edu.au  Wed May  6 11:29:34 2009
From: debdeep.banerjee at rsise.anu.edu.au (Debdeep Banerjee)
Date: Wed, 6 May 2009 19:29:34 +1000
Subject: [gecode-users] Ranking Custom Propagator
Message-ID: <d26e771499702d5830dbf4591bb57fa0@egw.rsise.anu.edu.au>

hi,


I want to execute my custom propagator after all other propagators. How can
I do that?


With regards


Debdeep


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20090506/7e5ce511/attachment.htm>

From cschulte at kth.se  Wed May  6 11:56:28 2009
From: cschulte at kth.se (Christian Schulte)
Date: Wed, 6 May 2009 11:56:28 +0200
Subject: [gecode-users] Ranking Custom Propagator
In-Reply-To: <d26e771499702d5830dbf4591bb57fa0@egw.rsise.anu.edu.au>
References: <d26e771499702d5830dbf4591bb57fa0@egw.rsise.anu.edu.au>
Message-ID: <002001c9ce30$ee881ea0$cb985be0$@se>

Hi,

 

There is no possibility to guarantee order of execution for propagators. What you can do, however, is to give it a very high cost. Then the system will most likely run the propagator later than those with low cost.

 

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Debdeep Banerjee
Sent: Wednesday, May 06, 2009 11:30 AM
To: users at gecode.org
Subject: [gecode-users] Ranking Custom Propagator

 

hi,

I want to execute my custom propagator after all other propagators. How can I do that?

With regards

Debdeep

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20090506/45462896/attachment.htm>

From zayenz at gmail.com  Wed May  6 11:58:00 2009
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Wed, 6 May 2009 11:58:00 +0200
Subject: [gecode-users] Ranking Custom Propagator
In-Reply-To: <d26e771499702d5830dbf4591bb57fa0@egw.rsise.anu.edu.au>
References: <d26e771499702d5830dbf4591bb57fa0@egw.rsise.anu.edu.au>
Message-ID: <63b5c8b00905060258l56a0b9deka63e87384b361a58@mail.gmail.com>

Hi,

In the absence of any other propagator at that priority-level,
returning PropCost::crazy in your cost-function would make your
propagator run after all other propagators have reached a fix-point.
If you have other propagators that run at that priority-level then it
is not possible to order them.

Cheers,
Mikael

2009/5/6 Debdeep Banerjee <debdeep.banerjee at rsise.anu.edu.au>:
> hi,
>
> I want to execute my custom propagator after all other propagators. How can
> I do that?
>
> With regards
>
> Debdeep
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>



-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/



From malcolmr at cse.unsw.edu.au  Thu May  7 03:46:50 2009
From: malcolmr at cse.unsw.edu.au (Malcolm Ryan)
Date: Thu, 7 May 2009 11:46:50 +1000
Subject: [gecode-users] Gist question
Message-ID: <DAAAECF5-14E9-487E-AFA3-98A3CEA2A135@cse.unsw.edu.au>

Is there any way to get Gist to provide a space as a return value to  
my code?

I want to do something like:

MySpace* space = new MySpace();
Gecode::Gist::PrintingInspector<MySpace> pi("MySpace");
MySpace* result = Gecode::explore(space, &pi);

Where result ends up being some user-selected space from the gist  
search tree.

This would be a very useful feature for me.

Malcolm



From malcolmr at cse.unsw.edu.au  Thu May  7 04:04:33 2009
From: malcolmr at cse.unsw.edu.au (Malcolm Ryan)
Date: Thu, 7 May 2009 12:04:33 +1000
Subject: [gecode-users] Tracking memory usage
Message-ID: <3EA35BB9-CD55-491F-8F38-348DA9F6D321@cse.unsw.edu.au>

I am applying two different (custom) branchings to the same constraint  
problem and one of them is reporting a lot more memory use (via  
Statistics) than the other. This is not completely unexpected but the  
difference is big enough that it requires more careful analysis to  
make sure it isn't just the result of an implementation flaw.

Is there any way you can recommend to track memory usage in a more  
fine-grained fashion?

Malcolm



From tack at ps.uni-sb.de  Thu May  7 05:23:35 2009
From: tack at ps.uni-sb.de (Guido Tack)
Date: Thu, 7 May 2009 13:23:35 +1000
Subject: [gecode-users] Gist question
In-Reply-To: <DAAAECF5-14E9-487E-AFA3-98A3CEA2A135@cse.unsw.edu.au>
References: <DAAAECF5-14E9-487E-AFA3-98A3CEA2A135@cse.unsw.edu.au>
Message-ID: <8F7704E0-9CF6-41B0-B60D-69783B9ED4DD@ps.uni-sb.de>

Malcolm Ryan wrote:

> Is there any way to get Gist to provide a space as a return value to
> my code?

You can use an Inspector to do that.  Here's an example (it's for  
Gecode 3.x, I noticed you were still using 2.x but something similar  
will work there, too):

class ReturnSpaceInspector : public Gist::Inspector {
public:
   Space* s;
   ReturnSpaceInspector(void) : s(NULL) {}
   virtual void inspect(const Space& n) {
     delete s;
     s = n.clone();
   }
   virtual std::string name(void) { return "ReturnSpaceInspector"; }
   ~ReturnSpaceInspector(void) { delete s; }
};

This inspector remembers the space of the last double-clicked node.   
Note that you have to clone it!  After Gist returns, you can then do  
whatever you want with the space.
With the next release, you'll be able to easily add several inspectors  
and turn them on and off individually.  Until then, the  
ReturnSpaceInspector could just inherit from Gist::Print so that you  
get both the output and the space.

Cheers,
	Guido




From cschulte at kth.se  Thu May  7 11:18:35 2009
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 7 May 2009 11:18:35 +0200
Subject: [gecode-users] Tracking memory usage
In-Reply-To: <3EA35BB9-CD55-491F-8F38-348DA9F6D321@cse.unsw.edu.au>
References: <3EA35BB9-CD55-491F-8F38-348DA9F6D321@cse.unsw.edu.au>
Message-ID: <002b01c9cef4$cd269650$6773c2f0$@se>

Well, I have no real idea. One thing of course is that one branching is
worse, so you need more search and that takes more nodes and hence memory.

Then, the other thing is: does your branching have a big state? Or does it
reference lots of variables (remember: variables are kept alive by
propagator and branching, if a variable is not reference it will just go
away).

That's all what I would know
Christian

--
Christian Schulte, www.it.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Malcolm Ryan
Sent: Thursday, May 07, 2009 4:05 AM
To: gecode list
Subject: [gecode-users] Tracking memory usage

I am applying two different (custom) branchings to the same constraint  
problem and one of them is reporting a lot more memory use (via  
Statistics) than the other. This is not completely unexpected but the  
difference is big enough that it requires more careful analysis to  
make sure it isn't just the result of an implementation flaw.

Is there any way you can recommend to track memory usage in a more  
fine-grained fashion?

Malcolm

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From markus.boehm at googlemail.com  Thu May  7 13:30:52 2009
From: markus.boehm at googlemail.com (=?ISO-8859-1?Q?Markus_B=F6hm?=)
Date: Thu, 7 May 2009 13:30:52 +0200
Subject: [gecode-users] Gecode Install Question
Message-ID: <aafe53c90905070430x4fd2523ejbe64b87faf492dbb@mail.gmail.com>

Hi, as a C++/Gecode beginner I hardly dare to ask.
I installed Gecode 3.0.2 via the Windows Installer package on my Windows XP
Prof. System in Path D:\Program Files\Gecode. The System Variable GECODEDIR
is set accordingly.

I installed Visual C++ 2008 Version 9.0.

Then I follow the instructions in chapter 2.3 of your "modelling with
gecode" document. I can successfully compile, link and run the provided Send
More Money sourcecode (of figure 2.1) via the described command line
commands (cl...).

If I alternatively create a new Visual C++ Projekt in the IDE, use the same
"Send More Money" sourcecode and define the additional include directory and
additonal library directory as proposed, then I run into the following
problem.

How can I overcome this? I tried a lot without success.

BR
Markus


Build Log

Build started: Project: FstConstraint, Configuration: Debug|Win32

Command Lines

Creating temporary file
"d:\work\C++Projekte\FstConstraint\FstConstraint\Debug\RSP0000012714825568.rsp"
with contents
[
/Od /I "<GECODEDIR>\include" /D "WIN32" /D "_DEBUG" /D "_CONSOLE" /D
"_UNICODE" /D "UNICODE" /Gm /EHsc /RTC1 /MDd /Fo"Debug\\"
/Fd"Debug\vc90.pdb" /W3 /c /ZI /TP ".\SendMoreMoney.cpp"

".\stdafx.cpp"
]
Creating command line "cl.exe
@"d:\work\C++Projekte\FstConstraint\FstConstraint\Debug\RSP0000012714825568.rsp"
/nologo /errorReport:prompt"

Output Window

Compiling...
stdafx.cpp
SendMoreMoney.cpp
d:\work\c++projekte\fstconstraint\fstconstraint\sendmoremoney.cpp(1) :
fatal error C1083: Cannot open include file: 'gecode/int.hh': No such
file or directory
Generating Code...

Results

Build log was saved at
"file://d:\work\C++Projekte\FstConstraint\FstConstraint\Debug\BuildLog.htm"
FstConstraint - 1 error(s), 0 warning(s)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20090507/688a63db/attachment.htm>

From tack at ps.uni-sb.de  Thu May  7 13:35:14 2009
From: tack at ps.uni-sb.de (Guido Tack)
Date: Thu, 7 May 2009 21:35:14 +1000
Subject: [gecode-users] Tracking memory usage
In-Reply-To: <3EA35BB9-CD55-491F-8F38-348DA9F6D321@cse.unsw.edu.au>
References: <3EA35BB9-CD55-491F-8F38-348DA9F6D321@cse.unsw.edu.au>
Message-ID: <19804F38-7F97-495D-92CC-1B1B0BE5258D@ps.uni-sb.de>

Malcolm Ryan wrote:

> I am applying two different (custom) branchings to the same constraint
> problem and one of them is reporting a lot more memory use (via
> Statistics) than the other. This is not completely unexpected but the
> difference is big enough that it requires more careful analysis to
> make sure it isn't just the result of an implementation flaw.
>
> Is there any way you can recommend to track memory usage in a more
> fine-grained fashion?

If you want to look at individual nodes in the search tree, you could  
use Gist with a print function like this:
virtual void
print(std::ostream& os) const {
   os << "allocated: " << sizeof(*this)+allocated() << std::endl;
}

Cheers,
	Guido




From cschulte at kth.se  Thu May  7 13:58:14 2009
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 7 May 2009 13:58:14 +0200
Subject: [gecode-users] Gecode Install Question
In-Reply-To: <aafe53c90905070430x4fd2523ejbe64b87faf492dbb@mail.gmail.com>
References: <aafe53c90905070430x4fd2523ejbe64b87faf492dbb@mail.gmail.com>
Message-ID: <005f01c9cf0b$1a928690$4fb793b0$@se>

It looks as if you took us a little bit too literally: The compiler is
invoked with /I <GECODEDIR>. You have to replace GECODEDIR with the proper
path on your system! That should be something like C:\Program Files\gecode
or so. I agree that the doc is a little unclear on that aspect.

 

Hope that helps

Christian

 

--

Christian Schulte, www.it.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Markus B?hm
Sent: Thursday, May 07, 2009 1:31 PM
To: gecode list
Subject: [gecode-users] Gecode Install Question

 

Hi, as a C++/Gecode beginner I hardly dare to ask.

 

I installed Gecode 3.0.2 via the Windows Installer package on my Windows XP
Prof. System in Path D:\Program Files\Gecode. The System Variable GECODEDIR
is set accordingly.

 

I installed Visual C++ 2008 Version 9.0.

 

Then I follow the instructions in chapter 2.3 of your "modelling with
gecode" document. I can successfully compile, link and run the provided Send
More Money sourcecode (of figure 2.1) via the described command line
commands (cl...).

 

If I alternatively create a new Visual C++ Projekt in the IDE, use the same
"Send More Money" sourcecode and define the additional include directory and
additonal library directory as proposed, then I run into the following
problem.

 

How can I overcome this? I tried a lot without success.

 

BR

Markus

 

 


Build Log

 


 

 


Build started: Project: FstConstraint, Configuration: Debug|Win32


 


Command Lines

 


 

 

Creating temporary file
"d:\work\C++Projekte\FstConstraint\FstConstraint\Debug\RSP0000012714825568.r
sp" with contents
[
/Od /I "<GECODEDIR>\include" /D "WIN32" /D "_DEBUG" /D "_CONSOLE" /D
"_UNICODE" /D "UNICODE" /Gm /EHsc /RTC1 /MDd /Fo"Debug\\"
/Fd"Debug\vc90.pdb" /W3 /c /ZI /TP ".\SendMoreMoney.cpp"
 
".\stdafx.cpp"
]
Creating command line "cl.exe
@"d:\work\C++Projekte\FstConstraint\FstConstraint\Debug\RSP0000012714825568.
rsp" /nologo /errorReport:prompt"

 


Output Window

 


 

 

Compiling...
stdafx.cpp
SendMoreMoney.cpp
d:\work\c++projekte\fstconstraint\fstconstraint\sendmoremoney.cpp(1) : fatal
error C1083: Cannot open include file: 'gecode/int.hh': No such file or
directory
Generating Code...

 


Results

 


 

 

Build log was saved at
"file://d:\work\C++Projekte\FstConstraint\FstConstraint\Debug\BuildLog.htm"
FstConstraint - 1 error(s), 0 warning(s)




-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20090507/4a4f79ad/attachment.htm>

From markus.boehm at googlemail.com  Fri May  8 06:41:04 2009
From: markus.boehm at googlemail.com (=?ISO-8859-1?Q?Markus_B=F6hm?=)
Date: Fri, 8 May 2009 06:41:04 +0200
Subject: [gecode-users] Fwd:  Gecode Install Question
In-Reply-To: <aafe53c90905070523s1eaf7a28n62c80dff432d0192@mail.gmail.com>
References: <aafe53c90905070430x4fd2523ejbe64b87faf492dbb@mail.gmail.com>
	<005f01c9cf0b$1a928690$4fb793b0$@se>
	<aafe53c90905070523s1eaf7a28n62c80dff432d0192@mail.gmail.com>
Message-ID: <aafe53c90905072141m557e41afndec9da5d22bb55f8@mail.gmail.com>

Christian tx. It works now. My stupid mistake. I thought somehow it's
reading the system variable.Once I replaced <GECODEDIR> with full path, but
obviously wrong.
Markus


2009/5/7 Christian Schulte <cschulte at kth.se>

 It looks as if you took us a little bit too literally: The compiler is
> invoked with /I <GECODEDIR>. You have to replace GECODEDIR with the proper
> path on your system! That should be something like C:\Program Files\gecode
> or so. I agree that the doc is a little unclear on that aspect.
>
>
>
> Hope that helps
>
> Christian
>
>
>
> --
>
> Christian Schulte, www.it.kth.se/~cschulte/
>
>
>
> *From:* users-bounces at gecode.org [mailto:users-bounces at gecode.org] *On
> Behalf Of *Markus B?hm
> *Sent:* Thursday, May 07, 2009 1:31 PM
> *To:* gecode list
> *Subject:* [gecode-users] Gecode Install Question
>
>
>
> Hi, as a C++/Gecode beginner I hardly dare to ask.
>
>
>
> I installed Gecode 3.0.2 via the Windows Installer package on my Windows XP
> Prof. System in Path D:\Program Files\Gecode. The System Variable GECODEDIR
> is set accordingly.
>
>
>
> I installed Visual C++ 2008 Version 9.0.
>
>
>
> Then I follow the instructions in chapter 2.3 of your "modelling with
> gecode" document. I can successfully compile, link and run the provided Send
> More Money sourcecode (of figure 2.1) via the described command line
> commands (cl...).
>
>
>
> If I alternatively create a new Visual C++ Projekt in the IDE, use the same
> "Send More Money" sourcecode and define the additional include directory and
> additonal library directory as proposed, then I run into the following
> problem.
>
>
>
> How can I overcome this? I tried a lot without success.
>
>
>
> BR
>
> Markus
>
>
>
>
>
> Build Log
>
>
>
>
>
>
>  Build started: Project: FstConstraint, Configuration: Debug|Win32
>
>
>
> Command Lines
>
>
>
>
>
>
>
> Creating temporary file "d:\work\C++Projekte\FstConstraint\FstConstraint\Debug\RSP0000012714825568.rsp" with contents
>
> [
>
> /Od /I "<GECODEDIR>\include" /D "WIN32" /D "_DEBUG" /D "_CONSOLE" /D "_UNICODE" /D "UNICODE" /Gm /EHsc /RTC1 /MDd /Fo"Debug\\" /Fd"Debug\vc90.pdb" /W3 /c /ZI /TP ".\SendMoreMoney.cpp"
>
>
>
> ".\stdafx.cpp"
>
> ]
>
> Creating command line "cl.exe @"d:\work\C++Projekte\FstConstraint\FstConstraint\Debug\RSP0000012714825568.rsp" /nologo /errorReport:prompt"
>
>
>
> Output Window
>
>
>
>
>
>
>
> Compiling...
>
> stdafx.cpp
>
> SendMoreMoney.cpp
>
> d:\work\c++projekte\fstconstraint\fstconstraint\sendmoremoney.cpp(1) : fatal error C1083: Cannot open include file: 'gecode/int.hh': No such file or directory
>
> Generating Code...
>
>
>
> Results
>
>
>
>
>
>
>
> Build log was saved at "file://d:\work\C++Projekte\FstConstraint\FstConstraint\Debug\BuildLog.htm"
>
> FstConstraint - 1 error(s), 0 warning(s)
>
>
>


-- 
-- Markus



-- 
-- Markus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20090508/cac3a6d5/attachment.htm>

From malcolmr at cse.unsw.edu.au  Mon May 11 06:01:08 2009
From: malcolmr at cse.unsw.edu.au (Malcolm Ryan)
Date: Mon, 11 May 2009 14:01:08 +1000
Subject: [gecode-users] Tracking memory usage
In-Reply-To: <19804F38-7F97-495D-92CC-1B1B0BE5258D@ps.uni-sb.de>
References: <3EA35BB9-CD55-491F-8F38-348DA9F6D321@cse.unsw.edu.au>
	<19804F38-7F97-495D-92CC-1B1B0BE5258D@ps.uni-sb.de>
Message-ID: <FDD238CD-AE3E-41EB-8B1A-63438B0C1146@cse.unsw.edu.au>

Is it possible to find out how many variables are in a particular  
space? Or how many active propagators?

Malcolm

On 07/05/2009, at 9:35 PM, Guido Tack wrote:

> Malcolm Ryan wrote:
>
>> I am applying two different (custom) branchings to the same  
>> constraint
>> problem and one of them is reporting a lot more memory use (via
>> Statistics) than the other. This is not completely unexpected but the
>> difference is big enough that it requires more careful analysis to
>> make sure it isn't just the result of an implementation flaw.
>>
>> Is there any way you can recommend to track memory usage in a more
>> fine-grained fashion?
>
> If you want to look at individual nodes in the search tree, you  
> could use Gist with a print function like this:
> virtual void
> print(std::ostream& os) const {
>  os << "allocated: " << sizeof(*this)+allocated() << std::endl;
> }
>
> Cheers,
> 	Guido




From tack at ps.uni-sb.de  Mon May 11 06:14:53 2009
From: tack at ps.uni-sb.de (Guido Tack)
Date: Mon, 11 May 2009 14:14:53 +1000
Subject: [gecode-users] Tracking memory usage
In-Reply-To: <FDD238CD-AE3E-41EB-8B1A-63438B0C1146@cse.unsw.edu.au>
References: <3EA35BB9-CD55-491F-8F38-348DA9F6D321@cse.unsw.edu.au>
	<19804F38-7F97-495D-92CC-1B1B0BE5258D@ps.uni-sb.de>
	<FDD238CD-AE3E-41EB-8B1A-63438B0C1146@cse.unsw.edu.au>
Message-ID: <A37A02D2-C997-4438-9886-473B8AC73684@ps.uni-sb.de>

Malcolm Ryan wrote:

> Is it possible to find out how many variables are in a particular
> space? Or how many active propagators?

Variables, no.  Propagators, yes, using the propagators() method of a  
Space.  Inactive, i.e. subsumed propagators, are not copied, so  
propagators() returns the number of active propagators.

Cheers,
	Guido




From mmann at informatik.uni-freiburg.de  Sat May 16 00:37:15 2009
From: mmann at informatik.uni-freiburg.de (Martin Mann)
Date: Sat, 16 May 2009 00:37:15 +0200
Subject: [gecode-users] How to set an arbitrary RandomGenerator for
	randomized branching?!?
Message-ID: <4A0DEE9B.7000504@informatik.uni-freiburg.de>


Hi everybody,

I digged a bit into the Gecode source about the randomized branching 
supported since version 3.

In line 124 in gecode/support/random.hpp I found the definition of 
RandomGenerator internally used in the view selection:

http://www.gecode.org/doc-latest/reference/group__FuncSupport.html#g02fe942f90a57a25639f09960dab4459

As given there, it is just a typedef onto the 
LinearCongruentialGenerator provided by Gecode but I would like to set 
up my own random number generator...

Is there a possibility to support user defined generators? e.g. in 
coming versions?

If not available right now, maybe you like the following suggestion:

A possibility would be a super class 'RNG' that has to be implemented by 
every generator plus a kind of factory class 'RNF' with static members only.
The RNF would be a wrapper around the current RNG instance to use 
(stored in a static internal member). Thus, all Gecode internals that 
need a random number use a static interface of RNF instead of some RNG 
instance members. So the library gets independent of the concrete RNG 
used and you get the possibility to register a user defined RNG within 
the RNF. Per default the RNF can use the linear congruential generator 
provided. The static interface and data member would avoid annoying 
copies of RNGs all around and won't complicate your Gecode internals/source.


Just a suggestion... if it is already possible just ignore and please 
let me know how to do with the current Gecode version. :)


Have a nice weekend,

Martin




From mmann at informatik.uni-freiburg.de  Sat May 16 00:55:31 2009
From: mmann at informatik.uni-freiburg.de (Martin Mann)
Date: Sat, 16 May 2009 00:55:31 +0200
Subject: [gecode-users] Advisor documentation ?
Message-ID: <4A0DF2E3.8020200@informatik.uni-freiburg.de>

Hi, me again...

Another thing I struggled on was the goal/use/usage of the Advisor 
concept and more over its classes and sources.
Unfortunately, the tutorial does not cover the setup of custom 
propagators yet. (Beneath: The Tutorial is really great and eases work a 
lot! Thanks for that!)

Is there another description beneath the paper in the publications list 
"Advisors for Incremental Propagation"? I only had a short look into the 
pdf so far but no deeper reading yet. Will come next.

But the paper does not cover the implementational details where and how 
to implement an Advisor for a propagator nor how to set it up.

Is there some kind of documentation ongoing or a simple example to start 
with?

Last but not least: is it planned to have a chapter in the tutorial 
about writing a custom propagator? Think this would be something read by 
  a lot of people but I see that writing a good tutorial is very time 
consuming...

Thanks a lot,

Martin



From serge.lemouton at ircam.fr  Sun May 17 19:49:13 2009
From: serge.lemouton at ircam.fr (serge lemouton)
Date: Sun, 17 May 2009 19:49:13 +0200
Subject: [gecode-users] How to compile the examples in Xcode
Message-ID: <304E4716-EC1C-4F74-B3D6-A8E4FD7B8571@ircam.fr>

Hello,

I am not able to compile the examples included from the Gecode 3.0.2  
Macintosh binary distribution.
I have installed Gecode with the "Install Gecode 3.0.2.pkg", (after  
having desinstalled the oldest frameworks with the uninstall script)
created an Xcode project with the latest version of Xcode and GCC 4.2  
(and put the "-framework gecode" option in the Linker Flags)
When  compiling any examples in the "C++ examples" folder of the disk  
image, I get the following errors :

collect2: ld returned 1 exit status
symbol(s) not found
__ZTV7Options$non_lazy_ptr in money.o
"vtable for Options", referenced from:
Options::~Options()in money.o
etc .... (all the errors seems related to Options)

Maybe there il something left from a previous gecode installation ?
Do I need to recompile Gecode ?

Thanks for any hint or suggestion !

Serge



From tack at ps.uni-sb.de  Mon May 18 02:01:10 2009
From: tack at ps.uni-sb.de (Guido Tack)
Date: Mon, 18 May 2009 10:01:10 +1000
Subject: [gecode-users] How to compile the examples in Xcode
In-Reply-To: <304E4716-EC1C-4F74-B3D6-A8E4FD7B8571@ircam.fr>
References: <304E4716-EC1C-4F74-B3D6-A8E4FD7B8571@ircam.fr>
Message-ID: <EC7C3621-0D28-41A6-87F7-35FB7A22C9EA@ps.uni-sb.de>

serge lemouton wrote:
> I am not able to compile the examples included from the Gecode 3.0.2
> Macintosh binary distribution.
> I have installed Gecode with the "Install Gecode 3.0.2.pkg", (after
> having desinstalled the oldest frameworks with the uninstall script)
> created an Xcode project with the latest version of Xcode and GCC 4.2
> (and put the "-framework gecode" option in the Linker Flags)
> When  compiling any examples in the "C++ examples" folder of the disk
> image, I get the following errors :
>
> collect2: ld returned 1 exit status
> symbol(s) not found
> __ZTV7Options$non_lazy_ptr in money.o
> "vtable for Options", referenced from:
> Options::~Options()in money.o
> etc .... (all the errors seems related to Options)

You have to compile and link the files examples/support/example.cpp  
and examples/support/options.cpp in addition to the actual example you  
want to try.  In the upcoming 3.1.0 release, these files have been  
moved to their own library so that this step won't be necessary any  
longer.

Cheers,
	Guido




From zayenz at gmail.com  Mon May 18 09:55:05 2009
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Mon, 18 May 2009 09:55:05 +0200
Subject: [gecode-users] How to set an arbitrary RandomGenerator for
	randomized branching?!?
In-Reply-To: <4A0DEE9B.7000504@informatik.uni-freiburg.de>
References: <4A0DEE9B.7000504@informatik.uni-freiburg.de>
Message-ID: <63b5c8b00905180055q54bf57aeub20d27b6263c1715@mail.gmail.com>

Hi,

Currently it is not possible to exchange the random number generator.
Furthermore, the implementation uses properties of the random number
generator that would most probably compromise efficiency if they were
abstracted away (for example, the state is limited to a single
unsigned int as seed). If you want to use your own random number
generator, I would suggest writing your own subclasses of ViewSelBase
and ValSelbase similar to ViewSelRnd and ValRnd.

For curiosity, what is the reason that you want to change the random
number generator used?

Cheers,
Mikael

On Sat, May 16, 2009 at 12:37 AM, Martin Mann
<mmann at informatik.uni-freiburg.de> wrote:
>
> Hi everybody,
>
> I digged a bit into the Gecode source about the randomized branching
> supported since version 3.
>
> In line 124 in gecode/support/random.hpp I found the definition of
> RandomGenerator internally used in the view selection:
>
> http://www.gecode.org/doc-latest/reference/group__FuncSupport.html#g02fe942f90a57a25639f09960dab4459
>
> As given there, it is just a typedef onto the
> LinearCongruentialGenerator provided by Gecode but I would like to set
> up my own random number generator...
>
> Is there a possibility to support user defined generators? e.g. in
> coming versions?
>
> If not available right now, maybe you like the following suggestion:
>
> A possibility would be a super class 'RNG' that has to be implemented by
> every generator plus a kind of factory class 'RNF' with static members only.
> The RNF would be a wrapper around the current RNG instance to use
> (stored in a static internal member). Thus, all Gecode internals that
> need a random number use a static interface of RNF instead of some RNG
> instance members. So the library gets independent of the concrete RNG
> used and you get the possibility to register a user defined RNG within
> the RNF. Per default the RNF can use the linear congruential generator
> provided. The static interface and data member would avoid annoying
> copies of RNGs all around and won't complicate your Gecode internals/source.
>
>
> Just a suggestion... if it is already possible just ignore and please
> let me know how to do with the current Gecode version. :)
>
>
> Have a nice weekend,
>
> Martin
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>



-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/



From zayenz at gmail.com  Mon May 18 10:02:20 2009
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Mon, 18 May 2009 10:02:20 +0200
Subject: [gecode-users] Advisor documentation ?
In-Reply-To: <4A0DF2E3.8020200@informatik.uni-freiburg.de>
References: <4A0DF2E3.8020200@informatik.uni-freiburg.de>
Message-ID: <63b5c8b00905180102j50784189vd2f356757250dd3c@mail.gmail.com>

Hi,

When "Programming with Gecode" [1] is written, it will include
information on how to program with Advisors. That doesn't really help
you now of course :)

The general idea of advisors is that they allow a propagator to add
custom actions to modifications of the variables the propagator is
interested in. Several people have asked before on the mailing list
about advisors [2], and [3] is a good place to start.

Cheers,
Mikael

[1] http://www.gecode.org/documentation.html
[2] http://search.gmane.org/?query=Advisor+Advisors&author=&group=gmane.comp.lib.gecode.user&sort=relevance&DEFAULTOP=or&xP=advisor&xFILTERS=Gcomp.lib.gecode.user---A
[3] http://article.gmane.org/gmane.comp.lib.gecode.user/1874/

On Sat, May 16, 2009 at 12:55 AM, Martin Mann
<mmann at informatik.uni-freiburg.de> wrote:
> Hi, me again...
>
> Another thing I struggled on was the goal/use/usage of the Advisor
> concept and more over its classes and sources.
> Unfortunately, the tutorial does not cover the setup of custom
> propagators yet. (Beneath: The Tutorial is really great and eases work a
> lot! Thanks for that!)
>
> Is there another description beneath the paper in the publications list
> "Advisors for Incremental Propagation"? I only had a short look into the
> pdf so far but no deeper reading yet. Will come next.
>
> But the paper does not cover the implementational details where and how
> to implement an Advisor for a propagator nor how to set it up.
>
> Is there some kind of documentation ongoing or a simple example to start
> with?
>
> Last but not least: is it planned to have a chapter in the tutorial
> about writing a custom propagator? Think this would be something read by
> ?a lot of people but I see that writing a good tutorial is very time
> consuming...
>
> Thanks a lot,
>
> Martin
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>



-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/



From javimena at gmail.com  Mon May 18 18:31:50 2009
From: javimena at gmail.com (=?ISO-8859-1?Q?Javier_Andr=E9s_Mena_Zapata?=)
Date: Mon, 18 May 2009 11:31:50 -0500
Subject: [gecode-users] How to set an arbitrary RandomGenerator for
	randomized branching?!?
In-Reply-To: <63b5c8b00905180055q54bf57aeub20d27b6263c1715@mail.gmail.com>
References: <4A0DEE9B.7000504@informatik.uni-freiburg.de>
	<63b5c8b00905180055q54bf57aeub20d27b6263c1715@mail.gmail.com>
Message-ID: <80537a260905180931mb9adfb7t9408c732d0123e4a@mail.gmail.com>

Hi,

Just curiosity... Do you prefer RNG speed, RNG space, general speed or
general space?

Cheers,

On Mon, May 18, 2009 at 2:55 AM, Mikael Zayenz Lagerkvist
<zayenz at gmail.com>wrote:

> Hi,
>
> Currently it is not possible to exchange the random number generator.
> Furthermore, the implementation uses properties of the random number
> generator that would most probably compromise efficiency if they were
> abstracted away (for example, the state is limited to a single
> unsigned int as seed). If you want to use your own random number
> generator, I would suggest writing your own subclasses of ViewSelBase
> and ValSelbase similar to ViewSelRnd and ValRnd.
>
> For curiosity, what is the reason that you want to change the random
> number generator used?
>
> Cheers,
> Mikael
>
> On Sat, May 16, 2009 at 12:37 AM, Martin Mann
> <mmann at informatik.uni-freiburg.de> wrote:
> >
> > Hi everybody,
> >
> > I digged a bit into the Gecode source about the randomized branching
> > supported since version 3.
> >
> > In line 124 in gecode/support/random.hpp I found the definition of
> > RandomGenerator internally used in the view selection:
> >
> >
> http://www.gecode.org/doc-latest/reference/group__FuncSupport.html#g02fe942f90a57a25639f09960dab4459
> >
> > As given there, it is just a typedef onto the
> > LinearCongruentialGenerator provided by Gecode but I would like to set
> > up my own random number generator...
> >
> > Is there a possibility to support user defined generators? e.g. in
> > coming versions?
> >
> > If not available right now, maybe you like the following suggestion:
> >
> > A possibility would be a super class 'RNG' that has to be implemented by
> > every generator plus a kind of factory class 'RNF' with static members
> only.
> > The RNF would be a wrapper around the current RNG instance to use
> > (stored in a static internal member). Thus, all Gecode internals that
> > need a random number use a static interface of RNF instead of some RNG
> > instance members. So the library gets independent of the concrete RNG
> > used and you get the possibility to register a user defined RNG within
> > the RNF. Per default the RNF can use the linear congruential generator
> > provided. The static interface and data member would avoid annoying
> > copies of RNGs all around and won't complicate your Gecode
> internals/source.
> >
> >
> > Just a suggestion... if it is already possible just ignore and please
> > let me know how to do with the current Gecode version. :)
> >
> >
> > Have a nice weekend,
> >
> > Martin
> >
> >
> > _______________________________________________
> > Gecode users mailing list
> > users at gecode.org
> > https://www.gecode.org/mailman/listinfo/gecode-users
> >
>
>
>
> --
> Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/<http://www.ict.kth.se/%7Ezayenz/>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>



-- 
"La buena educaci?n, es lo que nos queda cuando se nos olvida todo lo que
nos han ense?ado"
    ??

Javier Andr?s Mena Zapata
http://StrategicDecision.net/
+57 (2) 318 1000 ext. 2910
Cali - Colombia
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20090518/7b6a362f/attachment.htm>

From halit at su.sabanciuniv.edu  Mon May 18 18:42:04 2009
From: halit at su.sabanciuniv.edu (Halit Erdogan)
Date: Mon, 18 May 2009 19:42:04 +0300
Subject: [gecode-users] Graph Connectivity Problem
Message-ID: <20090518194204.zlxa2b52wwk80s4k@webmail.sabanciuniv.edu>

Dear All,

Although it seems a very common problem I could not find any  
information on forcing graph connectedness neither in documentation  
nor in the web archive.

The problem is: I have a matrix "m" representing an undirected graph.  
m(i,j) = 1 means there is an edge between the vertices i and j. I want  
m to represent a connected graph (every pair of distinct vertices in  
the graph ( (i,j) in m) is connected through some path). How can I  
write this as a constraint in gecode?

thanks in advance,
-halit



-- 
Halit Erdogan
B.S. Sabanci University
Computer Science and Engineering

email   : halit at su.sabanciuniv.edu
phone   : +90 505 476 75 76
webpage : http://students.sabanciuniv.edu/~halit/



From mmann at informatik.uni-freiburg.de  Mon May 18 19:01:39 2009
From: mmann at informatik.uni-freiburg.de (Martin Mann)
Date: Mon, 18 May 2009 19:01:39 +0200
Subject: [gecode-users] How to set an arbitrary RandomGenerator
 for	randomized branching?!?
In-Reply-To: <80537a260905180931mb9adfb7t9408c732d0123e4a@mail.gmail.com>
References: <4A0DEE9B.7000504@informatik.uni-freiburg.de>	<63b5c8b00905180055q54bf57aeub20d27b6263c1715@mail.gmail.com>
	<80537a260905180931mb9adfb7t9408c732d0123e4a@mail.gmail.com>
Message-ID: <4A119473.3030603@informatik.uni-freiburg.de>


Alright, what is my scenario:

I have a stochastic simulation e.g. a Markov chain. Within this 
simulation, for each step x_i a CSP is formulated and I would like to 
get a random solution r. This solution r is accepted based on some 
probability. Thus, I can stay at x_i (x_(i+1)=x_i) or proceed to r 
(x_(i+1)=r).

So I have two "areas" where random numbers are produced: (1) the Markov 
chain and (2) the randomized branching within Gecode.

Now I would like to have ONE pseudo random number generator (RNG) used 
for both to ensure that I have reproducable results...

One possible hack is the following:
- assume RNG_M for the markov chain and RNG_G for gecode internals.
- for each step I set the seed of RNG_G via a random number drawn from RNG_M
- I use RNG_M for the Markov chain step check

Would be an option, but it would ease the problem a lot if one could 
directly use the same RNG for both or not?

Another point about arbitrary RNGs is about statistics. I am working in 
a field were e.g. physics care a lot about the random number 
distributions and statistics a pseudo random number generator gives. 
Therefore, these people like to set up their favorite RNG they trust 
most to give low-biased stochastic simulations.
In the above solution, the RNG_M can be defined freely, the RNG_G not.

That's why I was asking. :) It's not about speed or space, more about 
application.

But so long the above solution will do or has to be sufficient.

Thanks,

Martin




Javier Andr?s Mena Zapata schrieb:
> Hi,
> 
> Just curiosity... Do you prefer RNG speed, RNG space, general speed or
> general space?
> 
> Cheers,
> 
> On Mon, May 18, 2009 at 2:55 AM, Mikael Zayenz Lagerkvist
> <zayenz at gmail.com>wrote:
> 
>> Hi,
>>
>> Currently it is not possible to exchange the random number generator.
>> Furthermore, the implementation uses properties of the random number
>> generator that would most probably compromise efficiency if they were
>> abstracted away (for example, the state is limited to a single
>> unsigned int as seed). If you want to use your own random number
>> generator, I would suggest writing your own subclasses of ViewSelBase
>> and ValSelbase similar to ViewSelRnd and ValRnd.
>>
>> For curiosity, what is the reason that you want to change the random
>> number generator used?
>>
>> Cheers,
>> Mikael
>>
>> On Sat, May 16, 2009 at 12:37 AM, Martin Mann
>> <mmann at informatik.uni-freiburg.de> wrote:
>>> Hi everybody,
>>>
>>> I digged a bit into the Gecode source about the randomized branching
>>> supported since version 3.
>>>
>>> In line 124 in gecode/support/random.hpp I found the definition of
>>> RandomGenerator internally used in the view selection:
>>>
>>>
>> http://www.gecode.org/doc-latest/reference/group__FuncSupport.html#g02fe942f90a57a25639f09960dab4459
>>> As given there, it is just a typedef onto the
>>> LinearCongruentialGenerator provided by Gecode but I would like to set
>>> up my own random number generator...
>>>
>>> Is there a possibility to support user defined generators? e.g. in
>>> coming versions?
>>>
>>> If not available right now, maybe you like the following suggestion:
>>>
>>> A possibility would be a super class 'RNG' that has to be implemented by
>>> every generator plus a kind of factory class 'RNF' with static members
>> only.
>>> The RNF would be a wrapper around the current RNG instance to use
>>> (stored in a static internal member). Thus, all Gecode internals that
>>> need a random number use a static interface of RNF instead of some RNG
>>> instance members. So the library gets independent of the concrete RNG
>>> used and you get the possibility to register a user defined RNG within
>>> the RNF. Per default the RNF can use the linear congruential generator
>>> provided. The static interface and data member would avoid annoying
>>> copies of RNGs all around and won't complicate your Gecode
>> internals/source.
>>>
>>> Just a suggestion... if it is already possible just ignore and please
>>> let me know how to do with the current Gecode version. :)
>>>
>>>
>>> Have a nice weekend,
>>>
>>> Martin
>>>
>>>
>>> _______________________________________________
>>> Gecode users mailing list
>>> users at gecode.org
>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>>
>>
>>
>> --
>> Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/<http://www.ict.kth.se/%7Ezayenz/>
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
> 
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-- 
Martin Mann, Dipl. Bioinf.
Bioinformatics - Inst. of Computer Science
Albert-Ludwigs-University Freiburg
Tel: ++49-761-203-8259
Fax: ++49-761-203-7462
http://www.bioinf.uni-freiburg.de/~mmann/



From tack at ps.uni-sb.de  Tue May 19 03:29:52 2009
From: tack at ps.uni-sb.de (Guido Tack)
Date: Tue, 19 May 2009 11:29:52 +1000
Subject: [gecode-users] How to set an arbitrary RandomGenerator
	for	randomized branching?!?
In-Reply-To: <4A0DEE9B.7000504@informatik.uni-freiburg.de>
References: <4A0DEE9B.7000504@informatik.uni-freiburg.de>
Message-ID: <73EA97A3-3C52-4E32-B44C-D111D3292B3A@ps.uni-sb.de>

Martin Mann wrote:
> Is there a possibility to support user defined generators? e.g. in
> coming versions?
>
> If not available right now, maybe you like the following suggestion:

[...]

A problem with your approach is that a global random number generator  
doesn't work in a multi-threaded setting (you don't want to lock  
access to it, I think).  One would at least have to have it per thread.

Cheers,
	Guido




From cschulte at kth.se  Tue May 19 09:22:00 2009
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 19 May 2009 09:22:00 +0200
Subject: [gecode-users] How to set an arbitrary
	RandomGenerator	for	randomized branching?!?
In-Reply-To: <73EA97A3-3C52-4E32-B44C-D111D3292B3A@ps.uni-sb.de>
References: <4A0DEE9B.7000504@informatik.uni-freiburg.de>
	<73EA97A3-3C52-4E32-B44C-D111D3292B3A@ps.uni-sb.de>
Message-ID: <004701c9d852$80d5e870$8281b950$@se>

Even that is not enough! It also needs to work with recomputation, that's
why each branching actually needs to store the entire state of a random
number generator.

Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Guido Tack
Sent: Tuesday, May 19, 2009 3:30 AM
To: Martin Mann
Cc: gecode user list
Subject: Re: [gecode-users] How to set an arbitrary RandomGenerator for
randomized branching?!?

Martin Mann wrote:
> Is there a possibility to support user defined generators? e.g. in
> coming versions?
>
> If not available right now, maybe you like the following suggestion:

[...]

A problem with your approach is that a global random number generator  
doesn't work in a multi-threaded setting (you don't want to lock  
access to it, I think).  One would at least have to have it per thread.

Cheers,
	Guido


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From cschulte at kth.se  Tue May 19 09:47:06 2009
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 19 May 2009 09:47:06 +0200
Subject: [gecode-users] Graph Connectivity Problem
In-Reply-To: <20090518194204.zlxa2b52wwk80s4k@webmail.sabanciuniv.edu>
References: <20090518194204.zlxa2b52wwk80s4k@webmail.sabanciuniv.edu>
Message-ID: <005c01c9d856$0238e540$06aaafc0$@se>

Hi Halit,

unfortunately there is no predefined constraint for that. There are two
options for pulling that of: use reification or implement a propagator to
enforce connectedness. I think I haven't seen a special constraint for that
in any system.

Anyway, you might want to not encode that as 0/1 but set variables: in a
sequence of n variables x, the set for x_n contains the adjacent nodes. That
should be more efficient.

If you are interested in building a propagator, that should be pretty easy.
The implementation of the circuit constraint will give much of what needs to
be done.

Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Halit Erdogan
Sent: Monday, May 18, 2009 6:42 PM
To: users at gecode.org
Subject: [gecode-users] Graph Connectivity Problem

Dear All,

Although it seems a very common problem I could not find any  
information on forcing graph connectedness neither in documentation  
nor in the web archive.

The problem is: I have a matrix "m" representing an undirected graph.  
m(i,j) = 1 means there is an edge between the vertices i and j. I want  
m to represent a connected graph (every pair of distinct vertices in  
the graph ( (i,j) in m) is connected through some path). How can I  
write this as a constraint in gecode?

thanks in advance,
-halit



-- 
Halit Erdogan
B.S. Sabanci University
Computer Science and Engineering

email   : halit at su.sabanciuniv.edu
phone   : +90 505 476 75 76
webpage : http://students.sabanciuniv.edu/~halit/

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From cschulte at kth.se  Tue May 19 09:52:33 2009
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 19 May 2009 09:52:33 +0200
Subject: [gecode-users] How to set an arbitrary RandomGenerator
	for	randomized branching?!?
In-Reply-To: <80537a260905180931mb9adfb7t9408c732d0123e4a@mail.gmail.com>
References: <4A0DEE9B.7000504@informatik.uni-freiburg.de>	<63b5c8b00905180055q54bf57aeub20d27b6263c1715@mail.gmail.com>
	<80537a260905180931mb9adfb7t9408c732d0123e4a@mail.gmail.com>
Message-ID: <005f01c9d856$c4e61590$4eb240b0$@se>

Hmm, I have to admit that I do not fully understand your question. What's
the difference between "general" and "RNG" in this context?

 

RNG speed is quite important but memory requirements are really the issue as
every random branching stores all state necessary to recompute the random
decisions.

 

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Javier Andr?s Mena Zapata
Sent: Monday, May 18, 2009 6:32 PM
To: gecode user list
Subject: Re: [gecode-users] How to set an arbitrary RandomGenerator for
randomized branching?!?

 

Hi,

Just curiosity... Do you prefer RNG speed, RNG space, general speed or
general space?

Cheers,

On Mon, May 18, 2009 at 2:55 AM, Mikael Zayenz Lagerkvist <zayenz at gmail.com>
wrote:

Hi,

Currently it is not possible to exchange the random number generator.
Furthermore, the implementation uses properties of the random number
generator that would most probably compromise efficiency if they were
abstracted away (for example, the state is limited to a single
unsigned int as seed). If you want to use your own random number
generator, I would suggest writing your own subclasses of ViewSelBase
and ValSelbase similar to ViewSelRnd and ValRnd.

For curiosity, what is the reason that you want to change the random
number generator used?

Cheers,
Mikael


On Sat, May 16, 2009 at 12:37 AM, Martin Mann
<mmann at informatik.uni-freiburg.de> wrote:
>
> Hi everybody,
>
> I digged a bit into the Gecode source about the randomized branching
> supported since version 3.
>
> In line 124 in gecode/support/random.hpp I found the definition of
> RandomGenerator internally used in the view selection:
>
>
http://www.gecode.org/doc-latest/reference/group__FuncSupport.html#g02fe942f
90a57a25639f09960dab4459
>
> As given there, it is just a typedef onto the
> LinearCongruentialGenerator provided by Gecode but I would like to set
> up my own random number generator...
>
> Is there a possibility to support user defined generators? e.g. in
> coming versions?
>
> If not available right now, maybe you like the following suggestion:
>
> A possibility would be a super class 'RNG' that has to be implemented by
> every generator plus a kind of factory class 'RNF' with static members
only.
> The RNF would be a wrapper around the current RNG instance to use
> (stored in a static internal member). Thus, all Gecode internals that
> need a random number use a static interface of RNF instead of some RNG
> instance members. So the library gets independent of the concrete RNG
> used and you get the possibility to register a user defined RNG within
> the RNF. Per default the RNF can use the linear congruential generator
> provided. The static interface and data member would avoid annoying
> copies of RNGs all around and won't complicate your Gecode
internals/source.
>
>
> Just a suggestion... if it is already possible just ignore and please
> let me know how to do with the current Gecode version. :)
>
>
> Have a nice weekend,
>
> Martin
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>




--
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/
<http://www.ict.kth.se/%7Ezayenz/> 


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




-- 
"La buena educaci?n, es lo que nos queda cuando se nos olvida todo lo que
nos han ense?ado"
    ??

Javier Andr?s Mena Zapata
http://StrategicDecision.net/
+57 (2) 318 1000 ext. 2910
Cali - Colombia

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20090519/8599bcb4/attachment.htm>

From zayenz at gmail.com  Tue May 19 11:02:53 2009
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Tue, 19 May 2009 11:02:53 +0200
Subject: [gecode-users] How to set an arbitrary RandomGenerator for
	randomized branching?!?
In-Reply-To: <4A119473.3030603@informatik.uni-freiburg.de>
References: <4A0DEE9B.7000504@informatik.uni-freiburg.de>
	<63b5c8b00905180055q54bf57aeub20d27b6263c1715@mail.gmail.com> 
	<80537a260905180931mb9adfb7t9408c732d0123e4a@mail.gmail.com> 
	<4A119473.3030603@informatik.uni-freiburg.de>
Message-ID: <63b5c8b00905190202x1aca93b9s1067b937aa76abe0@mail.gmail.com>

Hi,

For getting reproducible results, setting the random number generator
seed in the beginning from the global random number generator is a
good way to do it as long as you are not using non-monotonic
propagators. The rationale for using an LCG as the standard random
number generator in Gecode is that it is simple, fast, gives decent
random numbers, and it has a small state.

However, please note that just using random variable and value
selection will not give you a random solution with any kind of known
distribution. Finding random solutions to CSPs with a given (usually
uniform) distribution is a non-trivial problem. IMHO, XorSample by
Gomes, Sabharwal, and Selman [1] is a nice example of how to get
near-uniform solutions to SAT-problems.

Cheers,
Mikael

[1] http://www.cs.cornell.edu/~sabhar/publications/xorSamplingNIPS06.pdf

On Mon, May 18, 2009 at 7:01 PM, Martin Mann
<mmann at informatik.uni-freiburg.de> wrote:
>
> Alright, what is my scenario:
>
> I have a stochastic simulation e.g. a Markov chain. Within this
> simulation, for each step x_i a CSP is formulated and I would like to
> get a random solution r. This solution r is accepted based on some
> probability. Thus, I can stay at x_i (x_(i+1)=x_i) or proceed to r
> (x_(i+1)=r).
>
> So I have two "areas" where random numbers are produced: (1) the Markov
> chain and (2) the randomized branching within Gecode.
>
> Now I would like to have ONE pseudo random number generator (RNG) used
> for both to ensure that I have reproducable results...
>
> One possible hack is the following:
> - assume RNG_M for the markov chain and RNG_G for gecode internals.
> - for each step I set the seed of RNG_G via a random number drawn from RNG_M
> - I use RNG_M for the Markov chain step check
>
> Would be an option, but it would ease the problem a lot if one could
> directly use the same RNG for both or not?
>
> Another point about arbitrary RNGs is about statistics. I am working in
> a field were e.g. physics care a lot about the random number
> distributions and statistics a pseudo random number generator gives.
> Therefore, these people like to set up their favorite RNG they trust
> most to give low-biased stochastic simulations.
> In the above solution, the RNG_M can be defined freely, the RNG_G not.
>
> That's why I was asking. :) It's not about speed or space, more about
> application.
>
> But so long the above solution will do or has to be sufficient.
>
> Thanks,
>
> Martin
>
>
>
>
> Javier Andr?s Mena Zapata schrieb:
>> Hi,
>>
>> Just curiosity... Do you prefer RNG speed, RNG space, general speed or
>> general space?
>>
>> Cheers,
>>
>> On Mon, May 18, 2009 at 2:55 AM, Mikael Zayenz Lagerkvist
>> <zayenz at gmail.com>wrote:
>>
>>> Hi,
>>>
>>> Currently it is not possible to exchange the random number generator.
>>> Furthermore, the implementation uses properties of the random number
>>> generator that would most probably compromise efficiency if they were
>>> abstracted away (for example, the state is limited to a single
>>> unsigned int as seed). If you want to use your own random number
>>> generator, I would suggest writing your own subclasses of ViewSelBase
>>> and ValSelbase similar to ViewSelRnd and ValRnd.
>>>
>>> For curiosity, what is the reason that you want to change the random
>>> number generator used?
>>>
>>> Cheers,
>>> Mikael
>>>
>>> On Sat, May 16, 2009 at 12:37 AM, Martin Mann
>>> <mmann at informatik.uni-freiburg.de> wrote:
>>>> Hi everybody,
>>>>
>>>> I digged a bit into the Gecode source about the randomized branching
>>>> supported since version 3.
>>>>
>>>> In line 124 in gecode/support/random.hpp I found the definition of
>>>> RandomGenerator internally used in the view selection:
>>>>
>>>>
>>> http://www.gecode.org/doc-latest/reference/group__FuncSupport.html#g02fe942f90a57a25639f09960dab4459
>>>> As given there, it is just a typedef onto the
>>>> LinearCongruentialGenerator provided by Gecode but I would like to set
>>>> up my own random number generator...
>>>>
>>>> Is there a possibility to support user defined generators? e.g. in
>>>> coming versions?
>>>>
>>>> If not available right now, maybe you like the following suggestion:
>>>>
>>>> A possibility would be a super class 'RNG' that has to be implemented by
>>>> every generator plus a kind of factory class 'RNF' with static members
>>> only.
>>>> The RNF would be a wrapper around the current RNG instance to use
>>>> (stored in a static internal member). Thus, all Gecode internals that
>>>> need a random number use a static interface of RNF instead of some RNG
>>>> instance members. So the library gets independent of the concrete RNG
>>>> used and you get the possibility to register a user defined RNG within
>>>> the RNF. Per default the RNF can use the linear congruential generator
>>>> provided. The static interface and data member would avoid annoying
>>>> copies of RNGs all around and won't complicate your Gecode
>>> internals/source.
>>>>
>>>> Just a suggestion... if it is already possible just ignore and please
>>>> let me know how to do with the current Gecode version. :)
>>>>
>>>>
>>>> Have a nice weekend,
>>>>
>>>> Martin
>>>>
>>>>
>>>> _______________________________________________
>>>> Gecode users mailing list
>>>> users at gecode.org
>>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>>>
>>>
>>>
>>> --
>>> Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/<http://www.ict.kth.se/%7Ezayenz/>
>>>
>>> _______________________________________________
>>> Gecode users mailing list
>>> users at gecode.org
>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>>
>>
>>
>>
>>
>> ------------------------------------------------------------------------
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>
> --
> Martin Mann, Dipl. Bioinf.
> Bioinformatics - Inst. of Computer Science
> Albert-Ludwigs-University Freiburg
> Tel: ++49-761-203-8259
> Fax: ++49-761-203-7462
> http://www.bioinf.uni-freiburg.de/~mmann/
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>



-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/



From mmann at informatik.uni-freiburg.de  Tue May 19 18:08:51 2009
From: mmann at informatik.uni-freiburg.de (Martin Mann)
Date: Tue, 19 May 2009 18:08:51 +0200
Subject: [gecode-users] Advisors : need your advise if worth a look for my
	propagator! ; )
Message-ID: <4A12D993.10205@informatik.uni-freiburg.de>


Hi everybody,

thanks to your answers Mikael and the silent support and mails from 
Daniel Przybilla I have a better understanding of the Advisors, their 
use and functionality.

Now the question appears: is the effort/overhead worth for me or not?

I had a look at Mikaels thesis and the final statement that Advisors are 
mainly advantageous for n-ary constraint and not that useful for e.g. 
binary constraints (correct me if I got it wrong).

Thus, I would like to get your feeling on my constraint, because you are 
the experts on your system! ;)

================
  My problem:
================

I have a binary constraint propagator p(X,Y) that does a very strong but 
expensive filtering on the domains of variables X and Y. Thus I would 
like to delay the application until one of the domain sizes is smaller 
than a certain threshold.

In Gecode 1.3.* I managed like that:
- I subscribed the propagator for domain changes on the two variables
- within the propagate function I checked if the minimal domain size of 
both is smaller than my threshold
- if so I ran the filtering algorithm, otherwise I returned that nothing 
could be propagated (I was lazy and know this is kind of a hack.. ;) )

In my Gecode 3.* reimplementation I want to do it in the best way 
possible. So the question is: Do I stick to the old "hack" or is it 
worth a look to implement Advisors that do the domain size check for me?

=================================
  The CSP itself is quite simple:
=================================

- n variables : X_i with 1 <= i <= n
- one alldiff : distinct( X_1,..,X_n )
- (n-1) binary constraints : p(X_i, X_(i+1)) with 1 <= i < n

(for anybody even more interested in details : p encodes a neighboring 
constraint in a lattice and the whole CSP encodes a self-avoiding-walk 
of length n on a lattice)

=================================

Soo... the again final question: *Is it worth to use an Advisor for my 
domain size check? Or is the hack nasty but most probably faster?*

I know it is hard for you to give a statement without knowledge on the 
propagator's details but an expert guess would be sufficient for me. ;)

Thanks a lot!

Martin


-- 
Martin Mann, Dipl. Bioinf.
Bioinformatics - Inst. of Computer Science
Albert-Ludwigs-University Freiburg
Tel: ++49-761-203-8259
Fax: ++49-761-203-7462
http://www.bioinf.uni-freiburg.de/~mmann/



From pds at di.uevora.pt  Tue May 19 17:39:54 2009
From: pds at di.uevora.pt (Pedro Salgueiro)
Date: Tue, 19 May 2009 16:39:54 +0100
Subject: [gecode-users] Symbolic Constraints - fd_relation contraint in
	Gecode?
Message-ID: <1242747594.3938.122.camel@rebirth>

Hi!

GNU Prolog has a Symbolic Constraint called fd_relation that constraints
a tuple of variables to be equal to one tuple of a list of relations.

Here is its description: 

fd_relation(Relation, Vars) constraints the tuple of variables Vars to
be equal to one tuple of the list Relation. A tuple is represented by a
list.

Using this predicate as follows:

fd_relation([[0,0,0],[0,1,0]], [X,Y,Z]).

the tuple [X,Y,Z] only could take the values specified in the tuple list
[[0,0,0],[0,1,0]].

Here is its documentation:
http://www.gprolog.org/manual/html_node/gprolog062.html#toc274

Is there any simple way to do this in Gecode? Maybe a constraint that
limits the domain values of a tuple defined by an IntVarArray to any of
the elements of an array, where each element of such array is an array
composed by Integer values, defining a tuple.

Any help will be appreciated :)

Thanks
Pedro Salgueiro









From cschulte at kth.se  Tue May 19 21:42:39 2009
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 19 May 2009 21:42:39 +0200
Subject: [gecode-users] Advisors : need your advise if worth a look for
	my	propagator! ; )
In-Reply-To: <4A12D993.10205@informatik.uni-freiburg.de>
References: <4A12D993.10205@informatik.uni-freiburg.de>
Message-ID: <001b01c9d8b9$f84f5d70$e8ee1850$@se>

Nope, don't use advisors. Just do what you did before, that's just fine. You
are now even on the safe side as what you did might actually be
non-monotonic which is fine for 3.*.

The main advantage of advisors is really to implement propagators for
constraints with n variables and getting better asymptotic complexity (for
example, when you have to find out which variable has changed for doing
propagation, a propagator without advisors will always have O(n) complexity
in order to find out which variable has changed and some propagation
algorithms are actually constant time). Or, you really care about how the
domain has changed.

In a way, the reason why advisors are not that essential in your situation
is that scheduling propagators and executing them is actually very very
efficient in Gecode (okay, I had to brag a little).

Cheers
Christian

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Martin Mann
Sent: Tuesday, May 19, 2009 6:09 PM
To: gecode user list
Subject: [gecode-users] Advisors : need your advise if worth a look for my
propagator! ; )


Hi everybody,

thanks to your answers Mikael and the silent support and mails from 
Daniel Przybilla I have a better understanding of the Advisors, their 
use and functionality.

Now the question appears: is the effort/overhead worth for me or not?

I had a look at Mikaels thesis and the final statement that Advisors are 
mainly advantageous for n-ary constraint and not that useful for e.g. 
binary constraints (correct me if I got it wrong).

Thus, I would like to get your feeling on my constraint, because you are 
the experts on your system! ;)

================
  My problem:
================

I have a binary constraint propagator p(X,Y) that does a very strong but 
expensive filtering on the domains of variables X and Y. Thus I would 
like to delay the application until one of the domain sizes is smaller 
than a certain threshold.

In Gecode 1.3.* I managed like that:
- I subscribed the propagator for domain changes on the two variables
- within the propagate function I checked if the minimal domain size of 
both is smaller than my threshold
- if so I ran the filtering algorithm, otherwise I returned that nothing 
could be propagated (I was lazy and know this is kind of a hack.. ;) )

In my Gecode 3.* reimplementation I want to do it in the best way 
possible. So the question is: Do I stick to the old "hack" or is it 
worth a look to implement Advisors that do the domain size check for me?

=================================
  The CSP itself is quite simple:
=================================

- n variables : X_i with 1 <= i <= n
- one alldiff : distinct( X_1,..,X_n )
- (n-1) binary constraints : p(X_i, X_(i+1)) with 1 <= i < n

(for anybody even more interested in details : p encodes a neighboring 
constraint in a lattice and the whole CSP encodes a self-avoiding-walk 
of length n on a lattice)

=================================

Soo... the again final question: *Is it worth to use an Advisor for my 
domain size check? Or is the hack nasty but most probably faster?*

I know it is hard for you to give a statement without knowledge on the 
propagator's details but an expert guess would be sufficient for me. ;)

Thanks a lot!

Martin


-- 
Martin Mann, Dipl. Bioinf.
Bioinformatics - Inst. of Computer Science
Albert-Ludwigs-University Freiburg
Tel: ++49-761-203-8259
Fax: ++49-761-203-7462
http://www.bioinf.uni-freiburg.de/~mmann/

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From cschulte at kth.se  Tue May 19 21:37:01 2009
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 19 May 2009 21:37:01 +0200
Subject: [gecode-users] Symbolic Constraints - fd_relation contraint
	in	Gecode?
In-Reply-To: <1242747594.3938.122.camel@rebirth>
References: <1242747594.3938.122.camel@rebirth>
Message-ID: <001801c9d8b9$2f727770$8e576650$@se>

Yes, these constraints are called "extensional" (or user-defined
constraints). Gecode has quite some support for that: you can specify the
relation by a set of tuples (that's implemented as lists of lists in Prolog)
or by a regular expression or DFA. Please check "Modeling with Gecode", it
elaborates on extensional constraints.

Christian

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Pedro Salgueiro
Sent: Tuesday, May 19, 2009 5:40 PM
To: users at gecode.org
Subject: [gecode-users] Symbolic Constraints - fd_relation contraint in
Gecode?

Hi!

GNU Prolog has a Symbolic Constraint called fd_relation that constraints
a tuple of variables to be equal to one tuple of a list of relations.

Here is its description: 

fd_relation(Relation, Vars) constraints the tuple of variables Vars to
be equal to one tuple of the list Relation. A tuple is represented by a
list.

Using this predicate as follows:

fd_relation([[0,0,0],[0,1,0]], [X,Y,Z]).

the tuple [X,Y,Z] only could take the values specified in the tuple list
[[0,0,0],[0,1,0]].

Here is its documentation:
http://www.gprolog.org/manual/html_node/gprolog062.html#toc274

Is there any simple way to do this in Gecode? Maybe a constraint that
limits the domain values of a tuple defined by an IntVarArray to any of
the elements of an array, where each element of such array is an array
composed by Integer values, defining a tuple.

Any help will be appreciated :)

Thanks
Pedro Salgueiro







_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From javimena at gmail.com  Tue May 19 21:30:15 2009
From: javimena at gmail.com (=?ISO-8859-1?Q?Javier_Andr=E9s_Mena_Zapata?=)
Date: Tue, 19 May 2009 14:30:15 -0500
Subject: [gecode-users] Decimal
Message-ID: <80537a260905191230l1f0f7725yf737d6dbfc1045fd@mail.gmail.com>

Hi,

I'm modelling a financial problem (calculating minimum interests payments
and ROI), and I want to model the "money" value using Gecode integer
variables.

For example, representing 10.25 is like storing 1025 divided by 100.  But,
there's a problem with the multiplication, because the interests rates are
float values with very muchs decimals.  For example 0.00643403011.  I think
there may be an overflow if I model this decimal using something like 6434
divided by 1000000.

What do you think it's the best technique for modelling this problem:

   1. Use IntVars and the current propagators (as proposed here).
   2. Use IntVars, and creating new propagators for IntVar x Float
   multiplication.
   3. Use float vars, and its propagators.
   4. Other?

Thanks,

-- 
Javier Andr?s Mena Zapata
http://StrategicDecision.net/
Cali - Colombia
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20090519/28cda986/attachment.htm>

From mmann at informatik.uni-freiburg.de  Tue May 19 22:23:27 2009
From: mmann at informatik.uni-freiburg.de (Martin Mann)
Date: Tue, 19 May 2009 22:23:27 +0200
Subject: [gecode-users] Advisors : need your advise if worth a look for
 my	propagator! ; )
In-Reply-To: <001b01c9d8b9$f84f5d70$e8ee1850$@se>
References: <4A12D993.10205@informatik.uni-freiburg.de>
	<001b01c9d8b9$f84f5d70$e8ee1850$@se>
Message-ID: <4A13153F.4070608@informatik.uni-freiburg.de>


Alright,

that's what I expected having Mikaels thesis in mind.

Thanks for the detailed reply,

Martin

PS. And yesss... the performance in Gecode 1.3.* was already great! ;) 
Not much room for an increase but I will compare with the Gecode 3.* 
implementation!


Christian Schulte schrieb:
> Nope, don't use advisors. Just do what you did before, that's just fine. You
> are now even on the safe side as what you did might actually be
> non-monotonic which is fine for 3.*.
> 
> The main advantage of advisors is really to implement propagators for
> constraints with n variables and getting better asymptotic complexity (for
> example, when you have to find out which variable has changed for doing
> propagation, a propagator without advisors will always have O(n) complexity
> in order to find out which variable has changed and some propagation
> algorithms are actually constant time). Or, you really care about how the
> domain has changed.
> 
> In a way, the reason why advisors are not that essential in your situation
> is that scheduling propagators and executing them is actually very very
> efficient in Gecode (okay, I had to brag a little).
> 
> Cheers
> Christian
> 
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Martin Mann
> Sent: Tuesday, May 19, 2009 6:09 PM
> To: gecode user list
> Subject: [gecode-users] Advisors : need your advise if worth a look for my
> propagator! ; )
> 
> 
> Hi everybody,
> 
> thanks to your answers Mikael and the silent support and mails from 
> Daniel Przybilla I have a better understanding of the Advisors, their 
> use and functionality.
> 
> Now the question appears: is the effort/overhead worth for me or not?
> 
> I had a look at Mikaels thesis and the final statement that Advisors are 
> mainly advantageous for n-ary constraint and not that useful for e.g. 
> binary constraints (correct me if I got it wrong).
> 
> Thus, I would like to get your feeling on my constraint, because you are 
> the experts on your system! ;)
> 
> ================
>   My problem:
> ================
> 
> I have a binary constraint propagator p(X,Y) that does a very strong but 
> expensive filtering on the domains of variables X and Y. Thus I would 
> like to delay the application until one of the domain sizes is smaller 
> than a certain threshold.
> 
> In Gecode 1.3.* I managed like that:
> - I subscribed the propagator for domain changes on the two variables
> - within the propagate function I checked if the minimal domain size of 
> both is smaller than my threshold
> - if so I ran the filtering algorithm, otherwise I returned that nothing 
> could be propagated (I was lazy and know this is kind of a hack.. ;) )
> 
> In my Gecode 3.* reimplementation I want to do it in the best way 
> possible. So the question is: Do I stick to the old "hack" or is it 
> worth a look to implement Advisors that do the domain size check for me?
> 
> =================================
>   The CSP itself is quite simple:
> =================================
> 
> - n variables : X_i with 1 <= i <= n
> - one alldiff : distinct( X_1,..,X_n )
> - (n-1) binary constraints : p(X_i, X_(i+1)) with 1 <= i < n
> 
> (for anybody even more interested in details : p encodes a neighboring 
> constraint in a lattice and the whole CSP encodes a self-avoiding-walk 
> of length n on a lattice)
> 
> =================================
> 
> Soo... the again final question: *Is it worth to use an Advisor for my 
> domain size check? Or is the hack nasty but most probably faster?*
> 
> I know it is hard for you to give a statement without knowledge on the 
> propagator's details but an expert guess would be sufficient for me. ;)
> 
> Thanks a lot!
> 
> Martin
> 
> 




From gregoire.dooms at gmail.com  Tue May 19 21:45:54 2009
From: gregoire.dooms at gmail.com (=?ISO-8859-1?Q?Gr=E9goire_Dooms?=)
Date: Tue, 19 May 2009 20:45:54 +0100
Subject: [gecode-users] Graph Connectivity Problem
In-Reply-To: <005c01c9d856$0238e540$06aaafc0$@se>
References: <20090518194204.zlxa2b52wwk80s4k@webmail.sabanciuniv.edu>
	<005c01c9d856$0238e540$06aaafc0$@se>
Message-ID: <978977470905191245n19eb2b4chcac0b48e263cb327@mail.gmail.com>

Hi Halit,

You should find the description of a propagator for this constraint on
undirected graphs (as a sub-component of a larger propagator) in this paper:
http://www.springerlink.com/content/25503116766r373x/
In summary, a simple propagator consists in doing a DFS in the graph of all
possible edges and computing all bridges and cutnodes. Include those which
join two biconnected components which you know belong to the graph must
belong to the graph. Discard the connected components which are disjoint
from the main connected component of your graph.

Best,
--
Greg


On Tue, May 19, 2009 at 8:47 AM, Christian Schulte <cschulte at kth.se> wrote:

> Hi Halit,
>
> unfortunately there is no predefined constraint for that. There are two
> options for pulling that of: use reification or implement a propagator to
> enforce connectedness. I think I haven't seen a special constraint for that
> in any system.
>
> Anyway, you might want to not encode that as 0/1 but set variables: in a
> sequence of n variables x, the set for x_n contains the adjacent nodes.
> That
> should be more efficient.
>
> If you are interested in building a propagator, that should be pretty easy.
> The implementation of the circuit constraint will give much of what needs
> to
> be done.
>
> Christian
>
> --
> Christian Schulte, www.ict.kth.se/~cschulte/<http://www.ict.kth.se/%7Ecschulte/>
>
>
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Halit Erdogan
> Sent: Monday, May 18, 2009 6:42 PM
> To: users at gecode.org
> Subject: [gecode-users] Graph Connectivity Problem
>
> Dear All,
>
> Although it seems a very common problem I could not find any
> information on forcing graph connectedness neither in documentation
> nor in the web archive.
>
> The problem is: I have a matrix "m" representing an undirected graph.
> m(i,j) = 1 means there is an edge between the vertices i and j. I want
> m to represent a connected graph (every pair of distinct vertices in
> the graph ( (i,j) in m) is connected through some path). How can I
> write this as a constraint in gecode?
>
> thanks in advance,
> -halit
>
>
>
> --
> Halit Erdogan
> B.S. Sabanci University
> Computer Science and Engineering
>
> email   : halit at su.sabanciuniv.edu
> phone   : +90 505 476 75 76
> webpage : http://students.sabanciuniv.edu/~halit/<http://students.sabanciuniv.edu/%7Ehalit/>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20090519/04da3de5/attachment.htm>

From denys.duchier at univ-orleans.fr  Tue May 19 22:36:47 2009
From: denys.duchier at univ-orleans.fr (Denys Duchier)
Date: Tue, 19 May 2009 22:36:47 +0200
Subject: [gecode-users] Graph Connectivity Problem
In-Reply-To: <20090518194204.zlxa2b52wwk80s4k@webmail.sabanciuniv.edu> (Halit
	Erdogan's message of "Mon, 18 May 2009 19:42:04 +0300")
References: <20090518194204.zlxa2b52wwk80s4k@webmail.sabanciuniv.edu>
Message-ID: <87my98akyo.fsf@tiny.univ-orleans.fr>

Halit Erdogan <halit at su.sabanciuniv.edu> writes:

> Although it seems a very common problem I could not find any  
> information on forcing graph connectedness neither in documentation  
> nor in the web archive.
>
> The problem is: I have a matrix "m" representing an undirected graph.  
> m(i,j) = 1 means there is an edge between the vertices i and j. I want  
> m to represent a connected graph (every pair of distinct vertices in  
> the graph ( (i,j) in m) is connected through some path). How can I  
> write this as a constraint in gecode?

You could use the set-based encoding which I have been using for years.
The idea is to model the notions of successors -> and its transitive ->+
and reflexive transitive ->* closures.

Let V be the set of all nodes, and ->(w) be the set of immediate
successors of node w.

    ->+(w) = \cup< ->*(w') | w'\in V >[->(w)]

the above uses the "union select" constraint (one instance of gecode's
"element" constraint on set variables).

    ->*(w) = {w} \cup ->+(w)
or  ->*(w) = {w} \uplus ->+(w) if the graph should be acyclic

if the graph is undirected and connected:

    ->*(w) = V  \forall w \in V

since all nodes must be reachable from any node.

Cheers,

--Denys



From cschulte at kth.se  Wed May 20 09:34:21 2009
From: cschulte at kth.se (Christian Schulte)
Date: Wed, 20 May 2009 09:34:21 +0200
Subject: [gecode-users] Decimal
In-Reply-To: <80537a260905191230l1f0f7725yf737d6dbfc1045fd@mail.gmail.com>
References: <80537a260905191230l1f0f7725yf737d6dbfc1045fd@mail.gmail.com>
Message-ID: <003a01c9d91d$64a42dd0$2dec8970$@se>

I think you should go for float variables, however I do not know whether
they have been ported to 3.* Any comment


 

Christian

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Javier Andr?s Mena Zapata
Sent: Tuesday, May 19, 2009 9:30 PM
To: gecode list
Subject: [gecode-users] Decimal

 

Hi,

I'm modelling a financial problem (calculating minimum interests payments
and ROI), and I want to model the "money" value using Gecode integer
variables.

For example, representing 10.25 is like storing 1025 divided by 100.  But,
there's a problem with the multiplication, because the interests rates are
float values with very muchs decimals.  For example 0.00643403011.  I think
there may be an overflow if I model this decimal using something like 6434
divided by 1000000.

What do you think it's the best technique for modelling this problem:

1.	Use IntVars and the current propagators (as proposed here).
2.	Use IntVars, and creating new propagators for IntVar x Float
multiplication.
3.	Use float vars, and its propagators.
4.	Other?

Thanks,

-- 
Javier Andr?s Mena Zapata
http://StrategicDecision.net/
Cali - Colombia

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20090520/ed54ac2b/attachment.htm>

From filip.konvicka at logis.cz  Wed May 20 15:05:11 2009
From: filip.konvicka at logis.cz (=?UTF-8?B?RmlsaXAgS29udmnEjWth?=)
Date: Wed, 20 May 2009 15:05:11 +0200
Subject: [gecode-users] Decimal
In-Reply-To: <003a01c9d91d$64a42dd0$2dec8970$@se>
References: <80537a260905191230l1f0f7725yf737d6dbfc1045fd@mail.gmail.com>
	<003a01c9d91d$64a42dd0$2dec8970$@se>
Message-ID: <4A140007.6070806@logis.cz>



Yes, that sounds like a job for float variables. But I've not had time 
to port the variables to 3.0 yet, sorry.

Javier, you should find a patch for Gecode 2.2.0 in this ML archive at 
gmane.org that adds floating variables to Gecode.

Note however that in all cases, you need to be careful about error 
propagation and scaling problems if you're dealing with such numbers. 
This is no easy task. The Boost.Interval library (used in float 
variables) is supposed to help with this, so the float variables should 
be correct, but the propagation may be weaker due to scaling/rounding 
problems. This is of course a limitation of the floating-point data 
types. The number you mention already has about 10 valid digits, so any 
operation you do with such number will likely result in precision lost. 
You may consider running float variables with a library like MPFR 
(www.mpfr.org) to improve precision.

Hope this helps,
Filip

> I think you should go for float variables, however I do not know whether
> they have been ported to 3.* Any comment?
>
> Christian
>
> *From:* users-bounces-2NGZVH8mcjgdnm+yROfE0A at public.gmane.org
> [mailto:users-bounces-2NGZVH8mcjgdnm+yROfE0A at public.gmane.org] *On
> Behalf Of *Javier Andr?s Mena Zapata
> *Sent:* Tuesday, May 19, 2009 9:30 PM
> *To:* gecode list
> *Subject:* [gecode-users] Decimal
>
> Hi,
>
> I'm modelling a financial problem (calculating minimum interests
> payments and ROI), and I want to model the "money" value using Gecode
> integer variables.
>
> For example, representing 10.25 is like storing 1025 divided by 100.
> But, there's a problem with the multiplication, because the interests
> rates are float values with very muchs decimals. For example
> 0.00643403011. I think there may be an overflow if I model this decimal
> using something like 6434 divided by 1000000.
>
> What do you think it's the best technique for modelling this problem:
>
>    1. Use IntVars and the current propagators (as proposed here).
>    2. Use IntVars, and creating new propagators for IntVar x Float
>       multiplication.
>    3. Use float vars, and its propagators.
>    4. Other?
>
> Thanks,
>
> --
> Javier Andr?s Mena Zapata
> http://StrategicDecision.net/
> Cali - Colombia
>
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> Gecode users mailing list
> users-2NGZVH8mcjgdnm+yROfE0A at public.gmane.org
> https://www.gecode.org/mailman/listinfo/gecode-users


-- 
Filip Konvi?ka

LOGIS, s.r.o.
tel. +420 556 841 100
mob. +420 736 758 714




From denys.duchier at univ-orleans.fr  Wed May 20 16:18:38 2009
From: denys.duchier at univ-orleans.fr (Denys Duchier)
Date: Wed, 20 May 2009 16:18:38 +0200
Subject: [gecode-users] [BUG] missing include
Message-ID: <87fxezoo1t.fsf@tiny.univ-orleans.fr>

The following include is missing in gecode/support/thread/pthreads.hpp
causing compilation to fail for me (unknown sleep(3) and usleep(3)) in
both 3.1.0 and trunk:

#ifdef GECODE_HAS_UNISTD_H
#include <unistd.h>
#endif

or perhaps more correctly:

#ifdef GECODE_HAS_UNISTD_H
extern "C" {
#include <unistd.h>
}
#endif


--Denys



From cschulte at kth.se  Wed May 20 17:29:27 2009
From: cschulte at kth.se (Christian Schulte)
Date: Wed, 20 May 2009 17:29:27 +0200
Subject: [gecode-users] [BUG] missing include
In-Reply-To: <87fxezoo1t.fsf@tiny.univ-orleans.fr>
References: <87fxezoo1t.fsf@tiny.univ-orleans.fr>
Message-ID: <000601c9d95f$c3eadf40$4bc09dc0$@se>

Crap, you are of course right. It'll be fixed for 3.1.0 (aargh rebuilding
all from scratch again).

Thanks
Christian

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Denys Duchier
Sent: Wednesday, May 20, 2009 4:19 PM
To: users at gecode.org
Subject: [gecode-users] [BUG] missing include

The following include is missing in gecode/support/thread/pthreads.hpp
causing compilation to fail for me (unknown sleep(3) and usleep(3)) in
both 3.1.0 and trunk:

#ifdef GECODE_HAS_UNISTD_H
#include <unistd.h>
#endif

or perhaps more correctly:

#ifdef GECODE_HAS_UNISTD_H
extern "C" {
#include <unistd.h>
}
#endif


--Denys

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From pds at di.uevora.pt  Wed May 20 18:58:34 2009
From: pds at di.uevora.pt (Pedro Salgueiro)
Date: Wed, 20 May 2009 17:58:34 +0100
Subject: [gecode-users] Symbolic Constraints - fd_relation contraint in
 Gecode?
In-Reply-To: <001801c9d8b9$2f727770$8e576650$@se>
References: <1242747594.3938.122.camel@rebirth>
	<001801c9d8b9$2f727770$8e576650$@se>
Message-ID: <1242838714.3938.174.camel@rebirth>

Hi!

I already managed to use the "extensional" constraints with tuples and
they are great, but I have some problems modeling my problem with these
constraints.

In my problem, each valid tuples are composed by 16 values, and some of
those values can have very large values, such as 800000 or 900000. The
table I used to test has 125 of those tuples. I have tested it with
Gecode 2.x, and with values that big it gave segmentation fault. 

Then I updated it to Gecode 3.0.2 and it worked, but its performance is
really bad. Then I replaced the large values of the tuples in the table
with smaller ones, and the performance got lot better. 

When I started to increment some of the values, the performance of 
starts to get much worse...

Is this the expected behavior of Gecode when handling with large
integers, or am I doing something wrong?

Thank you,
Pedro Salgueiro



On Tue, 2009-05-19 at 21:37 +0200, Christian Schulte wrote:
> Yes, these constraints are called "extensional" (or user-defined
> constraints). Gecode has quite some support for that: you can specify the
> relation by a set of tuples (that's implemented as lists of lists in Prolog)
> or by a regular expression or DFA. Please check "Modeling with Gecode", it
> elaborates on extensional constraints.
> 
> Christian
> 
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Pedro Salgueiro
> Sent: Tuesday, May 19, 2009 5:40 PM
> To: users at gecode.org
> Subject: [gecode-users] Symbolic Constraints - fd_relation contraint in
> Gecode?
> 
> Hi!
> 
> GNU Prolog has a Symbolic Constraint called fd_relation that constraints
> a tuple of variables to be equal to one tuple of a list of relations.
> 
> Here is its description: 
> 
> fd_relation(Relation, Vars) constraints the tuple of variables Vars to
> be equal to one tuple of the list Relation. A tuple is represented by a
> list.
> 
> Using this predicate as follows:
> 
> fd_relation([[0,0,0],[0,1,0]], [X,Y,Z]).
> 
> the tuple [X,Y,Z] only could take the values specified in the tuple list
> [[0,0,0],[0,1,0]].
> 
> Here is its documentation:
> http://www.gprolog.org/manual/html_node/gprolog062.html#toc274
> 
> Is there any simple way to do this in Gecode? Maybe a constraint that
> limits the domain values of a tuple defined by an IntVarArray to any of
> the elements of an array, where each element of such array is an array
> composed by Integer values, defining a tuple.
> 
> Any help will be appreciated :)
> 
> Thanks
> Pedro Salgueiro
> 
> 
> 
> 
> 
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
> 




From cschulte at kth.se  Wed May 20 20:13:20 2009
From: cschulte at kth.se (Christian Schulte)
Date: Wed, 20 May 2009 20:13:20 +0200
Subject: [gecode-users] Symbolic Constraints - fd_relation contraint in
	Gecode?
In-Reply-To: <1242838714.3938.174.camel@rebirth>
References: <1242747594.3938.122.camel@rebirth>	
	<001801c9d8b9$2f727770$8e576650$@se>
	<1242838714.3938.174.camel@rebirth>
Message-ID: <000001c9d976$a89adee0$f9d09ca0$@se>

Hmmm, that's bizarre. The efficiency should not depend on the size of the
numbers but just of the numbers of tuples in a tuple set! Maybe this is
actually a bug.

Mikael: could you comment, please! [Mikael is the guy who did the
extensional stuff]

Christian

-----Original Message-----
From: Pedro Salgueiro [mailto:pedro.salgueiro at gmail.com] On Behalf Of Pedro
Salgueiro
Sent: Wednesday, May 20, 2009 6:59 PM
To: users at gecode.org; Christian Schulte
Cc: pds at di.uevora.pt
Subject: RE: [gecode-users] Symbolic Constraints - fd_relation contraint in
Gecode?

Hi!

I already managed to use the "extensional" constraints with tuples and
they are great, but I have some problems modeling my problem with these
constraints.

In my problem, each valid tuples are composed by 16 values, and some of
those values can have very large values, such as 800000 or 900000. The
table I used to test has 125 of those tuples. I have tested it with
Gecode 2.x, and with values that big it gave segmentation fault. 

Then I updated it to Gecode 3.0.2 and it worked, but its performance is
really bad. Then I replaced the large values of the tuples in the table
with smaller ones, and the performance got lot better. 

When I started to increment some of the values, the performance of 
starts to get much worse...

Is this the expected behavior of Gecode when handling with large
integers, or am I doing something wrong?

Thank you,
Pedro Salgueiro



On Tue, 2009-05-19 at 21:37 +0200, Christian Schulte wrote:
> Yes, these constraints are called "extensional" (or user-defined
> constraints). Gecode has quite some support for that: you can specify the
> relation by a set of tuples (that's implemented as lists of lists in
Prolog)
> or by a regular expression or DFA. Please check "Modeling with Gecode", it
> elaborates on extensional constraints.
> 
> Christian
> 
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Pedro Salgueiro
> Sent: Tuesday, May 19, 2009 5:40 PM
> To: users at gecode.org
> Subject: [gecode-users] Symbolic Constraints - fd_relation contraint in
> Gecode?
> 
> Hi!
> 
> GNU Prolog has a Symbolic Constraint called fd_relation that constraints
> a tuple of variables to be equal to one tuple of a list of relations.
> 
> Here is its description: 
> 
> fd_relation(Relation, Vars) constraints the tuple of variables Vars to
> be equal to one tuple of the list Relation. A tuple is represented by a
> list.
> 
> Using this predicate as follows:
> 
> fd_relation([[0,0,0],[0,1,0]], [X,Y,Z]).
> 
> the tuple [X,Y,Z] only could take the values specified in the tuple list
> [[0,0,0],[0,1,0]].
> 
> Here is its documentation:
> http://www.gprolog.org/manual/html_node/gprolog062.html#toc274
> 
> Is there any simple way to do this in Gecode? Maybe a constraint that
> limits the domain values of a tuple defined by an IntVarArray to any of
> the elements of an array, where each element of such array is an array
> composed by Integer values, defining a tuple.
> 
> Any help will be appreciated :)
> 
> Thanks
> Pedro Salgueiro
> 
> 
> 
> 
> 
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
> 





From denys.duchier at univ-orleans.fr  Wed May 20 20:36:57 2009
From: denys.duchier at univ-orleans.fr (Denys Duchier)
Date: Wed, 20 May 2009 20:36:57 +0200
Subject: [gecode-users] Symbolic Constraints - fd_relation contraint in
	Gecode?
In-Reply-To: <1242838714.3938.174.camel@rebirth> (Pedro Salgueiro's message of
	"Wed, 20 May 2009 17:58:34 +0100")
References: <1242747594.3938.122.camel@rebirth>
	<001801c9d8b9$2f727770$8e576650$@se>
	<1242838714.3938.174.camel@rebirth>
Message-ID: <87vdnvd3jq.fsf@tiny.univ-orleans.fr>

Pedro Salgueiro <pds at di.uevora.pt> writes:

> Is this the expected behavior of Gecode when handling with large
> integers, or am I doing something wrong?

I could be wrong about this, but I just had a quick glance at the
implementation and its seems to allocate datastructures of a size
proportial to the width of the domain.  So if you have small values and
very large values, the width is going to be very large.

If I am right, then you might be better off encoding your N values into
the interval [0,N-1] and then possibly using an element constraint to
decode them where necessary.

Then again, I could be completely off base :-/

Cheers,

--Denys



From tack at ps.uni-sb.de  Thu May 21 01:58:45 2009
From: tack at ps.uni-sb.de (Guido Tack)
Date: Thu, 21 May 2009 09:58:45 +1000
Subject: [gecode-users] Gecode 3.1.0 and Gecode/FlatZinc 1.6 released
Message-ID: <A899D37B-1D9D-46AE-99EA-E963DF277A27@ps.uni-sb.de>

Dear all,

we are releasing updates to Gecode and Gecode/FlatZinc.

                  Gecode 3.1.0
           http://www.gecode.org

This release introduces parallel search, features improved memory  
management (can double efficiency on MacOS X), and provides a reusable  
command line driver upon popular request. And, of course, some this  
and that.
The complete changelog is available at
	http://www.gecode.org/changes.html

                  Gecode/FlatZInc 1.6
           http://www.gecode.org/flatzinc.html

which has been adapted to work with the latest MiniZInc release  
(version 1.0).

On our web site, you find source packages, as well as binary packages
for Windows and Mac OS.

Cheers,
	Guido




From tack at ps.uni-sb.de  Thu May 21 09:09:29 2009
From: tack at ps.uni-sb.de (Guido Tack)
Date: Thu, 21 May 2009 17:09:29 +1000
Subject: [gecode-users] Updated source packages
Message-ID: <9A76BCD3-0472-424E-8702-B1B3CEAE7F50@ps.uni-sb.de>

Hi everyone,

we had some small build issues with the source packages for Gecode  
3.1.0 and Gecode/FlatZinc 1.6.  I just fixed these in the released  
version and put up new source packages.  The changes are completely  
source and binary compatible with the previous packages, so we decided  
not to waste another bugfix version number ;-)

The changes are the following:
  * gcc 4.4 seems to interpret the C++ standard more strictly, we had  
to fix a name clash in a header file.  I don't have access to gcc 4.4  
right now, but I hope this was the only issue.
  * We hadn't tested compiling FlatZinc against a version of Gecode  
installed in the default location (like /usr/local).  This was broken,  
and fixed with an update of the configure script.

If you encountered one of these issues, please redownload the packages  
or update your svn working copy.  If you didn't encounter any  
problems, just ignore this mail!

Cheers,
	Guido




From Dhananjay.Thiruvady at infotech.monash.edu.au  Sun May 24 20:40:38 2009
From: Dhananjay.Thiruvady at infotech.monash.edu.au (Dhananjay Thiruvady)
Date: Mon, 25 May 2009 04:40:38 +1000
Subject: [gecode-users] Memory limits
Message-ID: <213.96.53.56.1243189970@my.monash.edu.au>

Hi all,

I wanted to know the limits on variables and constraints in GECODE? 

Thanks,

Dhananjay



From tack at ps.uni-sb.de  Mon May 25 01:14:53 2009
From: tack at ps.uni-sb.de (Guido Tack)
Date: Mon, 25 May 2009 09:14:53 +1000
Subject: [gecode-users] Memory limits
In-Reply-To: <213.96.53.56.1243189970@my.monash.edu.au>
References: <213.96.53.56.1243189970@my.monash.edu.au>
Message-ID: <C657F500-A0C2-43D5-A67F-49AF605BFC5B@ps.uni-sb.de>

Dhananjay Thiruvady wrote:
> I wanted to know the limits on variables and constraints in GECODE?

The limits on variable domains are defined in the Int::Limits and  
Set::Limits classes (see the reference documentation or the source  
code).  There is no hard limit on number of variables and constraints  
(i.e. main memory is the limit).

Cheers,
	Guido




From kelbelj at fel.cvut.cz  Mon May 25 15:16:24 2009
From: kelbelj at fel.cvut.cz (Jan Kelbel)
Date: Mon, 25 May 2009 15:16:24 +0200
Subject: [gecode-users] Propagator
Message-ID: <4A1A9A28.5040700@fel.cvut.cz>

Hello,

some months ago I implemented N-ary propagator (it is that edge-finder). 
When I used it to solve larger problem instances, I noticed that it 
consumes memory in rate of about 1MB/s.
I tested it in Gecode 2.2.0 (where it was even about 3MB/s) and in 
Gecode 3.1.0., using MS Visual C++ 2008.

This propagator is inherited from class NaryPropagator. In the propagate 
method, there is an array for sorting, which is created using the Region 
allocation.

When I changed the edge-finder to inherit directly from the class 
Propagator, the growing memory consumption disappeared.

My question is, are there some rules, what should be implemented in 
propagator inherited from NaryPropagator in order allocate/dealocate 
memory correctly?


My second question (set of questions) is related to Val propagator for 
cumulatives constrait, which is my study material for implementation of 
scheduling constraints.
1) in Val::propagate()  file cumulatives/val.hpp
at line 276 there is a test if all the variables are assigned. Is there 
a reason why in case of subsumed = true; the function ES_SUBSUMED() is 
called  as late as at line 386?

2) Why there is no ES_FIX return from the Val::propagate() method?
In the documentation is that when the propagator computes fixpoint, it 
should return ES_FIX.
Is the reason that checking whether fixpoint is reached is expensive, 
and the propagation scheduler arranges that the propagation is not 
executed too many times?

Thank you.

Regards, Jan






From zayenz at gmail.com  Mon May 25 16:15:24 2009
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Mon, 25 May 2009 16:15:24 +0200
Subject: [gecode-users] Propagator
In-Reply-To: <4A1A9A28.5040700@fel.cvut.cz>
References: <4A1A9A28.5040700@fel.cvut.cz>
Message-ID: <63b5c8b00905250715u4fc041fci9ffdf2d29c51f315@mail.gmail.com>

Hi,

I'll answer the questions about cumulatives here, since I implemented
it originally. Your two questions are related in that they both are
caused by the fact that the propagation-algorithm for cumulatives is
not idempotent.

On Mon, May 25, 2009 at 3:16 PM, Jan Kelbel <kelbelj at fel.cvut.cz> wrote:
> My second question (set of questions) is related to Val propagator for
> cumulatives constrait, which is my study material for implementation of
> scheduling constraints.
> 2) Why there is no ES_FIX return from the Val::propagate() method?
> In the documentation is that when the propagator computes fixpoint, it
> should return ES_FIX.
> Is the reason that checking whether fixpoint is reached is expensive,
> and the propagation scheduler arranges that the propagation is not
> executed too many times?

Checking for a fix-point for cumulatives amounts to re-running the
propagation algorithm and seeing if there were any changes. Since the
algorithm is comparatively expensive, it is better to defer
re-execution to later than to run the algorithm in a loop to find a
local fix-point.


> 1) in Val::propagate() ?file cumulatives/val.hpp
> at line 276 there is a test if all the variables are assigned. Is there
> a reason why in case of subsumed = true; the function ES_SUBSUMED() is
> called ?as late as at line 386?

The reason is that subsumed should only be returned from this
particular propagator if the propagation algorithm does not detect
failure when all the variables are assigned before the algorithm is
executed. If the algorithm was idempotent, then the check for assigned
values could be done after the main algorithm.


Cheers,
Mikael

--
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/



From zayenz at gmail.com  Mon May 25 16:30:17 2009
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Mon, 25 May 2009 16:30:17 +0200
Subject: [gecode-users] Symbolic Constraints - fd_relation contraint in
	Gecode?
In-Reply-To: <87vdnvd3jq.fsf@tiny.univ-orleans.fr>
References: <1242747594.3938.122.camel@rebirth>
	<001801c9d8b9$2f727770$8e576650$@se> 
	<1242838714.3938.174.camel@rebirth>
	<87vdnvd3jq.fsf@tiny.univ-orleans.fr>
Message-ID: <63b5c8b00905250730w669db80egffddd8cabe569b2f@mail.gmail.com>

Hi,

On Wed, May 20, 2009 at 8:36 PM, Denys Duchier
<denys.duchier at univ-orleans.fr> wrote:
> I could be wrong about this, but I just had a quick glance at the
> implementation and its seems to allocate datastructures of a size
> proportial to the width of the domain. ?So if you have small values and
> very large values, the width is going to be very large.
>
> If I am right, then you might be better off encoding your N values into
> the interval [0,N-1] and then possibly using an element constraint to
> decode them where necessary.
>
> Then again, I could be completely off base :-/

Actually, you are completely right, and it also says so in the
documentation [1]:
    Warning:
        If the domains for the $x_i$ are not dense and have similar
        bounds, lots of memory will be wasted (memory consumption
        is in $
O\left(|x|\cdot|\min_i(\underline{x_i})-\max_i(\overline{x_i})|\right)$
        for the basic algorithm (epk = EPK_MEMORY) and additionally
        $ O\left(|x|^2\cdot|\min_i(\underline{x_i})|\max_i(\overline{x_i})|\right)$
        for the incremental algorithm (epk = EPK_SPEED).

The memory-consumption in the size of the domain is inevitable for
reasonably efficient extensional propagators. The translation into a
dense domain from a sparse domain needs to happen at one point or
another anyway for efficient data-structure management, and I choose
not to do it automagically.

Cheers,
Mikael

[1] https://www.gecode.org/doc-latest/reference/group__TaskModelIntExt.html#gf885611633b7b2bfb4d9512071dee9a3

-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/



From cschulte at kth.se  Mon May 25 16:31:34 2009
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 25 May 2009 16:31:34 +0200
Subject: [gecode-users] Propagator
In-Reply-To: <4A1A9A28.5040700@fel.cvut.cz>
References: <4A1A9A28.5040700@fel.cvut.cz>
Message-ID: <001801c9dd45$817cc710$84765530$@se>

Hi Jan,

there are the following catches:

a) propagators do not use destructors. Instead, when a propagator is
deleted, the dispose function is called. That in particular implies that for
any member of your propagator you have to explicitly call the member's
destructor (that is something that is done automatically inside a destructor
but not in the dispose function).

b) most likely you are under the assumption that when a space containing
your propagator is deleted, the dispose method of the propagator is called
such that memory possibly allocated by your propagator is freed. That is not
the case. In case your propagator requires the dispose method to be called
when a space is deleted, the propagator must register itself with its space
for deletion. For example, when home refers to the space, you have to
register the propagator by
	home.notice(*this, AP_DISPOSE);
and consequently in the dispose function you have to deregister
	home.ignore(*this, AP_DISPOSE);

The only exception is if your propagator has only allocated memory from the
space but not via malloc or something else. Then it does not be deleted when
its space is deleted.

Then, the behaviour you describe must have to do with something else as
there is really nothing special happening for NaryPropagator. Maybe you
could check your code again.

I think you are referring to the Gecode 2.* implementation of the
cumulatives propagator. That was actually nonsensical and has been changed
in 3.*. If no variables are modified by a propagator and the propagator says
ES_NOFIX, Gecode still knows that nothing has changed. So finding out
whether something has changed, and if yes reporting ES_NOFIX and ES_FIX
otherwise is exactly the same than reporting ES_NOFIX.

I hope that helps
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Jan Kelbel
Sent: Monday, May 25, 2009 3:16 PM
To: users at gecode.org
Subject: [gecode-users] Propagator

Hello,

some months ago I implemented N-ary propagator (it is that edge-finder). 
When I used it to solve larger problem instances, I noticed that it 
consumes memory in rate of about 1MB/s.
I tested it in Gecode 2.2.0 (where it was even about 3MB/s) and in 
Gecode 3.1.0., using MS Visual C++ 2008.

This propagator is inherited from class NaryPropagator. In the propagate 
method, there is an array for sorting, which is created using the Region 
allocation.

When I changed the edge-finder to inherit directly from the class 
Propagator, the growing memory consumption disappeared.

My question is, are there some rules, what should be implemented in 
propagator inherited from NaryPropagator in order allocate/dealocate 
memory correctly?


My second question (set of questions) is related to Val propagator for 
cumulatives constrait, which is my study material for implementation of 
scheduling constraints.
1) in Val::propagate()  file cumulatives/val.hpp
at line 276 there is a test if all the variables are assigned. Is there 
a reason why in case of subsumed = true; the function ES_SUBSUMED() is 
called  as late as at line 386?

2) Why there is no ES_FIX return from the Val::propagate() method?
In the documentation is that when the propagator computes fixpoint, it 
should return ES_FIX.
Is the reason that checking whether fixpoint is reached is expensive, 
and the propagation scheduler arranges that the propagation is not 
executed too many times?

Thank you.

Regards, Jan




_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From cschulte at kth.se  Mon May 25 16:35:53 2009
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 25 May 2009 16:35:53 +0200
Subject: [gecode-users] Symbolic Constraints - fd_relation contraint
	in	Gecode?
In-Reply-To: <63b5c8b00905250730w669db80egffddd8cabe569b2f@mail.gmail.com>
References: <1242747594.3938.122.camel@rebirth>	<001801c9d8b9$2f727770$8e576650$@se>
	<1242838714.3938.174.camel@rebirth>	<87vdnvd3jq.fsf@tiny.univ-orleans.fr>
	<63b5c8b00905250730w669db80egffddd8cabe569b2f@mail.gmail.com>
Message-ID: <001b01c9dd46$1ba7a2b0$52f6e810$@se>

Okay, then what one can do is use DFAs (or REGs) for specification, they are
not as fast but they work perfectly well with spares domains.

Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Mikael Zayenz Lagerkvist
Sent: Monday, May 25, 2009 4:30 PM
To: Denys Duchier
Cc: users at gecode.org
Subject: Re: [gecode-users] Symbolic Constraints - fd_relation contraint in
Gecode?

Hi,

On Wed, May 20, 2009 at 8:36 PM, Denys Duchier
<denys.duchier at univ-orleans.fr> wrote:
> I could be wrong about this, but I just had a quick glance at the
> implementation and its seems to allocate datastructures of a size
> proportial to the width of the domain. ?So if you have small values and
> very large values, the width is going to be very large.
>
> If I am right, then you might be better off encoding your N values into
> the interval [0,N-1] and then possibly using an element constraint to
> decode them where necessary.
>
> Then again, I could be completely off base :-/

Actually, you are completely right, and it also says so in the
documentation [1]:
    Warning:
        If the domains for the $x_i$ are not dense and have similar
        bounds, lots of memory will be wasted (memory consumption
        is in $
O\left(|x|\cdot|\min_i(\underline{x_i})-\max_i(\overline{x_i})|\right)$
        for the basic algorithm (epk = EPK_MEMORY) and additionally
        $
O\left(|x|^2\cdot|\min_i(\underline{x_i})|\max_i(\overline{x_i})|\right)$
        for the incremental algorithm (epk = EPK_SPEED).

The memory-consumption in the size of the domain is inevitable for
reasonably efficient extensional propagators. The translation into a
dense domain from a sparse domain needs to happen at one point or
another anyway for efficient data-structure management, and I choose
not to do it automagically.

Cheers,
Mikael

[1]
https://www.gecode.org/doc-latest/reference/group__TaskModelIntExt.html#gf88
5611633b7b2bfb4d9512071dee9a3

-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From kelbelj at fel.cvut.cz  Mon May 25 17:07:52 2009
From: kelbelj at fel.cvut.cz (Jan Kelbel)
Date: Mon, 25 May 2009 17:07:52 +0200
Subject: [gecode-users] Propagator
In-Reply-To: <001801c9dd45$817cc710$84765530$@se>
References: <4A1A9A28.5040700@fel.cvut.cz> <001801c9dd45$817cc710$84765530$@se>
Message-ID: <4A1AB448.1000307@fel.cvut.cz>

Hi Christian,

thank you for the answer. From the things you described (and I already 
tried, though I not really knew what it is doing), it must be something 
else. The propagator has one array created in propagate() method using 
Region allocator, that should be freed automatically when the 
propagate() returns, and one SharedArray that is shared among all the 
copies of one propagator.

Regards, Jan


Christian Schulte napsal(a):
> Hi Jan,
> 
> there are the following catches:
> 
> a) propagators do not use destructors. Instead, when a propagator is
> deleted, the dispose function is called. That in particular implies that for
> any member of your propagator you have to explicitly call the member's
> destructor (that is something that is done automatically inside a destructor
> but not in the dispose function).
> 
> b) most likely you are under the assumption that when a space containing
> your propagator is deleted, the dispose method of the propagator is called
> such that memory possibly allocated by your propagator is freed. That is not
> the case. In case your propagator requires the dispose method to be called
> when a space is deleted, the propagator must register itself with its space
> for deletion. For example, when home refers to the space, you have to
> register the propagator by
> 	home.notice(*this, AP_DISPOSE);
> and consequently in the dispose function you have to deregister
> 	home.ignore(*this, AP_DISPOSE);
> 
> The only exception is if your propagator has only allocated memory from the
> space but not via malloc or something else. Then it does not be deleted when
> its space is deleted.
> 
> Then, the behaviour you describe must have to do with something else as
> there is really nothing special happening for NaryPropagator. Maybe you
> could check your code again.
> 
> I think you are referring to the Gecode 2.* implementation of the
> cumulatives propagator. That was actually nonsensical and has been changed
> in 3.*. If no variables are modified by a propagator and the propagator says
> ES_NOFIX, Gecode still knows that nothing has changed. So finding out
> whether something has changed, and if yes reporting ES_NOFIX and ES_FIX
> otherwise is exactly the same than reporting ES_NOFIX.
> 
> I hope that helps
> Christian
> 
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
> 
> 
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Jan Kelbel
> Sent: Monday, May 25, 2009 3:16 PM
> To: users at gecode.org
> Subject: [gecode-users] Propagator
> 
> Hello,
> 
> some months ago I implemented N-ary propagator (it is that edge-finder). 
> When I used it to solve larger problem instances, I noticed that it 
> consumes memory in rate of about 1MB/s.
> I tested it in Gecode 2.2.0 (where it was even about 3MB/s) and in 
> Gecode 3.1.0., using MS Visual C++ 2008.
> 
> This propagator is inherited from class NaryPropagator. In the propagate 
> method, there is an array for sorting, which is created using the Region 
> allocation.
> 
> When I changed the edge-finder to inherit directly from the class 
> Propagator, the growing memory consumption disappeared.
> 
> My question is, are there some rules, what should be implemented in 
> propagator inherited from NaryPropagator in order allocate/dealocate 
> memory correctly?
> 
> 
> My second question (set of questions) is related to Val propagator for 
> cumulatives constrait, which is my study material for implementation of 
> scheduling constraints.
> 1) in Val::propagate()  file cumulatives/val.hpp
> at line 276 there is a test if all the variables are assigned. Is there 
> a reason why in case of subsumed = true; the function ES_SUBSUMED() is 
> called  as late as at line 386?
> 
> 2) Why there is no ES_FIX return from the Val::propagate() method?
> In the documentation is that when the propagator computes fixpoint, it 
> should return ES_FIX.
> Is the reason that checking whether fixpoint is reached is expensive, 
> and the propagation scheduler arranges that the propagation is not 
> executed too many times?
> 
> Thank you.
> 
> Regards, Jan
> 
> 
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
> 




From cschulte at kth.se  Mon May 25 17:10:41 2009
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 25 May 2009 17:10:41 +0200
Subject: [gecode-users] Propagator
In-Reply-To: <4A1AB448.1000307@fel.cvut.cz>
References: <4A1A9A28.5040700@fel.cvut.cz> <001801c9dd45$817cc710$84765530$@se>
	<4A1AB448.1000307@fel.cvut.cz>
Message-ID: <001e01c9dd4a$f8827f30$e9877d90$@se>

For a SharedArray, you have to manually call its destructor in the dispose
method and you have to use notice/ignore as described before.

For an example, see gecode/element/int.hpp

Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: Jan Kelbel [mailto:kelbelj at fel.cvut.cz] 
Sent: Monday, May 25, 2009 5:08 PM
To: Christian Schulte
Cc: users at gecode.org
Subject: Re: [gecode-users] Propagator

Hi Christian,

thank you for the answer. From the things you described (and I already 
tried, though I not really knew what it is doing), it must be something 
else. The propagator has one array created in propagate() method using 
Region allocator, that should be freed automatically when the 
propagate() returns, and one SharedArray that is shared among all the 
copies of one propagator.

Regards, Jan


Christian Schulte napsal(a):
> Hi Jan,
> 
> there are the following catches:
> 
> a) propagators do not use destructors. Instead, when a propagator is
> deleted, the dispose function is called. That in particular implies that
for
> any member of your propagator you have to explicitly call the member's
> destructor (that is something that is done automatically inside a
destructor
> but not in the dispose function).
> 
> b) most likely you are under the assumption that when a space containing
> your propagator is deleted, the dispose method of the propagator is called
> such that memory possibly allocated by your propagator is freed. That is
not
> the case. In case your propagator requires the dispose method to be called
> when a space is deleted, the propagator must register itself with its
space
> for deletion. For example, when home refers to the space, you have to
> register the propagator by
> 	home.notice(*this, AP_DISPOSE);
> and consequently in the dispose function you have to deregister
> 	home.ignore(*this, AP_DISPOSE);
> 
> The only exception is if your propagator has only allocated memory from
the
> space but not via malloc or something else. Then it does not be deleted
when
> its space is deleted.
> 
> Then, the behaviour you describe must have to do with something else as
> there is really nothing special happening for NaryPropagator. Maybe you
> could check your code again.
> 
> I think you are referring to the Gecode 2.* implementation of the
> cumulatives propagator. That was actually nonsensical and has been changed
> in 3.*. If no variables are modified by a propagator and the propagator
says
> ES_NOFIX, Gecode still knows that nothing has changed. So finding out
> whether something has changed, and if yes reporting ES_NOFIX and ES_FIX
> otherwise is exactly the same than reporting ES_NOFIX.
> 
> I hope that helps
> Christian
> 
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
> 
> 
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Jan Kelbel
> Sent: Monday, May 25, 2009 3:16 PM
> To: users at gecode.org
> Subject: [gecode-users] Propagator
> 
> Hello,
> 
> some months ago I implemented N-ary propagator (it is that edge-finder). 
> When I used it to solve larger problem instances, I noticed that it 
> consumes memory in rate of about 1MB/s.
> I tested it in Gecode 2.2.0 (where it was even about 3MB/s) and in 
> Gecode 3.1.0., using MS Visual C++ 2008.
> 
> This propagator is inherited from class NaryPropagator. In the propagate 
> method, there is an array for sorting, which is created using the Region 
> allocation.
> 
> When I changed the edge-finder to inherit directly from the class 
> Propagator, the growing memory consumption disappeared.
> 
> My question is, are there some rules, what should be implemented in 
> propagator inherited from NaryPropagator in order allocate/dealocate 
> memory correctly?
> 
> 
> My second question (set of questions) is related to Val propagator for 
> cumulatives constrait, which is my study material for implementation of 
> scheduling constraints.
> 1) in Val::propagate()  file cumulatives/val.hpp
> at line 276 there is a test if all the variables are assigned. Is there 
> a reason why in case of subsumed = true; the function ES_SUBSUMED() is 
> called  as late as at line 386?
> 
> 2) Why there is no ES_FIX return from the Val::propagate() method?
> In the documentation is that when the propagator computes fixpoint, it 
> should return ES_FIX.
> Is the reason that checking whether fixpoint is reached is expensive, 
> and the propagation scheduler arranges that the propagation is not 
> executed too many times?
> 
> Thank you.
> 
> Regards, Jan
> 
> 
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
> 





From kelbelj at fel.cvut.cz  Mon May 25 17:27:28 2009
From: kelbelj at fel.cvut.cz (Jan Kelbel)
Date: Mon, 25 May 2009 17:27:28 +0200
Subject: [gecode-users] Propagator
In-Reply-To: <001e01c9dd4a$f8827f30$e9877d90$@se>
References: <4A1A9A28.5040700@fel.cvut.cz> <001801c9dd45$817cc710$84765530$@se>
	<4A1AB448.1000307@fel.cvut.cz> <001e01c9dd4a$f8827f30$e9877d90$@se>
Message-ID: <4A1AB8E0.6080208@fel.cvut.cz>

I did it too, with no real effect (the memory used by the process grows 
by 1MB/s, and for job-shop 8 machines x 8 tasks there are 8 edge-finder 
propagators, each with SharedArray<Int> of size 8).
I did not use home.notice(*this,AP_DISPOSE) in copy constructor - it 
caused crash of the process - but it is neither used in copy 
constructors in Gecode.

Jan


Christian Schulte napsal(a):
> For a SharedArray, you have to manually call its destructor in the dispose
> method and you have to use notice/ignore as described before.
> 
> For an example, see gecode/element/int.hpp
> 
> Christian
> 
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
> 
> 
> -----Original Message-----
> From: Jan Kelbel [mailto:kelbelj at fel.cvut.cz] 
> Sent: Monday, May 25, 2009 5:08 PM
> To: Christian Schulte
> Cc: users at gecode.org
> Subject: Re: [gecode-users] Propagator
> 
> Hi Christian,
> 
> thank you for the answer. From the things you described (and I already 
> tried, though I not really knew what it is doing), it must be something 
> else. The propagator has one array created in propagate() method using 
> Region allocator, that should be freed automatically when the 
> propagate() returns, and one SharedArray that is shared among all the 
> copies of one propagator.
> 
> Regards, Jan
> 
> 
> Christian Schulte napsal(a):
>> Hi Jan,
>>
>> there are the following catches:
>>
>> a) propagators do not use destructors. Instead, when a propagator is
>> deleted, the dispose function is called. That in particular implies that
> for
>> any member of your propagator you have to explicitly call the member's
>> destructor (that is something that is done automatically inside a
> destructor
>> but not in the dispose function).
>>
>> b) most likely you are under the assumption that when a space containing
>> your propagator is deleted, the dispose method of the propagator is called
>> such that memory possibly allocated by your propagator is freed. That is
> not
>> the case. In case your propagator requires the dispose method to be called
>> when a space is deleted, the propagator must register itself with its
> space
>> for deletion. For example, when home refers to the space, you have to
>> register the propagator by
>> 	home.notice(*this, AP_DISPOSE);
>> and consequently in the dispose function you have to deregister
>> 	home.ignore(*this, AP_DISPOSE);
>>
>> The only exception is if your propagator has only allocated memory from
> the
>> space but not via malloc or something else. Then it does not be deleted
> when
>> its space is deleted.
>>
>> Then, the behaviour you describe must have to do with something else as
>> there is really nothing special happening for NaryPropagator. Maybe you
>> could check your code again.
>>
>> I think you are referring to the Gecode 2.* implementation of the
>> cumulatives propagator. That was actually nonsensical and has been changed
>> in 3.*. If no variables are modified by a propagator and the propagator
> says
>> ES_NOFIX, Gecode still knows that nothing has changed. So finding out
>> whether something has changed, and if yes reporting ES_NOFIX and ES_FIX
>> otherwise is exactly the same than reporting ES_NOFIX.
>>
>> I hope that helps
>> Christian
>>
>> --
>> Christian Schulte, www.ict.kth.se/~cschulte/
>>
>>
>> -----Original Message-----
>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
>> Of Jan Kelbel
>> Sent: Monday, May 25, 2009 3:16 PM
>> To: users at gecode.org
>> Subject: [gecode-users] Propagator
>>
>> Hello,
>>
>> some months ago I implemented N-ary propagator (it is that edge-finder). 
>> When I used it to solve larger problem instances, I noticed that it 
>> consumes memory in rate of about 1MB/s.
>> I tested it in Gecode 2.2.0 (where it was even about 3MB/s) and in 
>> Gecode 3.1.0., using MS Visual C++ 2008.
>>
>> This propagator is inherited from class NaryPropagator. In the propagate 
>> method, there is an array for sorting, which is created using the Region 
>> allocation.
>>
>> When I changed the edge-finder to inherit directly from the class 
>> Propagator, the growing memory consumption disappeared.
>>
>> My question is, are there some rules, what should be implemented in 
>> propagator inherited from NaryPropagator in order allocate/dealocate 
>> memory correctly?
>>
>>
>> My second question (set of questions) is related to Val propagator for 
>> cumulatives constrait, which is my study material for implementation of 
>> scheduling constraints.
>> 1) in Val::propagate()  file cumulatives/val.hpp
>> at line 276 there is a test if all the variables are assigned. Is there 
>> a reason why in case of subsumed = true; the function ES_SUBSUMED() is 
>> called  as late as at line 386?
>>
>> 2) Why there is no ES_FIX return from the Val::propagate() method?
>> In the documentation is that when the propagator computes fixpoint, it 
>> should return ES_FIX.
>> Is the reason that checking whether fixpoint is reached is expensive, 
>> and the propagation scheduler arranges that the propagation is not 
>> executed too many times?
>>
>> Thank you.
>>
>> Regards, Jan
>>
>>
>>
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
> 
> 




From kelbelj at fel.cvut.cz  Mon May 25 18:06:55 2009
From: kelbelj at fel.cvut.cz (Jan Kelbel)
Date: Mon, 25 May 2009 18:06:55 +0200
Subject: [gecode-users] Propagator
In-Reply-To: <002101c9dd4e$06030aa0$12091fe0$@se>
References: <4A1A9A28.5040700@fel.cvut.cz> <001801c9dd45$817cc710$84765530$@se>
	<4A1AB448.1000307@fel.cvut.cz> <001e01c9dd4a$f8827f30$e9877d90$@se>
	<4A1AB822.7050203@fel.cvut.cz> <002101c9dd4e$06030aa0$12091fe0$@se>
Message-ID: <4A1AC21F.7050204@fel.cvut.cz>

I have access to Linux, so I will check the program with valgrind.

Concerning the crash of notice call, it happens only when it is called 
from copy constructor of the propagator, which I did not see in any 
propagator in Gecode.
Some info from the debugger (which I don't understand since I do not 
know Gecode deep inside) :

Assertion failed: n != 0, file 
../../gecode-source/gecode-3.1.0/gecode/kernel/co
re.cpp, line 125

//in method Space::d_resize(void)
unsigned int n = static_cast<unsigned int>(d_lst - d_fst);
assert(n != 0);   //line 125

and debugger shows d_lst == d_fst == 0xcdcdcdcd

Jan


Christian Schulte napsal(a):
> Hmm, sounds weird. Do you use Linux, then you could use the valgrind tool
> for tracking memory leaks.
> 
> But then, why does the call to notice crash? It very definitely shouldn't.
> 
> Christian
> 
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
> 
> 
> -----Original Message-----
> From: Jan Kelbel [mailto:kelbelj at fel.cvut.cz] 
> Sent: Monday, May 25, 2009 5:24 PM
> To: Christian Schulte
> Subject: Re: [gecode-users] Propagator
> 
> I did it too, with no real effect (the memory used by the process grows 
> by 1MB/s, and for job-shop 8 machines x 8 tasks there are 8 edge-finder 
> propagators, each with SharedArray<Int> of size 8).
> I did not use home.notice(*this,AP_DISPOSE) in copy constructor - it 
> caused crash of the process - but it is neither used in copy 
> constructors in Gecode.
> 
> Jan
> 
> 
> Christian Schulte napsal(a):
>> For a SharedArray, you have to manually call its destructor in the dispose
>> method and you have to use notice/ignore as described before.
>>
>> For an example, see gecode/element/int.hpp
>>
>> Christian
>>
>> --
>> Christian Schulte, www.ict.kth.se/~cschulte/
>>
>>
>> -----Original Message-----
>> From: Jan Kelbel [mailto:kelbelj at fel.cvut.cz] 
>> Sent: Monday, May 25, 2009 5:08 PM
>> To: Christian Schulte
>> Cc: users at gecode.org
>> Subject: Re: [gecode-users] Propagator
>>
>> Hi Christian,
>>
>> thank you for the answer. From the things you described (and I already 
>> tried, though I not really knew what it is doing), it must be something 
>> else. The propagator has one array created in propagate() method using 
>> Region allocator, that should be freed automatically when the 
>> propagate() returns, and one SharedArray that is shared among all the 
>> copies of one propagator.
>>
>> Regards, Jan
>>
>>
>> Christian Schulte napsal(a):
>>> Hi Jan,
>>>
>>> there are the following catches:
>>>
>>> a) propagators do not use destructors. Instead, when a propagator is
>>> deleted, the dispose function is called. That in particular implies that
>> for
>>> any member of your propagator you have to explicitly call the member's
>>> destructor (that is something that is done automatically inside a
>> destructor
>>> but not in the dispose function).
>>>
>>> b) most likely you are under the assumption that when a space containing
>>> your propagator is deleted, the dispose method of the propagator is
> called
>>> such that memory possibly allocated by your propagator is freed. That is
>> not
>>> the case. In case your propagator requires the dispose method to be
> called
>>> when a space is deleted, the propagator must register itself with its
>> space
>>> for deletion. For example, when home refers to the space, you have to
>>> register the propagator by
>>> 	home.notice(*this, AP_DISPOSE);
>>> and consequently in the dispose function you have to deregister
>>> 	home.ignore(*this, AP_DISPOSE);
>>>
>>> The only exception is if your propagator has only allocated memory from
>> the
>>> space but not via malloc or something else. Then it does not be deleted
>> when
>>> its space is deleted.
>>>
>>> Then, the behaviour you describe must have to do with something else as
>>> there is really nothing special happening for NaryPropagator. Maybe you
>>> could check your code again.
>>>
>>> I think you are referring to the Gecode 2.* implementation of the
>>> cumulatives propagator. That was actually nonsensical and has been
> changed
>>> in 3.*. If no variables are modified by a propagator and the propagator
>> says
>>> ES_NOFIX, Gecode still knows that nothing has changed. So finding out
>>> whether something has changed, and if yes reporting ES_NOFIX and ES_FIX
>>> otherwise is exactly the same than reporting ES_NOFIX.
>>>
>>> I hope that helps
>>> Christian
>>>
>>> --
>>> Christian Schulte, www.ict.kth.se/~cschulte/
>>>
>>>



From cschulte at kth.se  Mon May 25 18:44:30 2009
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 25 May 2009 18:44:30 +0200
Subject: [gecode-users] Propagator
In-Reply-To: <4A1AC21F.7050204@fel.cvut.cz>
References: <4A1A9A28.5040700@fel.cvut.cz> <001801c9dd45$817cc710$84765530$@se>
	<4A1AB448.1000307@fel.cvut.cz> <001e01c9dd4a$f8827f30$e9877d90$@se>
	<4A1AB822.7050203@fel.cvut.cz> <002101c9dd4e$06030aa0$12091fe0$@se>
	<4A1AC21F.7050204@fel.cvut.cz>
Message-ID: <000001c9dd58$13a94250$3afbc6f0$@se>

All right, it should not be called in the copy constructor but only once in
the normal constructor when the propagator is created. Sorry for the
confusion...

Christian

-----Original Message-----
From: Jan Kelbel [mailto:kelbelj at fel.cvut.cz] 
Sent: Monday, May 25, 2009 6:07 PM
To: Christian Schulte; users at gecode.org
Subject: Re: [gecode-users] Propagator

I have access to Linux, so I will check the program with valgrind.

Concerning the crash of notice call, it happens only when it is called 
from copy constructor of the propagator, which I did not see in any 
propagator in Gecode.
Some info from the debugger (which I don't understand since I do not 
know Gecode deep inside) :

Assertion failed: n != 0, file 
../../gecode-source/gecode-3.1.0/gecode/kernel/co
re.cpp, line 125

//in method Space::d_resize(void)
unsigned int n = static_cast<unsigned int>(d_lst - d_fst);
assert(n != 0);   //line 125

and debugger shows d_lst == d_fst == 0xcdcdcdcd

Jan


Christian Schulte napsal(a):
> Hmm, sounds weird. Do you use Linux, then you could use the valgrind tool
> for tracking memory leaks.
> 
> But then, why does the call to notice crash? It very definitely shouldn't.
> 
> Christian
> 
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
> 
> 
> -----Original Message-----
> From: Jan Kelbel [mailto:kelbelj at fel.cvut.cz] 
> Sent: Monday, May 25, 2009 5:24 PM
> To: Christian Schulte
> Subject: Re: [gecode-users] Propagator
> 
> I did it too, with no real effect (the memory used by the process grows 
> by 1MB/s, and for job-shop 8 machines x 8 tasks there are 8 edge-finder 
> propagators, each with SharedArray<Int> of size 8).
> I did not use home.notice(*this,AP_DISPOSE) in copy constructor - it 
> caused crash of the process - but it is neither used in copy 
> constructors in Gecode.
> 
> Jan
> 
> 
> Christian Schulte napsal(a):
>> For a SharedArray, you have to manually call its destructor in the
dispose
>> method and you have to use notice/ignore as described before.
>>
>> For an example, see gecode/element/int.hpp
>>
>> Christian
>>
>> --
>> Christian Schulte, www.ict.kth.se/~cschulte/
>>
>>
>> -----Original Message-----
>> From: Jan Kelbel [mailto:kelbelj at fel.cvut.cz] 
>> Sent: Monday, May 25, 2009 5:08 PM
>> To: Christian Schulte
>> Cc: users at gecode.org
>> Subject: Re: [gecode-users] Propagator
>>
>> Hi Christian,
>>
>> thank you for the answer. From the things you described (and I already 
>> tried, though I not really knew what it is doing), it must be something 
>> else. The propagator has one array created in propagate() method using 
>> Region allocator, that should be freed automatically when the 
>> propagate() returns, and one SharedArray that is shared among all the 
>> copies of one propagator.
>>
>> Regards, Jan
>>
>>
>> Christian Schulte napsal(a):
>>> Hi Jan,
>>>
>>> there are the following catches:
>>>
>>> a) propagators do not use destructors. Instead, when a propagator is
>>> deleted, the dispose function is called. That in particular implies that
>> for
>>> any member of your propagator you have to explicitly call the member's
>>> destructor (that is something that is done automatically inside a
>> destructor
>>> but not in the dispose function).
>>>
>>> b) most likely you are under the assumption that when a space containing
>>> your propagator is deleted, the dispose method of the propagator is
> called
>>> such that memory possibly allocated by your propagator is freed. That is
>> not
>>> the case. In case your propagator requires the dispose method to be
> called
>>> when a space is deleted, the propagator must register itself with its
>> space
>>> for deletion. For example, when home refers to the space, you have to
>>> register the propagator by
>>> 	home.notice(*this, AP_DISPOSE);
>>> and consequently in the dispose function you have to deregister
>>> 	home.ignore(*this, AP_DISPOSE);
>>>
>>> The only exception is if your propagator has only allocated memory from
>> the
>>> space but not via malloc or something else. Then it does not be deleted
>> when
>>> its space is deleted.
>>>
>>> Then, the behaviour you describe must have to do with something else as
>>> there is really nothing special happening for NaryPropagator. Maybe you
>>> could check your code again.
>>>
>>> I think you are referring to the Gecode 2.* implementation of the
>>> cumulatives propagator. That was actually nonsensical and has been
> changed
>>> in 3.*. If no variables are modified by a propagator and the propagator
>> says
>>> ES_NOFIX, Gecode still knows that nothing has changed. So finding out
>>> whether something has changed, and if yes reporting ES_NOFIX and ES_FIX
>>> otherwise is exactly the same than reporting ES_NOFIX.
>>>
>>> I hope that helps
>>> Christian
>>>
>>> --
>>> Christian Schulte, www.ict.kth.se/~cschulte/
>>>
>>>




From filip.konvicka at logis.cz  Mon May 25 18:12:42 2009
From: filip.konvicka at logis.cz (=?UTF-8?B?RmlsaXAgS29udmnEjWth?=)
Date: Mon, 25 May 2009 18:12:42 +0200
Subject: [gecode-users] Propagator
In-Reply-To: <001801c9dd45$817cc710$84765530$@se>
References: <4A1A9A28.5040700@fel.cvut.cz> <001801c9dd45$817cc710$84765530$@se>
Message-ID: <4A1AC37A.5090900@logis.cz>



Christian Schulte (25.5.2009 16:31):
> If no variables are modified by a propagator and the propagator says
> ES_NOFIX, Gecode still knows that nothing has changed. So finding out
> whether something has changed, and if yes reporting ES_NOFIX and ES_FIX
> otherwise is exactly the same than reporting ES_NOFIX.

This is a nice feature. Is this mentioned somewhere in the 
docs/tutorial? It should be, if it's not :-)

Cheers,
Filip






From mmann at informatik.uni-freiburg.de  Tue May 26 10:10:01 2009
From: mmann at informatik.uni-freiburg.de (Martin Mann)
Date: Tue, 26 May 2009 10:10:01 +0200
Subject: [gecode-users] Propagator return values
In-Reply-To: <4A1AC37A.5090900@logis.cz>
References: <4A1A9A28.5040700@fel.cvut.cz> <001801c9dd45$817cc710$84765530$@se>
	<4A1AC37A.5090900@logis.cz>
Message-ID: <4A1BA3D9.3000603@informatik.uni-freiburg.de>

 > Christian Schulte (25.5.2009 16:31):
 >> If no variables are modified by a propagator and the propagator says
 >> ES_NOFIX, Gecode still knows that nothing has changed. So finding out
 >> whether something has changed, and if yes reporting ES_NOFIX and
 >> ES_FIX
 >> otherwise is exactly the same than reporting ES_NOFIX.


ok ... now I am confused ... :)

So to say, if I am not changing the domains within my filtering it 
doesnt matter what I return (ES_FIX or ES_NOFIX) ?

But isnt there a difference in the "meaning"? That is, either I want to 
tell the engine I cannot do any filtering anymore (ES_FIX) or that only 
a partial filtering of the domains was done?

"[..]
# ES_NOFIX: the propagator has done propagation
# ES_FIX: the propagator has done propagation and has computed a 
fixpoint. That is, running the propagator immediately again will do nothing.
[..]" (from Gecode documentation)

So in a case I dont want to filter (e.g. due to too large domain sizes 
etc.) what is better to return?

I would guess ES_FIX, because the propagator should not be called again 
until another change of the domains has been done...

Or am I wrong about that?

Think the use cases / description of the ExecStatus possibilities is 
quite short. Everytime I have to write a propagator I am a bit confused 
what to return. Only the ES_FAILED and ES_SUBSUMED cases are totally 
clear to me.. ;)


Thanks for your help to the eyeless user!

Martin




From cschulte at kth.se  Tue May 26 10:52:02 2009
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 26 May 2009 10:52:02 +0200
Subject: [gecode-users] Propagator return values
In-Reply-To: <4A1BA3D9.3000603@informatik.uni-freiburg.de>
References: <4A1A9A28.5040700@fel.cvut.cz>
	<001801c9dd45$817cc710$84765530$@se>	<4A1AC37A.5090900@logis.cz>
	<4A1BA3D9.3000603@informatik.uni-freiburg.de>
Message-ID: <000301c9dddf$3f6ca4e0$be45eea0$@se>

Well, you have to wait for the next part of the tutorial docs.

But actually, it is straightforward: ES_FIX is nothing but an optimization.
ES_NOFIX should be read as "I HAVE NO IDEA WHAT I COMPUTED". Whenever you
are unsure, just return ES_NOFIX. That's it. Then it's obvious what I said:
even if your propagator has no idea what it computed, it should not be
executed over and over again without doing anything.

The difference is actually whether the propagator was at fixpoint before it
is executed: then ES_NOFIX and ES_FIX are exactly the same.

If you want to know all the details, check this:
	http://www.gecode.org/paper.html?id=SchulteStuckey:TOPLAS:2008

Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Martin Mann
Sent: Tuesday, May 26, 2009 10:10 AM
To: gecode user list
Subject: [gecode-users] Propagator return values

 > Christian Schulte (25.5.2009 16:31):
 >> If no variables are modified by a propagator and the propagator says
 >> ES_NOFIX, Gecode still knows that nothing has changed. So finding out
 >> whether something has changed, and if yes reporting ES_NOFIX and
 >> ES_FIX
 >> otherwise is exactly the same than reporting ES_NOFIX.


ok ... now I am confused ... :)

So to say, if I am not changing the domains within my filtering it 
doesnt matter what I return (ES_FIX or ES_NOFIX) ?

But isnt there a difference in the "meaning"? That is, either I want to 
tell the engine I cannot do any filtering anymore (ES_FIX) or that only 
a partial filtering of the domains was done?

"[..]
# ES_NOFIX: the propagator has done propagation
# ES_FIX: the propagator has done propagation and has computed a 
fixpoint. That is, running the propagator immediately again will do nothing.
[..]" (from Gecode documentation)

So in a case I dont want to filter (e.g. due to too large domain sizes 
etc.) what is better to return?

I would guess ES_FIX, because the propagator should not be called again 
until another change of the domains has been done...

Or am I wrong about that?

Think the use cases / description of the ExecStatus possibilities is 
quite short. Everytime I have to write a propagator I am a bit confused 
what to return. Only the ES_FAILED and ES_SUBSUMED cases are totally 
clear to me.. ;)


Thanks for your help to the eyeless user!

Martin


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From pds at di.uevora.pt  Tue May 26 11:36:53 2009
From: pds at di.uevora.pt (Pedro Salgueiro)
Date: Tue, 26 May 2009 10:36:53 +0100
Subject: [gecode-users] Symbolic Constraints - fd_relation contraint in
 Gecode?
In-Reply-To: <63b5c8b00905250730w669db80egffddd8cabe569b2f@mail.gmail.com>
References: <1242747594.3938.122.camel@rebirth>
	<001801c9d8b9$2f727770$8e576650$@se>
	<1242838714.3938.174.camel@rebirth>
	<87vdnvd3jq.fsf@tiny.univ-orleans.fr>
	<63b5c8b00905250730w669db80egffddd8cabe569b2f@mail.gmail.com>
Message-ID: <1243330613.7133.72.camel@rebirth>

Hi!

On Mon, 2009-05-25 at 16:30 +0200, Mikael Zayenz Lagerkvist wrote:
> Hi,
> 
> On Wed, May 20, 2009 at 8:36 PM, Denys Duchier
> <denys.duchier at univ-orleans.fr> wrote:
> > I could be wrong about this, but I just had a quick glance at the
> > implementation and its seems to allocate datastructures of a size
> > proportial to the width of the domain.  So if you have small values and
> > very large values, the width is going to be very large.
> >
> > If I am right, then you might be better off encoding your N values into
> > the interval [0,N-1] and then possibly using an element constraint to
> > decode them where necessary.
> >
> > Then again, I could be completely off base :-/
> 
> Actually, you are completely right, and it also says so in the
> documentation [1]:
>     Warning:
>         If the domains for the $x_i$ are not dense and have similar
>         bounds, lots of memory will be wasted (memory consumption
>         is in $
> O\left(|x|\cdot|\min_i(\underline{x_i})-\max_i(\overline{x_i})|\right)$
>         for the basic algorithm (epk = EPK_MEMORY) and additionally
>         $ O\left(|x|^2\cdot|\min_i(\underline{x_i})|\max_i(\overline{x_i})|\right)$
>         for the incremental algorithm (epk = EPK_SPEED).
> 
> The memory-consumption in the size of the domain is inevitable for
> reasonably efficient extensional propagators. The translation into a
> dense domain from a sparse domain needs to happen at one point or
> another anyway for efficient data-structure management, and I choose
> not to do it automagically.

Sorry, my bad, didn't noticed that on the documentation... Now I
understand why it gets really slow, as the domain gets really big. 

So, there is no easy way of preventing the translation of this sparse
domain to a dense domain, even if it is just to make some tests and see
the behavior of Gecode under those circumstances?

Thank you,
Pedro Salgueiro
> 
> Cheers,
> Mikael
> 
> [1] https://www.gecode.org/doc-latest/reference/group__TaskModelIntExt.html#gf885611633b7b2bfb4d9512071dee9a3
> 




From zayenz at gmail.com  Tue May 26 11:42:18 2009
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Tue, 26 May 2009 11:42:18 +0200
Subject: [gecode-users] Symbolic Constraints - fd_relation contraint in
	Gecode?
In-Reply-To: <1243330613.7133.72.camel@rebirth>
References: <1242747594.3938.122.camel@rebirth>
	<001801c9d8b9$2f727770$8e576650$@se> 
	<1242838714.3938.174.camel@rebirth>
	<87vdnvd3jq.fsf@tiny.univ-orleans.fr> 
	<63b5c8b00905250730w669db80egffddd8cabe569b2f@mail.gmail.com> 
	<1243330613.7133.72.camel@rebirth>
Message-ID: <63b5c8b00905260242q4171e7e4gdc15c1295dbedae4@mail.gmail.com>

On Tue, May 26, 2009 at 11:36 AM, Pedro Salgueiro <pds at di.uevora.pt> wrote:
> On Mon, 2009-05-25 at 16:30 +0200, Mikael Zayenz Lagerkvist wrote:
> Sorry, my bad, didn't noticed that on the documentation... Now I
> understand why it gets really slow, as the domain gets really big.
>
> So, there is no easy way of preventing the translation of this sparse
> domain to a dense domain, even if it is just to make some tests and see
> the behavior of Gecode under those circumstances?

If your domain is big (not just a big width but lots of values) then
extensional constraints always takes a lot of memory. This is due to
the nature of extensional constraints.

If your domain has a large width (difference between minimum and
maximum element) but few elements (say {-1000, 0, +1000}), then the
problem can be solved. You just need to translate your large domain
into a smaller domain (say {0, 1, 2}). The translation can either be
done by reformulating the problem or by channeling to a new variable
using an element constraint.


Cheers,
Mikael

-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/



From pds at di.uevora.pt  Tue May 26 11:43:45 2009
From: pds at di.uevora.pt (Pedro Salgueiro)
Date: Tue, 26 May 2009 10:43:45 +0100
Subject: [gecode-users] Symbolic Constraints - fd_relation contraint in
 Gecode?
In-Reply-To: <001b01c9dd46$1ba7a2b0$52f6e810$@se>
References: <1242747594.3938.122.camel@rebirth>
	<001801c9d8b9$2f727770$8e576650$@se>
	<1242838714.3938.174.camel@rebirth>
	<87vdnvd3jq.fsf@tiny.univ-orleans.fr>
	<63b5c8b00905250730w669db80egffddd8cabe569b2f@mail.gmail.com>
	<001b01c9dd46$1ba7a2b0$52f6e810$@se>
Message-ID: <1243331025.7133.79.camel@rebirth>

Hi!

On Mon, 2009-05-25 at 16:35 +0200, Christian Schulte wrote:
> Okay, then what one can do is use DFAs (or REGs) for specification, they are
> not as fast but they work perfectly well with spares domains.

That's a great idea, but on this case I don't see a how can I specify
the problem (or the allowable values for the tuples) using DFAs or REGs.

Any way, I have tried the same tests using the Finite Domain Solver of
GNU Prolog with its predicate fd_realtion/2 [1] that is very similar to
Gecode extensional constraint, and the results were much better.

Thank you,
Pedro Salgueiro

[1] http://www.gprolog.org/manual/html_node/gprolog062.html#toc274 

> 
> Christian
> 
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
> 
> 
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Mikael Zayenz Lagerkvist
> Sent: Monday, May 25, 2009 4:30 PM
> To: Denys Duchier
> Cc: users at gecode.org
> Subject: Re: [gecode-users] Symbolic Constraints - fd_relation contraint in
> Gecode?
> 
> Hi,
> 
> On Wed, May 20, 2009 at 8:36 PM, Denys Duchier
> <denys.duchier at univ-orleans.fr> wrote:
> > I could be wrong about this, but I just had a quick glance at the
> > implementation and its seems to allocate datastructures of a size
> > proportial to the width of the domain.  So if you have small values and
> > very large values, the width is going to be very large.
> >
> > If I am right, then you might be better off encoding your N values into
> > the interval [0,N-1] and then possibly using an element constraint to
> > decode them where necessary.
> >
> > Then again, I could be completely off base :-/
> 
> Actually, you are completely right, and it also says so in the
> documentation [1]:
>     Warning:
>         If the domains for the $x_i$ are not dense and have similar
>         bounds, lots of memory will be wasted (memory consumption
>         is in $
> O\left(|x|\cdot|\min_i(\underline{x_i})-\max_i(\overline{x_i})|\right)$
>         for the basic algorithm (epk = EPK_MEMORY) and additionally
>         $
> O\left(|x|^2\cdot|\min_i(\underline{x_i})|\max_i(\overline{x_i})|\right)$
>         for the incremental algorithm (epk = EPK_SPEED).
> 
> The memory-consumption in the size of the domain is inevitable for
> reasonably efficient extensional propagators. The translation into a
> dense domain from a sparse domain needs to happen at one point or
> another anyway for efficient data-structure management, and I choose
> not to do it automagically.
> 
> Cheers,
> Mikael
> 
> [1]
> https://www.gecode.org/doc-latest/reference/group__TaskModelIntExt.html#gf88
> 5611633b7b2bfb4d9512071dee9a3
> 




From kelbelj at fel.cvut.cz  Tue May 26 16:36:24 2009
From: kelbelj at fel.cvut.cz (Jan Kelbel)
Date: Tue, 26 May 2009 16:36:24 +0200
Subject: [gecode-users] Propagator
In-Reply-To: <4A1A9A28.5040700@fel.cvut.cz>
References: <4A1A9A28.5040700@fel.cvut.cz>
Message-ID: <4A1BFE68.2020906@fel.cvut.cz>

Hi, finally I found the bug:
in the copy constructor of my propagator, I called SharedArray(int n) 
constructor, that allocated each time new memory. I did it only in the 
version inherited from NaryPropagator class, which is the reason why the 
other version was OK.

Cheers, Jan

Jan Kelbel wrote:
> Hello,
> 
> some months ago I implemented N-ary propagator (it is that edge-finder). 
> When I used it to solve larger problem instances, I noticed that it 
> consumes memory in rate of about 1MB/s.
> I tested it in Gecode 2.2.0 (where it was even about 3MB/s) and in 
> Gecode 3.1.0., using MS Visual C++ 2008.
> 
> This propagator is inherited from class NaryPropagator. In the propagate 
> method, there is an array for sorting, which is created using the Region 
> allocation.
> 
> When I changed the edge-finder to inherit directly from the class 
> Propagator, the growing memory consumption disappeared.
> 
> My question is, are there some rules, what should be implemented in 
> propagator inherited from NaryPropagator in order allocate/dealocate 
> memory correctly?
> 

> Thank you.
> 
> Regards, Jan



From cschulte at kth.se  Tue May 26 10:52:39 2009
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 26 May 2009 10:52:39 +0200
Subject: [gecode-users] Propagator
In-Reply-To: <4A1AC37A.5090900@logis.cz>
References: <4A1A9A28.5040700@fel.cvut.cz> <001801c9dd45$817cc710$84765530$@se>
	<4A1AC37A.5090900@logis.cz>
Message-ID: <000901c9dddf$5969c800$0c3d5800$@se>



Yep, will be in the programming with Gecode.

Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Filip Konvicka
Sent: Monday, May 25, 2009 6:13 PM
To: public-cschulte-UNjuZkX4dYU at hugh.gmane.org
Cc: 'Jan Kelbel'; public-users-2NGZVH8mcjgdnm+yROfE0A at hugh.gmane.org
Subject: Re: [gecode-users] Propagator



Christian Schulte (25.5.2009 16:31):
> If no variables are modified by a propagator and the propagator says
> ES_NOFIX, Gecode still knows that nothing has changed. So finding out
> whether something has changed, and if yes reporting ES_NOFIX and ES_FIX
> otherwise is exactly the same than reporting ES_NOFIX.

This is a nice feature. Is this mentioned somewhere in the 
docs/tutorial? It should be, if it's not :-)

Cheers,
Filip




_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users





From jeremie.vautard at gmail.com  Fri May 29 13:45:45 2009
From: jeremie.vautard at gmail.com (=?ISO-8859-1?Q?J=E9r=E9mie_Vautard?=)
Date: Fri, 29 May 2009 13:45:45 +0200
Subject: [gecode-users] Thread-safe space copying
Message-ID: <35718291-7892-4A05-9AF6-364C4BAA8AE3@gmail.com>

Hi all,

I have several threads that might clone a same Gecode::Space object  
at the same time. Is the Space.clone(...) method thread safe, or  
should I ensure that it is never concurently called ?

Cheers,


-- 
J?r?mie Vautard
Doctorant/Ph-D Student
LIFO - Laboratoire d'Informatique Fondamentale d'Orl?ans
Batiment IIIA
Rue L?onard de Vinci
B.P. 6759
F-45067 ORLEANS Cedex 2
Tel: (+33) 02 38 49 48 57
Cell: (+33) 06 65 11 51 7(
http://www.univ-orleans.fr/lifo/Membres/vautard

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20090529/e9165827/attachment.htm>

From cschulte at kth.se  Fri May 29 13:58:18 2009
From: cschulte at kth.se (Christian Schulte)
Date: Fri, 29 May 2009 13:58:18 +0200
Subject: [gecode-users] Thread-safe space copying
In-Reply-To: <35718291-7892-4A05-9AF6-364C4BAA8AE3@gmail.com>
References: <35718291-7892-4A05-9AF6-364C4BAA8AE3@gmail.com>
Message-ID: <000301c9e054$c28ac9c0$47a05d40$@se>

Hi,

 

No operation in Gecode is thread safe (by design). So, when you want to
create a clone of a space, only one thread can do that at a time (and you
have make sure that clone is called with false as argument for share). If
that turns out to be a bottleneck for your application: if you have created
an unshared clone c from a space s, then of course two threads can create
clones in parallel: one from c and one from s.

 

Christian

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of J?r?mie Vautard
Sent: Friday, May 29, 2009 1:46 PM
To: gecode list
Subject: [gecode-users] Thread-safe space copying

 

Hi all, 

 

I have several threads that might clone a same Gecode::Space object at the
same time. Is the Space.clone(...) method thread safe, or should I ensure
that it is never concurently called ? 

 

Cheers, 

 

 

-- 

J?r?mie Vautard

Doctorant/Ph-D Student

LIFO - Laboratoire d'Informatique Fondamentale d'Orl?ans

Batiment IIIA

Rue L?onard de Vinci

B.P. 6759

F-45067 ORLEANS Cedex 2 

Tel: (+33) 02 38 49 48 57

Cell: (+33) 06 65 11 51 7(

http://www.univ-orleans.fr/lifo/Membres/vautard

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.ps.uni-sb.de/pipermail/users/attachments/20090529/16f89688/attachment.htm>

From mmann at informatik.uni-freiburg.de  Fri May 29 14:04:24 2009
From: mmann at informatik.uni-freiburg.de (Martin Mann)
Date: Fri, 29 May 2009 14:04:24 +0200
Subject: [gecode-users] How to stop a branching?
Message-ID: <4A1FCF48.5030006@informatik.uni-freiburg.de>

Hi,

I would like to know, if it is possible to stop a branching (when 
multiple ones are present). Thus, to ignore all remaining branches for 
this specific one.

Maybe an example to make my question clear.

I have two sets of variables X_1, X_2 linked via several constraints. 
Within my Space I post two brachning B_1(X_1) and B_2(X_2) such that 
first all variables of X_1 are assigned before B_2 is considered.

My final goal is to enumerate solutions with different X_1 assignments!

My current solution (was implemented for Gecode 1.3.* and I am going to 
reimplement in 3.*) is to formulate a COP instead of a CSP and to 
implement the *constrain* function and to post a constraint that ensures 
that the next solution is at least in one X_1 assignment different from 
the current solution.

Thus, I get a new constraint per solution ... and I dont like that! ;)

But when looking at the problem, it would be sufficient to stop the 
branching on X_2! I dont need to post new constraints but to cancel the 
remaining branching of B_2 on X_2. This will lead to a backtracking in 
B_1 and therefore ensures that the next solution differs in the X_1 
assignment in at least one solution...

This seems to be much more efficient to me. Btw. I would end up with a 
CSP instead of this strange COP hack.

So my question: Is it possible to stop the remaining branching on B_2 
out of the (Gecode 3.*) box? Or do I have to implement/subclass my own 
branching?

Thanks for your help,

Martin


-- 
Martin Mann, Dipl. Bioinf.
Bioinformatics - Inst. of Computer Science
Albert-Ludwigs-University Freiburg
Tel: ++49-761-203-8259
Fax: ++49-761-203-7462
http://www.bioinf.uni-freiburg.de/~mmann/




From cschulte at kth.se  Fri May 29 14:11:39 2009
From: cschulte at kth.se (Christian Schulte)
Date: Fri, 29 May 2009 14:11:39 +0200
Subject: [gecode-users] How to stop a branching?
In-Reply-To: <4A1FCF48.5030006@informatik.uni-freiburg.de>
References: <4A1FCF48.5030006@informatik.uni-freiburg.de>
Message-ID: <001401c9e056$9f481380$ddd83a80$@se>

Right now, you can't stop branching. While just having an operation to do
that is easy, but I do not see yet how one would get that to work with
recomputation.

Did you see that you can actually post branching incrementally, maybe that
could help. Check "Executing code between branching" in MwG. You could
control whether a branching is posted or not by an additional variable. Just
an idea, don't know whether that would help.

Christian
	

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Martin Mann
Sent: Friday, May 29, 2009 2:04 PM
To: gecode user list
Subject: [gecode-users] How to stop a branching?

Hi,

I would like to know, if it is possible to stop a branching (when 
multiple ones are present). Thus, to ignore all remaining branches for 
this specific one.

Maybe an example to make my question clear.

I have two sets of variables X_1, X_2 linked via several constraints. 
Within my Space I post two brachning B_1(X_1) and B_2(X_2) such that 
first all variables of X_1 are assigned before B_2 is considered.

My final goal is to enumerate solutions with different X_1 assignments!

My current solution (was implemented for Gecode 1.3.* and I am going to 
reimplement in 3.*) is to formulate a COP instead of a CSP and to 
implement the *constrain* function and to post a constraint that ensures 
that the next solution is at least in one X_1 assignment different from 
the current solution.

Thus, I get a new constraint per solution ... and I dont like that! ;)

But when looking at the problem, it would be sufficient to stop the 
branching on X_2! I dont need to post new constraints but to cancel the 
remaining branching of B_2 on X_2. This will lead to a backtracking in 
B_1 and therefore ensures that the next solution differs in the X_1 
assignment in at least one solution...

This seems to be much more efficient to me. Btw. I would end up with a 
CSP instead of this strange COP hack.

So my question: Is it possible to stop the remaining branching on B_2 
out of the (Gecode 3.*) box? Or do I have to implement/subclass my own 
branching?

Thanks for your help,

Martin


-- 
Martin Mann, Dipl. Bioinf.
Bioinformatics - Inst. of Computer Science
Albert-Ludwigs-University Freiburg
Tel: ++49-761-203-8259
Fax: ++49-761-203-7462
http://www.bioinf.uni-freiburg.de/~mmann/


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From mmann at informatik.uni-freiburg.de  Fri May 29 15:01:43 2009
From: mmann at informatik.uni-freiburg.de (Martin Mann)
Date: Fri, 29 May 2009 15:01:43 +0200
Subject: [gecode-users] How to stop a branching?
In-Reply-To: <001401c9e056$9f481380$ddd83a80$@se>
References: <4A1FCF48.5030006@informatik.uni-freiburg.de>
	<001401c9e056$9f481380$ddd83a80$@se>
Message-ID: <4A1FDCB7.304@informatik.uni-freiburg.de>


mhhh.. what a pitty.. but yes, there might be problems with recomputation..

Some helper variable e.g. posted within the incremental posting might 
help but I doubt that anything gets faster by that.

Nevertheless, thanks a lot for the fast reply!

Martin



Christian Schulte schrieb:
> Right now, you can't stop branching. While just having an operation to do
> that is easy, but I do not see yet how one would get that to work with
> recomputation.
> 
> Did you see that you can actually post branching incrementally, maybe that
> could help. Check "Executing code between branching" in MwG. You could
> control whether a branching is posted or not by an additional variable. Just
> an idea, don't know whether that would help.
> 
> Christian
> 	
> 
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Martin Mann
> Sent: Friday, May 29, 2009 2:04 PM
> To: gecode user list
> Subject: [gecode-users] How to stop a branching?
> 
> Hi,
> 
> I would like to know, if it is possible to stop a branching (when 
> multiple ones are present). Thus, to ignore all remaining branches for 
> this specific one.
> 
> Maybe an example to make my question clear.
> 
> I have two sets of variables X_1, X_2 linked via several constraints. 
> Within my Space I post two brachning B_1(X_1) and B_2(X_2) such that 
> first all variables of X_1 are assigned before B_2 is considered.
> 
> My final goal is to enumerate solutions with different X_1 assignments!
> 
> My current solution (was implemented for Gecode 1.3.* and I am going to 
> reimplement in 3.*) is to formulate a COP instead of a CSP and to 
> implement the *constrain* function and to post a constraint that ensures 
> that the next solution is at least in one X_1 assignment different from 
> the current solution.
> 
> Thus, I get a new constraint per solution ... and I dont like that! ;)
> 
> But when looking at the problem, it would be sufficient to stop the 
> branching on X_2! I dont need to post new constraints but to cancel the 
> remaining branching of B_2 on X_2. This will lead to a backtracking in 
> B_1 and therefore ensures that the next solution differs in the X_1 
> assignment in at least one solution...
> 
> This seems to be much more efficient to me. Btw. I would end up with a 
> CSP instead of this strange COP hack.
> 
> So my question: Is it possible to stop the remaining branching on B_2 
> out of the (Gecode 3.*) box? Or do I have to implement/subclass my own 
> branching?
> 
> Thanks for your help,
> 
> Martin
> 
> 




From cschulte at kth.se  Fri May 29 15:11:30 2009
From: cschulte at kth.se (Christian Schulte)
Date: Fri, 29 May 2009 15:11:30 +0200
Subject: [gecode-users] How to stop a branching?
In-Reply-To: <4A1FDCB7.304@informatik.uni-freiburg.de>
References: <4A1FCF48.5030006@informatik.uni-freiburg.de>	<001401c9e056$9f481380$ddd83a80$@se>
	<4A1FDCB7.304@informatik.uni-freiburg.de>
Message-ID: <001701c9e05e$fd2ca940$f785fbc0$@se>

Well, you might be a able to cut off an entire subtree during recomputation:
recomputation will not explore node by node but tries to fail higher up in
the search tree (actually, for each copy on the path).

Christian

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Martin Mann
Sent: Friday, May 29, 2009 3:02 PM
To: 'gecode user list'
Subject: Re: [gecode-users] How to stop a branching?


mhhh.. what a pitty.. but yes, there might be problems with recomputation..

Some helper variable e.g. posted within the incremental posting might 
help but I doubt that anything gets faster by that.

Nevertheless, thanks a lot for the fast reply!

Martin



Christian Schulte schrieb:
> Right now, you can't stop branching. While just having an operation to do
> that is easy, but I do not see yet how one would get that to work with
> recomputation.
> 
> Did you see that you can actually post branching incrementally, maybe that
> could help. Check "Executing code between branching" in MwG. You could
> control whether a branching is posted or not by an additional variable.
Just
> an idea, don't know whether that would help.
> 
> Christian
> 	
> 
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Martin Mann
> Sent: Friday, May 29, 2009 2:04 PM
> To: gecode user list
> Subject: [gecode-users] How to stop a branching?
> 
> Hi,
> 
> I would like to know, if it is possible to stop a branching (when 
> multiple ones are present). Thus, to ignore all remaining branches for 
> this specific one.
> 
> Maybe an example to make my question clear.
> 
> I have two sets of variables X_1, X_2 linked via several constraints. 
> Within my Space I post two brachning B_1(X_1) and B_2(X_2) such that 
> first all variables of X_1 are assigned before B_2 is considered.
> 
> My final goal is to enumerate solutions with different X_1 assignments!
> 
> My current solution (was implemented for Gecode 1.3.* and I am going to 
> reimplement in 3.*) is to formulate a COP instead of a CSP and to 
> implement the *constrain* function and to post a constraint that ensures 
> that the next solution is at least in one X_1 assignment different from 
> the current solution.
> 
> Thus, I get a new constraint per solution ... and I dont like that! ;)
> 
> But when looking at the problem, it would be sufficient to stop the 
> branching on X_2! I dont need to post new constraints but to cancel the 
> remaining branching of B_2 on X_2. This will lead to a backtracking in 
> B_1 and therefore ensures that the next solution differs in the X_1 
> assignment in at least one solution...
> 
> This seems to be much more efficient to me. Btw. I would end up with a 
> CSP instead of this strange COP hack.
> 
> So my question: Is it possible to stop the remaining branching on B_2 
> out of the (Gecode 3.*) box? Or do I have to implement/subclass my own 
> branching?
> 
> Thanks for your help,
> 
> Martin
> 
> 


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




From Vincent.Barichard at univ-angers.fr  Fri May 29 23:32:31 2009
From: Vincent.Barichard at univ-angers.fr (Vincent Barichard)
Date: Fri, 29 May 2009 23:32:31 +0200
Subject: [gecode-users] nextDesc in gecode 3.1.0
Message-ID: <B9F29103-5D4E-4804-976D-A564CEE4C741@univ-angers.fr>

Hi,

I downloaded Gecode 3.1.0 and I miss a method of 3.0.2. I used the  
nextDesc method of a path to get the next branching, but this method  
disapears in Gecode 3.1.0. Is there a way to get a branching desc or a  
node from a path ?
Should I set the Node nested class to public ?
Thanks for your help.

Cheers,
Vincent

Vincent Barichard         Universit? d'Angers (LERIA)
Tel: 02 41 73 52 06      D?partement Informatique
Fax: 02 41 73 50 73     H203




