From claudio at colmeia.udesc.br  Thu Apr  8 14:07:12 2010
From: claudio at colmeia.udesc.br (=?ISO-8859-1?Q?Claudio_Cesar_de_S=E1?=)
Date: Thu, 8 Apr 2010 14:07:12 +0200
Subject: [gecode-users] a help with matrix and a function for a constraint
	verification
Message-ID: <s2me68bab891004080507x53c6eb69n9fb67dd4288de2d8@mail.gmail.com>

Dear coleauges


The problem is easy in its formulation... however, it has been
difficult for me.

The output desired is a matrix NxN, filled with 0 and 1.
This matrix must be accepted by a checker function,
i.e., it is a constraint such:


  f_checker( MATRIX  , parameter_fix ) == TRUE
  so, if this f_checker return TRUE, this  solution admissible.


Questions:

Is possible to use something like

IntVarArray  my_matrix; //

...................
public:
  /// Actual model
  My_problem(const SizeOptions& opt) :
          my_matrix(*this, size*size, 0, 1)
   {
      Matrix<IntVarArray>  MATRIX( my_matrix , size, size);

//How to post the constraint from a function, like:
  f_checker( MATRIX  , parameter_fix ) == TRUE
is it works?

  // Install branching
    branch(*this,  my_matrix , INT_VAR_NONE, INT_VAL_MAX);

}


Is exist any alternative for directly to use matrix in Gecode?
Alternatives to work with matrix and constraints?




claudio



   (
   ))
  |""|-.
  |__|-'


**********************************************************************
Skype: claudio_cesar_sa
Links:
http://laic.u-clermont1.fr/
http://www.colmeia.udesc.br/
http://www2.joinville.udesc.br/~coca/
http://www2.joinville.udesc.br/~esp7maratona/
Blog: http://claudiocesar.wordpress.com/
***********************************************************************
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20100408/79ca1f23/attachment.html>

From zayenz at gmail.com  Thu Apr  8 14:20:29 2010
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Thu, 8 Apr 2010 14:20:29 +0200
Subject: [gecode-users] a help with matrix and a function for a
	constraint verification
In-Reply-To: <s2me68bab891004080507x53c6eb69n9fb67dd4288de2d8@mail.gmail.com>
References: <s2me68bab891004080507x53c6eb69n9fb67dd4288de2d8@mail.gmail.com>
Message-ID: <t2o63b5c8b01004080520ucd06c6cdu4944d1f0b25462a5@mail.gmail.com>

hi,

To use constraint programming, you need to express your function f_checker
using constraints. Since you don't specify what f_checker does, I don't know
if that is easy or hard to do.

If N is reasonably small or if f_checker has a small number of true cases,
you can use extensional constraints to encode the function directly.

Cheers,
Mikael

2010/4/8 Claudio Cesar de S? <claudio at colmeia.udesc.br>

> Dear coleauges
>
>
> The problem is easy in its formulation... however, it has been
> difficult for me.
>
> The output desired is a matrix NxN, filled with 0 and 1.
> This matrix must be accepted by a checker function,
> i.e., it is a constraint such:
>
>
>   f_checker( MATRIX  , parameter_fix ) == TRUE
>   so, if this f_checker return TRUE, this  solution admissible.
>
>
> Questions:
>
> Is possible to use something like
>
> IntVarArray  my_matrix; //
>
> ...................
> public:
>   /// Actual model
>   My_problem(const SizeOptions& opt) :
>           my_matrix(*this, size*size, 0, 1)
>    {
>       Matrix<IntVarArray>  MATRIX( my_matrix , size, size);
>
> //How to post the constraint from a function, like:
>   f_checker( MATRIX  , parameter_fix ) == TRUE
> is it works?
>
>   // Install branching
>     branch(*this,  my_matrix , INT_VAR_NONE, INT_VAL_MAX);
>
> }
>
>
> Is exist any alternative for directly to use matrix in Gecode?
> Alternatives to work with matrix and constraints?
>
>
>
>
> claudio
>
>
>
>    (
>    ))
>   |""|-.
>   |__|-'
>
>
> **********************************************************************
> Skype: claudio_cesar_sa
> Links:
> http://laic.u-clermont1.fr/
> http://www.colmeia.udesc.br/
> http://www2.joinville.udesc.br/~coca/
> http://www2.joinville.udesc.br/~esp7maratona/
> Blog: http://claudiocesar.wordpress.com/
> ***********************************************************************
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>


-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20100408/eb1a86c7/attachment.htm>

From ashis.k.maity at lmco.com  Thu Apr  8 22:06:06 2010
From: ashis.k.maity at lmco.com (Maity, Ashis K)
Date: Thu, 08 Apr 2010 16:06:06 -0400
Subject: [gecode-users] Stopping Gecode Engine gracefully
In-Reply-To: <156DF073-3C5D-48DE-A9B3-8BDC3C10B613@gecode.org>
References: <v2u9a93a7b41003301217o53d392c9ha73c48144ef32d8d@mail.gmail.com>
	<156DF073-3C5D-48DE-A9B3-8BDC3C10B613@gecode.org>
Message-ID: <67B0B414F1419D49837D1FCA9B51825A448EE661@HVXMSPB.us.lmco.com>

Hello,

How do I stop the Gecode engine gracefully at any time (driven by user's request) when I start it the following way? I know it can be stopped by setting time limit, node limit etc. But I want to stop engine at any time and collect the result until that point. Do I overload the run method to get access to Engine or is there another way?

				MinimizeScript::run<Scheduler, BAB, SchedulerOptions>(opt); (Scheduler inherits MinimizeScript)

Also, I am running into memory trouble as heap memory is getting exhausted. Would increasing the heap size through memory-config.hpp help?

Thanks so much,

Ashis


From tack at gecode.org  Thu Apr  8 22:19:23 2010
From: tack at gecode.org (Guido Tack)
Date: Thu, 8 Apr 2010 22:19:23 +0200
Subject: [gecode-users] Stopping Gecode Engine gracefully
In-Reply-To: <67B0B414F1419D49837D1FCA9B51825A448EE661@HVXMSPB.us.lmco.com>
References: <v2u9a93a7b41003301217o53d392c9ha73c48144ef32d8d@mail.gmail.com>
	<156DF073-3C5D-48DE-A9B3-8BDC3C10B613@gecode.org>
	<67B0B414F1419D49837D1FCA9B51825A448EE661@HVXMSPB.us.lmco.com>
Message-ID: <E872382C-F2E9-465E-AB16-3088557C7589@gecode.org>

Hi,

you can implement your own Stop object by inheriting from Search::Stop.  If you add it to the options of your search engine, the engine periodically calls its stop function.  Simply return true there to stop the search.

Gecode will always use all the heap it can get if it needs it, the limits in memory-config.hpp only affect in what chunks heap memory is allocated.  If you have memory problems, you should try different recomputation parameters (parameters c_d and a_d in the search options).

Cheers,
	Guido

Maity, Ashis K wrote:

> Hello,
> 
> How do I stop the Gecode engine gracefully at any time (driven by user's request) when I start it the following way? I know it can be stopped by setting time limit, node limit etc. But I want to stop engine at any time and collect the result until that point. Do I overload the run method to get access to Engine or is there another way?
> 
> 				MinimizeScript::run<Scheduler, BAB, SchedulerOptions>(opt); (Scheduler inherits MinimizeScript)
> 
> Also, I am running into memory trouble as heap memory is getting exhausted. Would increasing the heap size through memory-config.hpp help?
> 
> Thanks so much,
> 
> Ashis
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-- 
Guido Tack, http://people.cs.kuleuven.be/~guido.tack/






From ashis.k.maity at lmco.com  Thu Apr  8 23:15:17 2010
From: ashis.k.maity at lmco.com (Maity, Ashis K)
Date: Thu, 08 Apr 2010 17:15:17 -0400
Subject: [gecode-users] Stopping Gecode Engine gracefully
In-Reply-To: <E872382C-F2E9-465E-AB16-3088557C7589@gecode.org>
References: <v2u9a93a7b41003301217o53d392c9ha73c48144ef32d8d@mail.gmail.com>
	<156DF073-3C5D-48DE-A9B3-8BDC3C10B613@gecode.org>
	<67B0B414F1419D49837D1FCA9B51825A448EE661@HVXMSPB.us.lmco.com>
	<E872382C-F2E9-465E-AB16-3088557C7589@gecode.org>
Message-ID: <67B0B414F1419D49837D1FCA9B51825A448EE772@HVXMSPB.us.lmco.com>

Hi Guido,

Appreciate for the prompt reply! I am already using c_d to max with no a_d. Isn't that good for max memory utilization (though it is bad for processing time)? Or do you suggest something else?

opt.c_d(20000000); // computation distance
//opt.a_d(1000); // adaptive computation distance

Thanks,

Ashis

-----Original Message-----
From: Guido Tack [mailto:tack at gecode.org] 
Sent: Thursday, April 08, 2010 4:19 PM
To: Maity, Ashis K
Cc: users at gecode.org
Subject: Re: [gecode-users] Stopping Gecode Engine gracefully

Hi,

you can implement your own Stop object by inheriting from Search::Stop.  If you add it to the options of your search engine, the engine periodically calls its stop function.  Simply return true there to stop the search.

Gecode will always use all the heap it can get if it needs it, the limits in memory-config.hpp only affect in what chunks heap memory is allocated.  If you have memory problems, you should try different recomputation parameters (parameters c_d and a_d in the search options).

Cheers,
	Guido

Maity, Ashis K wrote:

> Hello,
> 
> How do I stop the Gecode engine gracefully at any time (driven by user's request) when I start it the following way? I know it can be stopped by setting time limit, node limit etc. But I want to stop engine at any time and collect the result until that point. Do I overload the run method to get access to Engine or is there another way?
> 
> 				MinimizeScript::run<Scheduler, BAB, SchedulerOptions>(opt); (Scheduler inherits MinimizeScript)
> 
> Also, I am running into memory trouble as heap memory is getting exhausted. Would increasing the heap size through memory-config.hpp help?
> 
> Thanks so much,
> 
> Ashis
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-- 
Guido Tack, http://people.cs.kuleuven.be/~guido.tack/






From tack at gecode.org  Fri Apr  9 08:47:45 2010
From: tack at gecode.org (Guido Tack)
Date: Fri, 9 Apr 2010 08:47:45 +0200
Subject: [gecode-users] Gecode 3.3.1 released
Message-ID: <504B1CD7-DB73-4DC2-B176-74EC96D137FB@gecode.org>

Dear all,

we are releasing a new version of Gecode:

               Gecode 3.3.1
        http://www.gecode.org

This release adds many new features to Gist, fixes two major bugs in extensional constraints, and has some more cleanups to comply with the first release of the "Modeling and Programming with Gecode" document. And, as always some small fixes and cleanups.

On our web site, you find source packages, as well as binary packages for Windows and Mac OS.

Together with this release, we provide the new tutorial documentation "Modeling and Programming with Gecode", which replaces the previous document "Modeling with Gecode", adding tutorials on programming propagators and branchers.  It is available from our documentation page:

        http://www.gecode.org/documentation.html

Cheers,
	Guido



From tack at gecode.org  Fri Apr  9 09:09:35 2010
From: tack at gecode.org (Guido Tack)
Date: Fri, 9 Apr 2010 09:09:35 +0200
Subject: [gecode-users] Stopping Gecode Engine gracefully
In-Reply-To: <67B0B414F1419D49837D1FCA9B51825A448EE772@HVXMSPB.us.lmco.com>
References: <v2u9a93a7b41003301217o53d392c9ha73c48144ef32d8d@mail.gmail.com>
	<156DF073-3C5D-48DE-A9B3-8BDC3C10B613@gecode.org>
	<67B0B414F1419D49837D1FCA9B51825A448EE661@HVXMSPB.us.lmco.com>
	<E872382C-F2E9-465E-AB16-3088557C7589@gecode.org>
	<67B0B414F1419D49837D1FCA9B51825A448EE772@HVXMSPB.us.lmco.com>
Message-ID: <BFAB496E-EDC0-44FD-A78A-F3B88B275960@gecode.org>

I'm not sure what you are trying to achieve.  Does your model run out of memory with the standard recomputation parameters? Then you should increase both c_d and a_d (the default for a_d is 2, so just not setting it leaves it switched on).
But I'm not sure what you mean by max memory utilization.  The higher the c_d is, the less memory Gecode will use.  If you want Gecode to use more memory (and hence less time for most models), leave c_d at its default.
The tradeoff is to use more memory (low c_d) OR use more time (high c_d).

Cheers,
	Guido

Maity, Ashis K wrote:

> Hi Guido,
> 
> Appreciate for the prompt reply! I am already using c_d to max with no a_d. Isn't that good for max memory utilization (though it is bad for processing time)? Or do you suggest something else?
> 
> opt.c_d(20000000); // computation distance
> //opt.a_d(1000); // adaptive computation distance
> 
> Thanks,
> 
> Ashis
> 
> -----Original Message-----
> From: Guido Tack [mailto:tack at gecode.org] 
> Sent: Thursday, April 08, 2010 4:19 PM
> To: Maity, Ashis K
> Cc: users at gecode.org
> Subject: Re: [gecode-users] Stopping Gecode Engine gracefully
> 
> Hi,
> 
> you can implement your own Stop object by inheriting from Search::Stop.  If you add it to the options of your search engine, the engine periodically calls its stop function.  Simply return true there to stop the search.
> 
> Gecode will always use all the heap it can get if it needs it, the limits in memory-config.hpp only affect in what chunks heap memory is allocated.  If you have memory problems, you should try different recomputation parameters (parameters c_d and a_d in the search options).
> 
> Cheers,
> 	Guido
> 
> Maity, Ashis K wrote:
> 
>> Hello,
>> 
>> How do I stop the Gecode engine gracefully at any time (driven by user's request) when I start it the following way? I know it can be stopped by setting time limit, node limit etc. But I want to stop engine at any time and collect the result until that point. Do I overload the run method to get access to Engine or is there another way?
>> 
>> 				MinimizeScript::run<Scheduler, BAB, SchedulerOptions>(opt); (Scheduler inherits MinimizeScript)
>> 
>> Also, I am running into memory trouble as heap memory is getting exhausted. Would increasing the heap size through memory-config.hpp help?
>> 
>> Thanks so much,
>> 
>> Ashis
>> 
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
> 
> -- 
> Guido Tack, http://people.cs.kuleuven.be/~guido.tack/
> 
> 
> 
> 

-- 
Guido Tack, http://people.cs.kuleuven.be/~guido.tack/






From david.zaremby at lmco.com  Mon Apr 12 15:40:34 2010
From: david.zaremby at lmco.com (Zaremby, David)
Date: Mon, 12 Apr 2010 09:40:34 -0400
Subject: [gecode-users] Managing memory footprint for large problems
In-Reply-To: <67B0B414F1419D49837D1FCA9B51825A4498E1CA@HVXMSPB.us.lmco.com>
References: <67B0B414F1419D49837D1FCA9B51825A4498E1CA@HVXMSPB.us.lmco.com>
Message-ID: <B0DBAEBD2F00B6409AA88CA457FBBE8247D865F23F@HVXMSP1.us.lmco.com>

I work with Ashis and I have been playing with a few experiments. What I am seeing is that the memory is constantly climbing at every node as I traverse down the left hand side despite very high computation parameters int c_d=1000000, int a_d=1000000).  I have posted the stack trace for the code to maybe give some insight. I see the clone method being called for each node which seems odd since I believe it should only be doing choice, status, and commits. I have reverted back from our custom brancher to a simple built in of branch(*this, resources, INT_VAR_MIN_MIN, INT_VAL_MIN). If I had to venture a guess from exploring the code, it is because the workingspace is never being initialized and thus it keeps trying to initialize it for the first time. The memory growth seems to scale with the number of propagators. If I reduce my scheduling constraints but leave my number of choice the same I get a smaller memory footprint for each clone. The same behavior happens for the default c_d and a_d values.

	AutomatedScheduler++.exe!Scheduler::Scheduler(bool share=true, Scheduler & s={...})  Line 65	C++
 	AutomatedScheduler++.exe!Scheduler::copy(bool share=true)  Line 79 + 0x37 bytes	C++
 	GecodeKernel-3-3-1-d-x86.dll!Gecode::Space::_clone(bool share=true)  Line 470 + 0x18 bytes	C++
 	GecodeGist-3-3-1-d-x86.dll!Gecode::Space::clone(bool share=true, Gecode::CloneStatistics & __formal={...})  Line 2369	C++
>	GecodeGist-3-3-1-d-x86.dll!Gecode::Gist::SpaceNode::recompute(Gecode::Gist::BestNode * curBest=0x1dde3558, int c_d=1000000, int a_d=1000000)  Line 87 + 0x14 bytes	C++
 	GecodeGist-3-3-1-d-x86.dll!Gecode::Gist::SpaceNode::acquireSpace(Gecode::Gist::BestNode * curBest=0x1dde3558, int c_d=1000000, int a_d=1000000)  Line 173 + 0x14 bytes	C++
 	GecodeGist-3-3-1-d-x86.dll!Gecode::Gist::SpaceNode::getNumberOfChildNodes(Gecode::Support::BlockAllocator<Gecode::Gist::VisualNode,10000> & na={...}, Gecode::Gist::BestNode * curBest=0x1dde3558, Gecode::Gist::Statistics & stats={...}, int c_d=1000000, int a_d=1000000)  Line 291	C++
 	GecodeGist-3-3-1-d-x86.dll!Gecode::Gist::TreeCanvas::inspectCurrentNode(bool fix=true, int inspectorNo=-1)  Line 605 + 0x34 bytes	C++
 	GecodeGist-3-3-1-d-x86.dll!Gecode::Gist::TreeCanvas::mouseDoubleClickEvent(QMouseEvent * event=0x017bd100)  Line 1129	C++


David Zaremby
Senior Software Engineer
LSS / Strategic Products
 
Lockheed Martin Simulation, Training & Support
12506 Lake Underhill Road, MP-823
Orlando, FL 32825
-----Original Message-----
From: Maity, Ashis K 
Sent: Monday, April 12, 2010 8:48 AM
To: Zaremby, David
Subject: FW: [gecode-users] Stopping Gecode Engine gracefully

FYI!

-----Original Message-----
From: Guido Tack [mailto:tack at gecode.org] 
Sent: Saturday, April 10, 2010 5:41 AM
To: Maity, Ashis K
Subject: Re: [gecode-users] Stopping Gecode Engine gracefully

Hi Ashis,

would you mind posting your message to the mailing list?  I think this might interest others, too.  Anyway, here's my answer.

Maity, Ashis K wrote:
> Yes, that was also my understanding in terms of setting c_d and a_d. I was not clear in my write up. I mean to say that I am setting higher c_d so that it can use less memory and not run out of memory. But one thing you made clear is that even if I do not set a_d it will default to 2. I probably missed seeing that in documentation. I was hoping the default behavior of a_d will be like setting it higher than c_d (that is a_d is not used).

The defaults are independent of each other (i.e. c_d is always 8 and a_d is always 2).  We tried to come up with something more automatic, but it's not clear how that's supposed to work.

> In any event, yes my problem runs out of memory with default c_d and a_d. And it does run out with other combination of c_d and a_d as well (say c_d = 20000 and a_d = 10000 or c_d = 200 and a_d = 100). Strange thing is even with varied c_d & a_d combination, my memory consumption graph rises almost similar way (as observed from Windows Task Manager). To give you some background, I am working on Scheduler problems that contain hundreds of tasks with large start domains and have many choices on resource. Previously I was using Mozart/Oz, but recently transferred my code to Gecode hoping it will help my memory problem. It appeared to do so when it ran a problem with 600 tasks rather quickly. But when I try to run a problem with 1000 tasks, it crashes within a couple of minutes saying "heap memory is exhausted". It may be that my memory problem is exhausting before it comes to choices and that's why c_d and a_d value are not making much of a difference! Can you please comment on!
>  this?


You could try running your problem in Gist and double-click the root node (that will create exactly one instance of your problem and not perform any search).
If that exhausts the memory, it's clearly a problem in the model itself.  Actually, if that doesn't exhaust the memory, then setting c_d/a_d very high should definitely at least change the memory behavior, because with a very high c_d/a_d, the required memory is pretty much exactly twice the memory of the root node.

If it turns out to be a problem in the root node already, there's several things one could try.  First of all, you should check how many variables you create.  If it's quadratic in the problem size (e.g. one Boolean for every pair of tasks could be typical for scheduling problems), that would explain the difference between 600 and 1000 tasks - I'm also working on scheduling problems right now and I've run into similar issues.  Being very careful not to create too many temporary variables is very important in this case.
Then, it's sometimes possible to replace a set of propagators with one custom propagator.  That can help a lot if there's a large number (say, quadratically many) of these propagators.
Finally, reformulating the problem might help, or trying to solve a relaxation (e.g. aggregating several tasks into bigger meta-tasks to make the problem smaller), but that's of course very problem-specific and sometimes simply impossible.

Cheers,
	Guido

-- 
Guido Tack, http://people.cs.kuleuven.be/~guido.tack/






From cschulte at kth.se  Mon Apr 12 16:00:04 2010
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 12 Apr 2010 16:00:04 +0200
Subject: [gecode-users] Managing memory footprint for large problems
In-Reply-To: <B0DBAEBD2F00B6409AA88CA457FBBE8247D865F23F@HVXMSP1.us.lmco.com>
References: <67B0B414F1419D49837D1FCA9B51825A4498E1CA@HVXMSPB.us.lmco.com>
	<B0DBAEBD2F00B6409AA88CA457FBBE8247D865F23F@HVXMSP1.us.lmco.com>
Message-ID: <001501cada48$74d13a90$5e73afb0$@se>

Dear David,

could you (or Ashis) please check whether you observe the same behavior when
not using Gist, but a simple search engine?

Thanks
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Zaremby, David
Sent: Monday, April 12, 2010 3:41 PM
To: users at gecode.org; Guido Tack
Subject: [gecode-users] Managing memory footprint for large problems

I work with Ashis and I have been playing with a few experiments. What I am
seeing is that the memory is constantly climbing at every node as I traverse
down the left hand side despite very high computation parameters int
c_d=1000000, int a_d=1000000).  I have posted the stack trace for the code
to maybe give some insight. I see the clone method being called for each
node which seems odd since I believe it should only be doing choice, status,
and commits. I have reverted back from our custom brancher to a simple built
in of branch(*this, resources, INT_VAR_MIN_MIN, INT_VAL_MIN). If I had to
venture a guess from exploring the code, it is because the workingspace is
never being initialized and thus it keeps trying to initialize it for the
first time. The memory growth seems to scale with the number of propagators.
If I reduce my scheduling constraints but leave my number of choice the same
I get a smaller memory footprint for each clone. The same behavior happens
for the defaul
 t c_d and a_d values.

	AutomatedScheduler++.exe!Scheduler::Scheduler(bool share=true,
Scheduler & s={...})  Line 65	C++
 	AutomatedScheduler++.exe!Scheduler::copy(bool share=true)  Line 79 +
0x37 bytes	C++
 	GecodeKernel-3-3-1-d-x86.dll!Gecode::Space::_clone(bool share=true)
Line 470 + 0x18 bytes	C++
 	GecodeGist-3-3-1-d-x86.dll!Gecode::Space::clone(bool share=true,
Gecode::CloneStatistics & __formal={...})  Line 2369	C++
>
GecodeGist-3-3-1-d-x86.dll!Gecode::Gist::SpaceNode::recompute(Gecode::Gist::
BestNode * curBest=0x1dde3558, int c_d=1000000, int a_d=1000000)  Line 87 +
0x14 bytes	C++
 
GecodeGist-3-3-1-d-x86.dll!Gecode::Gist::SpaceNode::acquireSpace(Gecode::Gis
t::BestNode * curBest=0x1dde3558, int c_d=1000000, int a_d=1000000)  Line
173 + 0x14 bytes	C++
 
GecodeGist-3-3-1-d-x86.dll!Gecode::Gist::SpaceNode::getNumberOfChildNodes(Ge
code::Support::BlockAllocator<Gecode::Gist::VisualNode,10000> & na={...},
Gecode::Gist::BestNode * curBest=0x1dde3558, Gecode::Gist::Statistics &
stats={...}, int c_d=1000000, int a_d=1000000)  Line 291	C++
 
GecodeGist-3-3-1-d-x86.dll!Gecode::Gist::TreeCanvas::inspectCurrentNode(bool
fix=true, int inspectorNo=-1)  Line 605 + 0x34 bytes	C++
 
GecodeGist-3-3-1-d-x86.dll!Gecode::Gist::TreeCanvas::mouseDoubleClickEvent(Q
MouseEvent * event=0x017bd100)  Line 1129	C++


David Zaremby
Senior Software Engineer
LSS / Strategic Products
 
Lockheed Martin Simulation, Training & Support
12506 Lake Underhill Road, MP-823
Orlando, FL 32825
-----Original Message-----
From: Maity, Ashis K 
Sent: Monday, April 12, 2010 8:48 AM
To: Zaremby, David
Subject: FW: [gecode-users] Stopping Gecode Engine gracefully

FYI!

-----Original Message-----
From: Guido Tack [mailto:tack at gecode.org] 
Sent: Saturday, April 10, 2010 5:41 AM
To: Maity, Ashis K
Subject: Re: [gecode-users] Stopping Gecode Engine gracefully

Hi Ashis,

would you mind posting your message to the mailing list?  I think this might
interest others, too.  Anyway, here's my answer.

Maity, Ashis K wrote:
> Yes, that was also my understanding in terms of setting c_d and a_d. I was
not clear in my write up. I mean to say that I am setting higher c_d so that
it can use less memory and not run out of memory. But one thing you made
clear is that even if I do not set a_d it will default to 2. I probably
missed seeing that in documentation. I was hoping the default behavior of
a_d will be like setting it higher than c_d (that is a_d is not used).

The defaults are independent of each other (i.e. c_d is always 8 and a_d is
always 2).  We tried to come up with something more automatic, but it's not
clear how that's supposed to work.

> In any event, yes my problem runs out of memory with default c_d and a_d.
And it does run out with other combination of c_d and a_d as well (say c_d =
20000 and a_d = 10000 or c_d = 200 and a_d = 100). Strange thing is even
with varied c_d & a_d combination, my memory consumption graph rises almost
similar way (as observed from Windows Task Manager). To give you some
background, I am working on Scheduler problems that contain hundreds of
tasks with large start domains and have many choices on resource. Previously
I was using Mozart/Oz, but recently transferred my code to Gecode hoping it
will help my memory problem. It appeared to do so when it ran a problem with
600 tasks rather quickly. But when I try to run a problem with 1000 tasks,
it crashes within a couple of minutes saying "heap memory is exhausted". It
may be that my memory problem is exhausting before it comes to choices and
that's why c_d and a_d value are not making much of a difference! Can you
please comment o
 n!
>  this?


You could try running your problem in Gist and double-click the root node
(that will create exactly one instance of your problem and not perform any
search).
If that exhausts the memory, it's clearly a problem in the model itself.
Actually, if that doesn't exhaust the memory, then setting c_d/a_d very high
should definitely at least change the memory behavior, because with a very
high c_d/a_d, the required memory is pretty much exactly twice the memory of
the root node.

If it turns out to be a problem in the root node already, there's several
things one could try.  First of all, you should check how many variables you
create.  If it's quadratic in the problem size (e.g. one Boolean for every
pair of tasks could be typical for scheduling problems), that would explain
the difference between 600 and 1000 tasks - I'm also working on scheduling
problems right now and I've run into similar issues.  Being very careful not
to create too many temporary variables is very important in this case.
Then, it's sometimes possible to replace a set of propagators with one
custom propagator.  That can help a lot if there's a large number (say,
quadratically many) of these propagators.
Finally, reformulating the problem might help, or trying to solve a
relaxation (e.g. aggregating several tasks into bigger meta-tasks to make
the problem smaller), but that's of course very problem-specific and
sometimes simply impossible.

Cheers,
	Guido

-- 
Guido Tack, http://people.cs.kuleuven.be/~guido.tack/





_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users



From tack at gecode.org  Mon Apr 12 16:05:00 2010
From: tack at gecode.org (Guido Tack)
Date: Mon, 12 Apr 2010 16:05:00 +0200
Subject: [gecode-users] Managing memory footprint for large problems
In-Reply-To: <001501cada48$74d13a90$5e73afb0$@se>
References: <67B0B414F1419D49837D1FCA9B51825A4498E1CA@HVXMSPB.us.lmco.com>
	<B0DBAEBD2F00B6409AA88CA457FBBE8247D865F23F@HVXMSP1.us.lmco.com>
	<001501cada48$74d13a90$5e73afb0$@se>
Message-ID: <575BE0AA-09E5-488F-9229-1F37B9442B98@gecode.org>

That was actually a small bug in Gist that only occurred when using interactive search.  I just fixed it in the trunk version.

Cheers,
	Guido

Christian Schulte wrote:

> Dear David,
> 
> could you (or Ashis) please check whether you observe the same behavior when
> not using Gist, but a simple search engine?
> 
> Thanks
> Christian
> 
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
> 
> 
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Zaremby, David
> Sent: Monday, April 12, 2010 3:41 PM
> To: users at gecode.org; Guido Tack
> Subject: [gecode-users] Managing memory footprint for large problems
> 
> I work with Ashis and I have been playing with a few experiments. What I am
> seeing is that the memory is constantly climbing at every node as I traverse
> down the left hand side despite very high computation parameters int
> c_d=1000000, int a_d=1000000).  I have posted the stack trace for the code
> to maybe give some insight. I see the clone method being called for each
> node which seems odd since I believe it should only be doing choice, status,
> and commits. I have reverted back from our custom brancher to a simple built
> in of branch(*this, resources, INT_VAR_MIN_MIN, INT_VAL_MIN). If I had to
> venture a guess from exploring the code, it is because the workingspace is
> never being initialized and thus it keeps trying to initialize it for the
> first time. The memory growth seems to scale with the number of propagators.
> If I reduce my scheduling constraints but leave my number of choice the same
> I get a smaller memory footprint for each clone. The same behavior happens
> for the defaul
> t c_d and a_d values.
> 
> 	AutomatedScheduler++.exe!Scheduler::Scheduler(bool share=true,
> Scheduler & s={...})  Line 65	C++
> 	AutomatedScheduler++.exe!Scheduler::copy(bool share=true)  Line 79 +
> 0x37 bytes	C++
> 	GecodeKernel-3-3-1-d-x86.dll!Gecode::Space::_clone(bool share=true)
> Line 470 + 0x18 bytes	C++
> 	GecodeGist-3-3-1-d-x86.dll!Gecode::Space::clone(bool share=true,
> Gecode::CloneStatistics & __formal={...})  Line 2369	C++
>> 
> GecodeGist-3-3-1-d-x86.dll!Gecode::Gist::SpaceNode::recompute(Gecode::Gist::
> BestNode * curBest=0x1dde3558, int c_d=1000000, int a_d=1000000)  Line 87 +
> 0x14 bytes	C++
> 
> GecodeGist-3-3-1-d-x86.dll!Gecode::Gist::SpaceNode::acquireSpace(Gecode::Gis
> t::BestNode * curBest=0x1dde3558, int c_d=1000000, int a_d=1000000)  Line
> 173 + 0x14 bytes	C++
> 
> GecodeGist-3-3-1-d-x86.dll!Gecode::Gist::SpaceNode::getNumberOfChildNodes(Ge
> code::Support::BlockAllocator<Gecode::Gist::VisualNode,10000> & na={...},
> Gecode::Gist::BestNode * curBest=0x1dde3558, Gecode::Gist::Statistics &
> stats={...}, int c_d=1000000, int a_d=1000000)  Line 291	C++
> 
> GecodeGist-3-3-1-d-x86.dll!Gecode::Gist::TreeCanvas::inspectCurrentNode(bool
> fix=true, int inspectorNo=-1)  Line 605 + 0x34 bytes	C++
> 
> GecodeGist-3-3-1-d-x86.dll!Gecode::Gist::TreeCanvas::mouseDoubleClickEvent(Q
> MouseEvent * event=0x017bd100)  Line 1129	C++
> 
> 
> David Zaremby
> Senior Software Engineer
> LSS / Strategic Products
> 
> Lockheed Martin Simulation, Training & Support
> 12506 Lake Underhill Road, MP-823
> Orlando, FL 32825
> -----Original Message-----
> From: Maity, Ashis K 
> Sent: Monday, April 12, 2010 8:48 AM
> To: Zaremby, David
> Subject: FW: [gecode-users] Stopping Gecode Engine gracefully
> 
> FYI!
> 
> -----Original Message-----
> From: Guido Tack [mailto:tack at gecode.org] 
> Sent: Saturday, April 10, 2010 5:41 AM
> To: Maity, Ashis K
> Subject: Re: [gecode-users] Stopping Gecode Engine gracefully
> 
> Hi Ashis,
> 
> would you mind posting your message to the mailing list?  I think this might
> interest others, too.  Anyway, here's my answer.
> 
> Maity, Ashis K wrote:
>> Yes, that was also my understanding in terms of setting c_d and a_d. I was
> not clear in my write up. I mean to say that I am setting higher c_d so that
> it can use less memory and not run out of memory. But one thing you made
> clear is that even if I do not set a_d it will default to 2. I probably
> missed seeing that in documentation. I was hoping the default behavior of
> a_d will be like setting it higher than c_d (that is a_d is not used).
> 
> The defaults are independent of each other (i.e. c_d is always 8 and a_d is
> always 2).  We tried to come up with something more automatic, but it's not
> clear how that's supposed to work.
> 
>> In any event, yes my problem runs out of memory with default c_d and a_d.
> And it does run out with other combination of c_d and a_d as well (say c_d =
> 20000 and a_d = 10000 or c_d = 200 and a_d = 100). Strange thing is even
> with varied c_d & a_d combination, my memory consumption graph rises almost
> similar way (as observed from Windows Task Manager). To give you some
> background, I am working on Scheduler problems that contain hundreds of
> tasks with large start domains and have many choices on resource. Previously
> I was using Mozart/Oz, but recently transferred my code to Gecode hoping it
> will help my memory problem. It appeared to do so when it ran a problem with
> 600 tasks rather quickly. But when I try to run a problem with 1000 tasks,
> it crashes within a couple of minutes saying "heap memory is exhausted". It
> may be that my memory problem is exhausting before it comes to choices and
> that's why c_d and a_d value are not making much of a difference! Can you
> please comment o
> n!
>> this?
> 
> 
> You could try running your problem in Gist and double-click the root node
> (that will create exactly one instance of your problem and not perform any
> search).
> If that exhausts the memory, it's clearly a problem in the model itself.
> Actually, if that doesn't exhaust the memory, then setting c_d/a_d very high
> should definitely at least change the memory behavior, because with a very
> high c_d/a_d, the required memory is pretty much exactly twice the memory of
> the root node.
> 
> If it turns out to be a problem in the root node already, there's several
> things one could try.  First of all, you should check how many variables you
> create.  If it's quadratic in the problem size (e.g. one Boolean for every
> pair of tasks could be typical for scheduling problems), that would explain
> the difference between 600 and 1000 tasks - I'm also working on scheduling
> problems right now and I've run into similar issues.  Being very careful not
> to create too many temporary variables is very important in this case.
> Then, it's sometimes possible to replace a set of propagators with one
> custom propagator.  That can help a lot if there's a large number (say,
> quadratically many) of these propagators.
> Finally, reformulating the problem might help, or trying to solve a
> relaxation (e.g. aggregating several tasks into bigger meta-tasks to make
> the problem smaller), but that's of course very problem-specific and
> sometimes simply impossible.
> 
> Cheers,
> 	Guido
> 
> -- 
> Guido Tack, http://people.cs.kuleuven.be/~guido.tack/
> 
> 
> 
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-- 
Guido Tack, http://people.cs.kuleuven.be/~guido.tack/






From david.zaremby at lmco.com  Mon Apr 12 17:25:22 2010
From: david.zaremby at lmco.com (Zaremby, David)
Date: Mon, 12 Apr 2010 11:25:22 -0400
Subject: [gecode-users] Managing memory footprint for large problems
In-Reply-To: <575BE0AA-09E5-488F-9229-1F37B9442B98@gecode.org>
References: <67B0B414F1419D49837D1FCA9B51825A4498E1CA@HVXMSPB.us.lmco.com>
	<B0DBAEBD2F00B6409AA88CA457FBBE8247D865F23F@HVXMSP1.us.lmco.com>
	<001501cada48$74d13a90$5e73afb0$@se>
	<575BE0AA-09E5-488F-9229-1F37B9442B98@gecode.org>
Message-ID: <B0DBAEBD2F00B6409AA88CA457FBBE8247D865F769@HVXMSP1.us.lmco.com>

This does seem to be just a gist issue. I guess looking at that was throwing me off. I used the MinimizeScript and it seems to behave as described as far as cloning. I suppose our issue is just the number of propagators and the size of the domains. I suppose we will have to look into defining our own propagators. Do you have any recommendations for what to aim for in defining our own propagators to reduce the memory usage and get the most bang for our buck. What actually consumes the memory, common pitfalls, optimization tricks?

As an example, We are doing things to constrain tasks that are somewhat complicated such as you can only have 3 tasks or 10 hours worth of usage in a period of time and these periods repeat over a specified interval. 

David Zaremby
Senior Software Engineer
LSS / Strategic Products
 
Lockheed Martin Simulation, Training & Support
12506 Lake Underhill Road, MP-823
Orlando, FL 32825
-----Original Message-----
From: Guido Tack [mailto:tack at gecode.org] 
Sent: Monday, April 12, 2010 10:05 AM
To: cschulte at kth.se
Cc: Zaremby, David; users at gecode.org gecode
Subject: Re: [gecode-users] Managing memory footprint for large problems

That was actually a small bug in Gist that only occurred when using interactive search.  I just fixed it in the trunk version.

Cheers,
	Guido

Christian Schulte wrote:

> Dear David,
> 
> could you (or Ashis) please check whether you observe the same behavior when
> not using Gist, but a simple search engine?
> 
> Thanks
> Christian
> 
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
> 
> 
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Zaremby, David
> Sent: Monday, April 12, 2010 3:41 PM
> To: users at gecode.org; Guido Tack
> Subject: [gecode-users] Managing memory footprint for large problems
> 
> I work with Ashis and I have been playing with a few experiments. What I am
> seeing is that the memory is constantly climbing at every node as I traverse
> down the left hand side despite very high computation parameters int
> c_d=1000000, int a_d=1000000).  I have posted the stack trace for the code
> to maybe give some insight. I see the clone method being called for each
> node which seems odd since I believe it should only be doing choice, status,
> and commits. I have reverted back from our custom brancher to a simple built
> in of branch(*this, resources, INT_VAR_MIN_MIN, INT_VAL_MIN). If I had to
> venture a guess from exploring the code, it is because the workingspace is
> never being initialized and thus it keeps trying to initialize it for the
> first time. The memory growth seems to scale with the number of propagators.
> If I reduce my scheduling constraints but leave my number of choice the same
> I get a smaller memory footprint for each clone. The same behavior happens
> for the defaul
> t c_d and a_d values.
> 
> 	AutomatedScheduler++.exe!Scheduler::Scheduler(bool share=true,
> Scheduler & s={...})  Line 65	C++
> 	AutomatedScheduler++.exe!Scheduler::copy(bool share=true)  Line 79 +
> 0x37 bytes	C++
> 	GecodeKernel-3-3-1-d-x86.dll!Gecode::Space::_clone(bool share=true)
> Line 470 + 0x18 bytes	C++
> 	GecodeGist-3-3-1-d-x86.dll!Gecode::Space::clone(bool share=true,
> Gecode::CloneStatistics & __formal={...})  Line 2369	C++
>> 
> GecodeGist-3-3-1-d-x86.dll!Gecode::Gist::SpaceNode::recompute(Gecode::Gist::
> BestNode * curBest=0x1dde3558, int c_d=1000000, int a_d=1000000)  Line 87 +
> 0x14 bytes	C++
> 
> GecodeGist-3-3-1-d-x86.dll!Gecode::Gist::SpaceNode::acquireSpace(Gecode::Gis
> t::BestNode * curBest=0x1dde3558, int c_d=1000000, int a_d=1000000)  Line
> 173 + 0x14 bytes	C++
> 
> GecodeGist-3-3-1-d-x86.dll!Gecode::Gist::SpaceNode::getNumberOfChildNodes(Ge
> code::Support::BlockAllocator<Gecode::Gist::VisualNode,10000> & na={...},
> Gecode::Gist::BestNode * curBest=0x1dde3558, Gecode::Gist::Statistics &
> stats={...}, int c_d=1000000, int a_d=1000000)  Line 291	C++
> 
> GecodeGist-3-3-1-d-x86.dll!Gecode::Gist::TreeCanvas::inspectCurrentNode(bool
> fix=true, int inspectorNo=-1)  Line 605 + 0x34 bytes	C++
> 
> GecodeGist-3-3-1-d-x86.dll!Gecode::Gist::TreeCanvas::mouseDoubleClickEvent(Q
> MouseEvent * event=0x017bd100)  Line 1129	C++
> 
> 
> David Zaremby
> Senior Software Engineer
> LSS / Strategic Products
> 
> Lockheed Martin Simulation, Training & Support
> 12506 Lake Underhill Road, MP-823
> Orlando, FL 32825
> -----Original Message-----
> From: Maity, Ashis K 
> Sent: Monday, April 12, 2010 8:48 AM
> To: Zaremby, David
> Subject: FW: [gecode-users] Stopping Gecode Engine gracefully
> 
> FYI!
> 
> -----Original Message-----
> From: Guido Tack [mailto:tack at gecode.org] 
> Sent: Saturday, April 10, 2010 5:41 AM
> To: Maity, Ashis K
> Subject: Re: [gecode-users] Stopping Gecode Engine gracefully
> 
> Hi Ashis,
> 
> would you mind posting your message to the mailing list?  I think this might
> interest others, too.  Anyway, here's my answer.
> 
> Maity, Ashis K wrote:
>> Yes, that was also my understanding in terms of setting c_d and a_d. I was
> not clear in my write up. I mean to say that I am setting higher c_d so that
> it can use less memory and not run out of memory. But one thing you made
> clear is that even if I do not set a_d it will default to 2. I probably
> missed seeing that in documentation. I was hoping the default behavior of
> a_d will be like setting it higher than c_d (that is a_d is not used).
> 
> The defaults are independent of each other (i.e. c_d is always 8 and a_d is
> always 2).  We tried to come up with something more automatic, but it's not
> clear how that's supposed to work.
> 
>> In any event, yes my problem runs out of memory with default c_d and a_d.
> And it does run out with other combination of c_d and a_d as well (say c_d =
> 20000 and a_d = 10000 or c_d = 200 and a_d = 100). Strange thing is even
> with varied c_d & a_d combination, my memory consumption graph rises almost
> similar way (as observed from Windows Task Manager). To give you some
> background, I am working on Scheduler problems that contain hundreds of
> tasks with large start domains and have many choices on resource. Previously
> I was using Mozart/Oz, but recently transferred my code to Gecode hoping it
> will help my memory problem. It appeared to do so when it ran a problem with
> 600 tasks rather quickly. But when I try to run a problem with 1000 tasks,
> it crashes within a couple of minutes saying "heap memory is exhausted". It
> may be that my memory problem is exhausting before it comes to choices and
> that's why c_d and a_d value are not making much of a difference! Can you
> please comment o
> n!
>> this?
> 
> 
> You could try running your problem in Gist and double-click the root node
> (that will create exactly one instance of your problem and not perform any
> search).
> If that exhausts the memory, it's clearly a problem in the model itself.
> Actually, if that doesn't exhaust the memory, then setting c_d/a_d very high
> should definitely at least change the memory behavior, because with a very
> high c_d/a_d, the required memory is pretty much exactly twice the memory of
> the root node.
> 
> If it turns out to be a problem in the root node already, there's several
> things one could try.  First of all, you should check how many variables you
> create.  If it's quadratic in the problem size (e.g. one Boolean for every
> pair of tasks could be typical for scheduling problems), that would explain
> the difference between 600 and 1000 tasks - I'm also working on scheduling
> problems right now and I've run into similar issues.  Being very careful not
> to create too many temporary variables is very important in this case.
> Then, it's sometimes possible to replace a set of propagators with one
> custom propagator.  That can help a lot if there's a large number (say,
> quadratically many) of these propagators.
> Finally, reformulating the problem might help, or trying to solve a
> relaxation (e.g. aggregating several tasks into bigger meta-tasks to make
> the problem smaller), but that's of course very problem-specific and
> sometimes simply impossible.
> 
> Cheers,
> 	Guido
> 
> -- 
> Guido Tack, http://people.cs.kuleuven.be/~guido.tack/
> 
> 
> 
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-- 
Guido Tack, http://people.cs.kuleuven.be/~guido.tack/






From cschulte at kth.se  Tue Apr 13 11:39:52 2010
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 13 Apr 2010 11:39:52 +0200
Subject: [gecode-users] Managing memory footprint for large problems
In-Reply-To: <B0DBAEBD2F00B6409AA88CA457FBBE8247D865F769@HVXMSP1.us.lmco.com>
References: <67B0B414F1419D49837D1FCA9B51825A4498E1CA@HVXMSPB.us.lmco.com>	<B0DBAEBD2F00B6409AA88CA457FBBE8247D865F23F@HVXMSP1.us.lmco.com>	<001501cada48$74d13a90$5e73afb0$@se>	<575BE0AA-09E5-488F-9229-1F37B9442B98@gecode.org>
	<B0DBAEBD2F00B6409AA88CA457FBBE8247D865F769@HVXMSP1.us.lmco.com>
Message-ID: <006101cadaed$459298a0$d0b7c9e0$@se>

Hi,

I wouldn't really know what to say off my head with the level of detail you
provide. Did you check the recent programming part in Modeling and
Programming with Gecode?

Domain sizes only matter if they have holes and are very, very large. Then
the number of variables and propagators matter. So, without some numbers of
how many propagators and variables your problem has I really can't say
anything.

Cheers
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Zaremby, David
Sent: Monday, April 12, 2010 5:25 PM
To: Guido Tack; Christian Schulte
Cc: users at gecode.org gecode
Subject: Re: [gecode-users] Managing memory footprint for large problems

This does seem to be just a gist issue. I guess looking at that was throwing
me off. I used the MinimizeScript and it seems to behave as described as far
as cloning. I suppose our issue is just the number of propagators and the
size of the domains. I suppose we will have to look into defining our own
propagators. Do you have any recommendations for what to aim for in defining
our own propagators to reduce the memory usage and get the most bang for our
buck. What actually consumes the memory, common pitfalls, optimization
tricks?

As an example, We are doing things to constrain tasks that are somewhat
complicated such as you can only have 3 tasks or 10 hours worth of usage in
a period of time and these periods repeat over a specified interval. 

David Zaremby
Senior Software Engineer
LSS / Strategic Products
 
Lockheed Martin Simulation, Training & Support
12506 Lake Underhill Road, MP-823
Orlando, FL 32825
-----Original Message-----
From: Guido Tack [mailto:tack at gecode.org] 
Sent: Monday, April 12, 2010 10:05 AM
To: cschulte at kth.se
Cc: Zaremby, David; users at gecode.org gecode
Subject: Re: [gecode-users] Managing memory footprint for large problems

That was actually a small bug in Gist that only occurred when using
interactive search.  I just fixed it in the trunk version.

Cheers,
	Guido

Christian Schulte wrote:

> Dear David,
> 
> could you (or Ashis) please check whether you observe the same behavior
when
> not using Gist, but a simple search engine?
> 
> Thanks
> Christian
> 
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
> 
> 
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Zaremby, David
> Sent: Monday, April 12, 2010 3:41 PM
> To: users at gecode.org; Guido Tack
> Subject: [gecode-users] Managing memory footprint for large problems
> 
> I work with Ashis and I have been playing with a few experiments. What I
am
> seeing is that the memory is constantly climbing at every node as I
traverse
> down the left hand side despite very high computation parameters int
> c_d=1000000, int a_d=1000000).  I have posted the stack trace for the code
> to maybe give some insight. I see the clone method being called for each
> node which seems odd since I believe it should only be doing choice,
status,
> and commits. I have reverted back from our custom brancher to a simple
built
> in of branch(*this, resources, INT_VAR_MIN_MIN, INT_VAL_MIN). If I had to
> venture a guess from exploring the code, it is because the workingspace is
> never being initialized and thus it keeps trying to initialize it for the
> first time. The memory growth seems to scale with the number of
propagators.
> If I reduce my scheduling constraints but leave my number of choice the
same
> I get a smaller memory footprint for each clone. The same behavior happens
> for the defaul
> t c_d and a_d values.
> 
> 	AutomatedScheduler++.exe!Scheduler::Scheduler(bool share=true,
> Scheduler & s={...})  Line 65	C++
> 	AutomatedScheduler++.exe!Scheduler::copy(bool share=true)  Line 79 +
> 0x37 bytes	C++
> 	GecodeKernel-3-3-1-d-x86.dll!Gecode::Space::_clone(bool share=true)
> Line 470 + 0x18 bytes	C++
> 	GecodeGist-3-3-1-d-x86.dll!Gecode::Space::clone(bool share=true,
> Gecode::CloneStatistics & __formal={...})  Line 2369	C++
>> 
>
GecodeGist-3-3-1-d-x86.dll!Gecode::Gist::SpaceNode::recompute(Gecode::Gist::
> BestNode * curBest=0x1dde3558, int c_d=1000000, int a_d=1000000)  Line 87
+
> 0x14 bytes	C++
> 
>
GecodeGist-3-3-1-d-x86.dll!Gecode::Gist::SpaceNode::acquireSpace(Gecode::Gis
> t::BestNode * curBest=0x1dde3558, int c_d=1000000, int a_d=1000000)  Line
> 173 + 0x14 bytes	C++
> 
>
GecodeGist-3-3-1-d-x86.dll!Gecode::Gist::SpaceNode::getNumberOfChildNodes(Ge
> code::Support::BlockAllocator<Gecode::Gist::VisualNode,10000> & na={...},
> Gecode::Gist::BestNode * curBest=0x1dde3558, Gecode::Gist::Statistics &
> stats={...}, int c_d=1000000, int a_d=1000000)  Line 291	C++
> 
>
GecodeGist-3-3-1-d-x86.dll!Gecode::Gist::TreeCanvas::inspectCurrentNode(bool
> fix=true, int inspectorNo=-1)  Line 605 + 0x34 bytes	C++
> 
>
GecodeGist-3-3-1-d-x86.dll!Gecode::Gist::TreeCanvas::mouseDoubleClickEvent(Q
> MouseEvent * event=0x017bd100)  Line 1129	C++
> 
> 
> David Zaremby
> Senior Software Engineer
> LSS / Strategic Products
> 
> Lockheed Martin Simulation, Training & Support
> 12506 Lake Underhill Road, MP-823
> Orlando, FL 32825
> -----Original Message-----
> From: Maity, Ashis K 
> Sent: Monday, April 12, 2010 8:48 AM
> To: Zaremby, David
> Subject: FW: [gecode-users] Stopping Gecode Engine gracefully
> 
> FYI!
> 
> -----Original Message-----
> From: Guido Tack [mailto:tack at gecode.org] 
> Sent: Saturday, April 10, 2010 5:41 AM
> To: Maity, Ashis K
> Subject: Re: [gecode-users] Stopping Gecode Engine gracefully
> 
> Hi Ashis,
> 
> would you mind posting your message to the mailing list?  I think this
might
> interest others, too.  Anyway, here's my answer.
> 
> Maity, Ashis K wrote:
>> Yes, that was also my understanding in terms of setting c_d and a_d. I
was
> not clear in my write up. I mean to say that I am setting higher c_d so
that
> it can use less memory and not run out of memory. But one thing you made
> clear is that even if I do not set a_d it will default to 2. I probably
> missed seeing that in documentation. I was hoping the default behavior of
> a_d will be like setting it higher than c_d (that is a_d is not used).
> 
> The defaults are independent of each other (i.e. c_d is always 8 and a_d
is
> always 2).  We tried to come up with something more automatic, but it's
not
> clear how that's supposed to work.
> 
>> In any event, yes my problem runs out of memory with default c_d and a_d.
> And it does run out with other combination of c_d and a_d as well (say c_d
=
> 20000 and a_d = 10000 or c_d = 200 and a_d = 100). Strange thing is even
> with varied c_d & a_d combination, my memory consumption graph rises
almost
> similar way (as observed from Windows Task Manager). To give you some
> background, I am working on Scheduler problems that contain hundreds of
> tasks with large start domains and have many choices on resource.
Previously
> I was using Mozart/Oz, but recently transferred my code to Gecode hoping
it
> will help my memory problem. It appeared to do so when it ran a problem
with
> 600 tasks rather quickly. But when I try to run a problem with 1000 tasks,
> it crashes within a couple of minutes saying "heap memory is exhausted".
It
> may be that my memory problem is exhausting before it comes to choices and
> that's why c_d and a_d value are not making much of a difference! Can you
> please comment o
> n!
>> this?
> 
> 
> You could try running your problem in Gist and double-click the root node
> (that will create exactly one instance of your problem and not perform any
> search).
> If that exhausts the memory, it's clearly a problem in the model itself.
> Actually, if that doesn't exhaust the memory, then setting c_d/a_d very
high
> should definitely at least change the memory behavior, because with a very
> high c_d/a_d, the required memory is pretty much exactly twice the memory
of
> the root node.
> 
> If it turns out to be a problem in the root node already, there's several
> things one could try.  First of all, you should check how many variables
you
> create.  If it's quadratic in the problem size (e.g. one Boolean for every
> pair of tasks could be typical for scheduling problems), that would
explain
> the difference between 600 and 1000 tasks - I'm also working on scheduling
> problems right now and I've run into similar issues.  Being very careful
not
> to create too many temporary variables is very important in this case.
> Then, it's sometimes possible to replace a set of propagators with one
> custom propagator.  That can help a lot if there's a large number (say,
> quadratically many) of these propagators.
> Finally, reformulating the problem might help, or trying to solve a
> relaxation (e.g. aggregating several tasks into bigger meta-tasks to make
> the problem smaller), but that's of course very problem-specific and
> sometimes simply impossible.
> 
> Cheers,
> 	Guido
> 
> -- 
> Guido Tack, http://people.cs.kuleuven.be/~guido.tack/
> 
> 
> 
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-- 
Guido Tack, http://people.cs.kuleuven.be/~guido.tack/





_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users



From peter.vanhee at gmail.com  Tue Apr 13 18:03:37 2010
From: peter.vanhee at gmail.com (Peter Vanhee)
Date: Tue, 13 Apr 2010 18:03:37 +0200
Subject: [gecode-users] Position of IntVar in IntVarArray within a propagate
	function
Message-ID: <B08FBBC6-5775-4C84-B1FD-EF46A858C8EA@gmail.com>

Hey all,

I am working on a binary propagator which needs to know the position of the two variables
it receives within the domain of the problem (coded with an IntVarArray).

I am not sure whether this is possible (and if it should be possible!) to access this information, as I believe
a binary propagator should be able to propagate without knowing the context. 

Still, in my particular problem I don't see any other solution.

Here a code snippet:

		// in the model
		IntVarArray 		domains;

		// in the propagator		
		ExecStatus
		BinaryPropagator::propagate(Space& home, const ModEventDelta& med) {
		
			if (x0.assigned()) {
				int val = x0.val();
				
				// need to know index of x0 within "domains" to access info that depends on position in domain + value on that position
				// does x0 has some reference to this? or home?
				int idx = ?
			} 
			else {
				// same here but with x1
			}
		}

A simple but rather dumb solution would be to encode the position within the values using 
some mathematical trick, but this will create unnecessary holes within the domain.

Thanks for any help on this! 

Peter



From zayenz at gmail.com  Tue Apr 13 18:50:01 2010
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Tue, 13 Apr 2010 18:50:01 +0200
Subject: [gecode-users] Position of IntVar in IntVarArray within a
	propagate function
In-Reply-To: <B08FBBC6-5775-4C84-B1FD-EF46A858C8EA@gmail.com>
References: <B08FBBC6-5775-4C84-B1FD-EF46A858C8EA@gmail.com>
Message-ID: <7F8A2D4D-081E-486D-9C06-AC5B9232562B@gmail.com>

When you define your propagator, just add two int-fields pos0 and pos1  
and instantiate the propagators with the appropriate info. Remember to  
update the fields when the propagator is copied.

/Mikael

--
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz

On 13 apr 2010, at 18.03, Peter Vanhee <peter.vanhee at gmail.com> wrote:

> Hey all,
>
> I am working on a binary propagator which needs to know the position  
> of the two variables
> it receives within the domain of the problem (coded with an  
> IntVarArray).
>
> I am not sure whether this is possible (and if it should be  
> possible!) to access this information, as I believe
> a binary propagator should be able to propagate without knowing the  
> context.
>
> Still, in my particular problem I don't see any other solution.
>
> Here a code snippet:
>
>        // in the model
>        IntVarArray        domains;
>
>        // in the propagator
>        ExecStatus
>        BinaryPropagator::propagate(Space& home, const ModEventDelta&  
> med) {
>
>            if (x0.assigned()) {
>                int val = x0.val();
>
>                // need to know index of x0 within "domains" to  
> access info that depends on position in domain + value on that  
> position
>                // does x0 has some reference to this? or home?
>                int idx = ?
>            }
>            else {
>                // same here but with x1
>            }
>        }
>
> A simple but rather dumb solution would be to encode the position  
> within the values using
> some mathematical trick, but this will create unnecessary holes  
> within the domain.
>
> Thanks for any help on this!
>
> Peter
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users


From peter.vanhee at gmail.com  Tue Apr 13 18:52:04 2010
From: peter.vanhee at gmail.com (Peter Vanhee)
Date: Tue, 13 Apr 2010 18:52:04 +0200
Subject: [gecode-users] Position of IntVar in IntVarArray within a
	propagate function
In-Reply-To: <7F8A2D4D-081E-486D-9C06-AC5B9232562B@gmail.com>
References: <B08FBBC6-5775-4C84-B1FD-EF46A858C8EA@gmail.com>
	<7F8A2D4D-081E-486D-9C06-AC5B9232562B@gmail.com>
Message-ID: <5BBBD530-0D58-4110-A398-26891AB5D490@gmail.com>

Of course, I missed the most obvious solution :) This will do the trick.

Thanks!
Peter

On 13 Apr 2010, at 18:50, Mikael Zayenz Lagerkvist wrote:

> When you define your propagator, just add two int-fields pos0 and pos1 and instantiate the propagators with the appropriate info. Remember to update the fields when the propagator is copied.
> 
> /Mikael
> 
> --
> Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz
> 
> On 13 apr 2010, at 18.03, Peter Vanhee <peter.vanhee at gmail.com> wrote:
> 
>> Hey all,
>> 
>> I am working on a binary propagator which needs to know the position of the two variables
>> it receives within the domain of the problem (coded with an IntVarArray).
>> 
>> I am not sure whether this is possible (and if it should be possible!) to access this information, as I believe
>> a binary propagator should be able to propagate without knowing the context.
>> 
>> Still, in my particular problem I don't see any other solution.
>> 
>> Here a code snippet:
>> 
>>       // in the model
>>       IntVarArray        domains;
>> 
>>       // in the propagator
>>       ExecStatus
>>       BinaryPropagator::propagate(Space& home, const ModEventDelta& med) {
>> 
>>           if (x0.assigned()) {
>>               int val = x0.val();
>> 
>>               // need to know index of x0 within "domains" to access info that depends on position in domain + value on that position
>>               // does x0 has some reference to this? or home?
>>               int idx = ?
>>           }
>>           else {
>>               // same here but with x1
>>           }
>>       }
>> 
>> A simple but rather dumb solution would be to encode the position within the values using
>> some mathematical trick, but this will create unnecessary holes within the domain.
>> 
>> Thanks for any help on this!
>> 
>> Peter
>> 
>> 
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users



From david.zaremby at lmco.com  Tue Apr 13 19:33:50 2010
From: david.zaremby at lmco.com (Zaremby, David)
Date: Tue, 13 Apr 2010 13:33:50 -0400
Subject: [gecode-users] Cutting holes within a view optimally
Message-ID: <B0DBAEBD2F00B6409AA88CA457FBBE8247D877C209@HVXMSP1.us.lmco.com>

Gecoders,

I am struggling with finding the best way to cut a hole in a view during propegation without doing a simple for loop. I originally thought I should use a Range and Iterator and execute the minus_v method, but I can't find an easy way to construct one easily using specific values other than using a value array of ints but I would still need a loop to initialize the array. What is the best way to do this with the least computation?

The end goal of this propagator is to put a gap between two domains however there is no guarantee that x0 < x1  so you really can't reduce much on the domain until one is assigned a start. Additionally you can't use an offset view because you only want the offset to apply if the task is the earlier one one.

virtual ExecStatus propagate(Space& home, const ModEventDelta&)  {
            if (x0.assigned())
            {
                  //create a range that x1 cant equal over (x0.val - offset1, x0.val + offset0)
                  for (int i = x0.val() - offset1; i < x0.val() + offset0; ++i)
                  {
                        GECODE_ME_CHECK(x1.nq(home, i));
                  }
            }
            else if (x1.assigned())
            {
                  //create a range that x0 cant equal over (x1.val - offset0, x1.val + offset1)
                  for (int i = x1.val() - offset0; i < x1.val() + offset1; ++i)
                  {
                        GECODE_ME_CHECK(x0.nq(home, i));
                  }
            }

            if (x0.max() + offset0 <= x1.min() || x1.max() + offset1 <= x0.min())
                  return home.ES_SUBSUMED(*this);
            else
                  return ES_FIX;
      }

David Zaremby
Senior Software Engineer
LSS / Strategic Products

Lockheed Martin Simulation, Training & Support
12506 Lake Underhill Road, MP-823
Orlando, FL 32825
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20100413/73f46457/attachment-0001.htm>

From cschulte at kth.se  Tue Apr 13 20:11:07 2010
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 13 Apr 2010 20:11:07 +0200
Subject: [gecode-users] Cutting holes within a view optimally
In-Reply-To: <B0DBAEBD2F00B6409AA88CA457FBBE8247D877C209@HVXMSP1.us.lmco.com>
References: <B0DBAEBD2F00B6409AA88CA457FBBE8247D877C209@HVXMSP1.us.lmco.com>
Message-ID: <000901cadb34$b1312210$13936630$@se>

Check the minus_r member function and the range iterator

                Iter::Ranges::Singleton

The latter allows to specify a single range.

 

That should do the trick!

 

Cheers

Christian

 

--

Christian Schulte, web.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Zaremby, David
Sent: Tuesday, April 13, 2010 7:34 PM
To: users at gecode.org gecode
Subject: [gecode-users] Cutting holes within a view optimally

 

Gecoders,

 

I am struggling with finding the best way to cut a hole in a view during
propegation without doing a simple for loop. I originally thought I should
use a Range and Iterator and execute the minus_v method, but I can't find an
easy way to construct one easily using specific values other than using a
value array of ints but I would still need a loop to initialize the array.
What is the best way to do this with the least computation?  

 

The end goal of this propagator is to put a gap between two domains however
there is no guarantee that x0 < x1  so you really can't reduce much on the
domain until one is assigned a start. Additionally you can't use an offset
view because you only want the offset to apply if the task is the earlier
one one.

 

virtual ExecStatus propagate(Space& home, const ModEventDelta&)  {

            if (x0.assigned())

            {

                  //create a range that x1 cant equal over (x0.val -
offset1, x0.val + offset0)

                  for (int i = x0.val() - offset1; i < x0.val() + offset0;
++i)

                  {

                        GECODE_ME_CHECK(x1.nq(home, i));

                  }

            }

            else if (x1.assigned())

            {

                  //create a range that x0 cant equal over (x1.val -
offset0, x1.val + offset1)

                  for (int i = x1.val() - offset0; i < x1.val() + offset1;
++i)

                  {

                        GECODE_ME_CHECK(x0.nq(home, i));

                  }

            }

 

            if (x0.max() + offset0 <= x1.min() || x1.max() + offset1 <=
x0.min())

                  return home.ES_SUBSUMED(*this);

            else

                  return ES_FIX;

      }

 

David Zaremby

Senior Software Engineer

LSS / Strategic Products

 

Lockheed Martin Simulation, Training & Support

12506 Lake Underhill Road, MP-823

Orlando, FL 32825

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20100413/301c1877/attachment.htm>

From david.zaremby at lmco.com  Tue Apr 13 21:26:42 2010
From: david.zaremby at lmco.com (Zaremby, David)
Date: Tue, 13 Apr 2010 15:26:42 -0400
Subject: [gecode-users] Cutting holes within a view optimally
In-Reply-To: <000901cadb34$b1312210$13936630$@se>
References: <B0DBAEBD2F00B6409AA88CA457FBBE8247D877C209@HVXMSP1.us.lmco.com>
	<000901cadb34$b1312210$13936630$@se>
Message-ID: <B0DBAEBD2F00B6409AA88CA457FBBE8247D87D0F26@HVXMSP1.us.lmco.com>

Thanks. That did the trick.  I knew it was easy.  I just couldn't seem to find it...

virtual ExecStatus propagate(Space& home, const ModEventDelta&)  {
            if (x0.assigned())
            {
                  Iter::Ranges::Singleton r0(x0.val() - offset1 > 0 ? x0.val() - offset1 : 0, x0.val() + offset0);
                  GECODE_ME_CHECK(x1.minus_r(home, r0, false));
            }
            else if (x1.assigned())
            {
                  Iter::Ranges::Singleton r1(x1.val() - offset0 > 0 ? x1.val() - offset0 : 0, x1.val() + offset1);
                  GECODE_ME_CHECK(x0.minus_r(home, r1, false));
            }

            if (x0.max() + offset0 < x1.min() || x1.max() + offset1 < x0.min())
                  return home.ES_SUBSUMED(*this);
            else
                  return ES_FIX;
      }

David Zaremby
Senior Software Engineer
LSS / Strategic Products

Lockheed Martin Simulation, Training & Support
12506 Lake Underhill Road, MP-823
Orlando, FL 32825
From: Christian Schulte [mailto:cschulte at kth.se]
Sent: Tuesday, April 13, 2010 2:11 PM
To: Zaremby, David; users at gecode.org
Subject: RE: [gecode-users] Cutting holes within a view optimally

Check the minus_r member function and the range iterator
                Iter::Ranges::Singleton
The latter allows to specify a single range.

That should do the trick!

Cheers
Christian

--
Christian Schulte, web.ict.kth.se/~cschulte/

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Zaremby, David
Sent: Tuesday, April 13, 2010 7:34 PM
To: users at gecode.org gecode
Subject: [gecode-users] Cutting holes within a view optimally

Gecoders,

I am struggling with finding the best way to cut a hole in a view during propegation without doing a simple for loop. I originally thought I should use a Range and Iterator and execute the minus_v method, but I can't find an easy way to construct one easily using specific values other than using a value array of ints but I would still need a loop to initialize the array. What is the best way to do this with the least computation?

The end goal of this propagator is to put a gap between two domains however there is no guarantee that x0 < x1  so you really can't reduce much on the domain until one is assigned a start. Additionally you can't use an offset view because you only want the offset to apply if the task is the earlier one one.

virtual ExecStatus propagate(Space& home, const ModEventDelta&)  {
            if (x0.assigned())
            {
                  //create a range that x1 cant equal over (x0.val - offset1, x0.val + offset0)
                  for (int i = x0.val() - offset1; i < x0.val() + offset0; ++i)
                  {
                        GECODE_ME_CHECK(x1.nq(home, i));
                  }
            }
            else if (x1.assigned())
            {
                  //create a range that x0 cant equal over (x1.val - offset0, x1.val + offset1)
                  for (int i = x1.val() - offset0; i < x1.val() + offset1; ++i)
                  {
                        GECODE_ME_CHECK(x0.nq(home, i));
                  }
            }

            if (x0.max() + offset0 <= x1.min() || x1.max() + offset1 <= x0.min())
                  return home.ES_SUBSUMED(*this);
            else
                  return ES_FIX;
      }

David Zaremby
Senior Software Engineer
LSS / Strategic Products

Lockheed Martin Simulation, Training & Support
12506 Lake Underhill Road, MP-823
Orlando, FL 32825
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20100413/cb3a4d25/attachment-0001.htm>

From zayenz at gmail.com  Wed Apr 14 07:01:15 2010
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Wed, 14 Apr 2010 07:01:15 +0200
Subject: [gecode-users] Cutting holes within a view optimally
In-Reply-To: <B0DBAEBD2F00B6409AA88CA457FBBE8247D87D0F26@HVXMSP1.us.lmco.com>
References: <B0DBAEBD2F00B6409AA88CA457FBBE8247D877C209@HVXMSP1.us.lmco.com> 
	<000901cadb34$b1312210$13936630$@se>
	<B0DBAEBD2F00B6409AA88CA457FBBE8247D87D0F26@HVXMSP1.us.lmco.com>
Message-ID: <m2l63b5c8b01004132201q3f3bcad4l53b42cc114c0bd39@mail.gmail.com>

Just as a side-note, you can do propagation earlier than when a variable is
fixed for this constraint. In the ground case, an offset1 of 5 and a value v
of x0 gives a forbidden region
    [-----v-----]
for the variable x1. If the difference between min (a) and max (b) of a
non-ground x0 is less than offset1, then all potential forbidden regions
will overlap. Consider the case where b-a=3
    [-----a---[==]---b-----]
The doubly marked values are forbidden for x1 regardless of the final value
of x0.

Whether modifying the propagation helps for solving your problem is another
issue of course.

Cheers,
Mikael

2010/4/13 Zaremby, David <david.zaremby at lmco.com>

>  Thanks. That did the trick.  I knew it was easy.  I just couldn?t seem to
> find it?
>
>
>
> virtual ExecStatus propagate(Space& home, const ModEventDelta&)  {
>
>             if (x0.assigned())
>
>             {
>
>                   Iter::Ranges::Singleton r0(x0.val() - offset1 > 0 ?
> x0.val() - offset1 : 0, x0.val() + offset0);
>
>                   GECODE_ME_CHECK(x1.minus_r(home, r0, false));
>
>             }
>
>             else if (x1.assigned())
>
>             {
>
>                   Iter::Ranges::Singleton r1(x1.val() - offset0 > 0 ?
> x1.val() - offset0 : 0, x1.val() + offset1);
>
>                   GECODE_ME_CHECK(x0.minus_r(home, r1, false));
>
>             }
>
>
>
>             if (x0.max() + offset0 < x1.min() || x1.max() + offset1 <
> x0.min())
>
>                   return home.ES_SUBSUMED(*this);
>
>             else
>
>                   return ES_FIX;
>
>       }
>
>
>
> *David Zaremby*
>
> Senior Software Engineer
>
> LSS / Strategic Products
>
>
>
> *Lockheed Martin Simulation, Training & Support*
>
> 12506 Lake Underhill Road, MP-823
>
> Orlando, FL 32825
>
> *From:* Christian Schulte [mailto:cschulte at kth.se]
> *Sent:* Tuesday, April 13, 2010 2:11 PM
> *To:* Zaremby, David; users at gecode.org
> *Subject:* RE: [gecode-users] Cutting holes within a view optimally
>
>
>
> Check the minus_r member function and the range iterator
>
>                 Iter::Ranges::Singleton
>
> The latter allows to specify a single range.
>
>
>
> That should do the trick!
>
>
>
> Cheers
>
> Christian
>
>
>
> --
>
> Christian Schulte, web.ict.kth.se/~cschulte/
>
>
>
> *From:* users-bounces at gecode.org [mailto:users-bounces at gecode.org] *On
> Behalf Of *Zaremby, David
> *Sent:* Tuesday, April 13, 2010 7:34 PM
> *To:* users at gecode.org gecode
> *Subject:* [gecode-users] Cutting holes within a view optimally
>
>
>
> Gecoders,
>
>
>
> I am struggling with finding the best way to cut a hole in a view during
> propegation without doing a simple for loop. I originally thought I should
> use a Range and Iterator and execute the minus_v method, but I can?t find an
> easy way to construct one easily using specific values other than using a
> value array of ints but I would still need a loop to initialize the array.
> What is the best way to do this with the least computation?
>
>
>
> The end goal of this propagator is to put a gap between two domains however
> there is no guarantee that x0 < x1  so you really can?t reduce much on the
> domain until one is assigned a start. Additionally you can?t use an offset
> view because you only want the offset to apply if the task is the earlier
> one one.
>
>
>
> virtual ExecStatus propagate(Space& home, const ModEventDelta&)  {
>
>             if (x0.assigned())
>
>             {
>
>                   //create a range that x1 cant equal over (x0.val -
> offset1, x0.val + offset0)
>
>                   for (int i = x0.val() - offset1; i < x0.val() + offset0;
> ++i)
>
>                   {
>
>                         GECODE_ME_CHECK(x1.nq(home, i));
>
>                   }
>
>             }
>
>             else if (x1.assigned())
>
>             {
>
>                   //create a range that x0 cant equal over (x1.val -
> offset0, x1.val + offset1)
>
>                   for (int i = x1.val() - offset0; i < x1.val() + offset1;
> ++i)
>
>                   {
>
>                         GECODE_ME_CHECK(x0.nq(home, i));
>
>                   }
>
>             }
>
>
>
>             if (x0.max() + offset0 <= x1.min() || x1.max() + offset1 <=
> x0.min())
>
>                   return home.ES_SUBSUMED(*this);
>
>             else
>
>                   return ES_FIX;
>
>       }
>
>
>
> *David Zaremby*
>
> Senior Software Engineer
>
> LSS / Strategic Products
>
>
>
> *Lockheed Martin Simulation, Training & Support*
>
> 12506 Lake Underhill Road, MP-823
>
> Orlando, FL 32825
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>


-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20100414/10af8348/attachment.htm>

From david.zaremby at lmco.com  Wed Apr 14 23:09:43 2010
From: david.zaremby at lmco.com (Zaremby, David)
Date: Wed, 14 Apr 2010 17:09:43 -0400
Subject: [gecode-users] Cutting holes within a view optimally
In-Reply-To: <m2l63b5c8b01004132201q3f3bcad4l53b42cc114c0bd39@mail.gmail.com>
References: <B0DBAEBD2F00B6409AA88CA457FBBE8247D877C209@HVXMSP1.us.lmco.com>
	<000901cadb34$b1312210$13936630$@se>
	<B0DBAEBD2F00B6409AA88CA457FBBE8247D87D0F26@HVXMSP1.us.lmco.com>
	<m2l63b5c8b01004132201q3f3bcad4l53b42cc114c0bd39@mail.gmail.com>
Message-ID: <B0DBAEBD2F00B6409AA88CA457FBBE8247D88402B0@HVXMSP1.us.lmco.com>

Mikael,

Nice insight. Thank you for taking the time to analyze the issue beyond the stated question.  Originally I didn't think that I needed this case, but it turned out I did because it sometimes allowed domains to be available that were actually forbidden and resulted in a larger search tree when branching and even worse, when assigning, it incorrectly resulted in a dead tree.  I would have struggled without this nugget of knowledge. I think an improved version is provided below. Let me know if I misinterpreted your use case.


virtual ExecStatus propagate(Space& home, const ModEventDelta& med)
      {
            if (Int::IntView::me(med) == Int::ME_INT_BND)
            {
                  if (x1.max() - x0.min() < offset1)
                  {
                        Iter::Ranges::Singleton r0(x0.min(), x1.min() + offset1 - 1);
                        GECODE_ME_CHECK(x0.minus_r(home, r0, false));
                  }

                  if (x0.max() - x1.min() < offset0)
                  {
                        Iter::Ranges::Singleton r1(x1.min(), x0.min() + offset0 - 1);
                        GECODE_ME_CHECK(x1.minus_r(home, r1, false));
                  }
            }
            else if (Int::IntView::me(med) == Int::ME_INT_VAL)
            {
                  if (x0.assigned())
                  {
                        Iter::Ranges::Singleton r0(x0.val() - offset1 + 1 >= 0 ? x0.val() - offset1 + 1 : 0, x0.val() + offset0 - 1);
                        GECODE_ME_CHECK(x1.minus_r(home, r0, false));
                  }
                  else if (x1.assigned())
                  {
                        Iter::Ranges::Singleton r1(x1.val() - offset0 + 1 >= 0 ? x1.val() - offset0 + 1 : 0, x1.val() + offset1 - 1);
                        GECODE_ME_CHECK(x0.minus_r(home, r1, false));
                  }
            }

            if (x0.max() + offset0 <= x1.min() || x1.max() + offset1 <= x0.min())
                  return home.ES_SUBSUMED(*this);
            else
                  return ES_FIX;
      }
Thanks,

David Zaremby
Senior Software Engineer
LSS / Strategic Products

Lockheed Martin Simulation, Training & Support
12506 Lake Underhill Road, MP-823
Orlando, FL 32825
From: Mikael Zayenz Lagerkvist [mailto:zayenz at gmail.com]
Sent: Wednesday, April 14, 2010 1:01 AM
To: Zaremby, David
Cc: cschulte at kth.se; users at gecode.org
Subject: Re: [gecode-users] Cutting holes within a view optimally

Just as a side-note, you can do propagation earlier than when a variable is fixed for this constraint. In the ground case, an offset1 of 5 and a value v of x0 gives a forbidden region
    [-----v-----]
for the variable x1. If the difference between min (a) and max (b) of a non-ground x0 is less than offset1, then all potential forbidden regions will overlap. Consider the case where b-a=3
    [-----a---[==]---b-----]
The doubly marked values are forbidden for x1 regardless of the final value of x0.

Whether modifying the propagation helps for solving your problem is another issue of course.

Cheers,
Mikael

2010/4/13 Zaremby, David <david.zaremby at lmco.com<mailto:david.zaremby at lmco.com>>
Thanks. That did the trick.  I knew it was easy.  I just couldn't seem to find it...

virtual ExecStatus propagate(Space& home, const ModEventDelta&)  {
            if (x0.assigned())
            {
                  Iter::Ranges::Singleton r0(x0.val() - offset1 > 0 ? x0.val() - offset1 : 0, x0.val() + offset0);
                  GECODE_ME_CHECK(x1.minus_r(home, r0, false));
            }
            else if (x1.assigned())
            {
                  Iter::Ranges::Singleton r1(x1.val() - offset0 > 0 ? x1.val() - offset0 : 0, x1.val() + offset1);
                  GECODE_ME_CHECK(x0.minus_r(home, r1, false));
            }

            if (x0.max() + offset0 < x1.min() || x1.max() + offset1 < x0.min())
                  return home.ES_SUBSUMED(*this);
            else
                  return ES_FIX;
      }

David Zaremby
Senior Software Engineer
LSS / Strategic Products

Lockheed Martin Simulation, Training & Support
12506 Lake Underhill Road, MP-823
Orlando, FL 32825
From: Christian Schulte [mailto:cschulte at kth.se<mailto:cschulte at kth.se>]
Sent: Tuesday, April 13, 2010 2:11 PM
To: Zaremby, David; users at gecode.org<mailto:users at gecode.org>
Subject: RE: [gecode-users] Cutting holes within a view optimally

Check the minus_r member function and the range iterator
                Iter::Ranges::Singleton
The latter allows to specify a single range.

That should do the trick!

Cheers
Christian

--
Christian Schulte, web.ict.kth.se/~cschulte/<http://web.ict.kth.se/~cschulte/>

From: users-bounces at gecode.org<mailto:users-bounces at gecode.org> [mailto:users-bounces at gecode.org<mailto:users-bounces at gecode.org>] On Behalf Of Zaremby, David
Sent: Tuesday, April 13, 2010 7:34 PM
To: users at gecode.org<mailto:users at gecode.org> gecode
Subject: [gecode-users] Cutting holes within a view optimally

Gecoders,

I am struggling with finding the best way to cut a hole in a view during propegation without doing a simple for loop. I originally thought I should use a Range and Iterator and execute the minus_v method, but I can't find an easy way to construct one easily using specific values other than using a value array of ints but I would still need a loop to initialize the array. What is the best way to do this with the least computation?

The end goal of this propagator is to put a gap between two domains however there is no guarantee that x0 < x1  so you really can't reduce much on the domain until one is assigned a start. Additionally you can't use an offset view because you only want the offset to apply if the task is the earlier one one.

virtual ExecStatus propagate(Space& home, const ModEventDelta&)  {
            if (x0.assigned())
            {
                  //create a range that x1 cant equal over (x0.val - offset1, x0.val + offset0)
                  for (int i = x0.val() - offset1; i < x0.val() + offset0; ++i)
                  {
                        GECODE_ME_CHECK(x1.nq(home, i));
                  }
            }
            else if (x1.assigned())
            {
                  //create a range that x0 cant equal over (x1.val - offset0, x1.val + offset1)
                  for (int i = x1.val() - offset0; i < x1.val() + offset1; ++i)
                  {
                        GECODE_ME_CHECK(x0.nq(home, i));
                  }
            }

            if (x0.max() + offset0 <= x1.min() || x1.max() + offset1 <= x0.min())
                  return home.ES_SUBSUMED(*this);
            else
                  return ES_FIX;
      }

David Zaremby
Senior Software Engineer
LSS / Strategic Products

Lockheed Martin Simulation, Training & Support
12506 Lake Underhill Road, MP-823
Orlando, FL 32825

_______________________________________________
Gecode users mailing list
users at gecode.org<mailto:users at gecode.org>
https://www.gecode.org/mailman/listinfo/gecode-users



--
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20100414/ebc524bc/attachment-0001.htm>

From claudio at colmeia.udesc.br  Thu Apr 15 00:00:57 2010
From: claudio at colmeia.udesc.br (=?ISO-8859-1?Q?Claudio_Cesar_de_S=E1?=)
Date: Wed, 14 Apr 2010 19:00:57 -0300
Subject: [gecode-users] Filling up a matrix ...
Message-ID: <v2ge68bab891004141500q8a08ae5z690278a87992f344@mail.gmail.com>

Hi,

My program consist in filling up of a matrix  (nxn) with 0 and 1 with under
3 rules;

1. In each col presents at least one (1) ...
2. In each row presents at least one (1) ...
3. Where these 1?s appears,  the indexes (i,j) must be checked in the graph.

The rule number 3 I think to use an extensional constraint such:

for ....
     if pair (i,j) != 0
        extensional(*this, pair(i,j), TUPLE_SET_2_OF_A_GRAPH)


Any guess (tip) to solve 1 and 2 ??


Thanks


claudio



-- 
claudio



   (
   ))
  |""|-.
  |__|-'


**********************************************************************
Skype: claudio_cesar_sa
Links:
http://laic.u-clermont1.fr/
http://www.colmeia.udesc.br/
http://www2.joinville.udesc.br/~coca/
http://www2.joinville.udesc.br/~esp7maratona/
Blog: http://claudiocesar.wordpress.com/
***********************************************************************
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20100414/628501b4/attachment.htm>

From zayenz at gmail.com  Thu Apr 15 06:17:19 2010
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Thu, 15 Apr 2010 06:17:19 +0200
Subject: [gecode-users] Cutting holes within a view optimally
In-Reply-To: <B0DBAEBD2F00B6409AA88CA457FBBE8247D88402B0@HVXMSP1.us.lmco.com>
References: <B0DBAEBD2F00B6409AA88CA457FBBE8247D877C209@HVXMSP1.us.lmco.com> 
	<000901cadb34$b1312210$13936630$@se>
	<B0DBAEBD2F00B6409AA88CA457FBBE8247D87D0F26@HVXMSP1.us.lmco.com>
	<m2l63b5c8b01004132201q3f3bcad4l53b42cc114c0bd39@mail.gmail.com> 
	<B0DBAEBD2F00B6409AA88CA457FBBE8247D88402B0@HVXMSP1.us.lmco.com>
Message-ID: <x2t63b5c8b01004142117s63614f46m5e9ef557265c457c@mail.gmail.com>

Hi,

I'm think you could do something even simpler, since the two cases could be
merged. Note that when x0 is assigned, x0.val() == x0.min() == x0.max().
Thus the two cases could be merged into something like
  if (x0.max() - x0.min() < offset1) {
    Iter::Ranges::Singleton r0(std::max(x0.max() - ofset1 + 1, 0),
x0.min()+offset1-1);
   GECODE_ME_CHECK(x1.minus_r(home, r0, false));
  }
and similarly for the reverse case. I assumed that x0.min()+offset1-1 is
never negative. I haven't tested the code, so it might be incorrect.

Also, note the in your code you don't use the special 0-absorbing logic for
the bounds-reasoning, which is probably wrong.

Returning ES_FIX is probably wrong now, since you might modify the bounds of
x0 in the second part, and need to re-run since x1 could be modified again.
I haven't thought about it in depth though.

Cheers,
Mikael


On Wed, Apr 14, 2010 at 11:09 PM, Zaremby, David <david.zaremby at lmco.com>wrote:

>  Mikael,
>
>
>
> Nice insight. Thank you for taking the time to analyze the issue beyond the
> stated question.  Originally I didn?t think that I needed this case, but it
> turned out I did because it sometimes allowed domains to be available that
> were actually forbidden and resulted in a larger search tree when branching
> and even worse, when assigning, it incorrectly resulted in a dead tree.  I
> would have struggled without this nugget of knowledge. I think an improved
> version is provided below. Let me know if I misinterpreted your use case.
>
>
>
>
>
> virtual ExecStatus propagate(Space& home, const ModEventDelta& med)
>
>       {
>
>             if (Int::IntView::me(med) == Int::ME_INT_BND)
>
>             {
>
>                   if (x1.max() - x0.min() < offset1)
>
>                   {
>
>                         Iter::Ranges::Singleton r0(x0.min(), x1.min() +
> offset1 - 1);
>
>                         GECODE_ME_CHECK(x0.minus_r(home, r0, false));
>
>                   }
>
>
>
>                   if (x0.max() - x1.min() < offset0)
>
>                   {
>
>                         Iter::Ranges::Singleton r1(x1.min(), x0.min() +
> offset0 - 1);
>
>                         GECODE_ME_CHECK(x1.minus_r(home, r1, false));
>
>                   }
>
>             }
>
>             else if (Int::IntView::me(med) == Int::ME_INT_VAL)
>
>             {
>
>                   if (x0.assigned())
>
>                   {
>
>                         Iter::Ranges::Singleton r0(x0.val() - offset1 + 1
> >= 0 ? x0.val() - offset1 + 1 : 0, x0.val() + offset0 - 1);
>
>                         GECODE_ME_CHECK(x1.minus_r(home, r0, false));
>
>                   }
>
>                   else if (x1.assigned())
>
>                   {
>
>                         Iter::Ranges::Singleton r1(x1.val() - offset0 + 1
> >= 0 ? x1.val() - offset0 + 1 : 0, x1.val() + offset1 - 1);
>
>                         GECODE_ME_CHECK(x0.minus_r(home, r1, false));
>
>                   }
>
>             }
>
>
>
>             if (x0.max() + offset0 <= x1.min() || x1.max() + offset1 <=
> x0.min())
>
>                   return home.ES_SUBSUMED(*this);
>
>             else
>
>                   return ES_FIX;
>
>       }
>
> Thanks,
>
>
>
> *David Zaremby*
>
> Senior Software Engineer
>
> LSS / Strategic Products
>
>
>
> *Lockheed Martin Simulation, Training & Support*
>
> 12506 Lake Underhill Road, MP-823
>
> Orlando, FL 32825
>
> *From:* Mikael Zayenz Lagerkvist [mailto:zayenz at gmail.com]
> *Sent:* Wednesday, April 14, 2010 1:01 AM
> *To:* Zaremby, David
> *Cc:* cschulte at kth.se; users at gecode.org
> *Subject:* Re: [gecode-users] Cutting holes within a view optimally
>
>
>
> Just as a side-note, you can do propagation earlier than when a variable is
> fixed for this constraint. In the ground case, an offset1 of 5 and a value v
> of x0 gives a forbidden region
>
>     [-----v-----]
> for the variable x1. If the difference between min (a) and max (b) of a
> non-ground x0 is less than offset1, then all potential forbidden regions
> will overlap. Consider the case where b-a=3
>
>     [-----a---[==]---b-----]
>
> The doubly marked values are forbidden for x1 regardless of the final value
> of x0.
>
>
>
> Whether modifying the propagation helps for solving your problem is another
> issue of course.
>
>
>
> Cheers,
>
> Mikael
>
>
>
> 2010/4/13 Zaremby, David <david.zaremby at lmco.com>
>
> Thanks. That did the trick.  I knew it was easy.  I just couldn?t seem to
> find it?
>
>
>
> virtual ExecStatus propagate(Space& home, const ModEventDelta&)  {
>
>             if (x0.assigned())
>
>             {
>
>                   Iter::Ranges::Singleton r0(x0.val() - offset1 > 0 ?
> x0.val() - offset1 : 0, x0.val() + offset0);
>
>                   GECODE_ME_CHECK(x1.minus_r(home, r0, false));
>
>             }
>
>             else if (x1.assigned())
>
>             {
>
>                   Iter::Ranges::Singleton r1(x1.val() - offset0 > 0 ?
> x1.val() - offset0 : 0, x1.val() + offset1);
>
>                   GECODE_ME_CHECK(x0.minus_r(home, r1, false));
>
>             }
>
>
>
>             if (x0.max() + offset0 < x1.min() || x1.max() + offset1 <
> x0.min())
>
>                   return home.ES_SUBSUMED(*this);
>
>             else
>
>                   return ES_FIX;
>
>       }
>
>
>
> *David Zaremby*
>
> Senior Software Engineer
>
> LSS / Strategic Products
>
>
>
> *Lockheed Martin Simulation, Training & Support*
>
> 12506 Lake Underhill Road, MP-823
>
> Orlando, FL 32825
>
> *From:* Christian Schulte [mailto:cschulte at kth.se]
> *Sent:* Tuesday, April 13, 2010 2:11 PM
> *To:* Zaremby, David; users at gecode.org
> *Subject:* RE: [gecode-users] Cutting holes within a view optimally
>
>
>
> Check the minus_r member function and the range iterator
>
>                 Iter::Ranges::Singleton
>
> The latter allows to specify a single range.
>
>
>
> That should do the trick!
>
>
>
> Cheers
>
> Christian
>
>
>
> --
>
> Christian Schulte, web.ict.kth.se/~cschulte/
>
>
>
> *From:* users-bounces at gecode.org [mailto:users-bounces at gecode.org] *On
> Behalf Of *Zaremby, David
> *Sent:* Tuesday, April 13, 2010 7:34 PM
> *To:* users at gecode.org gecode
> *Subject:* [gecode-users] Cutting holes within a view optimally
>
>
>
> Gecoders,
>
>
>
> I am struggling with finding the best way to cut a hole in a view during
> propegation without doing a simple for loop. I originally thought I should
> use a Range and Iterator and execute the minus_v method, but I can?t find an
> easy way to construct one easily using specific values other than using a
> value array of ints but I would still need a loop to initialize the array.
> What is the best way to do this with the least computation?
>
>
>
> The end goal of this propagator is to put a gap between two domains however
> there is no guarantee that x0 < x1  so you really can?t reduce much on the
> domain until one is assigned a start. Additionally you can?t use an offset
> view because you only want the offset to apply if the task is the earlier
> one one.
>
>
>
> virtual ExecStatus propagate(Space& home, const ModEventDelta&)  {
>
>             if (x0.assigned())
>
>             {
>
>                   //create a range that x1 cant equal over (x0.val -
> offset1, x0.val + offset0)
>
>                   for (int i = x0.val() - offset1; i < x0.val() + offset0;
> ++i)
>
>                   {
>
>                         GECODE_ME_CHECK(x1.nq(home, i));
>
>                   }
>
>             }
>
>             else if (x1.assigned())
>
>             {
>
>                   //create a range that x0 cant equal over (x1.val -
> offset0, x1.val + offset1)
>
>                   for (int i = x1.val() - offset0; i < x1.val() + offset1;
> ++i)
>
>                   {
>
>                         GECODE_ME_CHECK(x0.nq(home, i));
>
>                   }
>
>             }
>
>
>
>             if (x0.max() + offset0 <= x1.min() || x1.max() + offset1 <=
> x0.min())
>
>                   return home.ES_SUBSUMED(*this);
>
>             else
>
>                   return ES_FIX;
>
>       }
>
>
>
> *David Zaremby*
>
> Senior Software Engineer
>
> LSS / Strategic Products
>
>
>
> *Lockheed Martin Simulation, Training & Support*
>
> 12506 Lake Underhill Road, MP-823
>
> Orlando, FL 32825
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>
>
>
> --
> Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/
>



-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20100415/26ef37b5/attachment-0001.htm>

From tack at gecode.org  Thu Apr 15 09:51:19 2010
From: tack at gecode.org (Guido Tack)
Date: Thu, 15 Apr 2010 09:51:19 +0200
Subject: [gecode-users] Filling up a matrix ...
In-Reply-To: <v2ge68bab891004141500q8a08ae5z690278a87992f344@mail.gmail.com>
References: <v2ge68bab891004141500q8a08ae5z690278a87992f344@mail.gmail.com>
Message-ID: <4BA05E4D-2DC6-4958-B65D-61D87FE5AE97@gecode.org>

Hi Claudio,

the first two constraints easily map to Boolean disjunctions (the OR of all elements in a col/row must be true).  If you use the Matrix class from minimodel, and your matrix is m, then the constraints would simply be

for (int i=0; i<m.height(); i++)
  rel(*this, BOT_OR, m.row(i), 1);
for (int i=0; i<m.width(); i++)
  rel(*this, BOT_OR, m.col(i), 1);

I'm not sure I understand the extensional constraint.  The indexes (i,j) are no constrained variables here but simply constant indexes.  And the extensional constraint cannot be put under an "if".
If the graph is fixed, i.e., if you know statically whether (i,j) satisfies some condition, you can simply set all m(i,j)=0 where the condition does not hold.

Cheers,
	Guido

Claudio Cesar de S? wrote:

> Hi,
> 
> My program consist in filling up of a matrix  (nxn) with 0 and 1 with under 3 rules;
> 
> 1. In each col presents at least one (1) ... 
> 2. In each row presents at least one (1) ... 
> 3. Where these 1?s appears,  the indexes (i,j) must be checked in the graph.
> 
> The rule number 3 I think to use an extensional constraint such:
> 
> for ....
>      if pair (i,j) != 0
>         extensional(*this, pair(i,j), TUPLE_SET_2_OF_A_GRAPH)
>       
> 
> Any guess (tip) to solve 1 and 2 ??
> 
> 
> Thanks
> 
> 
> claudio
> 
> 
> 
> -- 
> claudio 
> 
> 
> 
>    (
>    ))
>   |""|-.
>   |__|-'
>                 
>                 
> **********************************************************************
> Skype: claudio_cesar_sa
> Links:
> http://laic.u-clermont1.fr/
> http://www.colmeia.udesc.br/
> http://www2.joinville.udesc.br/~coca/
> http://www2.joinville.udesc.br/~esp7maratona/
> Blog: http://claudiocesar.wordpress.com/
> ***********************************************************************
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-- 
Guido Tack, http://www.cs.kuleuven.be/~guido/



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20100415/6fc0b2b4/attachment.htm>

From david.zaremby at lmco.com  Tue Apr 20 18:55:03 2010
From: david.zaremby at lmco.com (Zaremby, David)
Date: Tue, 20 Apr 2010 12:55:03 -0400
Subject: [gecode-users] Setting search stop option from minimize script
Message-ID: <B0DBAEBD2F00B6409AA88CA457FBBE8247DA0540C0@HVXMSP1.us.lmco.com>

Community,

I am looking for a hook in the minimize script setup where I can set my custom stop function that triggers off of user input. Is there a way to set the search option for a custom stop function when using  a minimize script? The only way I see to set search options is with the definition below but that seems to be the incorrect function because it assumes a string value. If there is no way to do it via a script I suppose I will need to replace my script with an engine that defines the compare function for the cost. If anyone has an example that might be useful.


void

search<http://www.gecode.org/doc-latest/reference/classGecode_1_1Options.html#a3573e1904d6626bdb5847b8a72bb0471> (int v, const char *o, const char *h=NULL)



Add search option value for value v, string o, and help h.


Thanks,

David Zaremby
Senior Software Engineer
LSS / Strategic Products

Lockheed Martin Simulation, Training & Support
12506 Lake Underhill Road, MP-823
Orlando, FL 32825
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20100420/82938b72/attachment.htm>

From tack at gecode.org  Tue Apr 20 20:08:46 2010
From: tack at gecode.org (Guido Tack)
Date: Tue, 20 Apr 2010 20:08:46 +0200
Subject: [gecode-users] Setting search stop option from minimize script
In-Reply-To: <B0DBAEBD2F00B6409AA88CA457FBBE8247DA0540C0@HVXMSP1.us.lmco.com>
References: <B0DBAEBD2F00B6409AA88CA457FBBE8247DA0540C0@HVXMSP1.us.lmco.com>
Message-ID: <5607918E-44BB-4DBC-9674-7BBCAEC9E3B7@gecode.org>

Hi David,

the stop object can only be registered through the search options, see section 9.4 in "Modeling and Programming with Gecode".

Cheers,
	Guido

Zaremby, David wrote:

> Community,
>  
> I am looking for a hook in the minimize script setup where I can set my custom stop function that triggers off of user input. Is there a way to set the search option for a custom stop function when using  a minimize script? The only way I see to set search options is with the definition below but that seems to be the incorrect function because it assumes a string value. If there is no way to do it via a script I suppose I will need to replace my script with an engine that defines the compare function for the cost. If anyone has an example that might be useful.
>  
>  
> void 
> search (int v, const char *o, const char *h=NULL)
>  
> Add search option value for value v, string o, and help h.
>  
> Thanks,
>  
> David Zaremby
> Senior Software Engineer
> LSS / Strategic Products
>  
> Lockheed Martin Simulation, Training & Support
> 12506 Lake Underhill Road, MP-823
> Orlando, FL 32825
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-- 
Guido Tack, http://people.cs.kuleuven.be/~guido.tack/




-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20100420/2fddd57b/attachment-0001.htm>

From claudio at colmeia.udesc.br  Thu Apr 22 11:30:18 2010
From: claudio at colmeia.udesc.br (=?ISO-8859-1?Q?Claudio_Cesar_de_S=E1?=)
Date: Thu, 22 Apr 2010 11:30:18 +0200
Subject: [gecode-users] External input and outputs in GECODE ....
Message-ID: <l2ie68bab891004220230jcec80a70r40185391dda55161@mail.gmail.com>

Hi,

For the extensive tests in a Gecode program, two doubts:

1. For data input I will be using an external file. Such the execution in
Linux console works like:

claudio at goedel:~$ ./my-executable < input.txt

I have the idea how it works in C. Any modification in main( .... argc ,
argv ....) for Gecode to use it?


2. In my program I need all the outputs.
 opt.solutions(0); //  all solutions ===> OK  it's fine
but I would like to collect them, one by one, and processing them.

I think to process them inside on  print(std::ostream& os) const  ... is it
correct?

Should be best to write in a file and following by a pos processing or
filtering, in another program ?

Surely someone already done it before.


Thanks

claudio




-- 
claudio



   (
   ))
  |""|-.
  |__|-'


**********************************************************************
Skype: claudio_cesar_sa
Links:
http://laic.u-clermont1.fr/
http://www.colmeia.udesc.br/
http://www2.joinville.udesc.br/~coca/
http://www2.joinville.udesc.br/~esp7maratona/
Blog: http://claudiocesar.wordpress.com/
***********************************************************************
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20100422/e90a2de1/attachment.htm>

From tack at gecode.org  Thu Apr 22 11:37:04 2010
From: tack at gecode.org (Guido Tack)
Date: Thu, 22 Apr 2010 11:37:04 +0200
Subject: [gecode-users] External input and outputs in GECODE ....
In-Reply-To: <l2ie68bab891004220230jcec80a70r40185391dda55161@mail.gmail.com>
References: <l2ie68bab891004220230jcec80a70r40185391dda55161@mail.gmail.com>
Message-ID: <18AADE3F-83B9-4BD5-809F-F49C9BAF816B@gecode.org>

Claudio Cesar de S? wrote:
> For the extensive tests in a Gecode program, two doubts:
> 
> 1. For data input I will be using an external file. Such the execution in Linux console works like:
>  
> claudio at goedel:~$ ./my-executable < input.txt
> 
> I have the idea how it works in C. Any modification in main( .... argc , argv ....) for Gecode to use it?

That's not really a Gecode question.  The main function doesn't work any differently from any other C or C++ program, so you can do the same things there.

> 2. In my program I need all the outputs.
>  opt.solutions(0); //  all solutions ===> OK  it's fine
> but I would like to collect them, one by one, and processing them.
> 
> I think to process them inside on  print(std::ostream& os) const  ... is it correct?
> 
> Should be best to write in a file and following by a pos processing or filtering, in another program ?
> 
> Surely someone already done it before.

You can either print all solutions and post process them, or use the search engines directly without the Driver infrastructure (see the tutorial documentation, Section 2.2 and 9.4).

Cheers,
	Guido

-- 
Guido Tack, http://people.cs.kuleuven.be/~guido.tack/



From claudio at colmeia.udesc.br  Wed Apr 28 13:53:41 2010
From: claudio at colmeia.udesc.br (=?ISO-8859-1?Q?Claudio_Cesar_de_S=E1?=)
Date: Wed, 28 Apr 2010 13:53:41 +0200
Subject: [gecode-users] Posting "or" conditions
Message-ID: <t2pe68bab891004280453k49ca5be5zefd7fce536de6771@mail.gmail.com>

Hi

I am kicking my head on "a simple question" on matrix constraints:

    for (int i=0; i < m.height() ;  i++)
      rel(*this, BOT_AND,  m.row(i),1 );

so the constraints posted  seems such:
m.row(0) = true  AND m.row(1) = true AND m.row(3) = true .... AND m.row(n-1)
= true

So, obviously,  as the result for the matrix m, in all lines MUST filled
with one.... not desirable.

What I am want:  at least one (or more)  line of this matrix m should
contain only 1's  in its line ...
so should be post conditionally something like:

m.row(0) = true  OR m.row(1) = true OR m.row(3) = true .... OR m.row(n-1) =
true

the  branch is over  the m.

I am thinking on an auxiliary array for each line ... and post it
conditionally. I am not sure,
or something like

for (int i=0; i < m.height() ;  i++)
      rel(*this, BOT_OR ,  function_post_conditional( m.row(i), ....)     ,1
);

where the function_post_conditional( m.row(i), ....) ... will return only
valids post for m.row(i) = true

How to control what should be  posted?

Thanks in advance


claudio




-- 
claudio



   (
   ))
  |""|-.
  |__|-'


**********************************************************************
Skype: claudio_cesar_sa
Links:
http://laic.u-clermont1.fr/
http://www.colmeia.udesc.br/
http://www2.joinville.udesc.br/~coca/
http://www2.joinville.udesc.br/~esp7maratona/
Blog: http://claudiocesar.wordpress.com/
***********************************************************************
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20100428/cba9ecdb/attachment.htm>

From tack at gecode.org  Wed Apr 28 14:01:53 2010
From: tack at gecode.org (Guido Tack)
Date: Wed, 28 Apr 2010 14:01:53 +0200
Subject: [gecode-users] Posting "or" conditions
In-Reply-To: <t2pe68bab891004280453k49ca5be5zefd7fce536de6771@mail.gmail.com>
References: <t2pe68bab891004280453k49ca5be5zefd7fce536de6771@mail.gmail.com>
Message-ID: <79ABC1F1-9AF2-4634-BE79-6A5B6062FE57@gecode.org>

If I understood you correctly, this should do the trick:

BoolVarArray rtrue(*this, m.height(), 0,1);
or (int i=0; i < m.height() ;  i++)  
      rel(*this, BOT_AND,  m.row(i), rtrue[i] );
rel(*this, BOT_OR, rtrue);

Cheers,
	Guido

Claudio Cesar de S? wrote:

> Hi
> 
> I am kicking my head on "a simple question" on matrix constraints:
> 
>     for (int i=0; i < m.height() ;  i++)  
>       rel(*this, BOT_AND,  m.row(i),1 );
> 
> so the constraints posted  seems such:
> m.row(0) = true  AND m.row(1) = true AND m.row(3) = true .... AND m.row(n-1) = true
> 
> So, obviously,  as the result for the matrix m, in all lines MUST filled with one.... not desirable.
> 
> What I am want:  at least one (or more)  line of this matrix m should contain only 1's  in its line ...
> so should be post conditionally something like:
> 
> m.row(0) = true  OR m.row(1) = true OR m.row(3) = true .... OR m.row(n-1) = true
> 
> the  branch is over  the m.
> 
> I am thinking on an auxiliary array for each line ... and post it conditionally. I am not sure,
> or something like 
> 
> for (int i=0; i < m.height() ;  i++)  
>       rel(*this, BOT_OR ,  function_post_conditional( m.row(i), ....)     ,1 );
> 
> where the function_post_conditional( m.row(i), ....) ... will return only valids post for m.row(i) = true
> 
> How to control what should be  posted? 
> 
> Thanks in advance
> 
> 
> claudio
> 
> 
> 
> 
> -- 
> claudio 
> 
> 
> 
>    (
>    ))
>   |""|-.
>   |__|-'
>                 
>                 
> **********************************************************************
> Skype: claudio_cesar_sa
> Links:
> http://laic.u-clermont1.fr/
> http://www.colmeia.udesc.br/
> http://www2.joinville.udesc.br/~coca/
> http://www2.joinville.udesc.br/~esp7maratona/
> Blog: http://claudiocesar.wordpress.com/
> ***********************************************************************
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20100428/a60d03d4/attachment.htm>

