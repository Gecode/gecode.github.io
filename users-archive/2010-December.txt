From adriane at ling.ohio-state.edu  Thu Dec  2 14:39:47 2010
From: adriane at ling.ohio-state.edu (Adriane Boyd)
Date: Thu, 2 Dec 2010 08:39:47 -0500 (EST)
Subject: [gecode-users] QuickXplain implementation for Gecode/Flatzinc
Message-ID: <alpine.DEB.1.10.1011301124200.9543@brutus.ling.ohio-state.edu>

Hi,

In case it could be useful for others, I wanted to share an implementation 
of QuickXplain that I wrote for Gecode/FlatZinc.  I've made it available 
as a patch for Gecode 3.4.2 here:

http://www.ling.ohio-state.edu/~adriane/code/gecode/fz-qx-3.4.2-0.1.patch

The patch adds the executable fz-qx, which implements the QuickXplain 
algorithm from Junker (2001).  fz-qx prints out the set of conflicting 
constraints as a list of constraint IDs, which correspond to the position 
of the constraints in the flatzinc input.  The patch extends the flatzinc 
parser and space so that constraints that have just been parsed can be 
stored as part of the space instead of being posted immediately.  This 
makes it possible for fz-qx to clone a space with its stored constraints 
and post subsets of constraints as needed for QuickXplain.

The output could certainly be more user-friendly, but I figured that most 
users would need to customize the output for their own applications 
anyway.  (An obvious next step would be to modify the flatzinc parser and 
data structures so that you can store/generate human-readable versions of 
constraints.)

Please feel free to let me know if you find any bugs or have suggestions 
for improvements!

Adriane Boyd


From cschulte at kth.se  Wed Dec  8 11:13:16 2010
From: cschulte at kth.se (Christian Schulte)
Date: Wed, 8 Dec 2010 11:13:16 +0100
Subject: [gecode-users] Edge-finding evaluation
In-Reply-To: <AANLkTik6oJ5=1ijrde0JatSzM79q_8g2pcQwb3kphye2@mail.gmail.com>
References: <AANLkTinr-5L0GmqQ_0mdunGxH1SeFxSq7KvYtNUmTJ42@mail.gmail.com>	<000301cb8af7$97ae5150$c70af3f0$@se>
	<AANLkTik6oJ5=1ijrde0JatSzM79q_8g2pcQwb3kphye2@mail.gmail.com>
Message-ID: <008001cb96c0$8802e750$9808b5f0$@se>

Hi Roger,

No, not right now. What you would have to do is to do a propagator by
yourself: just copy the code from the cumulative propagator and remove the
part where edge-finding is called (the code is in
gecode/scheduling/cumulative/man-prop.hpp for mandatory tasks).

Cheers
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: Roger Kameugne [mailto:roger.kameugne at gmail.com] 
Sent: Wednesday, December 08, 2010 10:49 AM
To: cschulte at kth.se
Cc: users at gecode.org
Subject: Re: [gecode-users] Edge-finding evaluation

Hi all,
Is there any possibility to post the cumulative constraint only only
with time-table and averload checking? In other words, how can I post
the cumulative propagator only for time table and overloard checking?

Best
Roger

2010/11/23, Christian Schulte <cschulte at kth.se>:
> Dear Roger,
>
> That sounds very interesting.
>
> But first a word of warning: the cumulative scheduling propagator in
Gecode
> 3.4.2 is still experimental: we ourselves have not fully evaluated its
> performance and so on (the documentation in MPG marks the scheduling
support
> as still experimental).
>
> As it comes to integration of your algorithm you might want to consult
Part
> P (Programming Propagators) in MPG (Modeling and Programming with Gecode).
> Implementing a new constraint requires the implementation of the
> corresponding propagator as detailed there.
>
> The function stop(t, cout) stops the timer t and prints it on cout (a
> standard output stream). Please consult the files:
> 	gecode/driver/script.hpp
> 	gecode/driver/script.cpp
> In general these pieces of information are found best by searching the
> reference documentation for Gecode.
>
> As an alternative, when you want to print to a textfile you should
redirect
> the output printed in a standard shell to a file, so there is definitely
no
> need to hack the script stuff in Gecode.
>
> For setting the time limit, just invoke the -help switch of any of the
> Gecode examples. It tells you how (also consult Chapter 11 in the first
part
> of MPG how to use the commandline driver).
>
> Best
> Christian
>
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
>
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Roger Kameugne
> Sent: Tuesday, November 23, 2010 10:31 AM
> To: users at gecode.org
> Subject: [gecode-users] Edge-finding evaluation
>
> Hi all,
> We have developed  a new cumulative edge-finding algorithm and we need
> to evaluate it on RCPSP  with the current best know implement provide
> in gecode 3.4.2  (Petr Vilim). We are new user of gecode and we have
> used the Microsoft Visual Studio 2008.  We have many questions about
> the the cumulative propagator.
>
> First of all, how can we integrate our edge-finding algorithm and used
> the time-table and overload checking?
>
> To print out the runtime in a .txt file, we modify the file script.cpp
> but we didn't know the type of  stop(t, cout)?
>
> The last but not the least question is about the setting of the time
> limit. Where and how can we limit the runtime?
> Thanks in advance.
> Roger
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>



From roger.kameugne at gmail.com  Wed Dec  8 10:48:38 2010
From: roger.kameugne at gmail.com (Roger Kameugne)
Date: Wed, 8 Dec 2010 10:48:38 +0100
Subject: [gecode-users] Edge-finding evaluation
In-Reply-To: <000301cb8af7$97ae5150$c70af3f0$@se>
References: <AANLkTinr-5L0GmqQ_0mdunGxH1SeFxSq7KvYtNUmTJ42@mail.gmail.com>
	<000301cb8af7$97ae5150$c70af3f0$@se>
Message-ID: <AANLkTik6oJ5=1ijrde0JatSzM79q_8g2pcQwb3kphye2@mail.gmail.com>

Hi all,
Is there any possibility to post the cumulative constraint only only
with time-table and averload checking? In other words, how can I post
the cumulative propagator only for time table and overloard checking?

Best
Roger

2010/11/23, Christian Schulte <cschulte at kth.se>:
> Dear Roger,
>
> That sounds very interesting.
>
> But first a word of warning: the cumulative scheduling propagator in Gecode
> 3.4.2 is still experimental: we ourselves have not fully evaluated its
> performance and so on (the documentation in MPG marks the scheduling support
> as still experimental).
>
> As it comes to integration of your algorithm you might want to consult Part
> P (Programming Propagators) in MPG (Modeling and Programming with Gecode).
> Implementing a new constraint requires the implementation of the
> corresponding propagator as detailed there.
>
> The function stop(t, cout) stops the timer t and prints it on cout (a
> standard output stream). Please consult the files:
> 	gecode/driver/script.hpp
> 	gecode/driver/script.cpp
> In general these pieces of information are found best by searching the
> reference documentation for Gecode.
>
> As an alternative, when you want to print to a textfile you should redirect
> the output printed in a standard shell to a file, so there is definitely no
> need to hack the script stuff in Gecode.
>
> For setting the time limit, just invoke the -help switch of any of the
> Gecode examples. It tells you how (also consult Chapter 11 in the first part
> of MPG how to use the commandline driver).
>
> Best
> Christian
>
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
>
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Roger Kameugne
> Sent: Tuesday, November 23, 2010 10:31 AM
> To: users at gecode.org
> Subject: [gecode-users] Edge-finding evaluation
>
> Hi all,
> We have developed  a new cumulative edge-finding algorithm and we need
> to evaluate it on RCPSP  with the current best know implement provide
> in gecode 3.4.2  (Petr Vilim). We are new user of gecode and we have
> used the Microsoft Visual Studio 2008.  We have many questions about
> the the cumulative propagator.
>
> First of all, how can we integrate our edge-finding algorithm and used
> the time-table and overload checking?
>
> To print out the runtime in a .txt file, we modify the file script.cpp
> but we didn't know the type of  stop(t, cout)?
>
> The last but not the least question is about the setting of the time
> limit. Where and how can we limit the runtime?
> Thanks in advance.
> Roger
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>


From marco.v.correia at gmail.com  Wed Dec  8 23:28:40 2010
From: marco.v.correia at gmail.com (Marco Correia)
Date: Wed, 8 Dec 2010 22:28:40 +0000
Subject: [gecode-users] modulo with negative operators
Message-ID: <201012082228.40660.marco.v.correia@gmail.com>

hi,

Do you agree that 

-7 mod 12 == 5

?

I'm asking because I know mod arithmetic can be tricky. Python says that this 
is true, but gecode is failing on this constraint.

I'm not a gecode expert so probably I'm doing something wrong. I'm attaching a 
small test case.

Thanks!
Marco

-- 
Marco Correia <mvc at netcabo.pt>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mod.cpp
Type: text/x-c++src
Size: 854 bytes
Desc: not available
URL: <http://www.gecode.org/pipermail/users/attachments/20101208/175d8111/attachment.cpp>

From tack at gecode.org  Thu Dec  9 00:26:07 2010
From: tack at gecode.org (Guido Tack)
Date: Thu, 9 Dec 2010 10:26:07 +1100
Subject: [gecode-users] modulo with negative operators
In-Reply-To: <201012082228.40660.marco.v.correia@gmail.com>
References: <201012082228.40660.marco.v.correia@gmail.com>
Message-ID: <28CDD886-2E05-4796-A768-E60CFBEC1C73@gecode.org>

Marco Correia wrote:

> hi,
> 
> Do you agree that 
> 
> -7 mod 12 == 5
> 
> ?
> 
> I'm asking because I know mod arithmetic can be tricky. Python says that this 
> is true, but gecode is failing on this constraint.
> 
> I'm not a gecode expert so probably I'm doing something wrong. I'm attaching a 
> small test case.

There's two different definitions of division and modulo. Python uses one, and C/C++/Java etc use another. Gecode uses the C++ definition, where -7%12==-7.

Cheers,
	Guido

-- 
Guido Tack, http://people.cs.kuleuven.be/~guido.tack/





From svumpukkel2001 at gmail.com  Sun Dec 12 12:19:22 2010
From: svumpukkel2001 at gmail.com (Anders Helmar)
Date: Sun, 12 Dec 2010 12:19:22 +0100
Subject: [gecode-users] Memory trouble when implementing a brancher
Message-ID: <AANLkTikeyL6-=XZpjmnVv4+sbky-J=_PX=-_AzcfC2M1@mail.gmail.com>

Hi..

I'm facing a problem with memory leaks when implementing my own brancher in
Gecode 3.4.0, using the GCC compiler on an ubuntu platform.

My problem is that I want to save both a position for a variable but also a
list of values to branch on. This list is created as a vector<int> in the
implemented brancher together with the position as

mutable vector<int> alternatives;
mutable int v;

I have a choice object as well with a vector and an integer to be stored in
the choice.

In the status() function I fill in the alternatives with the push_back()
function, and it is here I get my leaks when running with valgrind.

When I have created the choice in the Choice() function of the brancher I
remember to clear the vector of alternatives (Since choice takes a local
copy for the choice object).

I suppose that when deleting my choice pointer in the search engine, I also
delete the elements in the list of alternatives in the choice object? I
suspect that the problem lies within the garbage collector of the choice.

Hope you can help!

Cheers,
Anders
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20101212/bd91704a/attachment.htm>

From cschulte at kth.se  Mon Dec 13 11:49:00 2010
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 13 Dec 2010 11:49:00 +0100
Subject: [gecode-users] Memory trouble when implementing a brancher
In-Reply-To: <AANLkTikeyL6-=XZpjmnVv4+sbky-J=_PX=-_AzcfC2M1@mail.gmail.com>
References: <AANLkTikeyL6-=XZpjmnVv4+sbky-J=_PX=-_AzcfC2M1@mail.gmail.com>
Message-ID: <001d01cb9ab3$5b2cd780$11868680$@se>

Hi,

 

By default, the dispose() member function of a brancher is not called when
its space is deleted. The brancher must register itself for the dispose()
member function to be called. Please check Section 21.9 in MPG on how to do
that.

 

I hope that helps.

 

Best

Christian

 

--

Christian Schulte, web.ict.kth.se/~cschulte/

 

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Anders Helmar
Sent: Sunday, December 12, 2010 12:19 PM
To: users at gecode.org
Subject: [gecode-users] Memory trouble when implementing a brancher

 

Hi..

 

I'm facing a problem with memory leaks when implementing my own brancher in
Gecode 3.4.0, using the GCC compiler on an ubuntu platform. 

 

My problem is that I want to save both a position for a variable but also a
list of values to branch on. This list is created as a vector<int> in the
implemented brancher together with the position as

 

mutable vector<int> alternatives;

mutable int v;

 

I have a choice object as well with a vector and an integer to be stored in
the choice.

 

In the status() function I fill in the alternatives with the push_back()
function, and it is here I get my leaks when running with valgrind.

 

When I have created the choice in the Choice() function of the brancher I
remember to clear the vector of alternatives (Since choice takes a local
copy for the choice object).

 

I suppose that when deleting my choice pointer in the search engine, I also
delete the elements in the list of alternatives in the choice object? I
suspect that the problem lies within the garbage collector of the choice.

 

Hope you can help!

 

Cheers, 

Anders

 

 

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20101213/92e3e24f/attachment.htm>

From tack at gecode.org  Sun Dec 19 22:25:53 2010
From: tack at gecode.org (Guido Tack)
Date: Sun, 19 Dec 2010 22:25:53 +0100
Subject: [gecode-users] Gecode mail server problems
Message-ID: <EC9B60DB-D964-40D8-AC0A-F236791C7FBF@gecode.org>

Hi everyone,

we had a security problem on our mail server (if you are interested, apparently someone installed a root kit through a vulnerability in exim).  One result of this was that emails to any @gecode.org address that were sent after December 15th were not delivered.
The problem seems to be under control now.  If you tried to send any email to one of us or the Gecode mailing list, please try again now.

Best regards,
	Guido

-- 
Guido Tack, http://people.cs.kuleuven.be/~guido.tack/






