From ruben.zilibowitz at gmail.com  Mon Apr  4 11:50:51 2011
From: ruben.zilibowitz at gmail.com (Ruben Zilibowitz)
Date: Mon, 4 Apr 2011 19:50:51 +1000
Subject: [gecode-users] embedded gecode
Message-ID: <52B500A3-2C28-455B-ABAF-7512D17AA1C6@yahoo.com.au>

Hi. I'm considering trying to use gecode on the iphone platform, or other mobile platforms. I'm aware that support for double precision floating point is limited on the iphone platform. The other main issue is the limited RAM. I've managed to compile gecode and test it on the iphone, however I'm concerned about the memory usage.

I'm wondering if there've been any attempts to do this before? Are there any tips/suggestions?

Regards,

Ruben



From tack at gecode.org  Mon Apr  4 12:23:29 2011
From: tack at gecode.org (Guido Tack)
Date: Mon, 4 Apr 2011 12:23:29 +0200
Subject: [gecode-users] embedded gecode
In-Reply-To: <52B500A3-2C28-455B-ABAF-7512D17AA1C6@yahoo.com.au>
References: <52B500A3-2C28-455B-ABAF-7512D17AA1C6@yahoo.com.au>
Message-ID: <781A9F61-B382-466C-9124-0FAA7BC7EEB2@gecode.org>

Ruben Zilibowitz wrote:

> Hi. I'm considering trying to use gecode on the iphone platform, or other mobile platforms. I'm aware that support for double precision floating point is limited on the iphone platform. The other main issue is the limited RAM. I've managed to compile gecode and test it on the iphone, however I'm concerned about the memory usage.
> 
> I'm wondering if there've been any attempts to do this before? Are there any tips/suggestions?

First of all, thanks for trying Gecode on a platform that we haven't got a lot of experience with.  Any comments are highly welcome.

Concerning doubles, Gecode uses them mainly as a portable integer type with more than 32 bits in order to perform overflow-correct computations. As long as it works (i.e., either with hardware support or software emulation), it shouldn't be a problem, although perhaps there would be more efficient alternative solutions.

Gecode has been designed for memory efficiency from the start, most data structures are quite compact.  The amount of memory used during search can be controlled using the recomputation parameters (commit distance and adaption distance).  E.g., a commit and adaptive distance of 100000 will effectively result in constant memory use, paid for by higher runtime (see Section 9.2 in "Modeling and Programming with Gecode").  But even with much lower parameters, many problems can be solved in just a few MB of RAM.

Cheers,
	Guido

-- 
Guido Tack, http://people.cs.kuleuven.be/~guido.tack/






From mauriciotorob at gmail.com  Mon Apr  4 16:44:32 2011
From: mauriciotorob at gmail.com (Mauricio Toro)
Date: Mon, 4 Apr 2011 16:44:32 +0200
Subject: [gecode-users] embedded gecode
In-Reply-To: <781A9F61-B382-466C-9124-0FAA7BC7EEB2@gecode.org>
References: <52B500A3-2C28-455B-ABAF-7512D17AA1C6@yahoo.com.au>
	<781A9F61-B382-466C-9124-0FAA7BC7EEB2@gecode.org>
Message-ID: <BANLkTi=QmA5Z8GGJ1LCj-8nnd3qyJoe_bQ@mail.gmail.com>

Ruben,

I would be glad to know the details of your work.
It would be great for me to run my applications
developped with Gecode over my iPhone.

Cheers,
Mauricio

2011/4/4 Guido Tack <tack at gecode.org>

> Ruben Zilibowitz wrote:
>
> > Hi. I'm considering trying to use gecode on the iphone platform, or other
> mobile platforms. I'm aware that support for double precision floating point
> is limited on the iphone platform. The other main issue is the limited RAM.
> I've managed to compile gecode and test it on the iphone, however I'm
> concerned about the memory usage.
> >
> > I'm wondering if there've been any attempts to do this before? Are there
> any tips/suggestions?
>
> First of all, thanks for trying Gecode on a platform that we haven't got a
> lot of experience with.  Any comments are highly welcome.
>
> Concerning doubles, Gecode uses them mainly as a portable integer type with
> more than 32 bits in order to perform overflow-correct computations. As long
> as it works (i.e., either with hardware support or software emulation), it
> shouldn't be a problem, although perhaps there would be more efficient
> alternative solutions.
>
> Gecode has been designed for memory efficiency from the start, most data
> structures are quite compact.  The amount of memory used during search can
> be controlled using the recomputation parameters (commit distance and
> adaption distance).  E.g., a commit and adaptive distance of 100000 will
> effectively result in constant memory use, paid for by higher runtime (see
> Section 9.2 in "Modeling and Programming with Gecode").  But even with much
> lower parameters, many problems can be solved in just a few MB of RAM.
>
> Cheers,
>        Guido
>
> --
> Guido Tack, http://people.cs.kuleuven.be/~guido.tack/
>
>
>
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>



-- 
Mauricio TORO BERMUDEZ

http://www.labri.fr/perso/mtoro/

Research Postgraduate Student (Ph.D)
Computer Science Research Laboratory of Bordeaux (LABRI)
Universit? de Bordeaux 1

351, cours de la Lib?ration
F-33405 Talence Cedex. France.
Phone: (+33) 5 4000 24 85
Fax: (+33) 5 4000 66 69

Please do not print this e-mail unless you really need to.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110404/0507d309/attachment.htm>

From tcrussel at cs.uwaterloo.ca  Mon Apr  4 16:50:36 2011
From: tcrussel at cs.uwaterloo.ca (Tyrel Russell)
Date: Mon, 04 Apr 2011 10:50:36 -0400
Subject: [gecode-users] Singleton Arc Consistency Preprocessing
Message-ID: <4D99DABC.3080803@cs.uwaterloo.ca>

Hi,

Is there a preferred method for applying singleton arc consistency 
preprocessing in Gecode?

The idea that I was considering was to fix each variable value pair and 
determine if a nogood is generated by applying arc consistency with the 
variable-value fixed.  If so, add this nogood to a set of stored nogoods 
and enforce the new set of constraints, iterate through this process 
until no further nogoods are found.

There seem to be two problems with this approach.  First, it seems to be 
necessary to only add constraints in the constructor of a Space object 
or during search which means generating a specific constructor for this 
purpose.  Is there a better way to add constraints to a Space object on 
the fly?  Second, there is an issue of efficiency.  There would a large 
number of calls to my hypothetical constructor which may not be efficient.

I know that singleton arc consistency preprocessing was removed from 
Gecode several versions ago.  Was this because it was too expensive to 
be effective?

Thanks,

Tyrel Russell


From zayenz at gmail.com  Mon Apr  4 17:02:32 2011
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Mon, 4 Apr 2011 17:02:32 +0200
Subject: [gecode-users] Singleton Arc Consistency Preprocessing
In-Reply-To: <4D99DABC.3080803@cs.uwaterloo.ca>
References: <4D99DABC.3080803@cs.uwaterloo.ca>
Message-ID: <AANLkTikopboHBcUYAriQz-WrrRWdZwcMwWVG8zNhc_CN@mail.gmail.com>

On Mon, Apr 4, 2011 at 4:50 PM, Tyrel Russell <tcrussel at cs.uwaterloo.ca>wrote:

> Hi,
>
> Is there a preferred method for applying singleton arc consistency
> preprocessing in Gecode?
>
> The idea that I was considering was to fix each variable value pair and
> determine if a nogood is generated by applying arc consistency with the
> variable-value fixed.  If so, add this nogood to a set of stored nogoods and
> enforce the new set of constraints, iterate through this process until no
> further nogoods are found.
>
> There seem to be two problems with this approach.  First, it seems to be
> necessary to only add constraints in the constructor of a Space object or
> during search which means generating a specific constructor for this
> purpose.  Is there a better way to add constraints to a Space object on the
> fly?  Second, there is an issue of efficiency.  There would a large number
> of calls to my hypothetical constructor which may not be efficient.
>
> I know that singleton arc consistency preprocessing was removed from Gecode
> several versions ago.  Was this because it was too expensive to be
> effective?
>


The reason we removed SAC pre-processing was
 a) it was seldom effective at all for our examples (efficiency was ok)
 b) The implementation was ugly. SAC requires the set of variables to be
know, and the way that was done was not good nor maintainable.

That being said, it is actually quite easy to implement SAC pre-processing
for any particular problem. First, note that the reason constraints are
added in the constructor is simply because it is a convenient way of
structuring code, constraints can be added to a Space at any time. What you
need to do is to first construct your problem instance. Then, make a clone
of your problem for each literal that you want to test. If assigning that
literal in the newly created clone makes the Space failed, then you can
remove it in your original copy. Delete your clone, and start over for your
next literal.

Hope this helps,
Mikael

-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110404/c3489a27/attachment.htm>

From tack at gecode.org  Tue Apr  5 09:18:26 2011
From: tack at gecode.org (Guido Tack)
Date: Tue, 5 Apr 2011 09:18:26 +0200
Subject: [gecode-users] embedded gecode
In-Reply-To: <4F116A00-32E2-46F9-928D-91241233CE83@yahoo.com.au>
References: <52B500A3-2C28-455B-ABAF-7512D17AA1C6@yahoo.com.au>
	<781A9F61-B382-466C-9124-0FAA7BC7EEB2@gecode.org>
	<4F116A00-32E2-46F9-928D-91241233CE83@yahoo.com.au>
Message-ID: <75DD1928-383A-42A6-99CE-F4CE62101C50@gecode.org>

Ruben Zilibowitz wrote:

> Thanks for the tip about setting the commit and adaptive distance. That helps memory wise. In order to compile gecode for iphone one needs to set "Compile for Thumb" to "No", in case anyone else wants to try. There are two more issues I'm having.
> 
> 1) Is gecode thread safe, in general? In particular can I safely initialise a space and run a search on it all inside of a thread? This is important since one doesn't want to block execution in an iphone app.

Yes, no problem at all.  You just can't call methods on the same space from two different threads concurrently.

> 2) My executables, even after dead code elimination and other optimisations are very large. It's around 17 Mb. I'm not sure there's an easy fix for this, but any ideas would be welcome, for how to reduce file size of the executable. It seems that there are many features I'm not going to need, so perhaps I can try to strip down the library.

First of all, that sounds like you're linking statically, right?  It's true, the Gecode libraries are a bit on the fat side.  What you can definitely do is strip the debug symbols.  Other than that, I think the linker already only includes the symbols that it needs, so there's not much you can do in addition.

Cheers,
	Guido

-- 
Guido Tack, http://people.cs.kuleuven.be/~guido.tack/



From ruben.zilibowitz at gmail.com  Tue Apr  5 02:17:55 2011
From: ruben.zilibowitz at gmail.com (Ruben Zilibowitz)
Date: Tue, 5 Apr 2011 10:17:55 +1000
Subject: [gecode-users] embedded gecode
In-Reply-To: <781A9F61-B382-466C-9124-0FAA7BC7EEB2@gecode.org>
References: <52B500A3-2C28-455B-ABAF-7512D17AA1C6@yahoo.com.au>
	<781A9F61-B382-466C-9124-0FAA7BC7EEB2@gecode.org>
Message-ID: <4F116A00-32E2-46F9-928D-91241233CE83@yahoo.com.au>

Thanks for the tip about setting the commit and adaptive distance. That helps memory wise. In order to compile gecode for iphone one needs to set "Compile for Thumb" to "No", in case anyone else wants to try. There are two more issues I'm having.

1) Is gecode thread safe, in general? In particular can I safely initialise a space and run a search on it all inside of a thread? This is important since one doesn't want to block execution in an iphone app.

2) My executables, even after dead code elimination and other optimisations are very large. It's around 17 Mb. I'm not sure there's an easy fix for this, but any ideas would be welcome, for how to reduce file size of the executable. It seems that there are many features I'm not going to need, so perhaps I can try to strip down the library.

Ruben

On 04/04/2011, at 8:23 PM, Guido Tack wrote:

> Ruben Zilibowitz wrote:
> 
>> Hi. I'm considering trying to use gecode on the iphone platform, or other mobile platforms. I'm aware that support for double precision floating point is limited on the iphone platform. The other main issue is the limited RAM. I've managed to compile gecode and test it on the iphone, however I'm concerned about the memory usage.
>> 
>> I'm wondering if there've been any attempts to do this before? Are there any tips/suggestions?
> 
> First of all, thanks for trying Gecode on a platform that we haven't got a lot of experience with.  Any comments are highly welcome.
> 
> Concerning doubles, Gecode uses them mainly as a portable integer type with more than 32 bits in order to perform overflow-correct computations. As long as it works (i.e., either with hardware support or software emulation), it shouldn't be a problem, although perhaps there would be more efficient alternative solutions.
> 
> Gecode has been designed for memory efficiency from the start, most data structures are quite compact.  The amount of memory used during search can be controlled using the recomputation parameters (commit distance and adaption distance).  E.g., a commit and adaptive distance of 100000 will effectively result in constant memory use, paid for by higher runtime (see Section 9.2 in "Modeling and Programming with Gecode").  But even with much lower parameters, many problems can be solved in just a few MB of RAM.
> 
> Cheers,
> 	Guido
> 
> -- 
> Guido Tack, http://people.cs.kuleuven.be/~guido.tack/
> 
> 
> 
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users



From jonathanskovhus at gmail.com  Tue Apr  5 09:20:44 2011
From: jonathanskovhus at gmail.com (Jonathan Skovhus Andersen)
Date: Tue, 5 Apr 2011 09:20:44 +0200
Subject: [gecode-users] Lower bound for Branch-and-bound
Message-ID: <BANLkTimzJ7CV_ZEathxX8qQj_8jBTXo_kw@mail.gmail.com>

*Hi,*

I have been using the Travelling Salesman Problem-case in Gecode for some
time now. I am using Branch-and-bound.

   - I can't see exactly how Gecode computes the lower and upper bound?
   There are many ways of computing a lower bound for a TSP and I would like to
   know how Gecode does it. When I open Gist it shows what I believe to be the
   lower and upper bound when I double click the root node (see attached
   image).
   - Does it makes sense to use the lower bound for assessing the quality of
   the tour found?
   - If I let the branch-and-bound algorithm finish am I sure of finding the
   optimum tour?

I hope that you will bear with me - I am new in this field.

*Regards,*
*Jonathan Skovhus*
*Aalborg University*
*Denmark*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110405/e2f1e904/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: TSP.jpg
Type: image/jpeg
Size: 105638 bytes
Desc: not available
URL: <http://www.gecode.org/pipermail/users/attachments/20110405/e2f1e904/attachment-0001.jpg>

From zayenz at gmail.com  Tue Apr  5 09:33:37 2011
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Tue, 5 Apr 2011 09:33:37 +0200
Subject: [gecode-users] Lower bound for Branch-and-bound
In-Reply-To: <BANLkTimzJ7CV_ZEathxX8qQj_8jBTXo_kw@mail.gmail.com>
References: <BANLkTimzJ7CV_ZEathxX8qQj_8jBTXo_kw@mail.gmail.com>
Message-ID: <AANLkTinNQ1pwxBdu2m-90Y-2ZVJ3BhAD8EGcaqQMQDzm@mail.gmail.com>

Hi,

If you look in the code of the TSP example, you can see that the model uses
a circuit constraint with costs variables. The propagation of this
constraint is what computes the bounds for the cost variable. When a tour is
found, the cost variable will be fixed.

As for running BAB search for finding optimum solutions, the short answer is
yes. It is what BAB search is used for.

Please read the documentation in Modeling and Programming with Gecode, where
it is all described. Section 2.5 and 8.1 describe best solution search and
circuit constraints respectively.

Cheers,
Mikael

2011/4/5 Jonathan Skovhus Andersen <jonathanskovhus at gmail.com>

> *Hi,*
>
> I have been using the Travelling Salesman Problem-case in Gecode for some
> time now. I am using Branch-and-bound.
>
>    - I can't see exactly how Gecode computes the lower and upper bound?
>    There are many ways of computing a lower bound for a TSP and I would like to
>    know how Gecode does it. When I open Gist it shows what I believe to be the
>    lower and upper bound when I double click the root node (see attached
>    image).
>    - Does it makes sense to use the lower bound for assessing the quality
>    of the tour found?
>    - If I let the branch-and-bound algorithm finish am I sure of finding
>    the optimum tour?
>
> I hope that you will bear with me - I am new in this field.
>
> *Regards,*
> *Jonathan Skovhus*
> *Aalborg University*
> *Denmark*
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>


-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110405/1e04074f/attachment.htm>

From jonathanskovhus at gmail.com  Tue Apr  5 09:50:40 2011
From: jonathanskovhus at gmail.com (Jonathan Skovhus Andersen)
Date: Tue, 5 Apr 2011 09:50:40 +0200
Subject: [gecode-users] Lower bound for Branch-and-bound
In-Reply-To: <AANLkTinNQ1pwxBdu2m-90Y-2ZVJ3BhAD8EGcaqQMQDzm@mail.gmail.com>
References: <BANLkTimzJ7CV_ZEathxX8qQj_8jBTXo_kw@mail.gmail.com>
	<AANLkTinNQ1pwxBdu2m-90Y-2ZVJ3BhAD8EGcaqQMQDzm@mail.gmail.com>
Message-ID: <BANLkTimU4OLmb2yVE4XmiPzYSmbANOHsnQ@mail.gmail.com>

*Thanks for the quick response.*

I have read the documentation, but the 2 pages describing the circuit
constraint seems quite inadequate to me.

But anyway. The main problem I have is that I am dealing with problems where
it is not feasible to let the BAB search finish. Then I would like to
estimate how close this solution is to the optimum solution. Do you know if
there is any quick way to do this or do I have to implement my own
calculations of a lower bound to compare my solution to?

*Regards,*
*Jonathan Skovhus.*

2011/4/5 Mikael Zayenz Lagerkvist <zayenz at gmail.com>

> Hi,
>
> If you look in the code of the TSP example, you can see that the model uses
> a circuit constraint with costs variables. The propagation of this
> constraint is what computes the bounds for the cost variable. When a tour is
> found, the cost variable will be fixed.
>
> As for running BAB search for finding optimum solutions, the short answer
> is yes. It is what BAB search is used for.
>
> Please read the documentation in Modeling and Programming with Gecode,
> where it is all described. Section 2.5 and 8.1 describe best solution search
> and circuit constraints respectively.
>
> Cheers,
> Mikael
>
> 2011/4/5 Jonathan Skovhus Andersen <jonathanskovhus at gmail.com>
>
>> *Hi,*
>>
>> I have been using the Travelling Salesman Problem-case in Gecode for some
>> time now. I am using Branch-and-bound.
>>
>>    - I can't see exactly how Gecode computes the lower and upper bound?
>>    There are many ways of computing a lower bound for a TSP and I would like to
>>    know how Gecode does it. When I open Gist it shows what I believe to be the
>>    lower and upper bound when I double click the root node (see attached
>>    image).
>>    - Does it makes sense to use the lower bound for assessing the quality
>>    of the tour found?
>>    - If I let the branch-and-bound algorithm finish am I sure of finding
>>    the optimum tour?
>>
>> I hope that you will bear with me - I am new in this field.
>>
>> *Regards,*
>> *Jonathan Skovhus*
>> *Aalborg University*
>> *Denmark*
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
>>
>
>
> --
> Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110405/ed996d26/attachment.htm>

From zayenz at gmail.com  Tue Apr  5 10:05:30 2011
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Tue, 5 Apr 2011 10:05:30 +0200
Subject: [gecode-users] Lower bound for Branch-and-bound
In-Reply-To: <BANLkTimU4OLmb2yVE4XmiPzYSmbANOHsnQ@mail.gmail.com>
References: <BANLkTimzJ7CV_ZEathxX8qQj_8jBTXo_kw@mail.gmail.com>
	<AANLkTinNQ1pwxBdu2m-90Y-2ZVJ3BhAD8EGcaqQMQDzm@mail.gmail.com>
	<BANLkTimU4OLmb2yVE4XmiPzYSmbANOHsnQ@mail.gmail.com>
Message-ID: <AANLkTim-3oGA5ArRiTD3w+dmKfngdsJYZdEiMQqhhwFs@mail.gmail.com>

2011/4/5 Jonathan Skovhus Andersen <jonathanskovhus at gmail.com>

> I have read the documentation, but the 2 pages describing the circuit
> constraint seems quite inadequate to me.
>

Looking at the source code (gecode/graph/circuit.cpp) shows that the cost
variant of circuit currently uses linear to compute the total cost. This
will not give a very good quality bound, since the computation does not use
the fact that the costs come from a circuit.


But anyway. The main problem I have is that I am dealing with problems where
> it is not feasible to let the BAB search finish. Then I would like to
> estimate how close this solution is to the optimum solution. Do you know if
> there is any quick way to do this or do I have to implement my own
> calculations of a lower bound to compare my solution to?
>

My guess would be that a custom estimator is probably worth it, given that
there is something reasonable to implement. I haven't looked into this
though. Anybody else know anything?

In general, for pure TSP problems I don't believe that CP is the best
technology choice. You might have interesting side-constraints though?

Cheers,
Mikael

-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110405/a1f95ccc/attachment.htm>

From cschulte at kth.se  Tue Apr  5 10:07:20 2011
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 5 Apr 2011 10:07:20 +0200
Subject: [gecode-users] Lower bound for Branch-and-bound
In-Reply-To: <BANLkTimU4OLmb2yVE4XmiPzYSmbANOHsnQ@mail.gmail.com>
References: <BANLkTimzJ7CV_ZEathxX8qQj_8jBTXo_kw@mail.gmail.com>	<AANLkTinNQ1pwxBdu2m-90Y-2ZVJ3BhAD8EGcaqQMQDzm@mail.gmail.com>
	<BANLkTimU4OLmb2yVE4XmiPzYSmbANOHsnQ@mail.gmail.com>
Message-ID: <001801cbf368$7cddf360$7699da20$@se>

Hi,

 

Please remember, MPG tells what is in Gecode and how it can be used but not
how everything has been invented ;-)

 

If you want to assess the quality, you need to compute a lower bound
yourself. It might even make sense to use other methods for computing lower
and/or upper bounds. An example for this you can find in MPG, "Bin packing"
where both lower and upper bounds are essential.

 

Best

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Jonathan Skovhus Andersen
Sent: Tuesday, April 05, 2011 9:51 AM
To: users at gecode.org
Subject: Re: [gecode-users] Lower bound for Branch-and-bound

 

Thanks for the quick response.

 

I have read the documentation, but the 2 pages describing the circuit
constraint seems quite inadequate to me.

 

But anyway. The main problem I have is that I am dealing with problems where
it is not feasible to let the BAB search finish. Then I would like to
estimate how close this solution is to the optimum solution. Do you know if
there is any quick way to do this or do I have to implement my own
calculations of a lower bound to compare my solution to?

 

Regards,

Jonathan Skovhus.

 

2011/4/5 Mikael Zayenz Lagerkvist <zayenz at gmail.com>

Hi,

 

If you look in the code of the TSP example, you can see that the model uses
a circuit constraint with costs variables. The propagation of this
constraint is what computes the bounds for the cost variable. When a tour is
found, the cost variable will be fixed.

 

As for running BAB search for finding optimum solutions, the short answer is
yes. It is what BAB search is used for.

 

Please read the documentation in Modeling and Programming with Gecode, where
it is all described. Section 2.5 and 8.1 describe best solution search and
circuit constraints respectively.

 

Cheers,

Mikael

2011/4/5 Jonathan Skovhus Andersen <jonathanskovhus at gmail.com>

Hi,

 

I have been using the Travelling Salesman Problem-case in Gecode for some
time now. I am using Branch-and-bound. 

*	I can't see exactly how Gecode computes the lower and upper bound?
There are many ways of computing a lower bound for a TSP and I would like to
know how Gecode does it. When I open Gist it shows what I believe to be the
lower and upper bound when I double click the root node (see attached
image).
*	Does it makes sense to use the lower bound for assessing the quality
of the tour found?
*	If I let the branch-and-bound algorithm finish am I sure of finding
the optimum tour?

I hope that you will bear with me - I am new in this field.

 

Regards,

Jonathan Skovhus

Aalborg University

Denmark

 

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110405/2e24b3e0/attachment-0001.htm>

From jonathanskovhus at gmail.com  Tue Apr  5 10:20:44 2011
From: jonathanskovhus at gmail.com (Jonathan Skovhus Andersen)
Date: Tue, 5 Apr 2011 10:20:44 +0200
Subject: [gecode-users] Lower bound for Branch-and-bound
In-Reply-To: <AANLkTim-3oGA5ArRiTD3w+dmKfngdsJYZdEiMQqhhwFs@mail.gmail.com>
References: <BANLkTimzJ7CV_ZEathxX8qQj_8jBTXo_kw@mail.gmail.com>
	<AANLkTinNQ1pwxBdu2m-90Y-2ZVJ3BhAD8EGcaqQMQDzm@mail.gmail.com>
	<BANLkTimU4OLmb2yVE4XmiPzYSmbANOHsnQ@mail.gmail.com>
	<AANLkTim-3oGA5ArRiTD3w+dmKfngdsJYZdEiMQqhhwFs@mail.gmail.com>
Message-ID: <BANLkTikZMjCdnmPiifa0UkdXKg0XA-pozw@mail.gmail.com>

Thank you Christian and Mikael, this is helpful. I do have some
side-constraints that have kept me from trying to implement a solution to
the TSP myself in C# or C++.

Wouldn't it actually be possible to greatly improve the performance of the
BAB search by calculating a more precise lower bound (for example the
Held-Karp TSP bound). I just didn't know if this already has been done in
Gecode. If anybode has tried this I would like to know.

*Regards,*
*Jonathan Skovhus*.

Hi,
>
> Please remember, MPG tells what is in Gecode and how it can be used but not
> how everything has been invented ;-)
>
> If you want to assess the quality, you need to compute a lower bound
> yourself. It might even make sense to use other methods for computing lower
> and/or upper bounds. An example for this you can find in MPG, "Bin packing"
> where both lower and upper bounds are essential.
>
> Best
> Christian
>
> --
> Christian Schulte, www.ict.kth.se/~cschulte/


2011/4/5 Mikael Zayenz Lagerkvist <zayenz at gmail.com>

> 2011/4/5 Jonathan Skovhus Andersen <jonathanskovhus at gmail.com>
>
>> I have read the documentation, but the 2 pages describing the circuit
>> constraint seems quite inadequate to me.
>>
>
> Looking at the source code (gecode/graph/circuit.cpp) shows that the cost
> variant of circuit currently uses linear to compute the total cost. This
> will not give a very good quality bound, since the computation does not use
> the fact that the costs come from a circuit.
>
>
> But anyway. The main problem I have is that I am dealing with problems
>> where it is not feasible to let the BAB search finish. Then I would like to
>> estimate how close this solution is to the optimum solution. Do you know if
>> there is any quick way to do this or do I have to implement my own
>> calculations of a lower bound to compare my solution to?
>>
>
> My guess would be that a custom estimator is probably worth it, given that
> there is something reasonable to implement. I haven't looked into this
> though. Anybody else know anything?
>
> In general, for pure TSP problems I don't believe that CP is the best
> technology choice. You might have interesting side-constraints though?
>
> Cheers,
> Mikael
>
> --
> Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110405/41139700/attachment.htm>

From vanhoeve at andrew.cmu.edu  Tue Apr  5 17:24:37 2011
From: vanhoeve at andrew.cmu.edu (Willem-Jan van Hoeve)
Date: Tue, 05 Apr 2011 11:24:37 -0400
Subject: [gecode-users] Lower bound for Branch-and-bound
In-Reply-To: <BANLkTikZMjCdnmPiifa0UkdXKg0XA-pozw@mail.gmail.com>
References: <BANLkTikZMjCdnmPiifa0UkdXKg0XA-pozw@mail.gmail.com>
Message-ID: <4D9B3435.1060202@andrew.cmu.edu>

Jonathan,

The following pointers to CP literature (on using relaxations for the 
TSP) may be useful for you, if you plan to implement your own cost-based 
circuit propagator.

* The assignment problem relaxation (works well for asymmetric TSPs and 
for TSP-TW) has been studied in a sequence of papers by Focacci et al., 
e.g.,

Filippo Focacci, Andrea Lodi, Michela Milano: Embedding Relaxations in 
Global Constraints for Solving TSP and TSPTW. Ann. Math. Artif. Intell. 
34(4): 291-311 (2002)

Filippo Focacci, Andrea Lodi, Michela Milano: A Hybrid Exact Algorithm 
for the TSPTW. INFORMS Journal on Computing 14(4): 403-417 (2002)

* Domain filtering based on the Held-Karp 1-tree relaxation has recently 
been investigated by Benchimol et al:

Pascal Benchimol et al.: Improving the Held and Karp Approach with 
Constraint Programming. CPAIOR 2010: 40-44

Cheers,

--Willem


From jonathanskovhus at gmail.com  Thu Apr  7 13:49:24 2011
From: jonathanskovhus at gmail.com (Jonathan Skovhus Andersen)
Date: Thu, 7 Apr 2011 13:49:24 +0200
Subject: [gecode-users] Benchmarks comparing Gecode to other systems?
Message-ID: <BANLkTim0tOyviYucu5hEKgyQaXRk7JoKPQ@mail.gmail.com>

Hi,

Does anyone know where I can find benchmarks comparing Gecode to other
system. I have read several places that they should be on Gecode.org, but I
can't find it.

/Jonathan Skovhus.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110407/3218b958/attachment.htm>

From larsko at cs.st-andrews.ac.uk  Thu Apr  7 14:01:24 2011
From: larsko at cs.st-andrews.ac.uk (Lars Kotthoff)
Date: Thu, 7 Apr 2011 13:01:24 +0100
Subject: [gecode-users] Benchmarks comparing Gecode to other systems?
In-Reply-To: <BANLkTim0tOyviYucu5hEKgyQaXRk7JoKPQ@mail.gmail.com>
References: <BANLkTim0tOyviYucu5hEKgyQaXRk7JoKPQ@mail.gmail.com>
Message-ID: <20110407130124.4497a535@8afbfee5.jrs.st-andrews.ac.uk>

> Does anyone know where I can find benchmarks comparing Gecode to
> other system. I have read several places that they should be on
> Gecode.org, but I can't find it.

There's the comparison of 4 solvers (including Gecode) I did a while ago [1].
Not sure how applicable that is to the current version, but it might be a
starting point. I'd be happy to answer any questions you might have about it.

Lars


[1] http://www-circa.mcs.st-and.ac.uk/Preprints/solver-design.pdf

> 
> /Jonathan Skovhus.


From jonathanskovhus at gmail.com  Thu Apr  7 14:12:22 2011
From: jonathanskovhus at gmail.com (Jonathan Skovhus Andersen)
Date: Thu, 7 Apr 2011 14:12:22 +0200
Subject: [gecode-users] Benchmarks comparing Gecode to other systems?
In-Reply-To: <20110407130124.4497a535@8afbfee5.jrs.st-andrews.ac.uk>
References: <BANLkTim0tOyviYucu5hEKgyQaXRk7JoKPQ@mail.gmail.com>
	<20110407130124.4497a535@8afbfee5.jrs.st-andrews.ac.uk>
Message-ID: <BANLkTikK3vN3r35+TVjSQq8G85xfJY0v=w@mail.gmail.com>

Thank you, Lars. I can definitely use your paper.

2011/4/7 Lars Kotthoff <larsko at cs.st-andrews.ac.uk>

> > Does anyone know where I can find benchmarks comparing Gecode to
> > other system. I have read several places that they should be on
> > Gecode.org, but I can't find it.
>
> There's the comparison of 4 solvers (including Gecode) I did a while ago
> [1].
> Not sure how applicable that is to the current version, but it might be a
> starting point. I'd be happy to answer any questions you might have about
> it.
>
> Lars
>
>
> [1] http://www-circa.mcs.st-and.ac.uk/Preprints/solver-design.pdf
>
> >
> > /Jonathan Skovhus.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110407/91ad93e1/attachment.htm>

From zayenz at gmail.com  Thu Apr  7 14:20:38 2011
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Thu, 7 Apr 2011 14:20:38 +0200
Subject: [gecode-users] Benchmarks comparing Gecode to other systems?
In-Reply-To: <BANLkTim0tOyviYucu5hEKgyQaXRk7JoKPQ@mail.gmail.com>
References: <BANLkTim0tOyviYucu5hEKgyQaXRk7JoKPQ@mail.gmail.com>
Message-ID: <BANLkTi=jcbQ6BOr9ByoeamybnCeWFRoZJw@mail.gmail.com>

Hi,

We used to have benchmarks against a few other systems (ILOG Solver, SICStus
Prolog, Mozart/Oz), but decided not to maintain those anymore. The purpose
of the benchmarks was to show that Gecode is a system with at least
competitive performance. We felt that it was no longer useful to do these
detailed comparisons.

For some interesting results comparing different modern systems, see the
results from the MiniZinc competition. Also, when comparing different
systems it is very important to remember the lessons from
  'On Benchmarking Constraint Logic Programming Platforms. Response to
Fernandez and Hill's ?A Comparative Study of Eight Constraint Programming
Languages over the Boolean and Finite Domains?',
  Mark Wallace, Joachim Schimpf, Kish Shen and Warwick Harvey
  (http://www.springerlink.com/content/gn1h43w83721m667/)

Cheers,
Mikael

2011/4/7 Jonathan Skovhus Andersen <jonathanskovhus at gmail.com>

> Hi,
>
> Does anyone know where I can find benchmarks comparing Gecode to other
> system. I have read several places that they should be on Gecode.org, but I
> can't find it.
>
> /Jonathan Skovhus.
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>


-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110407/d4e09829/attachment.htm>

From ruben.zilibowitz at gmail.com  Thu Apr  7 15:01:30 2011
From: ruben.zilibowitz at gmail.com (Ruben Zilibowitz)
Date: Thu, 7 Apr 2011 23:01:30 +1000
Subject: [gecode-users] embedded gecode
In-Reply-To: <75DD1928-383A-42A6-99CE-F4CE62101C50@gecode.org>
References: <52B500A3-2C28-455B-ABAF-7512D17AA1C6@yahoo.com.au>
	<781A9F61-B382-466C-9124-0FAA7BC7EEB2@gecode.org>
	<4F116A00-32E2-46F9-928D-91241233CE83@yahoo.com.au>
	<75DD1928-383A-42A6-99CE-F4CE62101C50@gecode.org>
Message-ID: <AD0133C7-92EF-4C17-869D-A2EB3DA00D18@gmail.com>


On 05/04/2011, at 5:18 PM, Guido Tack wrote:

> Ruben Zilibowitz wrote:
> 
>> Thanks for the tip about setting the commit and adaptive distance. That helps memory wise. In order to compile gecode for iphone one needs to set "Compile for Thumb" to "No", in case anyone else wants to try. There are two more issues I'm having.
>> 
>> 1) Is gecode thread safe, in general? In particular can I safely initialise a space and run a search on it all inside of a thread? This is important since one doesn't want to block execution in an iphone app.
> 
> Yes, no problem at all.  You just can't call methods on the same space from two different threads concurrently.

Ok. Great.

> 
>> 2) My executables, even after dead code elimination and other optimisations are very large. It's around 17 Mb. I'm not sure there's an easy fix for this, but any ideas would be welcome, for how to reduce file size of the executable. It seems that there are many features I'm not going to need, so perhaps I can try to strip down the library.
> 
> First of all, that sounds like you're linking statically, right?  It's true, the Gecode libraries are a bit on the fat side.  What you can definitely do is strip the debug symbols.  Other than that, I think the linker already only includes the symbols that it needs, so there's not much you can do in addition.

Yes, statically. I'm not sure there's any other way when it comes to building iPhone apps. That 17 Mb is for a "fat" binary that supports two architectures (armv6 and armv7). So the real figure is about half that. Still it would be nice to try and cut it down somewhat.

Ruben



From cschulte at kth.se  Thu Apr  7 17:02:23 2011
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 7 Apr 2011 17:02:23 +0200
Subject: [gecode-users] Benchmarks comparing Gecode to other systems?
In-Reply-To: <BANLkTi=jcbQ6BOr9ByoeamybnCeWFRoZJw@mail.gmail.com>
References: <BANLkTim0tOyviYucu5hEKgyQaXRk7JoKPQ@mail.gmail.com>
	<BANLkTi=jcbQ6BOr9ByoeamybnCeWFRoZJw@mail.gmail.com>
Message-ID: <00af01cbf534$cd2e4fe0$678aefa0$@se>

To clarify: the MiniZinc competition is more detailed than the things we had
at gecode.org before. You find links to the MiniZinc competition on the
webpages.

 

Best

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Mikael Zayenz Lagerkvist
Sent: Thursday, April 07, 2011 2:21 PM
To: Jonathan Skovhus Andersen
Cc: users at gecode.org
Subject: Re: [gecode-users] Benchmarks comparing Gecode to other systems?

 

Hi,

 

We used to have benchmarks against a few other systems (ILOG Solver, SICStus
Prolog, Mozart/Oz), but decided not to maintain those anymore. The purpose
of the benchmarks was to show that Gecode is a system with at least
competitive performance. We felt that it was no longer useful to do these
detailed comparisons.

 

For some interesting results comparing different modern systems, see the
results from the MiniZinc competition. Also, when comparing different
systems it is very important to remember the lessons from 

  'On Benchmarking Constraint Logic Programming Platforms. Response to
Fernandez and Hill's "A Comparative Study of Eight Constraint Programming
Languages over the Boolean and Finite Domains"', 

  Mark Wallace, Joachim Schimpf, Kish Shen and Warwick Harvey 

  (http://www.springerlink.com/content/gn1h43w83721m667/)

 

Cheers,

Mikael

 

2011/4/7 Jonathan Skovhus Andersen <jonathanskovhus at gmail.com>

Hi,

 

Does anyone know where I can find benchmarks comparing Gecode to other
system. I have read several places that they should be on Gecode.org, but I
can't find it.

 

/Jonathan Skovhus.


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110407/a3ca3518/attachment-0001.htm>

From changbin.liu at gmail.com  Fri Apr  8 04:07:01 2011
From: changbin.liu at gmail.com (Changbin Liu)
Date: Thu, 7 Apr 2011 22:07:01 -0400
Subject: [gecode-users] question on using Script and Option to run solver
Message-ID: <BANLkTi=VmncJkN2wu8COW9Ude8C92QuKOQ@mail.gmail.com>

Hi, Folks

   I am trying to run Gecode solver using code like:

*Script::run<SendMostMoney,BAB,Options>(opt);*

This is from one example in the documentation. In this code, it is assumed
that solver SendMoreMoney is constructed based on the only parameter Option
"opt".

Here come the problem: what if my customized solver needs more parameters
for constructor beside Option "opt"?  How should I modify above code to run
the solver?

Many thanks

-- 
--------------------------------------------
Changbin Liu
Computer & Information Science Department
University of Pennsylvania
Philadelphia, PA
U.S.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110407/a4fe4292/attachment.htm>

From ruben.zilibowitz at gmail.com  Fri Apr  8 06:54:53 2011
From: ruben.zilibowitz at gmail.com (Ruben Zilibowitz)
Date: Fri, 8 Apr 2011 14:54:53 +1000
Subject: [gecode-users] embedded gecode
In-Reply-To: <75DD1928-383A-42A6-99CE-F4CE62101C50@gecode.org>
References: <52B500A3-2C28-455B-ABAF-7512D17AA1C6@yahoo.com.au>
	<781A9F61-B382-466C-9124-0FAA7BC7EEB2@gecode.org>
	<4F116A00-32E2-46F9-928D-91241233CE83@yahoo.com.au>
	<75DD1928-383A-42A6-99CE-F4CE62101C50@gecode.org>
Message-ID: <2C6ED0A5-A6CF-4466-AB09-FB7AD0EF8977@gmail.com>


On 05/04/2011, at 5:18 PM, Guido Tack wrote:

> Ruben Zilibowitz wrote:
> 
>> Thanks for the tip about setting the commit and adaptive distance. That helps memory wise. In order to compile gecode for iphone one needs to set "Compile for Thumb" to "No", in case anyone else wants to try. There are two more issues I'm having.
>> 
>> 1) Is gecode thread safe, in general? In particular can I safely initialise a space and run a search on it all inside of a thread? This is important since one doesn't want to block execution in an iphone app.
> 
> Yes, no problem at all.  You just can't call methods on the same space from two different threads concurrently.

Ok. Great.

> 
>> 2) My executables, even after dead code elimination and other optimisations are very large. It's around 17 Mb. I'm not sure there's an easy fix for this, but any ideas would be welcome, for how to reduce file size of the executable. It seems that there are many features I'm not going to need, so perhaps I can try to strip down the library.
> 
> First of all, that sounds like you're linking statically, right?  It's true, the Gecode libraries are a bit on the fat side.  What you can definitely do is strip the debug symbols.  Other than that, I think the linker already only includes the symbols that it needs, so there's not much you can do in addition.

Yes, statically. I'm not sure there's any other way when it comes to building iPhone apps. That 17 Mb is for a "fat" binary that supports two architectures (armv6 and armv7). So the real figure is about half that. Still it would be nice if it was smaller.

Ruben



From zayenz at gmail.com  Fri Apr  8 07:15:50 2011
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Fri, 8 Apr 2011 07:15:50 +0200
Subject: [gecode-users] embedded gecode
In-Reply-To: <2C6ED0A5-A6CF-4466-AB09-FB7AD0EF8977@gmail.com>
References: <52B500A3-2C28-455B-ABAF-7512D17AA1C6@yahoo.com.au>
	<781A9F61-B382-466C-9124-0FAA7BC7EEB2@gecode.org>
	<4F116A00-32E2-46F9-928D-91241233CE83@yahoo.com.au>
	<75DD1928-383A-42A6-99CE-F4CE62101C50@gecode.org>
	<2C6ED0A5-A6CF-4466-AB09-FB7AD0EF8977@gmail.com>
Message-ID: <BANLkTik8Q-=+hJybSmW6sZpCKok=_YEK2w@mail.gmail.com>

On Fri, Apr 8, 2011 at 6:54 AM, Ruben Zilibowitz <ruben.zilibowitz at gmail.com
> wrote:

> >> 2) My executables, even after dead code elimination and other
> optimisations are very large. It's around 17 Mb. I'm not sure there's an
> easy fix for this, but any ideas would be welcome, for how to reduce file
> size of the executable. It seems that there are many features I'm not going
> to need, so perhaps I can try to strip down the library.
> >
> > First of all, that sounds like you're linking statically, right?  It's
> true, the Gecode libraries are a bit on the fat side.  What you can
> definitely do is strip the debug symbols.  Other than that, I think the
> linker already only includes the symbols that it needs, so there's not much
> you can do in addition.
>
> Yes, statically. I'm not sure there's any other way when it comes to
> building iPhone apps. That 17 Mb is for a "fat" binary that supports two
> architectures (armv6 and armv7). So the real figure is about half that.
> Still it would be nice if it was smaller.


Stripping debug symbols helps a lot with size. On my machine, the size of
the dynamic libraries goes from 52 MiB to 7.1 MiB when stripped.

In addition, you can try and compile Gecode with -Os as optimization flag.
It won't be as fast, but it might make the executable smaller (I haven't
tried it, you'll need to experiment). Also, make sure that you are only
including the parts that you need (Gist and flatzinc might not be relevant
for example).

If you really want to make the executables as small as possible, then you
could start to remove parts that you are not using. You might want to
investigate if there is a way to make your compilation tool-chain do
automatic dead-code removal.

Out of curiosity, what does your App do?

Cheers,
Mikael

-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110408/9036fc3b/attachment.htm>

From zayenz at gmail.com  Fri Apr  8 07:23:29 2011
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Fri, 8 Apr 2011 07:23:29 +0200
Subject: [gecode-users] question on using Script and Option to run solver
In-Reply-To: <BANLkTi=VmncJkN2wu8COW9Ude8C92QuKOQ@mail.gmail.com>
References: <BANLkTi=VmncJkN2wu8COW9Ude8C92QuKOQ@mail.gmail.com>
Message-ID: <BANLkTi=g8bSQ6YrEoPx_HDiLi7WqKfSdWA@mail.gmail.com>

The easiest way if you want to use the Script support, is to subclass the
Options class with your particular data included. See the examples for
details (e.g., car-sequencing.cpp) and Chapter 11 of Modeling and
Programming with Gecode..

Cheers,
Mikael

2011/4/8 Changbin Liu <changbin.liu at gmail.com>

> Hi, Folks
>
>    I am trying to run Gecode solver using code like:
>
> *Script::run<SendMostMoney,BAB,Options>(opt);*
>
> This is from one example in the documentation. In this code, it is assumed
> that solver SendMoreMoney is constructed based on the only parameter Option
> "opt".
>
> Here come the problem: what if my customized solver needs more parameters
> for constructor beside Option "opt"?  How should I modify above code to run
> the solver?
>
> Many thanks
>
> --
> --------------------------------------------
> Changbin Liu
> Computer & Information Science Department
> University of Pennsylvania
> Philadelphia, PA
> U.S.
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>


-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110408/90e694fa/attachment.htm>

From tack at gecode.org  Fri Apr  8 12:44:47 2011
From: tack at gecode.org (Guido Tack)
Date: Fri, 8 Apr 2011 12:44:47 +0200
Subject: [gecode-users] embedded gecode
In-Reply-To: <BANLkTik8Q-=+hJybSmW6sZpCKok=_YEK2w@mail.gmail.com>
References: <52B500A3-2C28-455B-ABAF-7512D17AA1C6@yahoo.com.au>
	<781A9F61-B382-466C-9124-0FAA7BC7EEB2@gecode.org>
	<4F116A00-32E2-46F9-928D-91241233CE83@yahoo.com.au>
	<75DD1928-383A-42A6-99CE-F4CE62101C50@gecode.org>
	<2C6ED0A5-A6CF-4466-AB09-FB7AD0EF8977@gmail.com>
	<BANLkTik8Q-=+hJybSmW6sZpCKok=_YEK2w@mail.gmail.com>
Message-ID: <AB5F97B1-A160-4F01-9F74-327F928ADF51@gecode.org>

Mikael Zayenz Lagerkvist wrote:

> On Fri, Apr 8, 2011 at 6:54 AM, Ruben Zilibowitz <ruben.zilibowitz at gmail.com> wrote:
> >> 2) My executables, even after dead code elimination and other optimisations are very large. It's around 17 Mb. I'm not sure there's an easy fix for this, but any ideas would be welcome, for how to reduce file size of the executable. It seems that there are many features I'm not going to need, so perhaps I can try to strip down the library.
> >
> > First of all, that sounds like you're linking statically, right?  It's true, the Gecode libraries are a bit on the fat side.  What you can definitely do is strip the debug symbols.  Other than that, I think the linker already only includes the symbols that it needs, so there's not much you can do in addition.
> 
> Yes, statically. I'm not sure there's any other way when it comes to building iPhone apps. That 17 Mb is for a "fat" binary that supports two architectures (armv6 and armv7). So the real figure is about half that. Still it would be nice if it was smaller.
> 
> Stripping debug symbols helps a lot with size. On my machine, the size of the dynamic libraries goes from 52 MiB to 7.1 MiB when stripped.
> 
> In addition, you can try and compile Gecode with -Os as optimization flag. It won't be as fast, but it might make the executable smaller (I haven't tried it, you'll need to experiment). Also, make sure that you are only including the parts that you need (Gist and flatzinc might not be relevant for example). 

Gist won't be compiled anyway (no Qt on iOS), and flatzinc is usually not linked unless you actually use it.

On Darwin (Mac OS, iOS), the option for minimizing size is -Oz (-Os also exists but is slightly less radical).  Here's a table of executable sizes (x86_64 on Mac OS):

					-O3		-O3 stripped		-Oz		-Oz stripped	-Oz clang	-Oz clang stripped
examples/queens:	8,2M	4,9M			7,6M	3,8M		7,3M		3,3M
tools/flatzinc/fz:		15M	9,1M			13M	7,1M		13M		6,2M

> If you really want to make the executables as small as possible, then you could start to remove parts that you are not using. You might want to investigate if there is a way to make your compilation tool-chain do automatic dead-code removal.

I thought the linker did that automatically, but apparently, it doesn't.  You can tell the linker explicitly to remove dead code.  On Darwin, that's done using the -dead_strip flag (and that's possibly enabled by default in XCode, I'm not sure).  
With -dead_strip, examples/queens goes down to 4,4M with -Oz, or 2,3M stripped.  So, comparing -O3 nonstripped to -Oz -Wl,-dead_strip stripped, we can reduce the binary by 70%.

Still, quite a lot of symbols end up in the executable that I can't explain, e.g. most of the set library seems to be included in the queens executable.  So indeed, if your constraint model does not use set constraints, consider compiling Gecode with --disable-set-vars.  Here are the numbers for queens without set variables:
					-Oz		-Oz stripped 	-Oz -dead_strip 	-Oz -dead_strip stripped
examples/queens:	6,2M	2,9M		3,2M			1,5M

We could probably reduce the size even further by carefully looking at the symbols and removing unused stuff.  But anyway, this already saves 80% code size.

Another thing I tried (just for fun) was to compile using clang with -O4, enabling link-time optimization.  The smallest size I could get for queens (but including set variables) was 2,2M, which is not too bad either, considering that this does full optimization.

Cheers,
	Guido

-- 
Guido Tack, http://people.cs.kuleuven.be/~guido.tack/

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110408/adcf2215/attachment.htm>

From cschulte at kth.se  Fri Apr  8 13:47:12 2011
From: cschulte at kth.se (Christian Schulte)
Date: Fri, 8 Apr 2011 13:47:12 +0200
Subject: [gecode-users] embedded gecode
In-Reply-To: <AB5F97B1-A160-4F01-9F74-327F928ADF51@gecode.org>
References: <52B500A3-2C28-455B-ABAF-7512D17AA1C6@yahoo.com.au>	<781A9F61-B382-466C-9124-0FAA7BC7EEB2@gecode.org>	<4F116A00-32E2-46F9-928D-91241233CE83@yahoo.com.au>	<75DD1928-383A-42A6-99CE-F4CE62101C50@gecode.org>	<2C6ED0A5-A6CF-4466-AB09-FB7AD0EF8977@gmail.com>	<BANLkTik8Q-=+hJybSmW6sZpCKok=_YEK2w@mail.gmail.com>
	<AB5F97B1-A160-4F01-9F74-327F928ADF51@gecode.org>
Message-ID: <018101cbf5e2$b3a4d810$1aee8830$@se>

There might be an additional way to make the binaries smaller. After running
configure, you can edit the file

                gecode/support/config.hpp

and change the line

 

/* How to tell the compiler to really, really inline */

#define forceinline inline __attribute__ ((__always_inline__))

 

to

 

/* How to tell the compiler to really, really inline */

#define forceinline inline

 

This reduces the amount of inlining (hopefully). I do not know which
difference it makes for gcc though. For MSVC on Windows it saves 35% for the
integer module and 50% for the set module.

 

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Guido Tack
Sent: Friday, April 08, 2011 12:45 PM
To: Mikael Zayenz Lagerkvist
Cc: users at gecode.org list
Subject: Re: [gecode-users] embedded gecode

 

Mikael Zayenz Lagerkvist wrote:





On Fri, Apr 8, 2011 at 6:54 AM, Ruben Zilibowitz
<ruben.zilibowitz at gmail.com> wrote:



>> 2) My executables, even after dead code elimination and other
optimisations are very large. It's around 17 Mb. I'm not sure there's an
easy fix for this, but any ideas would be welcome, for how to reduce file
size of the executable. It seems that there are many features I'm not going
to need, so perhaps I can try to strip down the library.
>
> First of all, that sounds like you're linking statically, right?  It's
true, the Gecode libraries are a bit on the fat side.  What you can
definitely do is strip the debug symbols.  Other than that, I think the
linker already only includes the symbols that it needs, so there's not much
you can do in addition.

Yes, statically. I'm not sure there's any other way when it comes to
building iPhone apps. That 17 Mb is for a "fat" binary that supports two
architectures (armv6 and armv7). So the real figure is about half that.
Still it would be nice if it was smaller.

 

Stripping debug symbols helps a lot with size. On my machine, the size of
the dynamic libraries goes from 52 MiB to 7.1 MiB when stripped.

 

In addition, you can try and compile Gecode with -Os as optimization flag.
It won't be as fast, but it might make the executable smaller (I haven't
tried it, you'll need to experiment). Also, make sure that you are only
including the parts that you need (Gist and flatzinc might not be relevant
for example). 

 

Gist won't be compiled anyway (no Qt on iOS), and flatzinc is usually not
linked unless you actually use it.

 

On Darwin (Mac OS, iOS), the option for minimizing size is -Oz (-Os also
exists but is slightly less radical).  Here's a table of executable sizes
(x86_64 on Mac OS):

 

                                                            -O3
-O3 stripped                -Oz                  -Oz stripped    -Oz clang
-Oz clang stripped

examples/queens:        8,2M    4,9M                            7,6M    3,8M
7,3M                3,3M

tools/flatzinc/fz:                      15M     9,1M
13M     7,1M                13M                 6,2M





If you really want to make the executables as small as possible, then you
could start to remove parts that you are not using. You might want to
investigate if there is a way to make your compilation tool-chain do
automatic dead-code removal.

 

I thought the linker did that automatically, but apparently, it doesn't.
You can tell the linker explicitly to remove dead code.  On Darwin, that's
done using the -dead_strip flag (and that's possibly enabled by default in
XCode, I'm not sure).  

With -dead_strip, examples/queens goes down to 4,4M with -Oz, or 2,3M
stripped.  So, comparing -O3 nonstripped to -Oz -Wl,-dead_strip stripped, we
can reduce the binary by 70%.

 

Still, quite a lot of symbols end up in the executable that I can't explain,
e.g. most of the set library seems to be included in the queens executable.
So indeed, if your constraint model does not use set constraints, consider
compiling Gecode with --disable-set-vars.  Here are the numbers for queens
without set variables:

                                                            -Oz
-Oz stripped    -Oz -dead_strip           -Oz -dead_strip stripped

examples/queens:        6,2M    2,9M                3,2M
1,5M

 

We could probably reduce the size even further by carefully looking at the
symbols and removing unused stuff.  But anyway, this already saves 80% code
size.

 

Another thing I tried (just for fun) was to compile using clang with -O4,
enabling link-time optimization.  The smallest size I could get for queens
(but including set variables) was 2,2M, which is not too bad either,
considering that this does full optimization.

 

Cheers,

            Guido

 

-- 

Guido Tack, http://people.cs.kuleuven.be/~guido.tack/

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110408/5ac125fa/attachment-0001.htm>

From tack at gecode.org  Fri Apr  8 14:13:39 2011
From: tack at gecode.org (Guido Tack)
Date: Fri, 8 Apr 2011 14:13:39 +0200
Subject: [gecode-users] embedded gecode
In-Reply-To: <018101cbf5e2$b3a4d810$1aee8830$@se>
References: <52B500A3-2C28-455B-ABAF-7512D17AA1C6@yahoo.com.au>
	<781A9F61-B382-466C-9124-0FAA7BC7EEB2@gecode.org>
	<4F116A00-32E2-46F9-928D-91241233CE83@yahoo.com.au>
	<75DD1928-383A-42A6-99CE-F4CE62101C50@gecode.org>
	<2C6ED0A5-A6CF-4466-AB09-FB7AD0EF8977@gmail.com>
	<BANLkTik8Q-=+hJybSmW6sZpCKok=_YEK2w@mail.gmail.com>
	<AB5F97B1-A160-4F01-9F74-327F928ADF51@gecode.org>
	<018101cbf5e2$b3a4d810$1aee8830$@se>
Message-ID: <8C113BC7-6DAC-4F9E-81B6-D91EE34B6E27@gecode.org>

Christian Schulte wrote:

> There might be an additional way to make the binaries smaller. After running configure, you can edit the file
>                 gecode/support/config.hpp
> and change the line
>  
> /* How to tell the compiler to really, really inline */
> #define forceinline inline __attribute__ ((__always_inline__))
>  
> to
>  
> /* How to tell the compiler to really, really inline */
> #define forceinline inline
>  
> This reduces the amount of inlining (hopefully). I do not know which difference it makes for gcc though. For MSVC on Windows it saves 35% for the integer module and 50% for the set module.

While I'm at it... This does shrink the queens executable again, to 3,2M unstripped, 1,3M stripped (for -Oz, -dead_strip, without set variables).  As you suggest, the savings should be even bigger when the set module is included.

Cheers,
	Guido

-- 
Guido Tack, http://people.cs.kuleuven.be/~guido.tack/







From ruben.zilibowitz at gmail.com  Fri Apr  8 17:37:18 2011
From: ruben.zilibowitz at gmail.com (Ruben Zilibowitz)
Date: Sat, 9 Apr 2011 01:37:18 +1000
Subject: [gecode-users] embedded gecode
In-Reply-To: <018101cbf5e2$b3a4d810$1aee8830$@se>
References: <52B500A3-2C28-455B-ABAF-7512D17AA1C6@yahoo.com.au>	<781A9F61-B382-466C-9124-0FAA7BC7EEB2@gecode.org>	<4F116A00-32E2-46F9-928D-91241233CE83@yahoo.com.au>	<75DD1928-383A-42A6-99CE-F4CE62101C50@gecode.org>	<2C6ED0A5-A6CF-4466-AB09-FB7AD0EF8977@gmail.com>	<BANLkTik8Q-=+hJybSmW6sZpCKok=_YEK2w@mail.gmail.com>
	<AB5F97B1-A160-4F01-9F74-327F928ADF51@gecode.org>
	<018101cbf5e2$b3a4d810$1aee8830$@se>
Message-ID: <34F8F461-B66D-44CF-9EA3-C81E2B7E1C6C@gmail.com>

This is a brilliant idea! Definitely helps to reduce file size.

On another matter, I don't seem to be receiving my own emails to the list. Even though Receive your own posts to the list is set to yes. Are my posts getting to the list at all?

Ruben

On 08/04/2011, at 9:47 PM, Christian Schulte wrote:

> There might be an additional way to make the binaries smaller. After running configure, you can edit the file
>                 gecode/support/config.hpp
> and change the line
>  
> /* How to tell the compiler to really, really inline */
> #define forceinline inline __attribute__ ((__always_inline__))
>  
> to
>  
> /* How to tell the compiler to really, really inline */
> #define forceinline inline
>  
> This reduces the amount of inlining (hopefully). I do not know which difference it makes for gcc though. For MSVC on Windows it saves 35% for the integer module and 50% for the set module.
>  
> Christian
>  
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
>  
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Guido Tack
> Sent: Friday, April 08, 2011 12:45 PM
> To: Mikael Zayenz Lagerkvist
> Cc: users at gecode.org list
> Subject: Re: [gecode-users] embedded gecode
>  
> Mikael Zayenz Lagerkvist wrote:
> 
> 
> On Fri, Apr 8, 2011 at 6:54 AM, Ruben Zilibowitz <ruben.zilibowitz at gmail.com> wrote:
> 
> >> 2) My executables, even after dead code elimination and other optimisations are very large. It's around 17 Mb. I'm not sure there's an easy fix for this, but any ideas would be welcome, for how to reduce file size of the executable. It seems that there are many features I'm not going to need, so perhaps I can try to strip down the library.
> >
> > First of all, that sounds like you're linking statically, right?  It's true, the Gecode libraries are a bit on the fat side.  What you can definitely do is strip the debug symbols.  Other than that, I think the linker already only includes the symbols that it needs, so there's not much you can do in addition.
> 
> Yes, statically. I'm not sure there's any other way when it comes to building iPhone apps. That 17 Mb is for a "fat" binary that supports two architectures (armv6 and armv7). So the real figure is about half that. Still it would be nice if it was smaller.
>  
> Stripping debug symbols helps a lot with size. On my machine, the size of the dynamic libraries goes from 52 MiB to 7.1 MiB when stripped.
>  
> In addition, you can try and compile Gecode with -Os as optimization flag. It won't be as fast, but it might make the executable smaller (I haven't tried it, you'll need to experiment). Also, make sure that you are only including the parts that you need (Gist and flatzinc might not be relevant for example). 
>  
> Gist won't be compiled anyway (no Qt on iOS), and flatzinc is usually not linked unless you actually use it.
>  
> On Darwin (Mac OS, iOS), the option for minimizing size is -Oz (-Os also exists but is slightly less radical).  Here's a table of executable sizes (x86_64 on Mac OS):
>  
>                                                             -O3                  -O3 stripped                -Oz                  -Oz stripped    -Oz clang            -Oz clang stripped
> examples/queens:        8,2M    4,9M                            7,6M    3,8M                7,3M                3,3M
> tools/flatzinc/fz:                      15M     9,1M                            13M     7,1M                13M                 6,2M
> 
> 
> If you really want to make the executables as small as possible, then you could start to remove parts that you are not using. You might want to investigate if there is a way to make your compilation tool-chain do automatic dead-code removal.
>  
> I thought the linker did that automatically, but apparently, it doesn't.  You can tell the linker explicitly to remove dead code.  On Darwin, that's done using the -dead_strip flag (and that's possibly enabled by default in XCode, I'm not sure).  
> With -dead_strip, examples/queens goes down to 4,4M with -Oz, or 2,3M stripped.  So, comparing -O3 nonstripped to -Oz -Wl,-dead_strip stripped, we can reduce the binary by 70%.
>  
> Still, quite a lot of symbols end up in the executable that I can't explain, e.g. most of the set library seems to be included in the queens executable.  So indeed, if your constraint model does not use set constraints, consider compiling Gecode with --disable-set-vars.  Here are the numbers for queens without set variables:
>                                                             -Oz                  -Oz stripped    -Oz -dead_strip           -Oz -dead_strip stripped
> examples/queens:        6,2M    2,9M                3,2M                            1,5M
>  
> We could probably reduce the size even further by carefully looking at the symbols and removing unused stuff.  But anyway, this already saves 80% code size.
>  
> Another thing I tried (just for fun) was to compile using clang with -O4, enabling link-time optimization.  The smallest size I could get for queens (but including set variables) was 2,2M, which is not too bad either, considering that this does full optimization.
>  
> Cheers,
>             Guido
>  
> -- 
> Guido Tack, http://people.cs.kuleuven.be/~guido.tack/
>  
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110409/69c3e0f2/attachment-0001.htm>

From tack at gecode.org  Fri Apr  8 23:11:32 2011
From: tack at gecode.org (Guido Tack)
Date: Fri, 8 Apr 2011 23:11:32 +0200
Subject: [gecode-users] embedded gecode
In-Reply-To: <34F8F461-B66D-44CF-9EA3-C81E2B7E1C6C@gmail.com>
References: <52B500A3-2C28-455B-ABAF-7512D17AA1C6@yahoo.com.au>
	<781A9F61-B382-466C-9124-0FAA7BC7EEB2@gecode.org>
	<4F116A00-32E2-46F9-928D-91241233CE83@yahoo.com.au>
	<75DD1928-383A-42A6-99CE-F4CE62101C50@gecode.org>
	<2C6ED0A5-A6CF-4466-AB09-FB7AD0EF8977@gmail.com>
	<BANLkTik8Q-=+hJybSmW6sZpCKok=_YEK2w@mail.gmail.com>
	<AB5F97B1-A160-4F01-9F74-327F928ADF51@gecode.org>
	<018101cbf5e2$b3a4d810$1aee8830$@se>
	<34F8F461-B66D-44CF-9EA3-C81E2B7E1C6C@gmail.com>
Message-ID: <0676FCD0-204E-4276-8A85-63CF27F3CC60@gecode.org>

Ruben Zilibowitz wrote:

> This is a brilliant idea! Definitely helps to reduce file size.

What I was wondering is whether you can use our Makefiles to build Gecode for iOS, or do you have to turn the whole of Gecode into an XCode project?

> On another matter, I don't seem to be receiving my own emails to the list. Even though Receive your own posts to the list is set to yes. Are my posts getting to the list at all?

They are.  You can always check the archives at
http://news.gmane.org/gmane.comp.lib.gecode.user

Guido

> 
> Ruben
> 
> On 08/04/2011, at 9:47 PM, Christian Schulte wrote:
> 
>> There might be an additional way to make the binaries smaller. After running configure, you can edit the file
>>                 gecode/support/config.hpp
>> and change the line
>>  
>> /* How to tell the compiler to really, really inline */
>> #define forceinline inline __attribute__ ((__always_inline__))
>>  
>> to
>>  
>> /* How to tell the compiler to really, really inline */
>> #define forceinline inline
>>  
>> This reduces the amount of inlining (hopefully). I do not know which difference it makes for gcc though. For MSVC on Windows it saves 35% for the integer module and 50% for the set module.
>>  
>> Christian
>>  
>> --
>> Christian Schulte, www.ict.kth.se/~cschulte/
>>  
>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Guido Tack
>> Sent: Friday, April 08, 2011 12:45 PM
>> To: Mikael Zayenz Lagerkvist
>> Cc: users at gecode.org list
>> Subject: Re: [gecode-users] embedded gecode
>>  
>> Mikael Zayenz Lagerkvist wrote:
>> 
>> 
>> On Fri, Apr 8, 2011 at 6:54 AM, Ruben Zilibowitz <ruben.zilibowitz at gmail.com> wrote:
>> 
>> >> 2) My executables, even after dead code elimination and other optimisations are very large. It's around 17 Mb. I'm not sure there's an easy fix for this, but any ideas would be welcome, for how to reduce file size of the executable. It seems that there are many features I'm not going to need, so perhaps I can try to strip down the library.
>> >
>> > First of all, that sounds like you're linking statically, right?  It's true, the Gecode libraries are a bit on the fat side.  What you can definitely do is strip the debug symbols.  Other than that, I think the linker already only includes the symbols that it needs, so there's not much you can do in addition.
>> 
>> Yes, statically. I'm not sure there's any other way when it comes to building iPhone apps. That 17 Mb is for a "fat" binary that supports two architectures (armv6 and armv7). So the real figure is about half that. Still it would be nice if it was smaller.
>>  
>> Stripping debug symbols helps a lot with size. On my machine, the size of the dynamic libraries goes from 52 MiB to 7.1 MiB when stripped.
>>  
>> In addition, you can try and compile Gecode with -Os as optimization flag. It won't be as fast, but it might make the executable smaller (I haven't tried it, you'll need to experiment). Also, make sure that you are only including the parts that you need (Gist and flatzinc might not be relevant for example). 
>>  
>> Gist won't be compiled anyway (no Qt on iOS), and flatzinc is usually not linked unless you actually use it.
>>  
>> On Darwin (Mac OS, iOS), the option for minimizing size is -Oz (-Os also exists but is slightly less radical).  Here's a table of executable sizes (x86_64 on Mac OS):
>>  
>>                                                             -O3                  -O3 stripped                -Oz                  -Oz stripped    -Oz clang            -Oz clang stripped
>> examples/queens:        8,2M    4,9M                            7,6M    3,8M                7,3M                3,3M
>> tools/flatzinc/fz:                      15M     9,1M                            13M     7,1M                13M                 6,2M
>> 
>> 
>> If you really want to make the executables as small as possible, then you could start to remove parts that you are not using. You might want to investigate if there is a way to make your compilation tool-chain do automatic dead-code removal.
>>  
>> I thought the linker did that automatically, but apparently, it doesn't.  You can tell the linker explicitly to remove dead code.  On Darwin, that's done using the -dead_strip flag (and that's possibly enabled by default in XCode, I'm not sure).  
>> With -dead_strip, examples/queens goes down to 4,4M with -Oz, or 2,3M stripped.  So, comparing -O3 nonstripped to -Oz -Wl,-dead_strip stripped, we can reduce the binary by 70%.
>>  
>> Still, quite a lot of symbols end up in the executable that I can't explain, e.g. most of the set library seems to be included in the queens executable.  So indeed, if your constraint model does not use set constraints, consider compiling Gecode with --disable-set-vars.  Here are the numbers for queens without set variables:
>>                                                             -Oz                  -Oz stripped    -Oz -dead_strip           -Oz -dead_strip stripped
>> examples/queens:        6,2M    2,9M                3,2M                            1,5M
>>  
>> We could probably reduce the size even further by carefully looking at the symbols and removing unused stuff.  But anyway, this already saves 80% code size.
>>  
>> Another thing I tried (just for fun) was to compile using clang with -O4, enabling link-time optimization.  The smallest size I could get for queens (but including set variables) was 2,2M, which is not too bad either, considering that this does full optimization.
>>  
>> Cheers,
>>             Guido
>>  
>> -- 
>> Guido Tack, http://people.cs.kuleuven.be/~guido.tack/
>>  
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-- 
Guido Tack, http://people.cs.kuleuven.be/~guido.tack/




-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110408/4c5bb897/attachment-0001.htm>

From ruben.zilibowitz at gmail.com  Sat Apr  9 02:55:37 2011
From: ruben.zilibowitz at gmail.com (Ruben Zilibowitz)
Date: Sat, 9 Apr 2011 10:55:37 +1000
Subject: [gecode-users] embedded gecode
In-Reply-To: <0676FCD0-204E-4276-8A85-63CF27F3CC60@gecode.org>
References: <52B500A3-2C28-455B-ABAF-7512D17AA1C6@yahoo.com.au>
	<781A9F61-B382-466C-9124-0FAA7BC7EEB2@gecode.org>
	<4F116A00-32E2-46F9-928D-91241233CE83@yahoo.com.au>
	<75DD1928-383A-42A6-99CE-F4CE62101C50@gecode.org>
	<2C6ED0A5-A6CF-4466-AB09-FB7AD0EF8977@gmail.com>
	<BANLkTik8Q-=+hJybSmW6sZpCKok=_YEK2w@mail.gmail.com>
	<AB5F97B1-A160-4F01-9F74-327F928ADF51@gecode.org>
	<018101cbf5e2$b3a4d810$1aee8830$@se>
	<34F8F461-B66D-44CF-9EA3-C81E2B7E1C6C@gmail.com>
	<0676FCD0-204E-4276-8A85-63CF27F3CC60@gecode.org>
Message-ID: <7CF0B187-EF7D-4BB9-9215-F07819205893@gmail.com>


On 09/04/2011, at 7:11 AM, Guido Tack wrote:

> Ruben Zilibowitz wrote:
> 
>> This is a brilliant idea! Definitely helps to reduce file size.
> 
> What I was wondering is whether you can use our Makefiles to build Gecode for iOS, or do you have to turn the whole of Gecode into an XCode project?

I believe I first did:
./configure --enable-static --disable-shared --disable-gist --disable-qt
in order to generate the config.hpp file

Then it was just a matter of adding the gecode folder with all the source code to Xcode. Then I removed some files I didn't need and were causing errors. And that was it.

>> On another matter, I don't seem to be receiving my own emails to the list. Even though Receive your own posts to the list is set to yes. Are my posts getting to the list at all?
> 
> They are.  You can always check the archives at
> http://news.gmane.org/gmane.comp.lib.gecode.user

Ok.

Ruben

> Guido
> 
>> 
>> Ruben
>> 
>> On 08/04/2011, at 9:47 PM, Christian Schulte wrote:
>> 
>>> There might be an additional way to make the binaries smaller. After running configure, you can edit the file
>>>                 gecode/support/config.hpp
>>> and change the line
>>>  
>>> /* How to tell the compiler to really, really inline */
>>> #define forceinline inline __attribute__ ((__always_inline__))
>>>  
>>> to
>>>  
>>> /* How to tell the compiler to really, really inline */
>>> #define forceinline inline
>>>  
>>> This reduces the amount of inlining (hopefully). I do not know which difference it makes for gcc though. For MSVC on Windows it saves 35% for the integer module and 50% for the set module.
>>>  
>>> Christian
>>>  
>>> --
>>> Christian Schulte, www.ict.kth.se/~cschulte/
>>>  
>>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Guido Tack
>>> Sent: Friday, April 08, 2011 12:45 PM
>>> To: Mikael Zayenz Lagerkvist
>>> Cc: users at gecode.org list
>>> Subject: Re: [gecode-users] embedded gecode
>>>  
>>> Mikael Zayenz Lagerkvist wrote:
>>> 
>>> 
>>> On Fri, Apr 8, 2011 at 6:54 AM, Ruben Zilibowitz <ruben.zilibowitz at gmail.com> wrote:
>>> 
>>> >> 2) My executables, even after dead code elimination and other optimisations are very large. It's around 17 Mb. I'm not sure there's an easy fix for this, but any ideas would be welcome, for how to reduce file size of the executable. It seems that there are many features I'm not going to need, so perhaps I can try to strip down the library.
>>> >
>>> > First of all, that sounds like you're linking statically, right?  It's true, the Gecode libraries are a bit on the fat side.  What you can definitely do is strip the debug symbols.  Other than that, I think the linker already only includes the symbols that it needs, so there's not much you can do in addition.
>>> 
>>> Yes, statically. I'm not sure there's any other way when it comes to building iPhone apps. That 17 Mb is for a "fat" binary that supports two architectures (armv6 and armv7). So the real figure is about half that. Still it would be nice if it was smaller.
>>>  
>>> Stripping debug symbols helps a lot with size. On my machine, the size of the dynamic libraries goes from 52 MiB to 7.1 MiB when stripped.
>>>  
>>> In addition, you can try and compile Gecode with -Os as optimization flag. It won't be as fast, but it might make the executable smaller (I haven't tried it, you'll need to experiment). Also, make sure that you are only including the parts that you need (Gist and flatzinc might not be relevant for example). 
>>>  
>>> Gist won't be compiled anyway (no Qt on iOS), and flatzinc is usually not linked unless you actually use it.
>>>  
>>> On Darwin (Mac OS, iOS), the option for minimizing size is -Oz (-Os also exists but is slightly less radical).  Here's a table of executable sizes (x86_64 on Mac OS):
>>>  
>>>                                                             -O3                  -O3 stripped                -Oz                  -Oz stripped    -Oz clang            -Oz clang stripped
>>> examples/queens:        8,2M    4,9M                            7,6M    3,8M                7,3M                3,3M
>>> tools/flatzinc/fz:                      15M     9,1M                            13M     7,1M                13M                 6,2M
>>> 
>>> 
>>> If you really want to make the executables as small as possible, then you could start to remove parts that you are not using. You might want to investigate if there is a way to make your compilation tool-chain do automatic dead-code removal.
>>>  
>>> I thought the linker did that automatically, but apparently, it doesn't.  You can tell the linker explicitly to remove dead code.  On Darwin, that's done using the -dead_strip flag (and that's possibly enabled by default in XCode, I'm not sure).  
>>> With -dead_strip, examples/queens goes down to 4,4M with -Oz, or 2,3M stripped.  So, comparing -O3 nonstripped to -Oz -Wl,-dead_strip stripped, we can reduce the binary by 70%.
>>>  
>>> Still, quite a lot of symbols end up in the executable that I can't explain, e.g. most of the set library seems to be included in the queens executable.  So indeed, if your constraint model does not use set constraints, consider compiling Gecode with --disable-set-vars.  Here are the numbers for queens without set variables:
>>>                                                             -Oz                  -Oz stripped    -Oz -dead_strip           -Oz -dead_strip stripped
>>> examples/queens:        6,2M    2,9M                3,2M                            1,5M
>>>  
>>> We could probably reduce the size even further by carefully looking at the symbols and removing unused stuff.  But anyway, this already saves 80% code size.
>>>  
>>> Another thing I tried (just for fun) was to compile using clang with -O4, enabling link-time optimization.  The smallest size I could get for queens (but including set variables) was 2,2M, which is not too bad either, considering that this does full optimization.
>>>  
>>> Cheers,
>>>             Guido
>>>  
>>> -- 
>>> Guido Tack, http://people.cs.kuleuven.be/~guido.tack/
>>>  
>>> _______________________________________________
>>> Gecode users mailing list
>>> users at gecode.org
>>> https://www.gecode.org/mailman/listinfo/gecode-users
>> 
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
> 
> -- 
> Guido Tack, http://people.cs.kuleuven.be/~guido.tack/
> 
> 
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110409/5e493814/attachment-0001.htm>

From ruben.zilibowitz at gmail.com  Sat Apr  9 02:56:56 2011
From: ruben.zilibowitz at gmail.com (Ruben Zilibowitz)
Date: Sat, 9 Apr 2011 10:56:56 +1000
Subject: [gecode-users] embedded gecode
In-Reply-To: <7CF0B187-EF7D-4BB9-9215-F07819205893@gmail.com>
References: <52B500A3-2C28-455B-ABAF-7512D17AA1C6@yahoo.com.au>
	<781A9F61-B382-466C-9124-0FAA7BC7EEB2@gecode.org>
	<4F116A00-32E2-46F9-928D-91241233CE83@yahoo.com.au>
	<75DD1928-383A-42A6-99CE-F4CE62101C50@gecode.org>
	<2C6ED0A5-A6CF-4466-AB09-FB7AD0EF8977@gmail.com>
	<BANLkTik8Q-=+hJybSmW6sZpCKok=_YEK2w@mail.gmail.com>
	<AB5F97B1-A160-4F01-9F74-327F928ADF51@gecode.org>
	<018101cbf5e2$b3a4d810$1aee8830$@se>
	<34F8F461-B66D-44CF-9EA3-C81E2B7E1C6C@gmail.com>
	<0676FCD0-204E-4276-8A85-63CF27F3CC60@gecode.org>
	<7CF0B187-EF7D-4BB9-9215-F07819205893@gmail.com>
Message-ID: <B0470054-D20B-43E1-AB96-EBAE89DBE13E@gmail.com>


On 09/04/2011, at 10:55 AM, Ruben Zilibowitz wrote:

> 
> On 09/04/2011, at 7:11 AM, Guido Tack wrote:
> 
>> Ruben Zilibowitz wrote:
>> 
>>> This is a brilliant idea! Definitely helps to reduce file size.
>> 
>> What I was wondering is whether you can use our Makefiles to build Gecode for iOS, or do you have to turn the whole of Gecode into an XCode project?
> 
> I believe I first did:
> ./configure --enable-static --disable-shared --disable-gist --disable-qt
> in order to generate the config.hpp file

edit: I also ran make

> 
> Then it was just a matter of adding the gecode folder with all the source code to Xcode. Then I removed some files I didn't need and were causing errors. And that was it.
> 
>>> On another matter, I don't seem to be receiving my own emails to the list. Even though Receive your own posts to the list is set to yes. Are my posts getting to the list at all?
>> 
>> They are.  You can always check the archives at
>> http://news.gmane.org/gmane.comp.lib.gecode.user
> 
> Ok.
> 
> Ruben
> 
>> Guido
>> 
>>> 
>>> Ruben
>>> 
>>> On 08/04/2011, at 9:47 PM, Christian Schulte wrote:
>>> 
>>>> There might be an additional way to make the binaries smaller. After running configure, you can edit the file
>>>>                 gecode/support/config.hpp
>>>> and change the line
>>>>  
>>>> /* How to tell the compiler to really, really inline */
>>>> #define forceinline inline __attribute__ ((__always_inline__))
>>>>  
>>>> to
>>>>  
>>>> /* How to tell the compiler to really, really inline */
>>>> #define forceinline inline
>>>>  
>>>> This reduces the amount of inlining (hopefully). I do not know which difference it makes for gcc though. For MSVC on Windows it saves 35% for the integer module and 50% for the set module.
>>>>  
>>>> Christian
>>>>  
>>>> --
>>>> Christian Schulte, www.ict.kth.se/~cschulte/
>>>>  
>>>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Guido Tack
>>>> Sent: Friday, April 08, 2011 12:45 PM
>>>> To: Mikael Zayenz Lagerkvist
>>>> Cc: users at gecode.org list
>>>> Subject: Re: [gecode-users] embedded gecode
>>>>  
>>>> Mikael Zayenz Lagerkvist wrote:
>>>> 
>>>> 
>>>> On Fri, Apr 8, 2011 at 6:54 AM, Ruben Zilibowitz <ruben.zilibowitz at gmail.com> wrote:
>>>> 
>>>> >> 2) My executables, even after dead code elimination and other optimisations are very large. It's around 17 Mb. I'm not sure there's an easy fix for this, but any ideas would be welcome, for how to reduce file size of the executable. It seems that there are many features I'm not going to need, so perhaps I can try to strip down the library.
>>>> >
>>>> > First of all, that sounds like you're linking statically, right?  It's true, the Gecode libraries are a bit on the fat side.  What you can definitely do is strip the debug symbols.  Other than that, I think the linker already only includes the symbols that it needs, so there's not much you can do in addition.
>>>> 
>>>> Yes, statically. I'm not sure there's any other way when it comes to building iPhone apps. That 17 Mb is for a "fat" binary that supports two architectures (armv6 and armv7). So the real figure is about half that. Still it would be nice if it was smaller.
>>>>  
>>>> Stripping debug symbols helps a lot with size. On my machine, the size of the dynamic libraries goes from 52 MiB to 7.1 MiB when stripped.
>>>>  
>>>> In addition, you can try and compile Gecode with -Os as optimization flag. It won't be as fast, but it might make the executable smaller (I haven't tried it, you'll need to experiment). Also, make sure that you are only including the parts that you need (Gist and flatzinc might not be relevant for example). 
>>>>  
>>>> Gist won't be compiled anyway (no Qt on iOS), and flatzinc is usually not linked unless you actually use it.
>>>>  
>>>> On Darwin (Mac OS, iOS), the option for minimizing size is -Oz (-Os also exists but is slightly less radical).  Here's a table of executable sizes (x86_64 on Mac OS):
>>>>  
>>>>                                                             -O3                  -O3 stripped                -Oz                  -Oz stripped    -Oz clang            -Oz clang stripped
>>>> examples/queens:        8,2M    4,9M                            7,6M    3,8M                7,3M                3,3M
>>>> tools/flatzinc/fz:                      15M     9,1M                            13M     7,1M                13M                 6,2M
>>>> 
>>>> 
>>>> If you really want to make the executables as small as possible, then you could start to remove parts that you are not using. You might want to investigate if there is a way to make your compilation tool-chain do automatic dead-code removal.
>>>>  
>>>> I thought the linker did that automatically, but apparently, it doesn't.  You can tell the linker explicitly to remove dead code.  On Darwin, that's done using the -dead_strip flag (and that's possibly enabled by default in XCode, I'm not sure).  
>>>> With -dead_strip, examples/queens goes down to 4,4M with -Oz, or 2,3M stripped.  So, comparing -O3 nonstripped to -Oz -Wl,-dead_strip stripped, we can reduce the binary by 70%.
>>>>  
>>>> Still, quite a lot of symbols end up in the executable that I can't explain, e.g. most of the set library seems to be included in the queens executable.  So indeed, if your constraint model does not use set constraints, consider compiling Gecode with --disable-set-vars.  Here are the numbers for queens without set variables:
>>>>                                                             -Oz                  -Oz stripped    -Oz -dead_strip           -Oz -dead_strip stripped
>>>> examples/queens:        6,2M    2,9M                3,2M                            1,5M
>>>>  
>>>> We could probably reduce the size even further by carefully looking at the symbols and removing unused stuff.  But anyway, this already saves 80% code size.
>>>>  
>>>> Another thing I tried (just for fun) was to compile using clang with -O4, enabling link-time optimization.  The smallest size I could get for queens (but including set variables) was 2,2M, which is not too bad either, considering that this does full optimization.
>>>>  
>>>> Cheers,
>>>>             Guido
>>>>  
>>>> -- 
>>>> Guido Tack, http://people.cs.kuleuven.be/~guido.tack/
>>>>  
>>>> _______________________________________________
>>>> Gecode users mailing list
>>>> users at gecode.org
>>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>> 
>>> _______________________________________________
>>> Gecode users mailing list
>>> users at gecode.org
>>> https://www.gecode.org/mailman/listinfo/gecode-users
>> 
>> -- 
>> Guido Tack, http://people.cs.kuleuven.be/~guido.tack/
>> 
>> 
>> 
>> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110409/3a26275e/attachment-0001.htm>

From jonathanskovhus at gmail.com  Sun Apr 10 09:42:25 2011
From: jonathanskovhus at gmail.com (Jonathan Skovhus Andersen)
Date: Sun, 10 Apr 2011 09:42:25 +0200
Subject: [gecode-users] TSP example
Message-ID: <BANLkTimz=MgrRVjE1c5YDEYH-hN7mZp+Hw@mail.gmail.com>

*Hi,*

I don't understand what this snippet of code from the TSP example does - can
anyone explain?

*// Just assume that the circle starts forwards*
*    {*
*      IntVar p0(*this, 0, n-1);*
*      element(*this, succ, p0, 0);*
*      rel(*this, p0, IRT_LE, succ[0]);*
*    }*
*
*
It doesn't seem to affect my results if I remove it.

*Regards,*
*Jonathan Skovhus Andersen.*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110410/3744293d/attachment.htm>

From ruben.zilibowitz at gmail.com  Sun Apr 10 10:02:41 2011
From: ruben.zilibowitz at gmail.com (Ruben Zilibowitz)
Date: Sun, 10 Apr 2011 18:02:41 +1000
Subject: [gecode-users] boolean relation optimisation
Message-ID: <63F54A26-B678-4294-A802-5BD83270E0C5@gmail.com>

Suppose I have a large number of boolean relations I wish to satisfy. Call them B1, B2, ..., Bn.
Which of the following is the recommended way to implement this in a Gecode Space object?

// method 1
rel(*this,B1);
rel(*this,B2);
...
rel(*this,Bn);
/////////

or,

// method 2
rel(*this, B1 && B2 && ... && Bn);
/////////

Regards,

Ruben



From tack at gecode.org  Sun Apr 10 10:20:17 2011
From: tack at gecode.org (Guido Tack)
Date: Sun, 10 Apr 2011 10:20:17 +0200
Subject: [gecode-users] boolean relation optimisation
In-Reply-To: <63F54A26-B678-4294-A802-5BD83270E0C5@gmail.com>
References: <63F54A26-B678-4294-A802-5BD83270E0C5@gmail.com>
Message-ID: <6C59294F-EAE1-4DCB-BA65-B77405D280BB@gecode.org>

Ruben Zilibowitz wrote:

> Suppose I have a large number of boolean relations I wish to satisfy. Call them B1, B2, ..., Bn.
> Which of the following is the recommended way to implement this in a Gecode Space object?
> 
> // method 1
> rel(*this,B1);
> rel(*this,B2);
> ...
> rel(*this,Bn);
> /////////
> 
> or,
> 
> // method 2
> rel(*this, B1 && B2 && ... && Bn);
> /////////

It's exactly the same.

Cheers,
	Guido

-- 
Guido Tack, http://people.cs.kuleuven.be/~guido.tack/






From cschulte at kth.se  Sun Apr 10 13:15:46 2011
From: cschulte at kth.se (Christian Schulte)
Date: Sun, 10 Apr 2011 13:15:46 +0200
Subject: [gecode-users] TSP example
In-Reply-To: <BANLkTimz=MgrRVjE1c5YDEYH-hN7mZp+Hw@mail.gmail.com>
References: <BANLkTimz=MgrRVjE1c5YDEYH-hN7mZp+Hw@mail.gmail.com>
Message-ID: <007901cbf770$a488fcf0$ed9af6d0$@kth.se>

This breaks a symmetry (a classic technique in CP) by ordering the first and
second node on the route: the circle could either start forward or backwards
but that does not matter. It might reduce the search space.

 

Christian

--

Christian Schulte, KTH, web.it.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Jonathan Skovhus Andersen
Sent: Sunday, April 10, 2011 9:42 AM
To: users at gecode.org
Subject: [gecode-users] TSP example

 

Hi,

 

I don't understand what this snippet of code from the TSP example does - can
anyone explain?   

 

// Just assume that the circle starts forwards

    {

      IntVar p0(*this, 0, n-1);

      element(*this, succ, p0, 0);

      rel(*this, p0, IRT_LE, succ[0]);

    }

 

It doesn't seem to affect my results if I remove it.

 

Regards,

Jonathan Skovhus Andersen.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110410/2358cd68/attachment.htm>

From tack at gecode.org  Sun Apr 10 14:46:26 2011
From: tack at gecode.org (Guido Tack)
Date: Sun, 10 Apr 2011 14:46:26 +0200
Subject: [gecode-users] embedded gecode
In-Reply-To: <B0470054-D20B-43E1-AB96-EBAE89DBE13E@gmail.com>
References: <52B500A3-2C28-455B-ABAF-7512D17AA1C6@yahoo.com.au>
	<781A9F61-B382-466C-9124-0FAA7BC7EEB2@gecode.org>
	<4F116A00-32E2-46F9-928D-91241233CE83@yahoo.com.au>
	<75DD1928-383A-42A6-99CE-F4CE62101C50@gecode.org>
	<2C6ED0A5-A6CF-4466-AB09-FB7AD0EF8977@gmail.com>
	<BANLkTik8Q-=+hJybSmW6sZpCKok=_YEK2w@mail.gmail.com>
	<AB5F97B1-A160-4F01-9F74-327F928ADF51@gecode.org>
	<018101cbf5e2$b3a4d810$1aee8830$@se>
	<34F8F461-B66D-44CF-9EA3-C81E2B7E1C6C@gmail.com>
	<0676FCD0-204E-4276-8A85-63CF27F3CC60@gecode.org>
	<7CF0B187-EF7D-4BB9-9215-F07819205893@gmail.com>
	<B0470054-D20B-43E1-AB96-EBAE89DBE13E@gmail.com>
Message-ID: <CA929ABD-6C7A-4A61-91BC-E40906BC8FE3@gecode.org>

Ruben Zilibowitz wrote:

> 
> On 09/04/2011, at 10:55 AM, Ruben Zilibowitz wrote:
> 
>> 
>> On 09/04/2011, at 7:11 AM, Guido Tack wrote:
>> 
>>> Ruben Zilibowitz wrote:
>>> 
>>>> This is a brilliant idea! Definitely helps to reduce file size.
>>> 
>>> What I was wondering is whether you can use our Makefiles to build Gecode for iOS, or do you have to turn the whole of Gecode into an XCode project?
>> 
>> I believe I first did:
>> ./configure --enable-static --disable-shared --disable-gist --disable-qt
>> in order to generate the config.hpp file
> 
> edit: I also ran make
> 
>> 
>> Then it was just a matter of adding the gecode folder with all the source code to Xcode. Then I removed some files I didn't need and were causing errors. And that was it.

Right, sounds more or less straightforward.  I googled a bit and tried some things, and it's actually quite easy to build Gecode for iOS directly using make.  This might be easier to maintain than always having to re-import Gecode into XCode.  All you have to do is define some environment variables (maybe adapt the paths if your installation is somewhere else):

export CFLAGS="-mno-thumb -arch armv6 -arch armv7 -isysroot /Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS4.3.sdk"
export CXXFLAGS=$CFLAGS
export CC=/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/gcc-4.2
export CXX=/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/g++-4.2
/configure --host=arm-apple-darwin --build=i686-apple-darwin --enable-static --disable-shared --disable-qt

When you run make, this will produce the fat static libraries for armv6/armv7.  To build the same for the simulator, you should just have to change the options accordingly.  Unfortunately, it's not that straightforward to pack the device and simulator libraries into one three-platform lib (because lipo doesn't understand static libraries), so you'll have to fix that manually.

We'll probably add a configure option --small-codesize or similar to enable -Os or -Oz and use less aggressive inlining.

Cheers,
	Guido

-- 
Guido Tack, http://people.cs.kuleuven.be/~guido.tack/



From ruben.zilibowitz at gmail.com  Sun Apr 10 16:08:42 2011
From: ruben.zilibowitz at gmail.com (Ruben Zilibowitz)
Date: Mon, 11 Apr 2011 00:08:42 +1000
Subject: [gecode-users] embedded gecode
In-Reply-To: <CA929ABD-6C7A-4A61-91BC-E40906BC8FE3@gecode.org>
References: <52B500A3-2C28-455B-ABAF-7512D17AA1C6@yahoo.com.au>
	<781A9F61-B382-466C-9124-0FAA7BC7EEB2@gecode.org>
	<4F116A00-32E2-46F9-928D-91241233CE83@yahoo.com.au>
	<75DD1928-383A-42A6-99CE-F4CE62101C50@gecode.org>
	<2C6ED0A5-A6CF-4466-AB09-FB7AD0EF8977@gmail.com>
	<BANLkTik8Q-=+hJybSmW6sZpCKok=_YEK2w@mail.gmail.com>
	<AB5F97B1-A160-4F01-9F74-327F928ADF51@gecode.org>
	<018101cbf5e2$b3a4d810$1aee8830$@se>
	<34F8F461-B66D-44CF-9EA3-C81E2B7E1C6C@gmail.com>
	<0676FCD0-204E-4276-8A85-63CF27F3CC60@gecode.org>
	<7CF0B187-EF7D-4BB9-9215-F07819205893@gmail.com>
	<B0470054-D20B-43E1-AB96-EBAE89DBE13E@gmail.com>
	<CA929ABD-6C7A-4A61-91BC-E40906BC8FE3@gecode.org>
Message-ID: <26C1C8D4-C2A1-45F1-B2A2-50B08288715B@gmail.com>

> We'll probably add a configure option --small-codesize or similar to enable -Os or -Oz and use less aggressive inlining.

On that point. I found that turning off inlining actually has a big effect on speed. More than I expected. My code ran about a third slower without inlining. I'm thinking that the larger file size might be better, after all.

Ruben



From tack at gecode.org  Mon Apr 11 10:52:13 2011
From: tack at gecode.org (Guido Tack)
Date: Mon, 11 Apr 2011 10:52:13 +0200
Subject: [gecode-users] embedded gecode
In-Reply-To: <26C1C8D4-C2A1-45F1-B2A2-50B08288715B@gmail.com>
References: <52B500A3-2C28-455B-ABAF-7512D17AA1C6@yahoo.com.au>
	<781A9F61-B382-466C-9124-0FAA7BC7EEB2@gecode.org>
	<4F116A00-32E2-46F9-928D-91241233CE83@yahoo.com.au>
	<75DD1928-383A-42A6-99CE-F4CE62101C50@gecode.org>
	<2C6ED0A5-A6CF-4466-AB09-FB7AD0EF8977@gmail.com>
	<BANLkTik8Q-=+hJybSmW6sZpCKok=_YEK2w@mail.gmail.com>
	<AB5F97B1-A160-4F01-9F74-327F928ADF51@gecode.org>
	<018101cbf5e2$b3a4d810$1aee8830$@se>
	<34F8F461-B66D-44CF-9EA3-C81E2B7E1C6C@gmail.com>
	<0676FCD0-204E-4276-8A85-63CF27F3CC60@gecode.org>
	<7CF0B187-EF7D-4BB9-9215-F07819205893@gmail.com>
	<B0470054-D20B-43E1-AB96-EBAE89DBE13E@gmail.com>
	<CA929ABD-6C7A-4A61-91BC-E40906BC8FE3@gecode.org>
	<26C1C8D4-C2A1-45F1-B2A2-50B08288715B@gmail.com>
Message-ID: <46350233-9963-451C-9C3A-549CBE82D8CE@gecode.org>

Ruben Zilibowitz wrote:

>> We'll probably add a configure option --small-codesize or similar to enable -Os or -Oz and use less aggressive inlining.
> 
> On that point. I found that turning off inlining actually has a big effect on speed. More than I expected. My code ran about a third slower without inlining. I'm thinking that the larger file size might be better, after all.

Thanks, that's interesting.  So it'll just be -Os, then.

Cheers,
	Guido

-- 
Guido Tack, http://people.cs.kuleuven.be/~guido.tack/



From changbin.liu at gmail.com  Tue Apr 12 00:24:44 2011
From: changbin.liu at gmail.com (Changbin Liu)
Date: Mon, 11 Apr 2011 18:24:44 -0400
Subject: [gecode-users] question on using Script and Option to run solver
In-Reply-To: <BANLkTi=g8bSQ6YrEoPx_HDiLi7WqKfSdWA@mail.gmail.com>
References: <BANLkTi=VmncJkN2wu8COW9Ude8C92QuKOQ@mail.gmail.com>
	<BANLkTi=g8bSQ6YrEoPx_HDiLi7WqKfSdWA@mail.gmail.com>
Message-ID: <BANLkTi=uJJQJnOtHdAnE2NcmSchAOPWW4g@mail.gmail.com>

Many thanks~~~ It works!

On Fri, Apr 8, 2011 at 1:23 AM, Mikael Zayenz Lagerkvist
<zayenz at gmail.com>wrote:

> The easiest way if you want to use the Script support, is to subclass the
> Options class with your particular data included. See the examples for
> details (e.g., car-sequencing.cpp) and Chapter 11 of Modeling and
> Programming with Gecode..
>
> Cheers,
> Mikael
>
> 2011/4/8 Changbin Liu <changbin.liu at gmail.com>
>
>> Hi, Folks
>>
>>    I am trying to run Gecode solver using code like:
>>
>> *Script::run<SendMostMoney,BAB,Options>(opt);*
>>
>> This is from one example in the documentation. In this code, it is assumed
>> that solver SendMoreMoney is constructed based on the only parameter Option
>> "opt".
>>
>> Here come the problem: what if my customized solver needs more parameters
>> for constructor beside Option "opt"?  How should I modify above code to run
>> the solver?
>>
>> Many thanks
>>
>> --
>> --------------------------------------------
>> Changbin Liu
>> Computer & Information Science Department
>> University of Pennsylvania
>> Philadelphia, PA
>> U.S.
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
>>
>
>
> --
> Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/
>



-- 
--------------------------------------------
Changbin Liu
Computer & Information Science Department
University of Pennsylvania
Philadelphia, PA
U.S.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110411/29be217e/attachment.htm>

From ruben.zilibowitz at gmail.com  Tue Apr 12 09:12:51 2011
From: ruben.zilibowitz at gmail.com (Ruben Zilibowitz)
Date: Tue, 12 Apr 2011 17:12:51 +1000
Subject: [gecode-users] if-then-else
Message-ID: <0CB01AC3-C695-4E2C-8774-4CB088C2BC86@gmail.com>

Suppose I have a BoolExpr called B. And I have two LinExpr: X and Y. I want a LinExpr that is equivalent to:
if (B) then X else Y
However I don't see support for an if-then-else construct. Is there a way to implement this?

Ruben



From tack at gecode.org  Tue Apr 12 09:22:30 2011
From: tack at gecode.org (Guido Tack)
Date: Tue, 12 Apr 2011 09:22:30 +0200
Subject: [gecode-users] if-then-else
In-Reply-To: <0CB01AC3-C695-4E2C-8774-4CB088C2BC86@gmail.com>
References: <0CB01AC3-C695-4E2C-8774-4CB088C2BC86@gmail.com>
Message-ID: <5F74C015-5D6E-47CE-83C8-DD12719B46C3@gecode.org>

Ruben Zilibowitz wrote:

> Suppose I have a BoolExpr called B. And I have two LinExpr: X and Y. I want a LinExpr that is equivalent to:
> if (B) then X else Y
> However I don't see support for an if-then-else construct. Is there a way to implement this?

You have to decompose it into implications:
rel(home, B >> X);
rel(home, (!B) >> Y);

Cheers,
	Guido

-- 
Guido Tack, http://people.cs.kuleuven.be/~guido.tack/






From changbin.liu at gmail.com  Fri Apr 15 01:18:25 2011
From: changbin.liu at gmail.com (Changbin Liu)
Date: Thu, 14 Apr 2011 19:18:25 -0400
Subject: [gecode-users] customize IntVar
Message-ID: <BANLkTinYdYRC9=2jd=_P2GUvEM0L7cH4dQ@mail.gmail.com>

Hi folks,

    I am trying to customize existing class IntVar by adding some more data
member into it. My current way is to subclass from IntVar (say the new class
name is MyIntVar) and write constructors and new member functions to
manipulate the new data. This works well.

However, if I want to use IntVarArray and IntVarArgs to hold MyIntVar, all
MyIntVar elements seems are converted to IntVar.

For example, in the code

MyIntVar myIntVar(*this, 0, 10);
IntVarArgs intVarArgs;
intVarArgs << myIntVar;

I observe that intVarArgs[0] is IntVar type. I can not even use dynamic_cast
to cast it to MyIntVar.

If I do it another way by implementing MyIntVarArray and MyIntVarArgs for
MyIntVar following the document "Modeling and Programming with Gecode" (this
corresponds to IntVarArray and IntVarArgs for IntVar), this works well. But
the problem is that constraints posting (e.g. sum, "+") do not work on new
MyIntVarArray and MyIntVarArgs.

Basically, my question is what is the easiest to way to slightly modify
IntVar to adapt to user needs.

Many thanks
-- 
--------------------------------------------
Changbin Liu
Computer & Information Science Department
University of Pennsylvania
Philadelphia, PA
U.S.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110414/e1f014a4/attachment.htm>

From zayenz at gmail.com  Fri Apr 15 06:52:43 2011
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Fri, 15 Apr 2011 06:52:43 +0200
Subject: [gecode-users] customize IntVar
In-Reply-To: <BANLkTinYdYRC9=2jd=_P2GUvEM0L7cH4dQ@mail.gmail.com>
References: <BANLkTinYdYRC9=2jd=_P2GUvEM0L7cH4dQ@mail.gmail.com>
Message-ID: <BANLkTineCwi=K-HuozT_iXeC4Snkk7oCxw@mail.gmail.com>

Hi,

In almost all cases it is not a good idea to try to extend the IntVar
classes, and the system is not designed for this to be done. It is much
better to store any additional data that you would like to associate with
the variables in a separate data-structure.

Cheers,
Mikael

2011/4/15 Changbin Liu <changbin.liu at gmail.com>

> Hi folks,
>
>     I am trying to customize existing class IntVar by adding some more data
> member into it. My current way is to subclass from IntVar (say the new class
> name is MyIntVar) and write constructors and new member functions to
> manipulate the new data. This works well.
>
> However, if I want to use IntVarArray and IntVarArgs to hold MyIntVar, all
> MyIntVar elements seems are converted to IntVar.
>
> For example, in the code
>
> MyIntVar myIntVar(*this, 0, 10);
> IntVarArgs intVarArgs;
> intVarArgs << myIntVar;
>
> I observe that intVarArgs[0] is IntVar type. I can not even use
> dynamic_cast to cast it to MyIntVar.
>
> If I do it another way by implementing MyIntVarArray and MyIntVarArgs for
> MyIntVar following the document "Modeling and Programming with Gecode" (this
> corresponds to IntVarArray and IntVarArgs for IntVar), this works well. But
> the problem is that constraints posting (e.g. sum, "+") do not work on new
> MyIntVarArray and MyIntVarArgs.
>
> Basically, my question is what is the easiest to way to slightly modify
> IntVar to adapt to user needs.
>
> Many thanks
> --
> --------------------------------------------
> Changbin Liu
> Computer & Information Science Department
> University of Pennsylvania
> Philadelphia, PA
> U.S.
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>


-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110415/b4294887/attachment.htm>

From cschulte at kth.se  Fri Apr 15 10:14:55 2011
From: cschulte at kth.se (Christian Schulte)
Date: Fri, 15 Apr 2011 10:14:55 +0200
Subject: [gecode-users] customize IntVar
In-Reply-To: <BANLkTineCwi=K-HuozT_iXeC4Snkk7oCxw@mail.gmail.com>
References: <BANLkTinYdYRC9=2jd=_P2GUvEM0L7cH4dQ@mail.gmail.com>
	<BANLkTineCwi=K-HuozT_iXeC4Snkk7oCxw@mail.gmail.com>
Message-ID: <008b01cbfb45$34df5d80$9e9e1880$@se>

Please read the part V in Modeling and Programming with Gecode. There you
will see that IntVar etc are nothing but read-only interfaces to variable
implementations. And this is what you should extend, not the IntVar class.

 

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Mikael Zayenz Lagerkvist
Sent: Friday, April 15, 2011 6:53 AM
To: Changbin Liu
Cc: gecode gecode
Subject: Re: [gecode-users] customize IntVar

 

Hi,

 

In almost all cases it is not a good idea to try to extend the IntVar
classes, and the system is not designed for this to be done. It is much
better to store any additional data that you would like to associate with
the variables in a separate data-structure.

 

Cheers,

Mikael

2011/4/15 Changbin Liu <changbin.liu at gmail.com>

Hi folks,

 

    I am trying to customize existing class IntVar by adding some more data
member into it. My current way is to subclass from IntVar (say the new class
name is MyIntVar) and write constructors and new member functions to
manipulate the new data. This works well.

 

However, if I want to use IntVarArray and IntVarArgs to hold MyIntVar, all
MyIntVar elements seems are converted to IntVar.

 

For example, in the code

 

MyIntVar myIntVar(*this, 0, 10);

IntVarArgs intVarArgs;

intVarArgs << myIntVar;

 

I observe that intVarArgs[0] is IntVar type. I can not even use dynamic_cast
to cast it to MyIntVar.

 

If I do it another way by implementing MyIntVarArray and MyIntVarArgs for
MyIntVar following the document "Modeling and Programming with Gecode" (this
corresponds to IntVarArray and IntVarArgs for IntVar), this works well. But
the problem is that constraints posting (e.g. sum, "+") do not work on new
MyIntVarArray and MyIntVarArgs.

 

Basically, my question is what is the easiest to way to slightly modify
IntVar to adapt to user needs.

 

Many thanks
-- 
--------------------------------------------
Changbin Liu
Computer & Information Science Department
University of Pennsylvania
Philadelphia, PA
U.S.


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110415/e6eab484/attachment.htm>

From changbin.liu at gmail.com  Fri Apr 15 17:23:18 2011
From: changbin.liu at gmail.com (Changbin Liu)
Date: Fri, 15 Apr 2011 11:23:18 -0400
Subject: [gecode-users] customize IntVar
In-Reply-To: <008b01cbfb45$34df5d80$9e9e1880$@se>
References: <BANLkTinYdYRC9=2jd=_P2GUvEM0L7cH4dQ@mail.gmail.com>
	<BANLkTineCwi=K-HuozT_iXeC4Snkk7oCxw@mail.gmail.com>
	<008b01cbfb45$34df5d80$9e9e1880$@se>
Message-ID: <BANLkTimhgyKJ6SZe+ns19-gs6FjdLqJpEw@mail.gmail.com>

Thanks Mikael and Christian, I finally realized that generally it is not a
good idea to extend IntVar (as suggested by Mikael). It makes life much
easier to simply use additional separate data structures to store what users
want to add.

On Fri, Apr 15, 2011 at 4:14 AM, Christian Schulte <cschulte at kth.se> wrote:

> Please read the part V in Modeling and Programming with Gecode. There you
> will see that IntVar etc are nothing but read-only interfaces to variable
> implementations. And this is what you should extend, not the IntVar class.
>
>
>
> Christian
>
>
>
> --
>
> Christian Schulte, www.ict.kth.se/~cschulte/
>
>
>
> *From:* users-bounces at gecode.org [mailto:users-bounces at gecode.org] *On
> Behalf Of *Mikael Zayenz Lagerkvist
> *Sent:* Friday, April 15, 2011 6:53 AM
> *To:* Changbin Liu
> *Cc:* gecode gecode
> *Subject:* Re: [gecode-users] customize IntVar
>
>
>
> Hi,
>
>
>
> In almost all cases it is not a good idea to try to extend the IntVar
> classes, and the system is not designed for this to be done. It is much
> better to store any additional data that you would like to associate with
> the variables in a separate data-structure.
>
>
>
> Cheers,
>
> Mikael
>
> 2011/4/15 Changbin Liu <changbin.liu at gmail.com>
>
> Hi folks,
>
>
>
>     I am trying to customize existing class IntVar by adding some more data
> member into it. My current way is to subclass from IntVar (say the new class
> name is MyIntVar) and write constructors and new member functions to
> manipulate the new data. This works well.
>
>
>
> However, if I want to use IntVarArray and IntVarArgs to hold MyIntVar, all
> MyIntVar elements seems are converted to IntVar.
>
>
>
> For example, in the code
>
>
>
> MyIntVar myIntVar(*this, 0, 10);
>
> IntVarArgs intVarArgs;
>
> intVarArgs << myIntVar;
>
>
>
> I observe that intVarArgs[0] is IntVar type. I can not even use
> dynamic_cast to cast it to MyIntVar.
>
>
>
> If I do it another way by implementing MyIntVarArray and MyIntVarArgs for
> MyIntVar following the document "Modeling and Programming with Gecode" (this
> corresponds to IntVarArray and IntVarArgs for IntVar), this works well. But
> the problem is that constraints posting (e.g. sum, "+") do not work on new
> MyIntVarArray and MyIntVarArgs.
>
>
>
> Basically, my question is what is the easiest to way to slightly modify
> IntVar to adapt to user needs.
>
>
>
> Many thanks
> --
> --------------------------------------------
> Changbin Liu
> Computer & Information Science Department
> University of Pennsylvania
> Philadelphia, PA
> U.S.
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>
>
>
> --
> Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/
>



-- 
--------------------------------------------
Changbin Liu
Computer & Information Science Department
University of Pennsylvania
Philadelphia, PA
U.S.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110415/aeea1496/attachment.htm>

From mmann at informatik.uni-freiburg.de  Mon Apr 18 14:22:03 2011
From: mmann at informatik.uni-freiburg.de (Martin Mann)
Date: Mon, 18 Apr 2011 14:22:03 +0200
Subject: [gecode-users] Gecode 3.5.0 : compilation without flatzinc :
	installation failed
Message-ID: <4DAC2CEB.6020802@informatik.uni-freiburg.de>


Hi everybody,

I encountered an installation problem with the following configure setup:


./configure --enable-static --disable-shared --disable-int-vars 
--disable-driver --disable-flatzinc --disable-examples 
--disable-scheduling --disable-qt --disable-graph --prefix=/tmp/install;


so stripped away almost the whole package and build static libs.

Compilation works fine, only installation into the target directory 
fails with:

#############################################
[...]

for_exetargets="tools/flatzinc/fz" && \
   for f in $for_exetargets; do \
     cp $f /tmp/install/bin; done
cp: cannot stat `tools/flatzinc/fz': No such file or directory
make[1]: *** [doinstalllib] Error 1
make[1]: Leaving directory `/tmp/gecode-3.5.0'
make: *** [installlib] Error 2
#############################################

seems to be some issue with the Makefile.am or configure.ac.

So long,
Martin



-- 
Martin Mann, Dipl. Bioinf.
Bioinformatics - Inst. of Computer Science
Albert-Ludwigs-University Freiburg
Tel: ++49-761-203-8259
Fax: ++49-761-203-7462
http://www.bioinf.uni-freiburg.de/~mmann/


From tack at gecode.org  Mon Apr 18 14:37:13 2011
From: tack at gecode.org (Guido Tack)
Date: Mon, 18 Apr 2011 14:37:13 +0200
Subject: [gecode-users] Gecode 3.5.0 : compilation without flatzinc :
	installation failed
In-Reply-To: <4DAC2CEB.6020802@informatik.uni-freiburg.de>
References: <4DAC2CEB.6020802@informatik.uni-freiburg.de>
Message-ID: <5FCB90F4-244B-4505-A0CC-0460B4218DC8@gecode.org>

Thanks, Martin.  I fixed it in the svn.

Cheers,
	Guido

Martin Mann wrote:

> 
> Hi everybody,
> 
> I encountered an installation problem with the following configure setup:
> 
> 
> ./configure --enable-static --disable-shared --disable-int-vars --disable-driver --disable-flatzinc --disable-examples --disable-scheduling --disable-qt --disable-graph --prefix=/tmp/install;
> 
> 
> so stripped away almost the whole package and build static libs.
> 
> Compilation works fine, only installation into the target directory fails with:
> 
> #############################################
> [...]
> 
> for_exetargets="tools/flatzinc/fz" && \
>  for f in $for_exetargets; do \
>    cp $f /tmp/install/bin; done
> cp: cannot stat `tools/flatzinc/fz': No such file or directory
> make[1]: *** [doinstalllib] Error 1
> make[1]: Leaving directory `/tmp/gecode-3.5.0'
> make: *** [installlib] Error 2
> #############################################
> 
> seems to be some issue with the Makefile.am or configure.ac.
> 
> So long,
> Martin
> 
> 
> 
> -- 
> Martin Mann, Dipl. Bioinf.
> Bioinformatics - Inst. of Computer Science
> Albert-Ludwigs-University Freiburg
> Tel: ++49-761-203-8259
> Fax: ++49-761-203-7462
> http://www.bioinf.uni-freiburg.de/~mmann/
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-- 
Guido Tack, http://people.cs.kuleuven.be/~guido.tack/







From andrei.neboian at googlemail.com  Mon Apr 25 01:09:00 2011
From: andrei.neboian at googlemail.com (Andrei Neboian)
Date: Mon, 25 Apr 2011 01:09:00 +0200
Subject: [gecode-users] how to write flatzinc solutions into a file
Message-ID: <BANLkTi=OxPzTU+JKCP2+=+ARgabFhyr8JA@mail.gmail.com>

Dear All,

I am using the fz.exe to generate solutions out of my flatzinc model using
the GeCode solver.

How can I direct the stream of solutions into a text-file rather than the
shell output? In Minizinc, there is such an option (-o <filename>), what
about GeCode?

Thanks for help!

Best,
Andi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110425/3c691ffb/attachment.htm>

From tack at gecode.org  Mon Apr 25 08:26:47 2011
From: tack at gecode.org (Guido Tack)
Date: Mon, 25 Apr 2011 08:26:47 +0200
Subject: [gecode-users] how to write flatzinc solutions into a file
In-Reply-To: <BANLkTi=OxPzTU+JKCP2+=+ARgabFhyr8JA@mail.gmail.com>
References: <BANLkTi=OxPzTU+JKCP2+=+ARgabFhyr8JA@mail.gmail.com>
Message-ID: <DC150CD5-428F-4C3B-BC6D-80B14E32F88F@gecode.org>

Dear Andi,

that option is already implemented and will be part of the next release (you can try compiling the current svn trunk to get it already now).  Other than that, you can always use output redirection in the shell (i.e., call fz.exe fznfile.fzn > outputfile).

Cheers,
	Guido

Andrei Neboian wrote:

> Dear All,
> 
> I am using the fz.exe to generate solutions out of my flatzinc model using the GeCode solver.
> 
> How can I direct the stream of solutions into a text-file rather than the shell output? In Minizinc, there is such an option (-o <filename>), what about GeCode?
> 
> Thanks for help!
> 
> Best,
> Andi
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-- 
Guido Tack, http://people.cs.kuleuven.be/~guido.tack/






From andrei.neboian at googlemail.com  Mon Apr 25 11:43:07 2011
From: andrei.neboian at googlemail.com (Andrei Neboian)
Date: Mon, 25 Apr 2011 11:43:07 +0200
Subject: [gecode-users] GeCode vs Minizinc solver
Message-ID: <BANLkTinf+UOnswMdTX4f6hVEe2Ln4y9Cfw@mail.gmail.com>

Dear All,

I have built a scheduling model in MiniZinc, which I tried running with
GeCode and the MiniZinc solver.

The in-built LAZY solver of MiniZinc is very efficient and quick in getting
results, while GeCode requires significantly more time to get (first)
results. At the same time, the LAZY solver has a memory issue (and crashes)
when the model is large, but the GeCode doesn't! So I would still like to
try using GeCode instead...

Am I forgetting something when running the GeCode model - why is it so much
slower than the minizinc solver? I do incorporate the GeCode library when
generating the fzn-file out of mzn. Is there anything else? How can I make
GeCode run as fast as the lazy solver of minizinc?

Thanks for help!

Best,
Andi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110425/9b5d2b06/attachment.htm>

From cschulte at kth.se  Mon Apr 25 20:30:20 2011
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 25 Apr 2011 20:30:20 +0200
Subject: [gecode-users] GeCode vs Minizinc solver
In-Reply-To: <BANLkTinf+UOnswMdTX4f6hVEe2Ln4y9Cfw@mail.gmail.com>
References: <BANLkTinf+UOnswMdTX4f6hVEe2Ln4y9Cfw@mail.gmail.com>
Message-ID: <004e01cc0376$d8a70330$89f50990$@kth.se>

Dear Andrei,

 

Unfortunately it is not that easy to make Gecode run as fast as the Lazy
solver: they differ essentially in how they do search. 

 

What you could do is try to improve the search annotations in your MiniZinc
model so that you can still use Gecode but with less search.

 

Best

Christian

 

--

Christian Schulte, KTH, web.it.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Andrei Neboian
Sent: Monday, April 25, 2011 11:43 AM
To: users
Subject: [gecode-users] GeCode vs Minizinc solver

 

Dear All,

I have built a scheduling model in MiniZinc, which I tried running with
GeCode and the MiniZinc solver.

The in-built LAZY solver of MiniZinc is very efficient and quick in getting
results, while GeCode requires significantly more time to get (first)
results. At the same time, the LAZY solver has a memory issue (and crashes)
when the model is large, but the GeCode doesn't! So I would still like to
try using GeCode instead...

Am I forgetting something when running the GeCode model - why is it so much
slower than the minizinc solver? I do incorporate the GeCode library when
generating the fzn-file out of mzn. Is there anything else? How can I make
GeCode run as fast as the lazy solver of minizinc?

Thanks for help!

Best,
Andi

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110425/03e2ea94/attachment.htm>

