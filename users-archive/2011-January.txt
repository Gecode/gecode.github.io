From roger.kameugne at gmail.com  Sat Jan  8 09:45:27 2011
From: roger.kameugne at gmail.com (Roger Kameugne)
Date: Sat, 8 Jan 2011 09:45:27 +0100
Subject: [gecode-users] Edge-finding evaluation
In-Reply-To: <008001cb96c0$8802e750$9808b5f0$@se>
References: <AANLkTinr-5L0GmqQ_0mdunGxH1SeFxSq7KvYtNUmTJ42@mail.gmail.com>
	<000301cb8af7$97ae5150$c70af3f0$@se>
	<AANLkTik6oJ5=1ijrde0JatSzM79q_8g2pcQwb3kphye2@mail.gmail.com>
	<008001cb96c0$8802e750$9808b5f0$@se>
Message-ID: <AANLkTik5OJC9j_w1pc7HcUk_WZVA+6Jy1MH-k_Uvhz0c@mail.gmail.com>

Hi all,
I need help to built Vilim edge-finding propagator with the gecode
code source.  Is there someone who can help me? I am still study the
philosophy of gecode propagator.
Wishing all of you a very happy, prosperous and peaceful NEW YEAR 2011.
Roger




2010/12/8, Christian Schulte <cschulte at kth.se>:
> Hi Roger,
>
> No, not right now. What you would have to do is to do a propagator by
> yourself: just copy the code from the cumulative propagator and remove the
> part where edge-finding is called (the code is in
> gecode/scheduling/cumulative/man-prop.hpp for mandatory tasks).
>
> Cheers
> Christian
>
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
>
>
> -----Original Message-----
> From: Roger Kameugne [mailto:roger.kameugne at gmail.com]
> Sent: Wednesday, December 08, 2010 10:49 AM
> To: cschulte at kth.se
> Cc: users at gecode.org
> Subject: Re: [gecode-users] Edge-finding evaluation
>
> Hi all,
> Is there any possibility to post the cumulative constraint only only
> with time-table and averload checking? In other words, how can I post
> the cumulative propagator only for time table and overloard checking?
>
> Best
> Roger
>
> 2010/11/23, Christian Schulte <cschulte at kth.se>:
>> Dear Roger,
>>
>> That sounds very interesting.
>>
>> But first a word of warning: the cumulative scheduling propagator in
> Gecode
>> 3.4.2 is still experimental: we ourselves have not fully evaluated its
>> performance and so on (the documentation in MPG marks the scheduling
> support
>> as still experimental).
>>
>> As it comes to integration of your algorithm you might want to consult
> Part
>> P (Programming Propagators) in MPG (Modeling and Programming with Gecode).
>> Implementing a new constraint requires the implementation of the
>> corresponding propagator as detailed there.
>>
>> The function stop(t, cout) stops the timer t and prints it on cout (a
>> standard output stream). Please consult the files:
>> 	gecode/driver/script.hpp
>> 	gecode/driver/script.cpp
>> In general these pieces of information are found best by searching the
>> reference documentation for Gecode.
>>
>> As an alternative, when you want to print to a textfile you should
> redirect
>> the output printed in a standard shell to a file, so there is definitely
> no
>> need to hack the script stuff in Gecode.
>>
>> For setting the time limit, just invoke the -help switch of any of the
>> Gecode examples. It tells you how (also consult Chapter 11 in the first
> part
>> of MPG how to use the commandline driver).
>>
>> Best
>> Christian
>>
>> --
>> Christian Schulte, www.ict.kth.se/~cschulte/
>>
>> -----Original Message-----
>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
>> Of Roger Kameugne
>> Sent: Tuesday, November 23, 2010 10:31 AM
>> To: users at gecode.org
>> Subject: [gecode-users] Edge-finding evaluation
>>
>> Hi all,
>> We have developed  a new cumulative edge-finding algorithm and we need
>> to evaluate it on RCPSP  with the current best know implement provide
>> in gecode 3.4.2  (Petr Vilim). We are new user of gecode and we have
>> used the Microsoft Visual Studio 2008.  We have many questions about
>> the the cumulative propagator.
>>
>> First of all, how can we integrate our edge-finding algorithm and used
>> the time-table and overload checking?
>>
>> To print out the runtime in a .txt file, we modify the file script.cpp
>> but we didn't know the type of  stop(t, cout)?
>>
>> The last but not the least question is about the setting of the time
>> limit. Where and how can we limit the runtime?
>> Thanks in advance.
>> Roger
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
>>
>
>


From cschulte at kth.se  Sun Jan  9 17:04:23 2011
From: cschulte at kth.se (Christian Schulte)
Date: Sun, 9 Jan 2011 17:04:23 +0100
Subject: [gecode-users] Edge-finding evaluation
In-Reply-To: <AANLkTik5OJC9j_w1pc7HcUk_WZVA+6Jy1MH-k_Uvhz0c@mail.gmail.com>
References: <AANLkTinr-5L0GmqQ_0mdunGxH1SeFxSq7KvYtNUmTJ42@mail.gmail.com>	<000301cb8af7$97ae5150$c70af3f0$@se>	<AANLkTik6oJ5=1ijrde0JatSzM79q_8g2pcQwb3kphye2@mail.gmail.com>	<008001cb96c0$8802e750$9808b5f0$@se>
	<AANLkTik5OJC9j_w1pc7HcUk_WZVA+6Jy1MH-k_Uvhz0c@mail.gmail.com>
Message-ID: <000601cbb016$e297a830$a7c6f890$@se>

Hi Roger,

What I could do: send you a patch against Gecode 3.4.2 such that all
additional features for cumulative are disabled and you only get Vilim's
algorithm (including overload-checking). You then would have to rebuild
Gecode from the 3.4.2 source after having applied the patch.

Would that help?

Best
Christian

--
Christian Schulte, web.ict.kth.se/~cschulte/



-----Original Message-----
From: Roger Kameugne [mailto:roger.kameugne at gmail.com] 
Sent: Saturday, January 08, 2011 9:45 AM
To: cschulte at kth.se
Cc: users at gecode.org
Subject: Re: [gecode-users] Edge-finding evaluation

Hi all,
I need help to built Vilim edge-finding propagator with the gecode
code source.  Is there someone who can help me? I am still study the
philosophy of gecode propagator.
Wishing all of you a very happy, prosperous and peaceful NEW YEAR 2011.
Roger




2010/12/8, Christian Schulte <cschulte at kth.se>:
> Hi Roger,
>
> No, not right now. What you would have to do is to do a propagator by
> yourself: just copy the code from the cumulative propagator and remove the
> part where edge-finding is called (the code is in
> gecode/scheduling/cumulative/man-prop.hpp for mandatory tasks).
>
> Cheers
> Christian
>
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
>
>
> -----Original Message-----
> From: Roger Kameugne [mailto:roger.kameugne at gmail.com]
> Sent: Wednesday, December 08, 2010 10:49 AM
> To: cschulte at kth.se
> Cc: users at gecode.org
> Subject: Re: [gecode-users] Edge-finding evaluation
>
> Hi all,
> Is there any possibility to post the cumulative constraint only only
> with time-table and averload checking? In other words, how can I post
> the cumulative propagator only for time table and overloard checking?
>
> Best
> Roger
>
> 2010/11/23, Christian Schulte <cschulte at kth.se>:
>> Dear Roger,
>>
>> That sounds very interesting.
>>
>> But first a word of warning: the cumulative scheduling propagator in
> Gecode
>> 3.4.2 is still experimental: we ourselves have not fully evaluated its
>> performance and so on (the documentation in MPG marks the scheduling
> support
>> as still experimental).
>>
>> As it comes to integration of your algorithm you might want to consult
> Part
>> P (Programming Propagators) in MPG (Modeling and Programming with
Gecode).
>> Implementing a new constraint requires the implementation of the
>> corresponding propagator as detailed there.
>>
>> The function stop(t, cout) stops the timer t and prints it on cout (a
>> standard output stream). Please consult the files:
>> 	gecode/driver/script.hpp
>> 	gecode/driver/script.cpp
>> In general these pieces of information are found best by searching the
>> reference documentation for Gecode.
>>
>> As an alternative, when you want to print to a textfile you should
> redirect
>> the output printed in a standard shell to a file, so there is definitely
> no
>> need to hack the script stuff in Gecode.
>>
>> For setting the time limit, just invoke the -help switch of any of the
>> Gecode examples. It tells you how (also consult Chapter 11 in the first
> part
>> of MPG how to use the commandline driver).
>>
>> Best
>> Christian
>>
>> --
>> Christian Schulte, www.ict.kth.se/~cschulte/
>>
>> -----Original Message-----
>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On
Behalf
>> Of Roger Kameugne
>> Sent: Tuesday, November 23, 2010 10:31 AM
>> To: users at gecode.org
>> Subject: [gecode-users] Edge-finding evaluation
>>
>> Hi all,
>> We have developed  a new cumulative edge-finding algorithm and we need
>> to evaluate it on RCPSP  with the current best know implement provide
>> in gecode 3.4.2  (Petr Vilim). We are new user of gecode and we have
>> used the Microsoft Visual Studio 2008.  We have many questions about
>> the the cumulative propagator.
>>
>> First of all, how can we integrate our edge-finding algorithm and used
>> the time-table and overload checking?
>>
>> To print out the runtime in a .txt file, we modify the file script.cpp
>> but we didn't know the type of  stop(t, cout)?
>>
>> The last but not the least question is about the setting of the time
>> limit. Where and how can we limit the runtime?
>> Thanks in advance.
>> Roger
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
>>
>
>



From lucie.kucerova at mensa.cz  Thu Jan 13 14:49:54 2011
From: lucie.kucerova at mensa.cz (=?ISO-8859-2?Q?Lucie_Ku=E8erov=E1?=)
Date: Thu, 13 Jan 2011 14:49:54 +0100
Subject: [gecode-users] Issue with a MiniZinc model
Message-ID: <4D2F0302.20209@mensa.cz>

Hello,

I've created a simple MiniZinc model describing a planning domain &
problem. The issue is that although MiniZinc itself solves it instantly,
when I use Gecode's fz.exe on the generated FlatZinc model, the program
computes for a while and then crashes.

The MiniZinc model in question is attached below. The only problematic
constraint is the last one from the succesor state constraints, without
it all works OK. Any ideas what is causing the issue?

Thank you in advance
Lucie Kucerova



% Constants
int: t = 2;
int: num_preds = 5;
int: num_actions = 6;
int: num_resc = 1;

% Variables
array[0..t, 0..num_preds - 1] of var bool: predicates;
array[0..t - 1, 0..num_actions - 1] of var bool: actions;
array[0..t, 0..num_resc - 1] of var int: resources;

% Constraints

% Init
constraint predicates[0, 0];
constraint not predicates[0, 1];
constraint not predicates[0, 2];
constraint not predicates[0, 3];
constraint not predicates[0, 4];
constraint resources[0, 0] = 0;

% Goal
constraint predicates[t, 3];
constraint predicates[t, 4];
constraint resources[t, 0] = 100;

% Preconditions
constraint forall (i in 0..t - 1) (actions[i, 0] -> predicates[i, 0]);
constraint forall (i in 0..t - 1) (actions[i, 1] -> predicates[i, 1]);
constraint forall (i in 0..t - 1) (actions[i, 2] -> predicates[i, 0]);
constraint forall (i in 0..t - 1) (actions[i, 3] -> predicates[i, 2]);

% Succesor state
constraint forall (i in 1..t) (predicates[i, 0] <-> predicates[i - 1, 0]
/\ not actions[i - 1, 0] /\ not actions[i - 1, 2]);
constraint forall (i in 1..t) (predicates[i, 1] <-> actions[i - 1, 0] \/
(predicates[i - 1, 1] /\ not actions[i - 1, 1]));
constraint forall (i in 1..t) (predicates[i, 2] <-> actions[i - 1, 1] \/
actions[i - 1, 2] \/ (predicates[i - 1, 2] /\ not actions[i - 1, 3]));
constraint forall (i in 1..t) (predicates[i, 3] <-> actions[i - 1, 3] \/
predicates[i - 1, 3]);
constraint forall (i in 1..t) (predicates[i, 4] <-> actions[i - 1, 4] \/
predicates[i - 1, 4]);
constraint forall (i in 1..t) ((resources[i, 0] = resources[i - 1, 0])
\/ ((resources[i, 0] = resources[i - 1, 0] + 100) /\ actions[i - 1, 5]));

% Incompatible predicates
constraint forall (i in 0..t) (bool2int(predicates[i, 0]) +
bool2int(predicates[i, 1]) + bool2int(predicates[i, 2]) +
bool2int(predicates[i, 3]) < 2);

% Solution
solve satisfy;

% Output
output
  [ show(predicates[i,j]) ++ " " ++ if j == num_preds - 1 then "\n" else
" " endif | i in 0..t, j in 0..num_preds - 1] ++
  ["\n"] ++
  [ show(resources[i,j]) ++ " " ++ if j == num_resc - 1 then "\n" else "
" endif | i in 0..t, j in 0..num_resc - 1] ++
  ["\n"] ++
  [ show(actions[i,j]) ++ if j == num_actions - 1 then "\n" else " "
endif | i in 0..t - 1, j in 0..num_actions - 1];


From zayenz at gmail.com  Thu Jan 13 15:16:44 2011
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Thu, 13 Jan 2011 15:16:44 +0100
Subject: [gecode-users] Issue with a MiniZinc model
In-Reply-To: <4D2F0302.20209@mensa.cz>
References: <4D2F0302.20209@mensa.cz>
Message-ID: <AANLkTikPMqNdo1T6HY1z1a80uqwhXtfPWAjEsdxR=nCd@mail.gmail.com>

Hi,

Your model specifies that the values for resources could be anything (in
Gecode, that is approximately from -2 billion to +2 billion). Any negative
value for resources leads to a failure, but that is not detected until it is
tried since your model uses reified constraints. It is very important to
always think about the size of your initial domain.

The crash you see is simply when your computer has run out of memory for the
search-tree you are generating. Try a few variants with the minimum value
for resources being 0, -10, -100, -1000 and run it in Gist (fz - mode gist)
to see the resulting search tree.

Cheers,
Mikael

2011/1/13 Lucie Ku?erov? <lucie.kucerova at mensa.cz>

> Hello,
>
> I've created a simple MiniZinc model describing a planning domain &
> problem. The issue is that although MiniZinc itself solves it instantly,
> when I use Gecode's fz.exe on the generated FlatZinc model, the program
> computes for a while and then crashes.
>
> The MiniZinc model in question is attached below. The only problematic
> constraint is the last one from the succesor state constraints, without
> it all works OK. Any ideas what is causing the issue?
>
> Thank you in advance
> Lucie Kucerova
>
>
>
> % Constants
> int: t = 2;
> int: num_preds = 5;
> int: num_actions = 6;
> int: num_resc = 1;
>
> % Variables
> array[0..t, 0..num_preds - 1] of var bool: predicates;
> array[0..t - 1, 0..num_actions - 1] of var bool: actions;
> array[0..t, 0..num_resc - 1] of var int: resources;
>
> % Constraints
>
> % Init
> constraint predicates[0, 0];
> constraint not predicates[0, 1];
> constraint not predicates[0, 2];
> constraint not predicates[0, 3];
> constraint not predicates[0, 4];
> constraint resources[0, 0] = 0;
>
> % Goal
> constraint predicates[t, 3];
> constraint predicates[t, 4];
> constraint resources[t, 0] = 100;
>
> % Preconditions
> constraint forall (i in 0..t - 1) (actions[i, 0] -> predicates[i, 0]);
> constraint forall (i in 0..t - 1) (actions[i, 1] -> predicates[i, 1]);
> constraint forall (i in 0..t - 1) (actions[i, 2] -> predicates[i, 0]);
> constraint forall (i in 0..t - 1) (actions[i, 3] -> predicates[i, 2]);
>
> % Succesor state
> constraint forall (i in 1..t) (predicates[i, 0] <-> predicates[i - 1, 0]
> /\ not actions[i - 1, 0] /\ not actions[i - 1, 2]);
> constraint forall (i in 1..t) (predicates[i, 1] <-> actions[i - 1, 0] \/
> (predicates[i - 1, 1] /\ not actions[i - 1, 1]));
> constraint forall (i in 1..t) (predicates[i, 2] <-> actions[i - 1, 1] \/
> actions[i - 1, 2] \/ (predicates[i - 1, 2] /\ not actions[i - 1, 3]));
> constraint forall (i in 1..t) (predicates[i, 3] <-> actions[i - 1, 3] \/
> predicates[i - 1, 3]);
> constraint forall (i in 1..t) (predicates[i, 4] <-> actions[i - 1, 4] \/
> predicates[i - 1, 4]);
> constraint forall (i in 1..t) ((resources[i, 0] = resources[i - 1, 0])
> \/ ((resources[i, 0] = resources[i - 1, 0] + 100) /\ actions[i - 1, 5]));
>
> % Incompatible predicates
> constraint forall (i in 0..t) (bool2int(predicates[i, 0]) +
> bool2int(predicates[i, 1]) + bool2int(predicates[i, 2]) +
> bool2int(predicates[i, 3]) < 2);
>
> % Solution
> solve satisfy;
>
> % Output
> output
>  [ show(predicates[i,j]) ++ " " ++ if j == num_preds - 1 then "\n" else
> " " endif | i in 0..t, j in 0..num_preds - 1] ++
>  ["\n"] ++
>  [ show(resources[i,j]) ++ " " ++ if j == num_resc - 1 then "\n" else "
> " endif | i in 0..t, j in 0..num_resc - 1] ++
>  ["\n"] ++
>  [ show(actions[i,j]) ++ if j == num_actions - 1 then "\n" else " "
> endif | i in 0..t - 1, j in 0..num_actions - 1];
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>



-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110113/13e56eeb/attachment.html>

From lucie.kucerova at mensa.cz  Thu Jan 13 15:29:26 2011
From: lucie.kucerova at mensa.cz (=?UTF-8?B?THVjaWUgS3XEjWVyb3bDoQ==?=)
Date: Thu, 13 Jan 2011 15:29:26 +0100
Subject: [gecode-users] Issue with a MiniZinc model
In-Reply-To: <AANLkTikPMqNdo1T6HY1z1a80uqwhXtfPWAjEsdxR=nCd@mail.gmail.com>
References: <4D2F0302.20209@mensa.cz>
	<AANLkTikPMqNdo1T6HY1z1a80uqwhXtfPWAjEsdxR=nCd@mail.gmail.com>
Message-ID: <4D2F0C46.2010707@mensa.cz>

Hi,

I thought it would be this sort of a newbie problem... Thank you very
much for the quick response!

Lucie


Dne 13.1.2011 15:16, Mikael Zayenz Lagerkvist napsal(a):
> Hi,
> 
> Your model specifies that the values for resources could be anything (in
> Gecode, that is approximately from -2 billion to +2 billion). Any
> negative value for resources leads to a failure, but that is not
> detected until it is tried since your model uses reified constraints. It
> is very important to always think about the size of your initial domain.
> 
> The crash you see is simply when your computer has run out of memory for
> the search-tree you are generating. Try a few variants with the minimum
> value for resources being 0, -10, -100, -1000 and run it in Gist (fz -
> mode gist) to see the resulting search tree. 
> 
> Cheers,
> Mikael
> 
> 2011/1/13 Lucie Ku?erov? <lucie.kucerova at mensa.cz
> <mailto:lucie.kucerova at mensa.cz>>
> 
>     Hello,
> 
>     I've created a simple MiniZinc model describing a planning domain &
>     problem. The issue is that although MiniZinc itself solves it instantly,
>     when I use Gecode's fz.exe on the generated FlatZinc model, the program
>     computes for a while and then crashes.
> 
>     The MiniZinc model in question is attached below. The only problematic
>     constraint is the last one from the succesor state constraints, without
>     it all works OK. Any ideas what is causing the issue?
> 
>     Thank you in advance
>     Lucie Kucerova
> 
> 
> 
>     % Constants
>     int: t = 2;
>     int: num_preds = 5;
>     int: num_actions = 6;
>     int: num_resc = 1;
> 
>     % Variables
>     array[0..t, 0..num_preds - 1] of var bool: predicates;
>     array[0..t - 1, 0..num_actions - 1] of var bool: actions;
>     array[0..t, 0..num_resc - 1] of var int: resources;
> 
>     % Constraints
> 
>     % Init
>     constraint predicates[0, 0];
>     constraint not predicates[0, 1];
>     constraint not predicates[0, 2];
>     constraint not predicates[0, 3];
>     constraint not predicates[0, 4];
>     constraint resources[0, 0] = 0;
> 
>     % Goal
>     constraint predicates[t, 3];
>     constraint predicates[t, 4];
>     constraint resources[t, 0] = 100;
> 
>     % Preconditions
>     constraint forall (i in 0..t - 1) (actions[i, 0] -> predicates[i, 0]);
>     constraint forall (i in 0..t - 1) (actions[i, 1] -> predicates[i, 1]);
>     constraint forall (i in 0..t - 1) (actions[i, 2] -> predicates[i, 0]);
>     constraint forall (i in 0..t - 1) (actions[i, 3] -> predicates[i, 2]);
> 
>     % Succesor state
>     constraint forall (i in 1..t) (predicates[i, 0] <-> predicates[i - 1, 0]
>     /\ not actions[i - 1, 0] /\ not actions[i - 1, 2]);
>     constraint forall (i in 1..t) (predicates[i, 1] <-> actions[i - 1, 0] \/
>     (predicates[i - 1, 1] /\ not actions[i - 1, 1]));
>     constraint forall (i in 1..t) (predicates[i, 2] <-> actions[i - 1, 1] \/
>     actions[i - 1, 2] \/ (predicates[i - 1, 2] /\ not actions[i - 1, 3]));
>     constraint forall (i in 1..t) (predicates[i, 3] <-> actions[i - 1, 3] \/
>     predicates[i - 1, 3]);
>     constraint forall (i in 1..t) (predicates[i, 4] <-> actions[i - 1, 4] \/
>     predicates[i - 1, 4]);
>     constraint forall (i in 1..t) ((resources[i, 0] = resources[i - 1, 0])
>     \/ ((resources[i, 0] = resources[i - 1, 0] + 100) /\ actions[i - 1,
>     5]));
> 
>     % Incompatible predicates
>     constraint forall (i in 0..t) (bool2int(predicates[i, 0]) +
>     bool2int(predicates[i, 1]) + bool2int(predicates[i, 2]) +
>     bool2int(predicates[i, 3]) < 2);
> 
>     % Solution
>     solve satisfy;
> 
>     % Output
>     output
>      [ show(predicates[i,j]) ++ " " ++ if j == num_preds - 1 then "\n" else
>     " " endif | i in 0..t, j in 0..num_preds - 1] ++
>      ["\n"] ++
>      [ show(resources[i,j]) ++ " " ++ if j == num_resc - 1 then "\n" else "
>     " endif | i in 0..t, j in 0..num_resc - 1] ++
>      ["\n"] ++
>      [ show(actions[i,j]) ++ if j == num_actions - 1 then "\n" else " "
>     endif | i in 0..t - 1, j in 0..num_actions - 1];
> 
>     _______________________________________________
>     Gecode users mailing list
>     users at gecode.org <mailto:users at gecode.org>
>     https://www.gecode.org/mailman/listinfo/gecode-users
> 
> 
> 
> 
> -- 
> Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/
> 
> ------------------------------------------------------------------------
> ------------------------------------------------------------------------
> 
> Zpr?va neobsahuje viry.
> Zkontrolov?no AVG - www.avg.cz <http://www.avg.cz>
> Verze: 10.0.1191 / Virov? b?ze: 1435/3376 - Datum vyd?n?: 12.1.2011
> 


From alexander.kleff at ptv.de  Fri Jan 14 15:52:17 2011
From: alexander.kleff at ptv.de (Alexander Kleff)
Date: Fri, 14 Jan 2011 15:52:17 +0100
Subject: [gecode-users] Loading the C runtime library without using a
	manifest
Message-ID: <8BD008FC9041C04FAD36A0BD46AAA69D0563600CE9@SKA-WN-E25CEX.ptvag.ptv.de>

Hi everyone!
According to the last sentence in the last mail under "Linking to Gecode with Microsoft Visual C++" you wait until somebody complains about the absence of a manifest.
Well, I had some trouble loading Gecode libraries as I ran into the Microsoft runtime error R6034 which is "An application has made an attempt to load the C runtime library without using a manifest." Since Gecode doesn't come with a manifest, I added a <dependency> statement for the needed runtime to the manifest of the calling application manually. So now it loads but it seems to me that it would be "cleaner" to have this in Gecode. Do you agree? Or am I mislead?
For the sake of completeness, I'm currently migrating to Visual Studio 2010 under Win7. By the way, the calling application is written in C#.
Best regards,
Alexander

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110114/225d2ecd/attachment.htm>

From cschulte at kth.se  Fri Jan 14 16:00:57 2011
From: cschulte at kth.se (Christian Schulte)
Date: Fri, 14 Jan 2011 16:00:57 +0100
Subject: [gecode-users] Loading the C runtime library without using
	a	manifest
In-Reply-To: <8BD008FC9041C04FAD36A0BD46AAA69D0563600CE9@SKA-WN-E25CEX.ptvag.ptv.de>
References: <8BD008FC9041C04FAD36A0BD46AAA69D0563600CE9@SKA-WN-E25CEX.ptvag.ptv.de>
Message-ID: <002601cbb3fb$d99ed760$8cdc8620$@se>

Hi,

 

Actually I have to admit that (as you found out) we have to tried to ignore
this as much as possible, in particular as MSVC 2008 and MSVC 2010 do and
require different things regarding manifests.

 

Okay, the first user has complained: we are going to look into it in one of
the next (if not the next) releases. Could I get back to you as a possible
tester of what we might do?

 

Thanks for letting us know.

 

Best

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Alexander Kleff
Sent: Friday, January 14, 2011 3:52 PM
To: users at gecode.org
Subject: [gecode-users] Loading the C runtime library without using a
manifest

 

Hi everyone!

According to the last sentence in the last mail under "Linking to Gecode
with Microsoft Visual C++" you wait until somebody complains about the
absence of a manifest.

Well, I had some trouble loading Gecode libraries as I ran into the
Microsoft runtime error R6034 which is "An application has made an attempt
to load the C runtime library without using a manifest." Since Gecode
doesn't come with a manifest, I added a <dependency> statement for the
needed runtime to the manifest of the calling application manually. So now
it loads but it seems to me that it would be "cleaner" to have this in
Gecode. Do you agree? Or am I mislead?

For the sake of completeness, I'm currently migrating to Visual Studio 2010
under Win7. By the way, the calling application is written in C#.

Best regards,

Alexander

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110114/8d59ed72/attachment.htm>

From gcross at phys.washington.edu  Fri Jan 14 18:25:45 2011
From: gcross at phys.washington.edu (Gregory Crosswhite)
Date: Sat, 15 Jan 2011 01:25:45 +0800
Subject: [gecode-users] int vs. unsigned int for Matrix dimensions
Message-ID: <4D308719.4020405@phys.washington.edu>

Hey everyone,

Is there a reason why the Matrix class uses "int" for the type of its 
dimensions instead of "unsigned int"?  If there isn't a reason not to 
use "unsigned int" for the type of the dimensions, then may I submit a 
patch or something to change it to use "unsigned int"?

Thanks!
Greg


From cschulte at kth.se  Sun Jan 16 22:10:41 2011
From: cschulte at kth.se (Christian Schulte)
Date: Sun, 16 Jan 2011 22:10:41 +0100
Subject: [gecode-users] int vs. unsigned int for Matrix dimensions
In-Reply-To: <4D308719.4020405@phys.washington.edu>
References: <4D308719.4020405@phys.washington.edu>
Message-ID: <000001cbb5c1$d8427260$88c75720$@se>

Hi Gregory,

You are touching a slightly weird aspect of Gecode... The choice of int as
opposed to unsigned int for the Matrix class is actually deliberate. This
choice is not only done for Matrix but for many other datastructures that
are defined by Gecode (for example, VarArray, ViewArray, etc). I know that
the choice of unsigned int sounds more appealing but we have made the
opposite decision and try to be as consistent with the choice of int rather
than unsigned int.

There are two reasons. The first is simple and maybe is not even very
convincing. The average loop written to iterate over arrays etc is typically
an int and not an unsigned int. To avoid compiler warnings, Gecode follows
in this. Then, the second reason (possibly not more convincing than the
first one) is that integer variables take int values and very often array
access is wrt a value included in the domain of an integer variable. Here we
go.

We tried to use unsigned int but it was in fact just too painful (lots of
explicit casts in order to avoid warnings). Changing int to unsigned int and
be consistent about that change would be a massive effort with little gain.

I know. Sad but true.

Cheers
Christian

--
Christian Schulte, web.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Gregory Crosswhite
Sent: Friday, January 14, 2011 6:26 PM
To: users at gecode.org
Subject: [gecode-users] int vs. unsigned int for Matrix dimensions

Hey everyone,

Is there a reason why the Matrix class uses "int" for the type of its 
dimensions instead of "unsigned int"?  If there isn't a reason not to 
use "unsigned int" for the type of the dimensions, then may I submit a 
patch or something to change it to use "unsigned int"?

Thanks!
Greg

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users



From gcross at phys.washington.edu  Sun Jan 16 22:46:29 2011
From: gcross at phys.washington.edu (Gregory Crosswhite)
Date: Sun, 16 Jan 2011 13:46:29 -0800
Subject: [gecode-users] int vs. unsigned int for Matrix dimensions
In-Reply-To: <000001cbb5c1$d8427260$88c75720$@se>
References: <4D308719.4020405@phys.washington.edu>
	<000001cbb5c1$d8427260$88c75720$@se>
Message-ID: <4D336735.3080607@phys.washington.edu>

Okidoke;  thanks for the explanation!  :-)

Also, is this list the best way to talk to the developers of Gecode?

Thanks,
Greg

On 1/16/11 1:10 PM, Christian Schulte wrote:
> Hi Gregory,
>
> You are touching a slightly weird aspect of Gecode... The choice of int as
> opposed to unsigned int for the Matrix class is actually deliberate. This
> choice is not only done for Matrix but for many other datastructures that
> are defined by Gecode (for example, VarArray, ViewArray, etc). I know that
> the choice of unsigned int sounds more appealing but we have made the
> opposite decision and try to be as consistent with the choice of int rather
> than unsigned int.
>
> There are two reasons. The first is simple and maybe is not even very
> convincing. The average loop written to iterate over arrays etc is typically
> an int and not an unsigned int. To avoid compiler warnings, Gecode follows
> in this. Then, the second reason (possibly not more convincing than the
> first one) is that integer variables take int values and very often array
> access is wrt a value included in the domain of an integer variable. Here we
> go.
>
> We tried to use unsigned int but it was in fact just too painful (lots of
> explicit casts in order to avoid warnings). Changing int to unsigned int and
> be consistent about that change would be a massive effort with little gain.
>
> I know. Sad but true.
>
> Cheers
> Christian
>
> --
> Christian Schulte, web.ict.kth.se/~cschulte/
>
>
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Gregory Crosswhite
> Sent: Friday, January 14, 2011 6:26 PM
> To: users at gecode.org
> Subject: [gecode-users] int vs. unsigned int for Matrix dimensions
>
> Hey everyone,
>
> Is there a reason why the Matrix class uses "int" for the type of its
> dimensions instead of "unsigned int"?  If there isn't a reason not to
> use "unsigned int" for the type of the dimensions, then may I submit a
> patch or something to change it to use "unsigned int"?
>
> Thanks!
> Greg
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>



From gcross at phys.washington.edu  Mon Jan 17 00:36:22 2011
From: gcross at phys.washington.edu (Gregory Crosswhite)
Date: Sun, 16 Jan 2011 15:36:22 -0800
Subject: [gecode-users] int vs. unsigned int for Matrix dimensions
In-Reply-To: <4D336735.3080607@phys.washington.edu>
References: <4D308719.4020405@phys.washington.edu>	<000001cbb5c1$d8427260$88c75720$@se>
	<4D336735.3080607@phys.washington.edu>
Message-ID: <4D3380F6.2020404@phys.washington.edu>

Part of the reason I am asking how to talk to the developers, 
by-the-way, is because I was thinking it might be useful for the 
arrays/argument arrays to have an iterator interface added to them, to 
make it easier to do things like applying generics algorithms to them 
and traversing them using the c++0x "for each" statement as well as 
BOOST_FOREACH.  Would there be any interest in a contribution to Gecode 
to provide this?  The supporting code that I had in mind would include 
new classes for the iterators and new methods .begin() and .end() for 
the arrays.

Cheers,
Greg

On 1/16/11 1:46 PM, Gregory Crosswhite wrote:
> Okidoke;  thanks for the explanation!  :-)
>
> Also, is this list the best way to talk to the developers of Gecode?
>
> Thanks,
> Greg
>
> On 1/16/11 1:10 PM, Christian Schulte wrote:
>> Hi Gregory,
>>
>> You are touching a slightly weird aspect of Gecode... The choice of 
>> int as
>> opposed to unsigned int for the Matrix class is actually deliberate. 
>> This
>> choice is not only done for Matrix but for many other datastructures 
>> that
>> are defined by Gecode (for example, VarArray, ViewArray, etc). I know 
>> that
>> the choice of unsigned int sounds more appealing but we have made the
>> opposite decision and try to be as consistent with the choice of int 
>> rather
>> than unsigned int.
>>
>> There are two reasons. The first is simple and maybe is not even very
>> convincing. The average loop written to iterate over arrays etc is 
>> typically
>> an int and not an unsigned int. To avoid compiler warnings, Gecode 
>> follows
>> in this. Then, the second reason (possibly not more convincing than the
>> first one) is that integer variables take int values and very often 
>> array
>> access is wrt a value included in the domain of an integer variable. 
>> Here we
>> go.
>>
>> We tried to use unsigned int but it was in fact just too painful 
>> (lots of
>> explicit casts in order to avoid warnings). Changing int to unsigned 
>> int and
>> be consistent about that change would be a massive effort with little 
>> gain.
>>
>> I know. Sad but true.
>>
>> Cheers
>> Christian
>>
>> -- 
>> Christian Schulte, web.ict.kth.se/~cschulte/
>>
>>
>> -----Original Message-----
>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On 
>> Behalf
>> Of Gregory Crosswhite
>> Sent: Friday, January 14, 2011 6:26 PM
>> To: users at gecode.org
>> Subject: [gecode-users] int vs. unsigned int for Matrix dimensions
>>
>> Hey everyone,
>>
>> Is there a reason why the Matrix class uses "int" for the type of its
>> dimensions instead of "unsigned int"?  If there isn't a reason not to
>> use "unsigned int" for the type of the dimensions, then may I submit a
>> patch or something to change it to use "unsigned int"?
>>
>> Thanks!
>> Greg
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users



From roger.kameugne at gmail.com  Mon Jan 17 10:32:58 2011
From: roger.kameugne at gmail.com (Roger Kameugne)
Date: Mon, 17 Jan 2011 10:32:58 +0100
Subject: [gecode-users] Edge-finding evaluation
In-Reply-To: <AANLkTinS_O05d2eq_wyg4Ei2-bUObzPqtvJOo4zr3hsK@mail.gmail.com>
References: <AANLkTinr-5L0GmqQ_0mdunGxH1SeFxSq7KvYtNUmTJ42@mail.gmail.com>
	<000301cb8af7$97ae5150$c70af3f0$@se>
	<AANLkTik6oJ5=1ijrde0JatSzM79q_8g2pcQwb3kphye2@mail.gmail.com>
	<008001cb96c0$8802e750$9808b5f0$@se>
	<AANLkTik5OJC9j_w1pc7HcUk_WZVA+6Jy1MH-k_Uvhz0c@mail.gmail.com>
	<000601cbb016$e297a830$a7c6f890$@se>
	<AANLkTinS_O05d2eq_wyg4Ei2-bUObzPqtvJOo4zr3hsK@mail.gmail.com>
Message-ID: <AANLkTi=d9KGGUXrZ9KAR5-KHo_n5FjKROwPKpgLZUZRw@mail.gmail.com>

 Hi Christian,
 Let me see the patch and may be it can help.

 Best
 Roger

2011/1/14, Roger Kameugne <roger.kameugne at gmail.com>:
> Hi Christian,
> Let me see the patch and may it can help.
>
> Best
> Roger
>
> 2011/1/9, Christian Schulte <cschulte at kth.se>:
>> Hi Roger,
>>
>> What I could do: send you a patch against Gecode 3.4.2 such that all
>> additional features for cumulative are disabled and you only get Vilim's
>> algorithm (including overload-checking). You then would have to rebuild
>> Gecode from the 3.4.2 source after having applied the patch.
>>
>> Would that help?
>>
>> Best
>> Christian
>>
>> --
>> Christian Schulte, web.ict.kth.se/~cschulte/
>>
>>
>>
>> -----Original Message-----
>> From: Roger Kameugne [mailto:roger.kameugne at gmail.com]
>> Sent: Saturday, January 08, 2011 9:45 AM
>> To: cschulte at kth.se
>> Cc: users at gecode.org
>> Subject: Re: [gecode-users] Edge-finding evaluation
>>
>> Hi all,
>> I need help to built Vilim edge-finding propagator with the gecode
>> code source.  Is there someone who can help me? I am still study the
>> philosophy of gecode propagator.
>> Wishing all of you a very happy, prosperous and peaceful NEW YEAR 2011.
>> Roger
>>
>>
>>
>>
>> 2010/12/8, Christian Schulte <cschulte at kth.se>:
>>> Hi Roger,
>>>
>>> No, not right now. What you would have to do is to do a propagator by
>>> yourself: just copy the code from the cumulative propagator and remove
>>> the
>>> part where edge-finding is called (the code is in
>>> gecode/scheduling/cumulative/man-prop.hpp for mandatory tasks).
>>>
>>> Cheers
>>> Christian
>>>
>>> --
>>> Christian Schulte, www.ict.kth.se/~cschulte/
>>>
>>>
>>> -----Original Message-----
>>> From: Roger Kameugne [mailto:roger.kameugne at gmail.com]
>>> Sent: Wednesday, December 08, 2010 10:49 AM
>>> To: cschulte at kth.se
>>> Cc: users at gecode.org
>>> Subject: Re: [gecode-users] Edge-finding evaluation
>>>
>>> Hi all,
>>> Is there any possibility to post the cumulative constraint only only
>>> with time-table and averload checking? In other words, how can I post
>>> the cumulative propagator only for time table and overloard checking?
>>>
>>> Best
>>> Roger
>>>
>>> 2010/11/23, Christian Schulte <cschulte at kth.se>:
>>>> Dear Roger,
>>>>
>>>> That sounds very interesting.
>>>>
>>>> But first a word of warning: the cumulative scheduling propagator in
>>> Gecode
>>>> 3.4.2 is still experimental: we ourselves have not fully evaluated its
>>>> performance and so on (the documentation in MPG marks the scheduling
>>> support
>>>> as still experimental).
>>>>
>>>> As it comes to integration of your algorithm you might want to consult
>>> Part
>>>> P (Programming Propagators) in MPG (Modeling and Programming with
>> Gecode).
>>>> Implementing a new constraint requires the implementation of the
>>>> corresponding propagator as detailed there.
>>>>
>>>> The function stop(t, cout) stops the timer t and prints it on cout (a
>>>> standard output stream). Please consult the files:
>>>> 	gecode/driver/script.hpp
>>>> 	gecode/driver/script.cpp
>>>> In general these pieces of information are found best by searching the
>>>> reference documentation for Gecode.
>>>>
>>>> As an alternative, when you want to print to a textfile you should
>>> redirect
>>>> the output printed in a standard shell to a file, so there is
>>>> definitely
>>> no
>>>> need to hack the script stuff in Gecode.
>>>>
>>>> For setting the time limit, just invoke the -help switch of any of the
>>>> Gecode examples. It tells you how (also consult Chapter 11 in the first
>>> part
>>>> of MPG how to use the commandline driver).
>>>>
>>>> Best
>>>> Christian
>>>>
>>>> --
>>>> Christian Schulte, www.ict.kth.se/~cschulte/
>>>>
>>>> -----Original Message-----
>>>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On
>> Behalf
>>>> Of Roger Kameugne
>>>> Sent: Tuesday, November 23, 2010 10:31 AM
>>>> To: users at gecode.org
>>>> Subject: [gecode-users] Edge-finding evaluation
>>>>
>>>> Hi all,
>>>> We have developed  a new cumulative edge-finding algorithm and we need
>>>> to evaluate it on RCPSP  with the current best know implement provide
>>>> in gecode 3.4.2  (Petr Vilim). We are new user of gecode and we have
>>>> used the Microsoft Visual Studio 2008.  We have many questions about
>>>> the the cumulative propagator.
>>>>
>>>> First of all, how can we integrate our edge-finding algorithm and used
>>>> the time-table and overload checking?
>>>>
>>>> To print out the runtime in a .txt file, we modify the file script.cpp
>>>> but we didn't know the type of  stop(t, cout)?
>>>>
>>>> The last but not the least question is about the setting of the time
>>>> limit. Where and how can we limit the runtime?
>>>> Thanks in advance.
>>>> Roger
>>>>
>>>> _______________________________________________
>>>> Gecode users mailing list
>>>> users at gecode.org
>>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>>>
>>>>
>>>
>>>
>>
>>
>


From cschulte at kth.se  Mon Jan 17 14:47:55 2011
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 17 Jan 2011 14:47:55 +0100
Subject: [gecode-users] int vs. unsigned int for Matrix dimensions
In-Reply-To: <4D3380F6.2020404@phys.washington.edu>
References: <4D308719.4020405@phys.washington.edu>	<000001cbb5c1$d8427260$88c75720$@se>
	<4D336735.3080607@phys.washington.edu>
	<4D3380F6.2020404@phys.washington.edu>
Message-ID: <003401cbb64d$25c4e9b0$714ebd10$@se>

Hi,

Yes, this list is a good forum...

Again you caught us red-handed... I know that begin() and end() is the
standard idiom but some of our iterators do not naturally fit in this
concept (that iterators that iterate over values and ranges of variables and
views).

I think what one could do is providing a wrapper class that translates a
Gecode-style iterator (using a constructor or init function for
initialization, operator ++() for moving to the next element, and operator
()() for testing whether the operator is done). If you can come up with
something like that we would of course integrate it.

Best
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: Gregory Crosswhite [mailto:gcross at phys.washington.edu] 
Sent: Monday, January 17, 2011 12:36 AM
To: users at gecode.org; cschulte at kth.se
Subject: Re: [gecode-users] int vs. unsigned int for Matrix dimensions

Part of the reason I am asking how to talk to the developers, 
by-the-way, is because I was thinking it might be useful for the 
arrays/argument arrays to have an iterator interface added to them, to 
make it easier to do things like applying generics algorithms to them 
and traversing them using the c++0x "for each" statement as well as 
BOOST_FOREACH.  Would there be any interest in a contribution to Gecode 
to provide this?  The supporting code that I had in mind would include 
new classes for the iterators and new methods .begin() and .end() for 
the arrays.

Cheers,
Greg

On 1/16/11 1:46 PM, Gregory Crosswhite wrote:
> Okidoke;  thanks for the explanation!  :-)
>
> Also, is this list the best way to talk to the developers of Gecode?
>
> Thanks,
> Greg
>
> On 1/16/11 1:10 PM, Christian Schulte wrote:
>> Hi Gregory,
>>
>> You are touching a slightly weird aspect of Gecode... The choice of 
>> int as
>> opposed to unsigned int for the Matrix class is actually deliberate. 
>> This
>> choice is not only done for Matrix but for many other datastructures 
>> that
>> are defined by Gecode (for example, VarArray, ViewArray, etc). I know 
>> that
>> the choice of unsigned int sounds more appealing but we have made the
>> opposite decision and try to be as consistent with the choice of int 
>> rather
>> than unsigned int.
>>
>> There are two reasons. The first is simple and maybe is not even very
>> convincing. The average loop written to iterate over arrays etc is 
>> typically
>> an int and not an unsigned int. To avoid compiler warnings, Gecode 
>> follows
>> in this. Then, the second reason (possibly not more convincing than the
>> first one) is that integer variables take int values and very often 
>> array
>> access is wrt a value included in the domain of an integer variable. 
>> Here we
>> go.
>>
>> We tried to use unsigned int but it was in fact just too painful 
>> (lots of
>> explicit casts in order to avoid warnings). Changing int to unsigned 
>> int and
>> be consistent about that change would be a massive effort with little 
>> gain.
>>
>> I know. Sad but true.
>>
>> Cheers
>> Christian
>>
>> -- 
>> Christian Schulte, web.ict.kth.se/~cschulte/
>>
>>
>> -----Original Message-----
>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On 
>> Behalf
>> Of Gregory Crosswhite
>> Sent: Friday, January 14, 2011 6:26 PM
>> To: users at gecode.org
>> Subject: [gecode-users] int vs. unsigned int for Matrix dimensions
>>
>> Hey everyone,
>>
>> Is there a reason why the Matrix class uses "int" for the type of its
>> dimensions instead of "unsigned int"?  If there isn't a reason not to
>> use "unsigned int" for the type of the dimensions, then may I submit a
>> patch or something to change it to use "unsigned int"?
>>
>> Thanks!
>> Greg
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users




From cschulte at kth.se  Mon Jan 17 17:31:50 2011
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 17 Jan 2011 17:31:50 +0100
Subject: [gecode-users] Edge-finding evaluation
In-Reply-To: <AANLkTi=d9KGGUXrZ9KAR5-KHo_n5FjKROwPKpgLZUZRw@mail.gmail.com>
References: <AANLkTinr-5L0GmqQ_0mdunGxH1SeFxSq7KvYtNUmTJ42@mail.gmail.com>	<000301cb8af7$97ae5150$c70af3f0$@se>	<AANLkTik6oJ5=1ijrde0JatSzM79q_8g2pcQwb3kphye2@mail.gmail.com>	<008001cb96c0$8802e750$9808b5f0$@se>	<AANLkTik5OJC9j_w1pc7HcUk_WZVA+6Jy1MH-k_Uvhz0c@mail.gmail.com>	<000601cbb016$e297a830$a7c6f890$@se>	<AANLkTinS_O05d2eq_wyg4Ei2-bUObzPqtvJOo4zr3hsK@mail.gmail.com>
	<AANLkTi=d9KGGUXrZ9KAR5-KHo_n5FjKROwPKpgLZUZRw@mail.gmail.com>
Message-ID: <004601cbb664$0b6786b0$22369410$@se>

Hi Roger,

please find a patch against Gecode 3.4.2 attached: it disables timetabling
propagation for cumulative.

Best
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: Roger Kameugne [mailto:roger.kameugne at gmail.com] 
Sent: Monday, January 17, 2011 10:33 AM
To: cschulte at kth.se
Cc: users at gecode.org
Subject: Re: [gecode-users] Edge-finding evaluation

 Hi Christian,
 Let me see the patch and may be it can help.

 Best
 Roger

2011/1/14, Roger Kameugne <roger.kameugne at gmail.com>:
> Hi Christian,
> Let me see the patch and may it can help.
>
> Best
> Roger
>
> 2011/1/9, Christian Schulte <cschulte at kth.se>:
>> Hi Roger,
>>
>> What I could do: send you a patch against Gecode 3.4.2 such that all
>> additional features for cumulative are disabled and you only get Vilim's
>> algorithm (including overload-checking). You then would have to rebuild
>> Gecode from the 3.4.2 source after having applied the patch.
>>
>> Would that help?
>>
>> Best
>> Christian
>>
>> --
>> Christian Schulte, web.ict.kth.se/~cschulte/
>>
>>
>>
>> -----Original Message-----
>> From: Roger Kameugne [mailto:roger.kameugne at gmail.com]
>> Sent: Saturday, January 08, 2011 9:45 AM
>> To: cschulte at kth.se
>> Cc: users at gecode.org
>> Subject: Re: [gecode-users] Edge-finding evaluation
>>
>> Hi all,
>> I need help to built Vilim edge-finding propagator with the gecode
>> code source.  Is there someone who can help me? I am still study the
>> philosophy of gecode propagator.
>> Wishing all of you a very happy, prosperous and peaceful NEW YEAR 2011.
>> Roger
>>
>>
>>
>>
>> 2010/12/8, Christian Schulte <cschulte at kth.se>:
>>> Hi Roger,
>>>
>>> No, not right now. What you would have to do is to do a propagator by
>>> yourself: just copy the code from the cumulative propagator and remove
>>> the
>>> part where edge-finding is called (the code is in
>>> gecode/scheduling/cumulative/man-prop.hpp for mandatory tasks).
>>>
>>> Cheers
>>> Christian
>>>
>>> --
>>> Christian Schulte, www.ict.kth.se/~cschulte/
>>>
>>>
>>> -----Original Message-----
>>> From: Roger Kameugne [mailto:roger.kameugne at gmail.com]
>>> Sent: Wednesday, December 08, 2010 10:49 AM
>>> To: cschulte at kth.se
>>> Cc: users at gecode.org
>>> Subject: Re: [gecode-users] Edge-finding evaluation
>>>
>>> Hi all,
>>> Is there any possibility to post the cumulative constraint only only
>>> with time-table and averload checking? In other words, how can I post
>>> the cumulative propagator only for time table and overloard checking?
>>>
>>> Best
>>> Roger
>>>
>>> 2010/11/23, Christian Schulte <cschulte at kth.se>:
>>>> Dear Roger,
>>>>
>>>> That sounds very interesting.
>>>>
>>>> But first a word of warning: the cumulative scheduling propagator in
>>> Gecode
>>>> 3.4.2 is still experimental: we ourselves have not fully evaluated its
>>>> performance and so on (the documentation in MPG marks the scheduling
>>> support
>>>> as still experimental).
>>>>
>>>> As it comes to integration of your algorithm you might want to consult
>>> Part
>>>> P (Programming Propagators) in MPG (Modeling and Programming with
>> Gecode).
>>>> Implementing a new constraint requires the implementation of the
>>>> corresponding propagator as detailed there.
>>>>
>>>> The function stop(t, cout) stops the timer t and prints it on cout (a
>>>> standard output stream). Please consult the files:
>>>> 	gecode/driver/script.hpp
>>>> 	gecode/driver/script.cpp
>>>> In general these pieces of information are found best by searching the
>>>> reference documentation for Gecode.
>>>>
>>>> As an alternative, when you want to print to a textfile you should
>>> redirect
>>>> the output printed in a standard shell to a file, so there is
>>>> definitely
>>> no
>>>> need to hack the script stuff in Gecode.
>>>>
>>>> For setting the time limit, just invoke the -help switch of any of the
>>>> Gecode examples. It tells you how (also consult Chapter 11 in the first
>>> part
>>>> of MPG how to use the commandline driver).
>>>>
>>>> Best
>>>> Christian
>>>>
>>>> --
>>>> Christian Schulte, www.ict.kth.se/~cschulte/
>>>>
>>>> -----Original Message-----
>>>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On
>> Behalf
>>>> Of Roger Kameugne
>>>> Sent: Tuesday, November 23, 2010 10:31 AM
>>>> To: users at gecode.org
>>>> Subject: [gecode-users] Edge-finding evaluation
>>>>
>>>> Hi all,
>>>> We have developed  a new cumulative edge-finding algorithm and we need
>>>> to evaluate it on RCPSP  with the current best know implement provide
>>>> in gecode 3.4.2  (Petr Vilim). We are new user of gecode and we have
>>>> used the Microsoft Visual Studio 2008.  We have many questions about
>>>> the the cumulative propagator.
>>>>
>>>> First of all, how can we integrate our edge-finding algorithm and used
>>>> the time-table and overload checking?
>>>>
>>>> To print out the runtime in a .txt file, we modify the file script.cpp
>>>> but we didn't know the type of  stop(t, cout)?
>>>>
>>>> The last but not the least question is about the setting of the time
>>>> limit. Where and how can we limit the runtime?
>>>> Thanks in advance.
>>>> Roger
>>>>
>>>> _______________________________________________
>>>> Gecode users mailing list
>>>> users at gecode.org
>>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>>>
>>>>
>>>
>>>
>>
>>
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cumulative-3.4.2.patch
Type: application/octet-stream
Size: 8880 bytes
Desc: not available
URL: <http://www.gecode.org/pipermail/users/attachments/20110117/ec41811e/attachment.obj>

From cschulte at kth.se  Tue Jan 18 11:42:33 2011
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 18 Jan 2011 11:42:33 +0100
Subject: [gecode-users] Loading the C runtime library without using
	a	manifest
References: <8BD008FC9041C04FAD36A0BD46AAA69D0563600CE9@SKA-WN-E25CEX.ptvag.ptv.de>
Message-ID: <006f01cbb6fc$6a403e00$3ec0ba00$@se>

Hi Alexander,

 

I just build dlls for Gecode 3.4.2 with manifests embedded. Could you please
try whether this solves your problem?

 

An archive with just the dlls, pdbs, and libs can be found here (they are
actually build from the trunk but should work):

                http://dl.dropbox.com/u/5119459/Gecode-3.4.2-manifest-dll.7z

 

Best

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: Christian Schulte [mailto:cschulte at kth.se] 
Sent: Friday, January 14, 2011 4:01 PM
To: 'Alexander Kleff'; 'users at gecode.org'
Subject: RE: [gecode-users] Loading the C runtime library without using a
manifest

 

Hi,

 

Actually I have to admit that (as you found out) we have to tried to ignore
this as much as possible, in particular as MSVC 2008 and MSVC 2010 do and
require different things regarding manifests.

 

Okay, the first user has complained: we are going to look into it in one of
the next (if not the next) releases. Could I get back to you as a possible
tester of what we might do?

 

Thanks for letting us know.

 

Best

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Alexander Kleff
Sent: Friday, January 14, 2011 3:52 PM
To: users at gecode.org
Subject: [gecode-users] Loading the C runtime library without using a
manifest

 

Hi everyone!

According to the last sentence in the last mail under "Linking to Gecode
with Microsoft Visual C++" you wait until somebody complains about the
absence of a manifest.

Well, I had some trouble loading Gecode libraries as I ran into the
Microsoft runtime error R6034 which is "An application has made an attempt
to load the C runtime library without using a manifest." Since Gecode
doesn't come with a manifest, I added a <dependency> statement for the
needed runtime to the manifest of the calling application manually. So now
it loads but it seems to me that it would be "cleaner" to have this in
Gecode. Do you agree? Or am I mislead?

For the sake of completeness, I'm currently migrating to Visual Studio 2010
under Win7. By the way, the calling application is written in C#.

Best regards,

Alexander

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110118/917d4c88/attachment-0001.htm>

From alexander.kleff at ptv.de  Tue Jan 18 14:19:53 2011
From: alexander.kleff at ptv.de (Alexander Kleff)
Date: Tue, 18 Jan 2011 14:19:53 +0100
Subject: [gecode-users] Loading the C runtime library without using
	a	manifest
In-Reply-To: <006f01cbb6fc$6a403e00$3ec0ba00$@se>
References: <8BD008FC9041C04FAD36A0BD46AAA69D0563600CE9@SKA-WN-E25CEX.ptvag.ptv.de>
	<006f01cbb6fc$6a403e00$3ec0ba00$@se>
Message-ID: <8BD008FC9041C04FAD36A0BD46AAA69D0563601186@SKA-WN-E25CEX.ptvag.ptv.de>

Hi,

indeed, with these dlls I do not need to change anything in my test application to make it run (didn't try it in the actual application). So for now, I'm fine. Thanks.
Do you intend to provide x64 and debug binaries as well?
Would be nice.

Best regards,
Alexander

Von: Christian Schulte [mailto:cschulte at kth.se]<mailto:[mailto:cschulte at kth.se]>
Gesendet: Dienstag, 18. Januar 2011 11:43
An: 'Christian Schulte'; Alexander Kleff; users at gecode.org<mailto:users at gecode.org>
Betreff: RE: [gecode-users] Loading the C runtime library without using a manifest

Hi Alexander,

I just build dlls for Gecode 3.4.2 with manifests embedded. Could you please try whether this solves your problem?

An archive with just the dlls, pdbs, and libs can be found here (they are actually build from the trunk but should work):
                http://dl.dropbox.com/u/5119459/Gecode-3.4.2-manifest-dll.7z

Best
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/<http://www.ict.kth.se/~cschulte/>

From: Christian Schulte [mailto:cschulte at kth.se]<mailto:[mailto:cschulte at kth.se]>
Sent: Friday, January 14, 2011 4:01 PM
To: 'Alexander Kleff'; 'users at gecode.org'
Subject: RE: [gecode-users] Loading the C runtime library without using a manifest

Hi,

Actually I have to admit that (as you found out) we have to tried to ignore this as much as possible, in particular as MSVC 2008 and MSVC 2010 do and require different things regarding manifests.

Okay, the first user has complained: we are going to look into it in one of the next (if not the next) releases. Could I get back to you as a possible tester of what we might do?

Thanks for letting us know.

Best
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/<http://www.ict.kth.se/~cschulte/>

From: users-bounces at gecode.org<mailto:users-bounces at gecode.org> [mailto:users-bounces at gecode.org]<mailto:[mailto:users-bounces at gecode.org]> On Behalf Of Alexander Kleff
Sent: Friday, January 14, 2011 3:52 PM
To: users at gecode.org<mailto:users at gecode.org>
Subject: [gecode-users] Loading the C runtime library without using a manifest

Hi everyone!
According to the last sentence in the last mail under "Linking to Gecode with Microsoft Visual C++" you wait until somebody complains about the absence of a manifest.
Well, I had some trouble loading Gecode libraries as I ran into the Microsoft runtime error R6034 which is "An application has made an attempt to load the C runtime library without using a manifest." Since Gecode doesn't come with a manifest, I added a <dependency> statement for the needed runtime to the manifest of the calling application manually. So now it loads but it seems to me that it would be "cleaner" to have this in Gecode. Do you agree? Or am I mislead?
For the sake of completeness, I'm currently migrating to Visual Studio 2010 under Win7. By the way, the calling application is written in C#.
Best regards,
Alexander

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110118/d12bb635/attachment.htm>

From joe.porter at gmail.com  Tue Jan 18 14:20:53 2011
From: joe.porter at gmail.com (Joe Porter)
Date: Tue, 18 Jan 2011 07:20:53 -0600
Subject: [gecode-users] Loading the C runtime library without using a
	manifest
In-Reply-To: <006f01cbb6fc$6a403e00$3ec0ba00$@se>
References: <8BD008FC9041C04FAD36A0BD46AAA69D0563600CE9@SKA-WN-E25CEX.ptvag.ptv.de>
	<006f01cbb6fc$6a403e00$3ec0ba00$@se>
Message-ID: <AANLkTikwYx8YTFpqK429Ci3=zsYzstjPyx4JSxAOftd5@mail.gmail.com>

Let me be the second user to complain, then.  I built two very similar
applications against Gecode 3.4.2 (VS 2010 and Win 7).  One worked fine, and
the other couldn't find the C runtime.  We compared the project settings
between the two, and found that the first was actually picking up the C
runtime from another library in the project just by luck.  Stealing the
manifest from the working binary and adding it to the second binary caused
the second to work as well.  Obviously that's not the ideal solution long
term, and really only worked because the dependencies were fairly simple in
both cases.

-Joe Porter
ISIS, Vanderbilt University
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110118/5e2ac662/attachment.htm>

From cschulte at kth.se  Tue Jan 18 14:24:40 2011
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 18 Jan 2011 14:24:40 +0100
Subject: [gecode-users] Loading the C runtime library without using
	a	manifest
In-Reply-To: <8BD008FC9041C04FAD36A0BD46AAA69D0563601186@SKA-WN-E25CEX.ptvag.ptv.de>
References: <8BD008FC9041C04FAD36A0BD46AAA69D0563600CE9@SKA-WN-E25CEX.ptvag.ptv.de>
	<006f01cbb6fc$6a403e00$3ec0ba00$@se>
	<8BD008FC9041C04FAD36A0BD46AAA69D0563601186@SKA-WN-E25CEX.ptvag.ptv.de>
Message-ID: <00a801cbb713$0f9fbea0$2edf3be0$@se>

If you really insist I could back port the fix to 3.4.2 and release new MSIs
for windows. Or could you wait for the next release?

 

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: Alexander Kleff [mailto:alexander.kleff at ptv.de] 
Sent: Tuesday, January 18, 2011 2:20 PM
To: cschulte at kth.se; users at gecode.org
Subject: AW: [gecode-users] Loading the C runtime library without using a
manifest

 

Hi,

 

indeed, with these dlls I do not need to change anything in my test
application to make it run (didn't try it in the actual application). So for
now, I'm fine. Thanks.

Do you intend to provide x64 and debug binaries as well?

Would be nice.

 

Best regards,

Alexander

 

Von: Christian Schulte [mailto:cschulte at kth.se] 
Gesendet: Dienstag, 18. Januar 2011 11:43
An: 'Christian Schulte'; Alexander Kleff;  <mailto:users at gecode.org>
users at gecode.org
Betreff: RE: [gecode-users] Loading the C runtime library without using a
manifest

 

Hi Alexander,

 

I just build dlls for Gecode 3.4.2 with manifests embedded. Could you please
try whether this solves your problem?

 

An archive with just the dlls, pdbs, and libs can be found here (they are
actually build from the trunk but should work):

                http://dl.dropbox.com/u/5119459/Gecode-3.4.2-manifest-dll.7z

 

Best

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: Christian Schulte [mailto:cschulte at kth.se] 
Sent: Friday, January 14, 2011 4:01 PM
To: 'Alexander Kleff'; 'users at gecode.org'
Subject: RE: [gecode-users] Loading the C runtime library without using a
manifest

 

Hi,

 

Actually I have to admit that (as you found out) we have to tried to ignore
this as much as possible, in particular as MSVC 2008 and MSVC 2010 do and
require different things regarding manifests.

 

Okay, the first user has complained: we are going to look into it in one of
the next (if not the next) releases. Could I get back to you as a possible
tester of what we might do?

 

Thanks for letting us know.

 

Best

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Alexander Kleff
Sent: Friday, January 14, 2011 3:52 PM
To: users at gecode.org
Subject: [gecode-users] Loading the C runtime library without using a
manifest

 

Hi everyone!

According to the last sentence in the last mail under "Linking to Gecode
with Microsoft Visual C++" you wait until somebody complains about the
absence of a manifest.

Well, I had some trouble loading Gecode libraries as I ran into the
Microsoft runtime error R6034 which is "An application has made an attempt
to load the C runtime library without using a manifest." Since Gecode
doesn't come with a manifest, I added a <dependency> statement for the
needed runtime to the manifest of the calling application manually. So now
it loads but it seems to me that it would be "cleaner" to have this in
Gecode. Do you agree? Or am I mislead?

For the sake of completeness, I'm currently migrating to Visual Studio 2010
under Win7. By the way, the calling application is written in C#.

Best regards,

Alexander

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110118/22741a1c/attachment-0001.htm>

From cschulte at kth.se  Tue Jan 18 20:40:53 2011
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 18 Jan 2011 20:40:53 +0100
Subject: [gecode-users] Loading the C runtime library without using
	a	manifest
In-Reply-To: <8BD008FC9041C04FAD36A0BD46AAA69D056360126A@SKA-WN-E25CEX.ptvag.ptv.de>
References: <8BD008FC9041C04FAD36A0BD46AAA69D0563600CE9@SKA-WN-E25CEX.ptvag.ptv.de>
	<006f01cbb6fc$6a403e00$3ec0ba00$@se>
	<8BD008FC9041C04FAD36A0BD46AAA69D0563601186@SKA-WN-E25CEX.ptvag.ptv.de>
	<00a801cbb713$0f9fbea0$2edf3be0$@se>
	<8BD008FC9041C04FAD36A0BD46AAA69D056360126A@SKA-WN-E25CEX.ptvag.ptv.de>
Message-ID: <001a01cbb747$9f565f70$de031e50$@se>

How about releasing a new version within a week. Would be in fact less work
than backporting and some more bug fixes would get out.

 

Deal?

 

Christian

 

--

Christian Schulte, web.ict.kth.se/~cschulte/

 

 

From: Alexander Kleff [mailto:alexander.kleff at ptv.de] 
Sent: Tuesday, January 18, 2011 7:02 PM
To: cschulte at kth.se
Subject: AW: [gecode-users] Loading the C runtime library without using a
manifest

 

Hi,

 

At least I need some fix now, so either your back port or my workaround. To
back port would be very kind of you as the workaround is a bit involved
because the manifest is created automatically and has to be edited by hand
afterwards (or possibly by a script in the future).

I don't know how much inconvenience it causes to you to back port but it
would help me very much.

 

Best regards,

Alexander

 

Von: Christian Schulte [mailto:cschulte at kth.se] 
Gesendet: Dienstag, 18. Januar 2011 14:25
An: Alexander Kleff; users at gecode.org
Betreff: RE: [gecode-users] Loading the C runtime library without using a
manifest

 

If you really insist I could back port the fix to 3.4.2 and release new MSIs
for windows. Or could you wait for the next release?

 

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: Alexander Kleff [mailto:alexander.kleff at ptv.de] 
Sent: Tuesday, January 18, 2011 2:20 PM
To: cschulte at kth.se; users at gecode.org
Subject: AW: [gecode-users] Loading the C runtime library without using a
manifest

 

Hi,

 

indeed, with these dlls I do not need to change anything in my test
application to make it run (didn't try it in the actual application). So for
now, I'm fine. Thanks.

Do you intend to provide x64 and debug binaries as well?

Would be nice.

 

Best regards,

Alexander

 

Von: Christian Schulte [mailto:cschulte at kth.se] 
Gesendet: Dienstag, 18. Januar 2011 11:43
An: 'Christian Schulte'; Alexander Kleff;  <mailto:users at gecode.org>
users at gecode.org
Betreff: RE: [gecode-users] Loading the C runtime library without using a
manifest

 

Hi Alexander,

 

I just build dlls for Gecode 3.4.2 with manifests embedded. Could you please
try whether this solves your problem?

 

An archive with just the dlls, pdbs, and libs can be found here (they are
actually build from the trunk but should work):

                http://dl.dropbox.com/u/5119459/Gecode-3.4.2-manifest-dll.7z

 

Best

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: Christian Schulte [mailto:cschulte at kth.se] 
Sent: Friday, January 14, 2011 4:01 PM
To: 'Alexander Kleff'; 'users at gecode.org'
Subject: RE: [gecode-users] Loading the C runtime library without using a
manifest

 

Hi,

 

Actually I have to admit that (as you found out) we have to tried to ignore
this as much as possible, in particular as MSVC 2008 and MSVC 2010 do and
require different things regarding manifests.

 

Okay, the first user has complained: we are going to look into it in one of
the next (if not the next) releases. Could I get back to you as a possible
tester of what we might do?

 

Thanks for letting us know.

 

Best

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Alexander Kleff
Sent: Friday, January 14, 2011 3:52 PM
To: users at gecode.org
Subject: [gecode-users] Loading the C runtime library without using a
manifest

 

Hi everyone!

According to the last sentence in the last mail under "Linking to Gecode
with Microsoft Visual C++" you wait until somebody complains about the
absence of a manifest.

Well, I had some trouble loading Gecode libraries as I ran into the
Microsoft runtime error R6034 which is "An application has made an attempt
to load the C runtime library without using a manifest." Since Gecode
doesn't come with a manifest, I added a <dependency> statement for the
needed runtime to the manifest of the calling application manually. So now
it loads but it seems to me that it would be "cleaner" to have this in
Gecode. Do you agree? Or am I mislead?

For the sake of completeness, I'm currently migrating to Visual Studio 2010
under Win7. By the way, the calling application is written in C#.

Best regards,

Alexander

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110118/2fe43f43/attachment.htm>

From alexander.kleff at ptv.de  Wed Jan 19 08:38:36 2011
From: alexander.kleff at ptv.de (Alexander Kleff)
Date: Wed, 19 Jan 2011 08:38:36 +0100
Subject: [gecode-users] Loading the C runtime library without using
	a	manifest
In-Reply-To: <001a01cbb747$9f565f70$de031e50$@se>
References: <8BD008FC9041C04FAD36A0BD46AAA69D0563600CE9@SKA-WN-E25CEX.ptvag.ptv.de>
	<006f01cbb6fc$6a403e00$3ec0ba00$@se>
	<8BD008FC9041C04FAD36A0BD46AAA69D0563601186@SKA-WN-E25CEX.ptvag.ptv.de>
	<00a801cbb713$0f9fbea0$2edf3be0$@se>
	<8BD008FC9041C04FAD36A0BD46AAA69D056360126A@SKA-WN-E25CEX.ptvag.ptv.de>
	<001a01cbb747$9f565f70$de031e50$@se>
Message-ID: <8BD008FC9041C04FAD36A0BD46AAA69D056360129B@SKA-WN-E25CEX.ptvag.ptv.de>

Yeah,

that would be great, I didn't know a new release was coming so soon.
Thanks a lot.

Alexander

Von: Christian Schulte [mailto:cschulte at kth.se]
Gesendet: Dienstag, 18. Januar 2011 20:41
An: Alexander Kleff
Cc: users at gecode.org
Betreff: RE: [gecode-users] Loading the C runtime library without using a manifest

How about releasing a new version within a week. Would be in fact less work than backporting and some more bug fixes would get out.

Deal?

Christian

--
Christian Schulte, web.ict.kth.se/~cschulte/


From: Alexander Kleff [mailto:alexander.kleff at ptv.de]
Sent: Tuesday, January 18, 2011 7:02 PM
To: cschulte at kth.se
Subject: AW: [gecode-users] Loading the C runtime library without using a manifest

Hi,

At least I need some fix now, so either your back port or my workaround. To back port would be very kind of you as the workaround is a bit involved because the manifest is created automatically and has to be edited by hand afterwards (or possibly by a script in the future).
I don't know how much inconvenience it causes to you to back port but it would help me very much.

Best regards,
Alexander

Von: Christian Schulte [mailto:cschulte at kth.se]
Gesendet: Dienstag, 18. Januar 2011 14:25
An: Alexander Kleff; users at gecode.org
Betreff: RE: [gecode-users] Loading the C runtime library without using a manifest

If you really insist I could back port the fix to 3.4.2 and release new MSIs for windows. Or could you wait for the next release?

Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/

From: Alexander Kleff [mailto:alexander.kleff at ptv.de]
Sent: Tuesday, January 18, 2011 2:20 PM
To: cschulte at kth.se; users at gecode.org
Subject: AW: [gecode-users] Loading the C runtime library without using a manifest

Hi,

indeed, with these dlls I do not need to change anything in my test application to make it run (didn't try it in the actual application). So for now, I'm fine. Thanks.
Do you intend to provide x64 and debug binaries as well?
Would be nice.

Best regards,
Alexander

Von: Christian Schulte [mailto:cschulte at kth.se]<mailto:[mailto:cschulte at kth.se]>
Gesendet: Dienstag, 18. Januar 2011 11:43
An: 'Christian Schulte'; Alexander Kleff; users at gecode.org<mailto:users at gecode.org>
Betreff: RE: [gecode-users] Loading the C runtime library without using a manifest

Hi Alexander,

I just build dlls for Gecode 3.4.2 with manifests embedded. Could you please try whether this solves your problem?

An archive with just the dlls, pdbs, and libs can be found here (they are actually build from the trunk but should work):
                http://dl.dropbox.com/u/5119459/Gecode-3.4.2-manifest-dll.7z

Best
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/<http://www.ict.kth.se/~cschulte/>

From: Christian Schulte [mailto:cschulte at kth.se]<mailto:[mailto:cschulte at kth.se]>
Sent: Friday, January 14, 2011 4:01 PM
To: 'Alexander Kleff'; 'users at gecode.org'
Subject: RE: [gecode-users] Loading the C runtime library without using a manifest

Hi,

Actually I have to admit that (as you found out) we have to tried to ignore this as much as possible, in particular as MSVC 2008 and MSVC 2010 do and require different things regarding manifests.

Okay, the first user has complained: we are going to look into it in one of the next (if not the next) releases. Could I get back to you as a possible tester of what we might do?

Thanks for letting us know.

Best
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/<http://www.ict.kth.se/~cschulte/>

From: users-bounces at gecode.org<mailto:users-bounces at gecode.org> [mailto:users-bounces at gecode.org]<mailto:[mailto:users-bounces at gecode.org]> On Behalf Of Alexander Kleff
Sent: Friday, January 14, 2011 3:52 PM
To: users at gecode.org<mailto:users at gecode.org>
Subject: [gecode-users] Loading the C runtime library without using a manifest

Hi everyone!
According to the last sentence in the last mail under "Linking to Gecode with Microsoft Visual C++" you wait until somebody complains about the absence of a manifest.
Well, I had some trouble loading Gecode libraries as I ran into the Microsoft runtime error R6034 which is "An application has made an attempt to load the C runtime library without using a manifest." Since Gecode doesn't come with a manifest, I added a <dependency> statement for the needed runtime to the manifest of the calling application manually. So now it loads but it seems to me that it would be "cleaner" to have this in Gecode. Do you agree? Or am I mislead?
For the sake of completeness, I'm currently migrating to Visual Studio 2010 under Win7. By the way, the calling application is written in C#.
Best regards,
Alexander

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110119/3761185c/attachment-0001.htm>

From alexander.kleff at ptv.de  Wed Jan 19 18:27:11 2011
From: alexander.kleff at ptv.de (Alexander Kleff)
Date: Wed, 19 Jan 2011 18:27:11 +0100
Subject: [gecode-users] Crash while freeing memory in connection with VS2010
Message-ID: <8BD008FC9041C04FAD36A0BD46AAA69D05636014A6@SKA-WN-E25CEX.ptvag.ptv.de>

Hi once again,

the code below compiles and links in both versions (so I assume I did not make an all too obvious modeling mistake) but it crashes in VS2010 in contrast to VS2008(Express).
The error seems to occur during the destruction of the linear expression. The debugger sets the break point to Heap::rfree(void* p) in heap.hpp in all three cases.
Can you reproduce it?

Thanks for help,
Alexander



#include <gecode/minimodel.hh>

using namespace Gecode;

class GecodeTest : public Space {
public:
  GecodeTest(void)
  {
   IntVar z(*this, 0, 1);

   IntVar e1 = expr(*this, 1 * z);
   IntVar e2 = expr(*this, z);      // error 1

   IntArgs cost(2);
   for (int v=0; v<2; ++v)
   {
      cost[v] = v;
   }

   LinExpr xy = element(cost, z);
   IntVar e3 = expr(*this, xy);
   IntVar e4 = expr(*this, element(cost, z));   // error 2
  } // error 3 (in destructor)


  GecodeTest(bool share, GecodeTest& s) : Space(share, s) {}
  virtual Space* copy(bool share) { return new GecodeTest(share,*this); }
};


// main function
int main(array<System::String ^> ^args)
{
  GecodeTest* m = new GecodeTest;
  delete m;
  return 0;
}

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110119/a97507da/attachment.htm>

From gcross at phys.washington.edu  Wed Jan 19 19:54:35 2011
From: gcross at phys.washington.edu (Gregory Crosswhite)
Date: Wed, 19 Jan 2011 10:54:35 -0800
Subject: [gecode-users] int vs. unsigned int for Matrix dimensions
In-Reply-To: <003401cbb64d$25c4e9b0$714ebd10$@se>
References: <4D308719.4020405@phys.washington.edu>	<000001cbb5c1$d8427260$88c75720$@se>
	<4D336735.3080607@phys.washington.edu>
	<4D3380F6.2020404@phys.washington.edu>
	<003401cbb64d$25c4e9b0$714ebd10$@se>
Message-ID: <4D37336B.8020303@phys.washington.edu>

Actually, I just came up with a simpler idea:  rather than creating a 
new iterator class, you could simply use a pointer as the iterator type, 
so that adding a full set of begin()/end() methods is easy:

#include <iterator> // STL iterator classes

template<class Var> VarArray {
protected:
     int n;
     Var* v;
public:
     Var* VarArray::begin() { return v; }
     Var* VarArray::end() { return v+n; }
     const Var* VarArray::begin() const { return v; }
     const Var* VarArray::end() const { return v+n; }

     Var* VarArray::rbegin() { return std::reverse_iterator(end()); }
     Var* VarArray::rend() { return std::reverse_iterator(begin()); }
     const Var* VarArray::rbegin() const { return 
std::reverse_iterator(end()); }
     const Var* VarArray::rend() const { return 
std::reverse_iterator(begin()); }
...
};

(And of course the same can be done for ArgArrayBase.)

Adding these methods should be sufficient to allow library users to 
iterate over your arrays using the standard idioms.

Cheers,
Greg

On 1/17/11 5:47 AM, Christian Schulte wrote:
> Hi,
>
> Yes, this list is a good forum...
>
> Again you caught us red-handed... I know that begin() and end() is the
> standard idiom but some of our iterators do not naturally fit in this
> concept (that iterators that iterate over values and ranges of variables and
> views).
>
> I think what one could do is providing a wrapper class that translates a
> Gecode-style iterator (using a constructor or init function for
> initialization, operator ++() for moving to the next element, and operator
> ()() for testing whether the operator is done). If you can come up with
> something like that we would of course integrate it.
>
> Best
> Christian
>
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
>
>
> -----Original Message-----
> From: Gregory Crosswhite [mailto:gcross at phys.washington.edu]
> Sent: Monday, January 17, 2011 12:36 AM
> To: users at gecode.org; cschulte at kth.se
> Subject: Re: [gecode-users] int vs. unsigned int for Matrix dimensions
>
> Part of the reason I am asking how to talk to the developers,
> by-the-way, is because I was thinking it might be useful for the
> arrays/argument arrays to have an iterator interface added to them, to
> make it easier to do things like applying generics algorithms to them
> and traversing them using the c++0x "for each" statement as well as
> BOOST_FOREACH.  Would there be any interest in a contribution to Gecode
> to provide this?  The supporting code that I had in mind would include
> new classes for the iterators and new methods .begin() and .end() for
> the arrays.
>
> Cheers,
> Greg
>
> On 1/16/11 1:46 PM, Gregory Crosswhite wrote:
>> Okidoke;  thanks for the explanation!  :-)
>>
>> Also, is this list the best way to talk to the developers of Gecode?
>>
>> Thanks,
>> Greg
>>
>> On 1/16/11 1:10 PM, Christian Schulte wrote:
>>> Hi Gregory,
>>>
>>> You are touching a slightly weird aspect of Gecode... The choice of
>>> int as
>>> opposed to unsigned int for the Matrix class is actually deliberate.
>>> This
>>> choice is not only done for Matrix but for many other datastructures
>>> that
>>> are defined by Gecode (for example, VarArray, ViewArray, etc). I know
>>> that
>>> the choice of unsigned int sounds more appealing but we have made the
>>> opposite decision and try to be as consistent with the choice of int
>>> rather
>>> than unsigned int.
>>>
>>> There are two reasons. The first is simple and maybe is not even very
>>> convincing. The average loop written to iterate over arrays etc is
>>> typically
>>> an int and not an unsigned int. To avoid compiler warnings, Gecode
>>> follows
>>> in this. Then, the second reason (possibly not more convincing than the
>>> first one) is that integer variables take int values and very often
>>> array
>>> access is wrt a value included in the domain of an integer variable.
>>> Here we
>>> go.
>>>
>>> We tried to use unsigned int but it was in fact just too painful
>>> (lots of
>>> explicit casts in order to avoid warnings). Changing int to unsigned
>>> int and
>>> be consistent about that change would be a massive effort with little
>>> gain.
>>>
>>> I know. Sad but true.
>>>
>>> Cheers
>>> Christian
>>>
>>> -- 
>>> Christian Schulte, web.ict.kth.se/~cschulte/
>>>
>>>
>>> -----Original Message-----
>>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On
>>> Behalf
>>> Of Gregory Crosswhite
>>> Sent: Friday, January 14, 2011 6:26 PM
>>> To: users at gecode.org
>>> Subject: [gecode-users] int vs. unsigned int for Matrix dimensions
>>>
>>> Hey everyone,
>>>
>>> Is there a reason why the Matrix class uses "int" for the type of its
>>> dimensions instead of "unsigned int"?  If there isn't a reason not to
>>> use "unsigned int" for the type of the dimensions, then may I submit a
>>> patch or something to change it to use "unsigned int"?
>>>
>>> Thanks!
>>> Greg
>>>
>>> _______________________________________________
>>> Gecode users mailing list
>>> users at gecode.org
>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>>
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>



From zayenz at gmail.com  Wed Jan 19 20:46:06 2011
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Wed, 19 Jan 2011 20:46:06 +0100
Subject: [gecode-users] Crash while freeing memory in connection with
	VS2010
In-Reply-To: <8BD008FC9041C04FAD36A0BD46AAA69D05636014A6@SKA-WN-E25CEX.ptvag.ptv.de>
References: <8BD008FC9041C04FAD36A0BD46AAA69D05636014A6@SKA-WN-E25CEX.ptvag.ptv.de>
Message-ID: <AANLkTinXVB9PBd2wcU6Cs2t-OpevQKjEKGm9xeubULZB@mail.gmail.com>

Hi,

You seem to be using managed C++. Have you tried running your program with
standard C++? The different memory policy might be a source of problems.

I don't have a Windows machine to test on, so I haven't tried your program
myself.

Cheers,
Mikael

2011/1/19 Alexander Kleff <alexander.kleff at ptv.de>

> Hi once again,
>
>
>
> the code below compiles and links in both versions (so I assume I did not
> make an all too obvious modeling mistake) but it crashes in VS2010 in
> contrast to VS2008(Express).
>
> The error seems to occur during the destruction of the linear expression.
> The debugger sets the break point to Heap::rfree(void* p) in heap.hpp in all
> three cases.
>
> Can you reproduce it?
>
>
>
> Thanks for help,
>
> Alexander
>
>
>
>
>
>
>
> #include <gecode/minimodel.hh>
>
>
>
> using namespace Gecode;
>
>
>
> class GecodeTest : public Space {
>
> public:
>
>   GecodeTest(void)
>
>   {
>
>    IntVar z(*this, 0, 1);
>
>
>
>    IntVar e1 = expr(*this, 1 * z);
>
>    IntVar e2 = expr(*this, z);      // error 1
>
>
>
>    IntArgs cost(2);
>
>    for (int v=0; v<2; ++v)
>
>    {
>
>       cost[v] = v;
>
>    }
>
>
>
>    LinExpr xy = element(cost, z);
>
>    IntVar e3 = expr(*this, xy);
>
>    IntVar e4 = expr(*this, element(cost, z));   // error 2
>
>   } // error 3 (in destructor)
>
>
>
>
>
>   GecodeTest(bool share, GecodeTest& s) : Space(share, s) {}
>
>   virtual Space* copy(bool share) { return new GecodeTest(share,*this); }
>
> };
>
>
>
>
>
> // main function
>
> int main(array<System::String ^> ^args)
>
> {
>
>   GecodeTest* m = new GecodeTest;
>
>   delete m;
>
>   return 0;
>
> }
>
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>


-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110119/b296b198/attachment-0001.htm>

From cschulte at kth.se  Thu Jan 20 09:02:44 2011
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 20 Jan 2011 09:02:44 +0100
Subject: [gecode-users] Crash while freeing memory in connection
	with	VS2010
In-Reply-To: <AANLkTinXVB9PBd2wcU6Cs2t-OpevQKjEKGm9xeubULZB@mail.gmail.com>
References: <8BD008FC9041C04FAD36A0BD46AAA69D05636014A6@SKA-WN-E25CEX.ptvag.ptv.de>
	<AANLkTinXVB9PBd2wcU6Cs2t-OpevQKjEKGm9xeubULZB@mail.gmail.com>
Message-ID: <000c01cbb878$6b72c0e0$425842a0$@se>

Please,

 

also let us know which platform (x86 versus x64) and whether you use the
binaries we distribute or have build them yourselves (then we need to know
whether you built with 2008 or 2010)

 

Thanks

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Mikael Zayenz Lagerkvist
Sent: Wednesday, January 19, 2011 8:46 PM
To: Alexander Kleff
Cc: users at gecode.org
Subject: Re: [gecode-users] Crash while freeing memory in connection with
VS2010

 

Hi,

 

You seem to be using managed C++. Have you tried running your program with
standard C++? The different memory policy might be a source of problems.

 

I don't have a Windows machine to test on, so I haven't tried your program
myself.

 

Cheers,

Mikael

2011/1/19 Alexander Kleff <alexander.kleff at ptv.de>

Hi once again,

 

the code below compiles and links in both versions (so I assume I did not
make an all too obvious modeling mistake) but it crashes in VS2010 in
contrast to VS2008(Express).

The error seems to occur during the destruction of the linear expression.
The debugger sets the break point to Heap::rfree(void* p) in heap.hpp in all
three cases.

Can you reproduce it? 

 

Thanks for help,

Alexander

 

 

 

#include <gecode/minimodel.hh>

 

using namespace Gecode;

 

class GecodeTest : public Space {

public:

  GecodeTest(void) 

  {

   IntVar z(*this, 0, 1);

 

   IntVar e1 = expr(*this, 1 * z);

   IntVar e2 = expr(*this, z);      // error 1

 

   IntArgs cost(2);

   for (int v=0; v<2; ++v)

   {

      cost[v] = v;      

   }

 

   LinExpr xy = element(cost, z);  

   IntVar e3 = expr(*this, xy);

   IntVar e4 = expr(*this, element(cost, z));   // error 2

  } // error 3 (in destructor)

 

 

  GecodeTest(bool share, GecodeTest& s) : Space(share, s) {}

  virtual Space* copy(bool share) { return new GecodeTest(share,*this); }

};

 

 

// main function

int main(array<System::String ^> ^args)

{

  GecodeTest* m = new GecodeTest;

  delete m;

  return 0;

}

 


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110120/3c42dcb3/attachment.htm>

From alexander.kleff at ptv.de  Thu Jan 20 10:42:58 2011
From: alexander.kleff at ptv.de (Alexander Kleff)
Date: Thu, 20 Jan 2011 10:42:58 +0100
Subject: [gecode-users] Crash while freeing memory in connection
	with	VS2010
In-Reply-To: <000c01cbb878$6b72c0e0$425842a0$@se>
References: <8BD008FC9041C04FAD36A0BD46AAA69D05636014A6@SKA-WN-E25CEX.ptvag.ptv.de>
	<AANLkTinXVB9PBd2wcU6Cs2t-OpevQKjEKGm9xeubULZB@mail.gmail.com>
	<000c01cbb878$6b72c0e0$425842a0$@se>
Message-ID: <8BD008FC9041C04FAD36A0BD46AAA69D056360157C@SKA-WN-E25CEX.ptvag.ptv.de>

Hi,

I made another project (currently for x86 platform) to make sure it is unmanaged. Unfortunately, the problem still arises, although I cannot see anything suspicious. Any other idea?
I'm using the 3.4.2 binaries from your site, so both msvcr90d.dll and msvcr100d.dll are currently loaded.

Thanks for any suggestion,
Alexander

Von: Christian Schulte [mailto:cschulte at kth.se]
Gesendet: Donnerstag, 20. Januar 2011 09:03
An: 'Mikael Zayenz Lagerkvist'; Alexander Kleff
Cc: users at gecode.org
Betreff: RE: [gecode-users] Crash while freeing memory in connection with VS2010

Please,

also let us know which platform (x86 versus x64) and whether you use the binaries we distribute or have build them yourselves (then we need to know whether you built with 2008 or 2010)

Thanks
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Mikael Zayenz Lagerkvist
Sent: Wednesday, January 19, 2011 8:46 PM
To: Alexander Kleff
Cc: users at gecode.org
Subject: Re: [gecode-users] Crash while freeing memory in connection with VS2010

Hi,

You seem to be using managed C++. Have you tried running your program with standard C++? The different memory policy might be a source of problems.

I don't have a Windows machine to test on, so I haven't tried your program myself.

Cheers,
Mikael
2011/1/19 Alexander Kleff <alexander.kleff at ptv.de<mailto:alexander.kleff at ptv.de>>
Hi once again,

the code below compiles and links in both versions (so I assume I did not make an all too obvious modeling mistake) but it crashes in VS2010 in contrast to VS2008(Express).
The error seems to occur during the destruction of the linear expression. The debugger sets the break point to Heap::rfree(void* p) in heap.hpp in all three cases.
Can you reproduce it?

Thanks for help,
Alexander



#include <gecode/minimodel.hh>

using namespace Gecode;

class GecodeTest : public Space {
public:
  GecodeTest(void)
  {
   IntVar z(*this, 0, 1);

   IntVar e1 = expr(*this, 1 * z);
   IntVar e2 = expr(*this, z);      // error 1

   IntArgs cost(2);
   for (int v=0; v<2; ++v)
   {
      cost[v] = v;
   }

   LinExpr xy = element(cost, z);
   IntVar e3 = expr(*this, xy);
   IntVar e4 = expr(*this, element(cost, z));   // error 2
  } // error 3 (in destructor)


  GecodeTest(bool share, GecodeTest& s) : Space(share, s) {}
  virtual Space* copy(bool share) { return new GecodeTest(share,*this); }
};


// main function
int main(array<System::String ^> ^args)
{
  GecodeTest* m = new GecodeTest;
  delete m;
  return 0;
}


_______________________________________________
Gecode users mailing list
users at gecode.org<mailto:users at gecode.org>
https://www.gecode.org/mailman/listinfo/gecode-users



--
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110120/3b06b13a/attachment-0001.htm>

From alexander.kleff at ptv.de  Thu Jan 20 12:15:04 2011
From: alexander.kleff at ptv.de (Alexander Kleff)
Date: Thu, 20 Jan 2011 12:15:04 +0100
Subject: [gecode-users] Crash while freeing memory in
	connection	with	VS2010
In-Reply-To: <8BD008FC9041C04FAD36A0BD46AAA69D056360157C@SKA-WN-E25CEX.ptvag.ptv.de>
References: <8BD008FC9041C04FAD36A0BD46AAA69D05636014A6@SKA-WN-E25CEX.ptvag.ptv.de>
	<AANLkTinXVB9PBd2wcU6Cs2t-OpevQKjEKGm9xeubULZB@mail.gmail.com>
	<000c01cbb878$6b72c0e0$425842a0$@se>
	<8BD008FC9041C04FAD36A0BD46AAA69D056360157C@SKA-WN-E25CEX.ptvag.ptv.de>
Message-ID: <8BD008FC9041C04FAD36A0BD46AAA69D05636015E0@SKA-WN-E25CEX.ptvag.ptv.de>

Hi,

after some research I came to the following conclusion:
Due to inlining, the memory of the node in LinExpr will be allocated by msvcr100d.dll, whilst at least the destructor of LinExpr is not inlined. The memory of the node will therefore be freed by msvcr90d.dll. This will not work.
As I see it, there is no other way for me than to have Gecode bound to msvcr100d.dll. Can you help me out by making your VS2008 project files available? This way, it would be much easier to migrate to VS2010 than to start from scratch.

Cheers,
Alexander



Von: users-bounces at gecode.org [mailto:users-bounces at gecode.org] Im Auftrag von Alexander Kleff
Gesendet: Donnerstag, 20. Januar 2011 10:43
An: cschulte at kth.se; 'Mikael Zayenz Lagerkvist'
Cc: users at gecode.org
Betreff: Re: [gecode-users] Crash while freeing memory in connection with VS2010

Hi,

I made another project (currently for x86 platform) to make sure it is unmanaged. Unfortunately, the problem still arises, although I cannot see anything suspicious. Any other idea?
I'm using the 3.4.2 binaries from your site, so both msvcr90d.dll and msvcr100d.dll are currently loaded.

Thanks for any suggestion,
Alexander

Von: Christian Schulte [mailto:cschulte at kth.se]
Gesendet: Donnerstag, 20. Januar 2011 09:03
An: 'Mikael Zayenz Lagerkvist'; Alexander Kleff
Cc: users at gecode.org
Betreff: RE: [gecode-users] Crash while freeing memory in connection with VS2010

Please,

also let us know which platform (x86 versus x64) and whether you use the binaries we distribute or have build them yourselves (then we need to know whether you built with 2008 or 2010)

Thanks
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Mikael Zayenz Lagerkvist
Sent: Wednesday, January 19, 2011 8:46 PM
To: Alexander Kleff
Cc: users at gecode.org
Subject: Re: [gecode-users] Crash while freeing memory in connection with VS2010

Hi,

You seem to be using managed C++. Have you tried running your program with standard C++? The different memory policy might be a source of problems.

I don't have a Windows machine to test on, so I haven't tried your program myself.

Cheers,
Mikael
2011/1/19 Alexander Kleff <alexander.kleff at ptv.de<mailto:alexander.kleff at ptv.de>>
Hi once again,

the code below compiles and links in both versions (so I assume I did not make an all too obvious modeling mistake) but it crashes in VS2010 in contrast to VS2008(Express).
The error seems to occur during the destruction of the linear expression. The debugger sets the break point to Heap::rfree(void* p) in heap.hpp in all three cases.
Can you reproduce it?

Thanks for help,
Alexander



#include <gecode/minimodel.hh>

using namespace Gecode;

class GecodeTest : public Space {
public:
  GecodeTest(void)
  {
   IntVar z(*this, 0, 1);

   IntVar e1 = expr(*this, 1 * z);
   IntVar e2 = expr(*this, z);      // error 1

   IntArgs cost(2);
   for (int v=0; v<2; ++v)
   {
      cost[v] = v;
   }

   LinExpr xy = element(cost, z);
   IntVar e3 = expr(*this, xy);
   IntVar e4 = expr(*this, element(cost, z));   // error 2
  } // error 3 (in destructor)


  GecodeTest(bool share, GecodeTest& s) : Space(share, s) {}
  virtual Space* copy(bool share) { return new GecodeTest(share,*this); }
};


// main function
int main(array<System::String ^> ^args)
{
  GecodeTest* m = new GecodeTest;
  delete m;
  return 0;
}


_______________________________________________
Gecode users mailing list
users at gecode.org<mailto:users at gecode.org>
https://www.gecode.org/mailman/listinfo/gecode-users



--
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110120/1276ef01/attachment.htm>

From cschulte at kth.se  Thu Jan 20 12:17:38 2011
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 20 Jan 2011 12:17:38 +0100
Subject: [gecode-users] Crash while freeing memory in
	connection	with	VS2010
In-Reply-To: <8BD008FC9041C04FAD36A0BD46AAA69D05636015E0@SKA-WN-E25CEX.ptvag.ptv.de>
References: <8BD008FC9041C04FAD36A0BD46AAA69D05636014A6@SKA-WN-E25CEX.ptvag.ptv.de>	<AANLkTinXVB9PBd2wcU6Cs2t-OpevQKjEKGm9xeubULZB@mail.gmail.com>	<000c01cbb878$6b72c0e0$425842a0$@se>
	<8BD008FC9041C04FAD36A0BD46AAA69D056360157C@SKA-WN-E25CEX.ptvag.ptv.de>
	<8BD008FC9041C04FAD36A0BD46AAA69D05636015E0@SKA-WN-E25CEX.ptvag.ptv.de>
Message-ID: <001d01cbb893$a55eae20$f01c0a60$@se>

I came to the same conclusion and this is already a problem if you do not
mix versions: allocation and deallocation must always be done by the same
DLL, this is a known bug in Windows. I'll fix that for 3.4.3.

 

We do not use project files but Makefiles with Cygwin, check MPG for
details.

 

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: Alexander Kleff [mailto:alexander.kleff at ptv.de] 
Sent: Thursday, January 20, 2011 12:15 PM
To: cschulte at kth.se; 'Mikael Zayenz Lagerkvist'
Cc: users at gecode.org
Subject: AW: [gecode-users] Crash while freeing memory in connection with
VS2010

 

Hi,

 

after some research I came to the following conclusion:

Due to inlining, the memory of the node in LinExpr will be allocated by
msvcr100d.dll, whilst at least the destructor of LinExpr is not inlined. The
memory of the node will therefore be freed by msvcr90d.dll. This will not
work.

As I see it, there is no other way for me than to have Gecode bound to
msvcr100d.dll. Can you help me out by making your VS2008 project files
available? This way, it would be much easier to migrate to VS2010 than to
start from scratch.

 

Cheers,

Alexander

 

 

 

Von: users-bounces at gecode.org [mailto:users-bounces at gecode.org] Im Auftrag
von Alexander Kleff
Gesendet: Donnerstag, 20. Januar 2011 10:43
An: cschulte at kth.se; 'Mikael Zayenz Lagerkvist'
Cc: users at gecode.org
Betreff: Re: [gecode-users] Crash while freeing memory in connection with
VS2010

 

Hi,

 

I made another project (currently for x86 platform) to make sure it is
unmanaged. Unfortunately, the problem still arises, although I cannot see
anything suspicious. Any other idea?

I'm using the 3.4.2 binaries from your site, so both msvcr90d.dll and
msvcr100d.dll are currently loaded.

 

Thanks for any suggestion,

Alexander

 

Von: Christian Schulte [mailto:cschulte at kth.se] 
Gesendet: Donnerstag, 20. Januar 2011 09:03
An: 'Mikael Zayenz Lagerkvist'; Alexander Kleff
Cc: users at gecode.org
Betreff: RE: [gecode-users] Crash while freeing memory in connection with
VS2010

 

Please,

 

also let us know which platform (x86 versus x64) and whether you use the
binaries we distribute or have build them yourselves (then we need to know
whether you built with 2008 or 2010)

 

Thanks

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Mikael Zayenz Lagerkvist
Sent: Wednesday, January 19, 2011 8:46 PM
To: Alexander Kleff
Cc: users at gecode.org
Subject: Re: [gecode-users] Crash while freeing memory in connection with
VS2010

 

Hi,

 

You seem to be using managed C++. Have you tried running your program with
standard C++? The different memory policy might be a source of problems.

 

I don't have a Windows machine to test on, so I haven't tried your program
myself.

 

Cheers,

Mikael

2011/1/19 Alexander Kleff <alexander.kleff at ptv.de>

Hi once again,

 

the code below compiles and links in both versions (so I assume I did not
make an all too obvious modeling mistake) but it crashes in VS2010 in
contrast to VS2008(Express).

The error seems to occur during the destruction of the linear expression.
The debugger sets the break point to Heap::rfree(void* p) in heap.hpp in all
three cases.

Can you reproduce it? 

 

Thanks for help,

Alexander

 

 

 

#include <gecode/minimodel.hh>

 

using namespace Gecode;

 

class GecodeTest : public Space {

public:

  GecodeTest(void) 

  {

   IntVar z(*this, 0, 1);

 

   IntVar e1 = expr(*this, 1 * z);

   IntVar e2 = expr(*this, z);      // error 1

 

   IntArgs cost(2);

   for (int v=0; v<2; ++v)

   {

      cost[v] = v;      

   }

 

   LinExpr xy = element(cost, z);  

   IntVar e3 = expr(*this, xy);

   IntVar e4 = expr(*this, element(cost, z));   // error 2

  } // error 3 (in destructor)

 

 

  GecodeTest(bool share, GecodeTest& s) : Space(share, s) {}

  virtual Space* copy(bool share) { return new GecodeTest(share,*this); }

};

 

 

// main function

int main(array<System::String ^> ^args)

{

  GecodeTest* m = new GecodeTest;

  delete m;

  return 0;

}

 


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110120/97162ccd/attachment-0001.htm>

From alexander.kleff at ptv.de  Thu Jan 20 16:26:41 2011
From: alexander.kleff at ptv.de (Alexander Kleff)
Date: Thu, 20 Jan 2011 16:26:41 +0100
Subject: [gecode-users] Crash while freeing memory in
	connection	with	VS2010
In-Reply-To: <001d01cbb893$a55eae20$f01c0a60$@se>
References: <8BD008FC9041C04FAD36A0BD46AAA69D05636014A6@SKA-WN-E25CEX.ptvag.ptv.de>
	<AANLkTinXVB9PBd2wcU6Cs2t-OpevQKjEKGm9xeubULZB@mail.gmail.com>
	<000c01cbb878$6b72c0e0$425842a0$@se>
	<8BD008FC9041C04FAD36A0BD46AAA69D056360157C@SKA-WN-E25CEX.ptvag.ptv.de>
	<8BD008FC9041C04FAD36A0BD46AAA69D05636015E0@SKA-WN-E25CEX.ptvag.ptv.de>
	<001d01cbb893$a55eae20$f01c0a60$@se>
Message-ID: <8BD008FC9041C04FAD36A0BD46AAA69D05636016C0@SKA-WN-E25CEX.ptvag.ptv.de>

Hi,

update: I built Gecode binaries myself with VS2010 and the test application works fine...
What precisely are you going to fix for 3.4.3? I'm not sure if I got you right.

Best,
Alexander


Von: Christian Schulte [mailto:cschulte at kth.se]
Gesendet: Donnerstag, 20. Januar 2011 12:18
An: Alexander Kleff; 'Mikael Zayenz Lagerkvist'
Cc: users at gecode.org
Betreff: RE: [gecode-users] Crash while freeing memory in connection with VS2010

I came to the same conclusion and this is already a problem if you do not mix versions: allocation and deallocation must always be done by the same DLL, this is a known bug in Windows. I'll fix that for 3.4.3.

We do not use project files but Makefiles with Cygwin, check MPG for details.

Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/

From: Alexander Kleff [mailto:alexander.kleff at ptv.de]
Sent: Thursday, January 20, 2011 12:15 PM
To: cschulte at kth.se; 'Mikael Zayenz Lagerkvist'
Cc: users at gecode.org
Subject: AW: [gecode-users] Crash while freeing memory in connection with VS2010

Hi,

after some research I came to the following conclusion:
Due to inlining, the memory of the node in LinExpr will be allocated by msvcr100d.dll, whilst at least the destructor of LinExpr is not inlined. The memory of the node will therefore be freed by msvcr90d.dll. This will not work.
As I see it, there is no other way for me than to have Gecode bound to msvcr100d.dll. Can you help me out by making your VS2008 project files available? This way, it would be much easier to migrate to VS2010 than to start from scratch.

Cheers,
Alexander



Von: users-bounces at gecode.org [mailto:users-bounces at gecode.org] Im Auftrag von Alexander Kleff
Gesendet: Donnerstag, 20. Januar 2011 10:43
An: cschulte at kth.se; 'Mikael Zayenz Lagerkvist'
Cc: users at gecode.org
Betreff: Re: [gecode-users] Crash while freeing memory in connection with VS2010

Hi,

I made another project (currently for x86 platform) to make sure it is unmanaged. Unfortunately, the problem still arises, although I cannot see anything suspicious. Any other idea?
I'm using the 3.4.2 binaries from your site, so both msvcr90d.dll and msvcr100d.dll are currently loaded.

Thanks for any suggestion,
Alexander

Von: Christian Schulte [mailto:cschulte at kth.se]
Gesendet: Donnerstag, 20. Januar 2011 09:03
An: 'Mikael Zayenz Lagerkvist'; Alexander Kleff
Cc: users at gecode.org
Betreff: RE: [gecode-users] Crash while freeing memory in connection with VS2010

Please,

also let us know which platform (x86 versus x64) and whether you use the binaries we distribute or have build them yourselves (then we need to know whether you built with 2008 or 2010)

Thanks
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Mikael Zayenz Lagerkvist
Sent: Wednesday, January 19, 2011 8:46 PM
To: Alexander Kleff
Cc: users at gecode.org
Subject: Re: [gecode-users] Crash while freeing memory in connection with VS2010

Hi,

You seem to be using managed C++. Have you tried running your program with standard C++? The different memory policy might be a source of problems.

I don't have a Windows machine to test on, so I haven't tried your program myself.

Cheers,
Mikael
2011/1/19 Alexander Kleff <alexander.kleff at ptv.de<mailto:alexander.kleff at ptv.de>>
Hi once again,

the code below compiles and links in both versions (so I assume I did not make an all too obvious modeling mistake) but it crashes in VS2010 in contrast to VS2008(Express).
The error seems to occur during the destruction of the linear expression. The debugger sets the break point to Heap::rfree(void* p) in heap.hpp in all three cases.
Can you reproduce it?

Thanks for help,
Alexander



#include <gecode/minimodel.hh>

using namespace Gecode;

class GecodeTest : public Space {
public:
  GecodeTest(void)
  {
   IntVar z(*this, 0, 1);

   IntVar e1 = expr(*this, 1 * z);
   IntVar e2 = expr(*this, z);      // error 1

   IntArgs cost(2);
   for (int v=0; v<2; ++v)
   {
      cost[v] = v;
   }

   LinExpr xy = element(cost, z);
   IntVar e3 = expr(*this, xy);
   IntVar e4 = expr(*this, element(cost, z));   // error 2
  } // error 3 (in destructor)


  GecodeTest(bool share, GecodeTest& s) : Space(share, s) {}
  virtual Space* copy(bool share) { return new GecodeTest(share,*this); }
};


// main function
int main(array<System::String ^> ^args)
{
  GecodeTest* m = new GecodeTest;
  delete m;
  return 0;
}


_______________________________________________
Gecode users mailing list
users at gecode.org<mailto:users at gecode.org>
https://www.gecode.org/mailman/listinfo/gecode-users



--
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110120/ee3d9caf/attachment-0001.htm>

From cschulte at kth.se  Thu Jan 20 16:43:52 2011
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 20 Jan 2011 16:43:52 +0100
Subject: [gecode-users] Crash while freeing memory in
	connection	with	VS2010
In-Reply-To: <8BD008FC9041C04FAD36A0BD46AAA69D05636016C0@SKA-WN-E25CEX.ptvag.ptv.de>
References: <8BD008FC9041C04FAD36A0BD46AAA69D05636014A6@SKA-WN-E25CEX.ptvag.ptv.de>	<AANLkTinXVB9PBd2wcU6Cs2t-OpevQKjEKGm9xeubULZB@mail.gmail.com>	<000c01cbb878$6b72c0e0$425842a0$@se>
	<8BD008FC9041C04FAD36A0BD46AAA69D056360157C@SKA-WN-E25CEX.ptvag.ptv.de>
	<8BD008FC9041C04FAD36A0BD46AAA69D05636015E0@SKA-WN-E25CEX.ptvag.ptv.de>
	<001d01cbb893$a55eae20$f01c0a60$@se>
	<8BD008FC9041C04FAD36A0BD46AAA69D05636016C0@SKA-WN-E25CEX.ptvag.ptv.de>
Message-ID: <003a01cbb8b8$d6f69a90$84e3cfb0$@se>

I'll fix that both allocation and deallocation of memory are never inlined
and hence will always be executed by the minimodel DLL (this one must do on
Windows). I thought this is already the case, but unfortunately it is not
(actually, it happens if only for the case you had that you supply a
variable as argument to expr(...)). 

 

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: Alexander Kleff [mailto:alexander.kleff at ptv.de] 
Sent: Thursday, January 20, 2011 4:27 PM
To: cschulte at kth.se; 'Mikael Zayenz Lagerkvist'
Cc: users at gecode.org
Subject: AW: [gecode-users] Crash while freeing memory in connection with
VS2010

 

Hi,

 

update: I built Gecode binaries myself with VS2010 and the test application
works fine.

What precisely are you going to fix for 3.4.3? I'm not sure if I got you
right.

 

Best,

Alexander

 

 

Von: Christian Schulte [mailto:cschulte at kth.se] 
Gesendet: Donnerstag, 20. Januar 2011 12:18
An: Alexander Kleff; 'Mikael Zayenz Lagerkvist'
Cc: users at gecode.org
Betreff: RE: [gecode-users] Crash while freeing memory in connection with
VS2010

 

I came to the same conclusion and this is already a problem if you do not
mix versions: allocation and deallocation must always be done by the same
DLL, this is a known bug in Windows. I'll fix that for 3.4.3.

 

We do not use project files but Makefiles with Cygwin, check MPG for
details.

 

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: Alexander Kleff [mailto:alexander.kleff at ptv.de] 
Sent: Thursday, January 20, 2011 12:15 PM
To: cschulte at kth.se; 'Mikael Zayenz Lagerkvist'
Cc: users at gecode.org
Subject: AW: [gecode-users] Crash while freeing memory in connection with
VS2010

 

Hi,

 

after some research I came to the following conclusion:

Due to inlining, the memory of the node in LinExpr will be allocated by
msvcr100d.dll, whilst at least the destructor of LinExpr is not inlined. The
memory of the node will therefore be freed by msvcr90d.dll. This will not
work.

As I see it, there is no other way for me than to have Gecode bound to
msvcr100d.dll. Can you help me out by making your VS2008 project files
available? This way, it would be much easier to migrate to VS2010 than to
start from scratch.

 

Cheers,

Alexander

 

 

 

Von: users-bounces at gecode.org [mailto:users-bounces at gecode.org] Im Auftrag
von Alexander Kleff
Gesendet: Donnerstag, 20. Januar 2011 10:43
An: cschulte at kth.se; 'Mikael Zayenz Lagerkvist'
Cc: users at gecode.org
Betreff: Re: [gecode-users] Crash while freeing memory in connection with
VS2010

 

Hi,

 

I made another project (currently for x86 platform) to make sure it is
unmanaged. Unfortunately, the problem still arises, although I cannot see
anything suspicious. Any other idea?

I'm using the 3.4.2 binaries from your site, so both msvcr90d.dll and
msvcr100d.dll are currently loaded.

 

Thanks for any suggestion,

Alexander

 

Von: Christian Schulte [mailto:cschulte at kth.se] 
Gesendet: Donnerstag, 20. Januar 2011 09:03
An: 'Mikael Zayenz Lagerkvist'; Alexander Kleff
Cc: users at gecode.org
Betreff: RE: [gecode-users] Crash while freeing memory in connection with
VS2010

 

Please,

 

also let us know which platform (x86 versus x64) and whether you use the
binaries we distribute or have build them yourselves (then we need to know
whether you built with 2008 or 2010)

 

Thanks

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Mikael Zayenz Lagerkvist
Sent: Wednesday, January 19, 2011 8:46 PM
To: Alexander Kleff
Cc: users at gecode.org
Subject: Re: [gecode-users] Crash while freeing memory in connection with
VS2010

 

Hi,

 

You seem to be using managed C++. Have you tried running your program with
standard C++? The different memory policy might be a source of problems.

 

I don't have a Windows machine to test on, so I haven't tried your program
myself.

 

Cheers,

Mikael

2011/1/19 Alexander Kleff <alexander.kleff at ptv.de>

Hi once again,

 

the code below compiles and links in both versions (so I assume I did not
make an all too obvious modeling mistake) but it crashes in VS2010 in
contrast to VS2008(Express).

The error seems to occur during the destruction of the linear expression.
The debugger sets the break point to Heap::rfree(void* p) in heap.hpp in all
three cases.

Can you reproduce it? 

 

Thanks for help,

Alexander

 

 

 

#include <gecode/minimodel.hh>

 

using namespace Gecode;

 

class GecodeTest : public Space {

public:

  GecodeTest(void) 

  {

   IntVar z(*this, 0, 1);

 

   IntVar e1 = expr(*this, 1 * z);

   IntVar e2 = expr(*this, z);      // error 1

 

   IntArgs cost(2);

   for (int v=0; v<2; ++v)

   {

      cost[v] = v;      

   }

 

   LinExpr xy = element(cost, z);  

   IntVar e3 = expr(*this, xy);

   IntVar e4 = expr(*this, element(cost, z));   // error 2

  } // error 3 (in destructor)

 

 

  GecodeTest(bool share, GecodeTest& s) : Space(share, s) {}

  virtual Space* copy(bool share) { return new GecodeTest(share,*this); }

};

 

 

// main function

int main(array<System::String ^> ^args)

{

  GecodeTest* m = new GecodeTest;

  delete m;

  return 0;

}

 


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110120/1e90e900/attachment-0001.htm>

From gcross at phys.washington.edu  Thu Jan 20 19:48:05 2011
From: gcross at phys.washington.edu (Gregory Crosswhite)
Date: Thu, 20 Jan 2011 10:48:05 -0800
Subject: [gecode-users] int vs. unsigned int for Matrix dimensions
In-Reply-To: <4D37336B.8020303@phys.washington.edu>
References: <4D308719.4020405@phys.washington.edu>	<000001cbb5c1$d8427260$88c75720$@se>	<4D336735.3080607@phys.washington.edu>	<4D3380F6.2020404@phys.washington.edu>	<003401cbb64d$25c4e9b0$714ebd10$@se>
	<4D37336B.8020303@phys.washington.edu>
Message-ID: <4D388365.1060904@phys.washington.edu>

So, is this design is acceptable to you all, and if so do you want me to 
submit a patch?

Cheers,
Greg

On 01/19/2011 10:54 AM, Gregory Crosswhite wrote:
> Actually, I just came up with a simpler idea:  rather than creating a 
> new iterator class, you could simply use a pointer as the iterator 
> type, so that adding a full set of begin()/end() methods is easy:
>
> #include <iterator> // STL iterator classes
>
> template<class Var> VarArray {
> protected:
>     int n;
>     Var* v;
> public:
>     Var* VarArray::begin() { return v; }
>     Var* VarArray::end() { return v+n; }
>     const Var* VarArray::begin() const { return v; }
>     const Var* VarArray::end() const { return v+n; }
>
>     Var* VarArray::rbegin() { return std::reverse_iterator(end()); }
>     Var* VarArray::rend() { return std::reverse_iterator(begin()); }
>     const Var* VarArray::rbegin() const { return 
> std::reverse_iterator(end()); }
>     const Var* VarArray::rend() const { return 
> std::reverse_iterator(begin()); }
> ...
> };
>
> (And of course the same can be done for ArgArrayBase.)
>
> Adding these methods should be sufficient to allow library users to 
> iterate over your arrays using the standard idioms.
>
> Cheers,
> Greg
>
> On 1/17/11 5:47 AM, Christian Schulte wrote:
>> Hi,
>>
>> Yes, this list is a good forum...
>>
>> Again you caught us red-handed... I know that begin() and end() is the
>> standard idiom but some of our iterators do not naturally fit in this
>> concept (that iterators that iterate over values and ranges of 
>> variables and
>> views).
>>
>> I think what one could do is providing a wrapper class that translates a
>> Gecode-style iterator (using a constructor or init function for
>> initialization, operator ++() for moving to the next element, and 
>> operator
>> ()() for testing whether the operator is done). If you can come up with
>> something like that we would of course integrate it.
>>
>> Best
>> Christian
>>
>> -- 
>> Christian Schulte, www.ict.kth.se/~cschulte/
>>
>>
>> -----Original Message-----
>> From: Gregory Crosswhite [mailto:gcross at phys.washington.edu]
>> Sent: Monday, January 17, 2011 12:36 AM
>> To: users at gecode.org; cschulte at kth.se
>> Subject: Re: [gecode-users] int vs. unsigned int for Matrix dimensions
>>
>> Part of the reason I am asking how to talk to the developers,
>> by-the-way, is because I was thinking it might be useful for the
>> arrays/argument arrays to have an iterator interface added to them, to
>> make it easier to do things like applying generics algorithms to them
>> and traversing them using the c++0x "for each" statement as well as
>> BOOST_FOREACH.  Would there be any interest in a contribution to Gecode
>> to provide this?  The supporting code that I had in mind would include
>> new classes for the iterators and new methods .begin() and .end() for
>> the arrays.
>>
>> Cheers,
>> Greg
>>
>> On 1/16/11 1:46 PM, Gregory Crosswhite wrote:
>>> Okidoke;  thanks for the explanation!  :-)
>>>
>>> Also, is this list the best way to talk to the developers of Gecode?
>>>
>>> Thanks,
>>> Greg
>>>
>>> On 1/16/11 1:10 PM, Christian Schulte wrote:
>>>> Hi Gregory,
>>>>
>>>> You are touching a slightly weird aspect of Gecode... The choice of
>>>> int as
>>>> opposed to unsigned int for the Matrix class is actually deliberate.
>>>> This
>>>> choice is not only done for Matrix but for many other datastructures
>>>> that
>>>> are defined by Gecode (for example, VarArray, ViewArray, etc). I know
>>>> that
>>>> the choice of unsigned int sounds more appealing but we have made the
>>>> opposite decision and try to be as consistent with the choice of int
>>>> rather
>>>> than unsigned int.
>>>>
>>>> There are two reasons. The first is simple and maybe is not even very
>>>> convincing. The average loop written to iterate over arrays etc is
>>>> typically
>>>> an int and not an unsigned int. To avoid compiler warnings, Gecode
>>>> follows
>>>> in this. Then, the second reason (possibly not more convincing than 
>>>> the
>>>> first one) is that integer variables take int values and very often
>>>> array
>>>> access is wrt a value included in the domain of an integer variable.
>>>> Here we
>>>> go.
>>>>
>>>> We tried to use unsigned int but it was in fact just too painful
>>>> (lots of
>>>> explicit casts in order to avoid warnings). Changing int to unsigned
>>>> int and
>>>> be consistent about that change would be a massive effort with little
>>>> gain.
>>>>
>>>> I know. Sad but true.
>>>>
>>>> Cheers
>>>> Christian
>>>>
>>>> -- 
>>>> Christian Schulte, web.ict.kth.se/~cschulte/
>>>>
>>>>
>>>> -----Original Message-----
>>>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On
>>>> Behalf
>>>> Of Gregory Crosswhite
>>>> Sent: Friday, January 14, 2011 6:26 PM
>>>> To: users at gecode.org
>>>> Subject: [gecode-users] int vs. unsigned int for Matrix dimensions
>>>>
>>>> Hey everyone,
>>>>
>>>> Is there a reason why the Matrix class uses "int" for the type of its
>>>> dimensions instead of "unsigned int"?  If there isn't a reason not to
>>>> use "unsigned int" for the type of the dimensions, then may I submit a
>>>> patch or something to change it to use "unsigned int"?
>>>>
>>>> Thanks!
>>>> Greg
>>>>
>>>> _______________________________________________
>>>> Gecode users mailing list
>>>> users at gecode.org
>>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>>>
>>>
>>> _______________________________________________
>>> Gecode users mailing list
>>> users at gecode.org
>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users



From cschulte at kth.se  Fri Jan 21 11:30:51 2011
From: cschulte at kth.se (Christian Schulte)
Date: Fri, 21 Jan 2011 11:30:51 +0100
Subject: [gecode-users] int vs. unsigned int for Matrix dimensions
In-Reply-To: <4D388365.1060904@phys.washington.edu>
References: <4D308719.4020405@phys.washington.edu>	<000001cbb5c1$d8427260$88c75720$@se>	<4D336735.3080607@phys.washington.edu>	<4D3380F6.2020404@phys.washington.edu>	<003401cbb64d$25c4e9b0$714ebd10$@se>	<4D37336B.8020303@phys.washington.edu>
	<4D388365.1060904@phys.washington.edu>
Message-ID: <000301cbb956$47f621f0$d7e265d0$@se>

Hi Gregory,

That looks fine. But there is slightly more to it:
 1) In Gecode we separate declarations from their definitions and use both
inline and 
    forceinline (meaning: must be inlined) to mark them. You might have seen
that.
 2) We would also require documentation in doxygen format (It would be great
if you put
    Everything into a group with a \name annotation, see Gecode for
examples).
 3) It should be done for all arrays: Var, Arg, and View.
 4) You need to be okay with putting stuff under Gecode's license
 5) It would be great if you could give me some examples so that I can add
some doc to MPG.

Thanks!
Christian

--
Christian Schulte, web.ict.kth.se/~cschulte/



-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Gregory Crosswhite
Sent: Thursday, January 20, 2011 7:48 PM
To: users at gecode.org
Subject: Re: [gecode-users] int vs. unsigned int for Matrix dimensions

So, is this design is acceptable to you all, and if so do you want me to 
submit a patch?

Cheers,
Greg

On 01/19/2011 10:54 AM, Gregory Crosswhite wrote:
> Actually, I just came up with a simpler idea:  rather than creating a 
> new iterator class, you could simply use a pointer as the iterator 
> type, so that adding a full set of begin()/end() methods is easy:
>
> #include <iterator> // STL iterator classes
>
> template<class Var> VarArray {
> protected:
>     int n;
>     Var* v;
> public:
>     Var* VarArray::begin() { return v; }
>     Var* VarArray::end() { return v+n; }
>     const Var* VarArray::begin() const { return v; }
>     const Var* VarArray::end() const { return v+n; }
>
>     Var* VarArray::rbegin() { return std::reverse_iterator(end()); }
>     Var* VarArray::rend() { return std::reverse_iterator(begin()); }
>     const Var* VarArray::rbegin() const { return 
> std::reverse_iterator(end()); }
>     const Var* VarArray::rend() const { return 
> std::reverse_iterator(begin()); }
> ...
> };
>
> (And of course the same can be done for ArgArrayBase.)
>
> Adding these methods should be sufficient to allow library users to 
> iterate over your arrays using the standard idioms.
>
> Cheers,
> Greg
>
> On 1/17/11 5:47 AM, Christian Schulte wrote:
>> Hi,
>>
>> Yes, this list is a good forum...
>>
>> Again you caught us red-handed... I know that begin() and end() is the
>> standard idiom but some of our iterators do not naturally fit in this
>> concept (that iterators that iterate over values and ranges of 
>> variables and
>> views).
>>
>> I think what one could do is providing a wrapper class that translates a
>> Gecode-style iterator (using a constructor or init function for
>> initialization, operator ++() for moving to the next element, and 
>> operator
>> ()() for testing whether the operator is done). If you can come up with
>> something like that we would of course integrate it.
>>
>> Best
>> Christian
>>
>> -- 
>> Christian Schulte, www.ict.kth.se/~cschulte/
>>
>>
>> -----Original Message-----
>> From: Gregory Crosswhite [mailto:gcross at phys.washington.edu]
>> Sent: Monday, January 17, 2011 12:36 AM
>> To: users at gecode.org; cschulte at kth.se
>> Subject: Re: [gecode-users] int vs. unsigned int for Matrix dimensions
>>
>> Part of the reason I am asking how to talk to the developers,
>> by-the-way, is because I was thinking it might be useful for the
>> arrays/argument arrays to have an iterator interface added to them, to
>> make it easier to do things like applying generics algorithms to them
>> and traversing them using the c++0x "for each" statement as well as
>> BOOST_FOREACH.  Would there be any interest in a contribution to Gecode
>> to provide this?  The supporting code that I had in mind would include
>> new classes for the iterators and new methods .begin() and .end() for
>> the arrays.
>>
>> Cheers,
>> Greg
>>
>> On 1/16/11 1:46 PM, Gregory Crosswhite wrote:
>>> Okidoke;  thanks for the explanation!  :-)
>>>
>>> Also, is this list the best way to talk to the developers of Gecode?
>>>
>>> Thanks,
>>> Greg
>>>
>>> On 1/16/11 1:10 PM, Christian Schulte wrote:
>>>> Hi Gregory,
>>>>
>>>> You are touching a slightly weird aspect of Gecode... The choice of
>>>> int as
>>>> opposed to unsigned int for the Matrix class is actually deliberate.
>>>> This
>>>> choice is not only done for Matrix but for many other datastructures
>>>> that
>>>> are defined by Gecode (for example, VarArray, ViewArray, etc). I know
>>>> that
>>>> the choice of unsigned int sounds more appealing but we have made the
>>>> opposite decision and try to be as consistent with the choice of int
>>>> rather
>>>> than unsigned int.
>>>>
>>>> There are two reasons. The first is simple and maybe is not even very
>>>> convincing. The average loop written to iterate over arrays etc is
>>>> typically
>>>> an int and not an unsigned int. To avoid compiler warnings, Gecode
>>>> follows
>>>> in this. Then, the second reason (possibly not more convincing than 
>>>> the
>>>> first one) is that integer variables take int values and very often
>>>> array
>>>> access is wrt a value included in the domain of an integer variable.
>>>> Here we
>>>> go.
>>>>
>>>> We tried to use unsigned int but it was in fact just too painful
>>>> (lots of
>>>> explicit casts in order to avoid warnings). Changing int to unsigned
>>>> int and
>>>> be consistent about that change would be a massive effort with little
>>>> gain.
>>>>
>>>> I know. Sad but true.
>>>>
>>>> Cheers
>>>> Christian
>>>>
>>>> -- 
>>>> Christian Schulte, web.ict.kth.se/~cschulte/
>>>>
>>>>
>>>> -----Original Message-----
>>>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On
>>>> Behalf
>>>> Of Gregory Crosswhite
>>>> Sent: Friday, January 14, 2011 6:26 PM
>>>> To: users at gecode.org
>>>> Subject: [gecode-users] int vs. unsigned int for Matrix dimensions
>>>>
>>>> Hey everyone,
>>>>
>>>> Is there a reason why the Matrix class uses "int" for the type of its
>>>> dimensions instead of "unsigned int"?  If there isn't a reason not to
>>>> use "unsigned int" for the type of the dimensions, then may I submit a
>>>> patch or something to change it to use "unsigned int"?
>>>>
>>>> Thanks!
>>>> Greg
>>>>
>>>> _______________________________________________
>>>> Gecode users mailing list
>>>> users at gecode.org
>>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>>>
>>>
>>> _______________________________________________
>>> Gecode users mailing list
>>> users at gecode.org
>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users



From cschulte at kth.se  Fri Jan 21 16:11:19 2011
From: cschulte at kth.se (Christian Schulte)
Date: Fri, 21 Jan 2011 16:11:19 +0100
Subject: [gecode-users] Crash while freeing memory
	in	connection	with	VS2010
In-Reply-To: <001d01cbb893$a55eae20$f01c0a60$@se>
References: <8BD008FC9041C04FAD36A0BD46AAA69D05636014A6@SKA-WN-E25CEX.ptvag.ptv.de>	<AANLkTinXVB9PBd2wcU6Cs2t-OpevQKjEKGm9xeubULZB@mail.gmail.com>	<000c01cbb878$6b72c0e0$425842a0$@se>	<8BD008FC9041C04FAD36A0BD46AAA69D056360157C@SKA-WN-E25CEX.ptvag.ptv.de>	<8BD008FC9041C04FAD36A0BD46AAA69D05636015E0@SKA-WN-E25CEX.ptvag.ptv.de>
	<001d01cbb893$a55eae20$f01c0a60$@se>
Message-ID: <001801cbb97d$757dcb60$60796220$@se>

Fixed in the trunk.

 

Christian

 

--

Christian Schulte, web.ict.kth.se/~cschulte/

 

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Christian Schulte
Sent: Thursday, January 20, 2011 12:18 PM
To: 'Alexander Kleff'; 'Mikael Zayenz Lagerkvist'
Cc: users at gecode.org
Subject: Re: [gecode-users] Crash while freeing memory in connection with
VS2010

 

I came to the same conclusion and this is already a problem if you do not
mix versions: allocation and deallocation must always be done by the same
DLL, this is a known bug in Windows. I'll fix that for 3.4.3.

 

We do not use project files but Makefiles with Cygwin, check MPG for
details.

 

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: Alexander Kleff [mailto:alexander.kleff at ptv.de] 
Sent: Thursday, January 20, 2011 12:15 PM
To: cschulte at kth.se; 'Mikael Zayenz Lagerkvist'
Cc: users at gecode.org
Subject: AW: [gecode-users] Crash while freeing memory in connection with
VS2010

 

Hi,

 

after some research I came to the following conclusion:

Due to inlining, the memory of the node in LinExpr will be allocated by
msvcr100d.dll, whilst at least the destructor of LinExpr is not inlined. The
memory of the node will therefore be freed by msvcr90d.dll. This will not
work.

As I see it, there is no other way for me than to have Gecode bound to
msvcr100d.dll. Can you help me out by making your VS2008 project files
available? This way, it would be much easier to migrate to VS2010 than to
start from scratch.

 

Cheers,

Alexander

 

 

 

Von: users-bounces at gecode.org [mailto:users-bounces at gecode.org] Im Auftrag
von Alexander Kleff
Gesendet: Donnerstag, 20. Januar 2011 10:43
An: cschulte at kth.se; 'Mikael Zayenz Lagerkvist'
Cc: users at gecode.org
Betreff: Re: [gecode-users] Crash while freeing memory in connection with
VS2010

 

Hi,

 

I made another project (currently for x86 platform) to make sure it is
unmanaged. Unfortunately, the problem still arises, although I cannot see
anything suspicious. Any other idea?

I'm using the 3.4.2 binaries from your site, so both msvcr90d.dll and
msvcr100d.dll are currently loaded.

 

Thanks for any suggestion,

Alexander

 

Von: Christian Schulte [mailto:cschulte at kth.se] 
Gesendet: Donnerstag, 20. Januar 2011 09:03
An: 'Mikael Zayenz Lagerkvist'; Alexander Kleff
Cc: users at gecode.org
Betreff: RE: [gecode-users] Crash while freeing memory in connection with
VS2010

 

Please,

 

also let us know which platform (x86 versus x64) and whether you use the
binaries we distribute or have build them yourselves (then we need to know
whether you built with 2008 or 2010)

 

Thanks

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Mikael Zayenz Lagerkvist
Sent: Wednesday, January 19, 2011 8:46 PM
To: Alexander Kleff
Cc: users at gecode.org
Subject: Re: [gecode-users] Crash while freeing memory in connection with
VS2010

 

Hi,

 

You seem to be using managed C++. Have you tried running your program with
standard C++? The different memory policy might be a source of problems.

 

I don't have a Windows machine to test on, so I haven't tried your program
myself.

 

Cheers,

Mikael

2011/1/19 Alexander Kleff <alexander.kleff at ptv.de>

Hi once again,

 

the code below compiles and links in both versions (so I assume I did not
make an all too obvious modeling mistake) but it crashes in VS2010 in
contrast to VS2008(Express).

The error seems to occur during the destruction of the linear expression.
The debugger sets the break point to Heap::rfree(void* p) in heap.hpp in all
three cases.

Can you reproduce it? 

 

Thanks for help,

Alexander

 

 

 

#include <gecode/minimodel.hh>

 

using namespace Gecode;

 

class GecodeTest : public Space {

public:

  GecodeTest(void) 

  {

   IntVar z(*this, 0, 1);

 

   IntVar e1 = expr(*this, 1 * z);

   IntVar e2 = expr(*this, z);      // error 1

 

   IntArgs cost(2);

   for (int v=0; v<2; ++v)

   {

      cost[v] = v;      

   }

 

   LinExpr xy = element(cost, z);  

   IntVar e3 = expr(*this, xy);

   IntVar e4 = expr(*this, element(cost, z));   // error 2

  } // error 3 (in destructor)

 

 

  GecodeTest(bool share, GecodeTest& s) : Space(share, s) {}

  virtual Space* copy(bool share) { return new GecodeTest(share,*this); }

};

 

 

// main function

int main(array<System::String ^> ^args)

{

  GecodeTest* m = new GecodeTest;

  delete m;

  return 0;

}

 


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users




-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110121/3b9bf7d0/attachment-0001.htm>

From saidisamira13 at yahoo.fr  Sun Jan 23 11:39:09 2011
From: saidisamira13 at yahoo.fr (sami sami1)
Date: Sun, 23 Jan 2011 10:39:09 +0000 (GMT)
Subject: [gecode-users] integrate a new search strategy in Gecode
Message-ID: <54688.63950.qm@web27207.mail.ukl.yahoo.com>

Hello,
In Gecode, I would like to integrate a new search?strategy (as BAB or DFS)?but I 
do not know how?
I am a new user Gecode
Thanks for help 


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110123/5242bbe4/attachment.htm>

From zayenz at gmail.com  Sun Jan 23 11:54:58 2011
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Sun, 23 Jan 2011 11:54:58 +0100
Subject: [gecode-users] integrate a new search strategy in Gecode
In-Reply-To: <54688.63950.qm@web27207.mail.ukl.yahoo.com>
References: <54688.63950.qm@web27207.mail.ukl.yahoo.com>
Message-ID: <AANLkTikS-y2ExuS3F_x++_7X5KsGp6NGzCxPzQziqiki@mail.gmail.com>

Please see Part S, "Programming search engines", in Modeling and Programming
with Gecode.

Cheers,
Mikael

2011/1/23 sami sami1 <saidisamira13 at yahoo.fr>

>  Hello,
> In Gecode, I would like to integrate a new search strategy (as BAB or DFS)
>  but I do not know how?
> I am a new user Gecode
>
> Thanks for help
>
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>


-- 
Mikael Zayenz Lagerkvist, http://www.ict.kth.se/~zayenz/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110123/97767598/attachment.htm>

From saidisamira13 at yahoo.fr  Sun Jan 23 18:52:57 2011
From: saidisamira13 at yahoo.fr (sami sami1)
Date: Sun, 23 Jan 2011 17:52:57 +0000 (GMT)
Subject: [gecode-users] Re : integrate a new search strategy in Gecode
Message-ID: <593508.36545.qm@web27207.mail.ukl.yahoo.com>

I see Part S, "Programming search engines", in Modeling and Programming with 
Gecode. but
the Part?S in the document, it explains how to program a search strategy? but my 
question is guilty of integrating a new strategy? as the DFS search strategy, 
there is the file / gecode / search / dfs.cpp?
I want to create a new file? nouvsearch.cpp? in gecode/search /, this file 
contains the source code of the new strategy NOUVSEARCH (naive strategy)?
i want to use this searche? in the examples of Gecode
thanks





________________________________
De : sami sami1 <saidisamira13 at yahoo.fr>
? : users at gecode.org
Envoy? le : Dim 23 janvier 2011, 11h 39min 09s
Objet?: integrate a new search strategy in Gecode


Hello,
In Gecode, I would like to integrate a new search?strategy (as BAB or DFS)?but I 
do not know how?
I am a new user Gecode
Thanks for help 



      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110123/f286a6cb/attachment.htm>

From cschulte at kth.se  Mon Jan 24 13:05:39 2011
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 24 Jan 2011 13:05:39 +0100
Subject: [gecode-users] Re : integrate a new search strategy in Gecode
In-Reply-To: <369101.76029.qm@web27204.mail.ukl.yahoo.com>
References: <ju8jy74nctamwb5enugwe3vo.1295826213813@email.android.com>
	<369101.76029.qm@web27204.mail.ukl.yahoo.com>
Message-ID: <001e01cbbbbf$05402a70$0fc07f50$@se>

Hi,

 

Sorry I have not the slightest idea what your problem is, we can't really
help with programming basics.

 

Christian

 

--

Christian Schulte, web.ict.kth.se/~cschulte/

 

 

From: sami sami1 [mailto:saidisamira13 at yahoo.fr] 
Sent: Monday, January 24, 2011 1:04 PM
To: cschulte at kth.se
Subject: Re : [gecode-users] Re : integrate a new search strategy in Gecode

 

Hi

I read the document but I would like to add a class NOUVSEARCH in the file
search.hh after for exemlple :DFS, then I'll create the file nouvsearch.cpp
and  nouvsearch.hpp in gecode /search 

Thanks

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110124/09c25c7e/attachment.htm>

From cschulte at kth.se  Mon Jan 24 19:54:11 2011
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 24 Jan 2011 18:54:11 +0000 (UTC)
Subject: [gecode-users] int vs. unsigned int for Matrix dimensions
References: <4D308719.4020405@phys.washington.edu>	<000001cbb5c1$d8427260$88c75720$@se>	<4D336735.3080607@phys.washington.edu>	<4D3380F6.2020404@phys.washington.edu>	<003401cbb64d$25c4e9b0$714ebd10$@se>	<4D37336B.8020303@phys.washington.edu>
	<4D388365.1060904@phys.washington.edu>
	<000301cbb956$47f621f0$d7e265d0$@se>
Message-ID: <loom.20110124T195223-272@post.gmane.org>

Christian Schulte <cschulte at ...> writes:

Hi again,

There is one thing I forgot to say: we intend to release end of this week 
(hopefully). So if your patch arrives until then, it'll be included in the 
next version.

Cheers
Christian





From gcross at phys.washington.edu  Mon Jan 24 21:12:38 2011
From: gcross at phys.washington.edu (Gregory Crosswhite)
Date: Mon, 24 Jan 2011 12:12:38 -0800
Subject: [gecode-users] int vs. unsigned int for Matrix dimensions
In-Reply-To: <loom.20110124T195223-272@post.gmane.org>
References: <4D308719.4020405@phys.washington.edu>	<000001cbb5c1$d8427260$88c75720$@se>	<4D336735.3080607@phys.washington.edu>	<4D3380F6.2020404@phys.washington.edu>	<003401cbb64d$25c4e9b0$714ebd10$@se>	<4D37336B.8020303@phys.washington.edu>	<4D388365.1060904@phys.washington.edu>	<000301cbb956$47f621f0$d7e265d0$@se>
	<loom.20110124T195223-272@post.gmane.org>
Message-ID: <4D3DDD36.60308@phys.washington.edu>

Well then, I am glad that I got the patch ready over the weekend.  :-)

The patch has been attached to this e-mail as the file "patch";  it is 
the result of running "svn diff" against revision 11556.

I have modified "gecode/kernel/array.hpp" along the lines that we 
discussed, and have added a new test to your suite under 
"test/array.cpp" to verify that it works as expected.

While I was add it, I added another feature.  The patch includes a file 
"gecode/iter/wrap-val.hpp" (and a patch to "gecode/iter.hh" to include 
this file) which contains an iterator class "WrapVal" that wraps another 
iterator and upon dereferencing returns the the result of calling 
".val()" on the dereferenced wrapped iterator, as well as a function 
"wrap_val" that is a convenience function for constructing a "WrapVal" 
(since this causes the template parameters to automatically be inferred).

That might sound complicated, but the point of it is to allow someone to 
do the following:

     #include <algorithm>
     #include <gecode/iter.hh>
     #include <iterator>
     #include <vector>
     ...
     using namespace Gecode;
     using namespace Gecode::Iter;
     using namespace std;
     ...
     IntVarArray a;
     ...
     vector<int> v;
     copy(wrap_val(a.begin()),wrap_val(a.end()),back_inserter(x));

which has the effect of copying all of the values from the array a into 
the vector v, since a.begin() returns an iterator that dereferences to 
an IntVar and wrap_val(a.begin()) returns a wrapped iterator that 
returns the result of calling .val() on the IntVar.

The basic use case of the iterators is as follows:

     IntVarArgs a;
     ...
     for(IntVarArgs::iterator i = a.begin(); i != a.end(); ++i) { 
rel(space,*i,IRT_EQ,0); }

Of course, you could more easily do this with rel(space,a,IRT_EQ,0).  A 
more interesting example is:

     IntVarArgs a;
     ...
     for(IntVarArgs::iterator i = a.begin(); i != a.end()-1; ++i) { 
rel(space,*i > *(i+1)+2); }

More powerfully, iterators give you the ability to work with STL algorithms:

     #include <algorithm>
     ...
     void f(IntVar& v) { ... }
     ...
     IntVarArgs a;
     ...
     std::for_each(a.begin(),a.end(),f);

The iterators returned by a.begin() and a.end() dereference to a 
reference to an IntVar/BoolVar (or a view in the case of ViewArray).  If 
you are interested in iterating over the *values* of the array --- that 
is, the value currently assigned to to each variable then you can use 
the function wrap_val to wrap these iterators so that dereferencing them 
returns the value assigned to the variable.  For example, the last two 
lines in the following have exactly the same result:

     #include <algorithm>
     #include <iostream>
     ...
     void f(IntVar& v) { std::cout << v.val() << " "; }
     void g(int i) { std::cout << i << " "; }
     ...
     IntVarArgs a;
     ...
     std::for_each(a.begin(),a.end(),f); std::cout << std::endl;
     std::for_each(wrap_val(a.begin()),wrap_val(a.end()),g); std::cout 
<< std::endl;

Or if you want to copy the values assigned to the variables into a 
std::vector:

     #include <algorithm>
     #include <iterator>
     #include <vector>
     ...
     IntVarArray a;
     ...
     std::vector<int> v;
     std::copy(wrap_val(a.begin()),wrap_val(a.end()),std::back_inserter(x));

Or if you are interested in computing the sum of the values in the 
variables:

     #include <numeric>
     ...
     IntVarArray a;
     ...
     int sum = std::accumulate(wrap_val(a.begin()),wrap_val(a.end()),0);

Or alternatively if you are interested in counting the number of zeros 
in the variables:

     #include <algorithm>
     ...
     IntVarArray a;
     ...
     unsigned int number_of_zeros = 
std::count(wrap_val(a.begin()),wrap_val(a.end()),0);

===

Anyway, I hope that this patch can make it into Gecode this week; you 
have my official permission to release it under whatever license Gecode 
uses.

Let me know if you have any questions!  :-)

Cheers,
Gregory Crosswhite



On 01/24/2011 10:54 AM, Christian Schulte wrote:
> Christian Schulte<cschulte at ...>  writes:
>
> Hi again,
>
> There is one thing I forgot to say: we intend to release end of this week
> (hopefully). So if your patch arrives until then, it'll be included in the
> next version.
>
> Cheers
> Christian
>
>
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users




-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: patch
URL: <http://www.gecode.org/pipermail/users/attachments/20110124/cc90c8c6/attachment-0001.asc>

From gcross at phys.washington.edu  Mon Jan 24 22:57:13 2011
From: gcross at phys.washington.edu (Gregory Crosswhite)
Date: Mon, 24 Jan 2011 13:57:13 -0800
Subject: [gecode-users] int vs. unsigned int for Matrix dimensions
In-Reply-To: <4D3DDD36.60308@phys.washington.edu>
References: <4D308719.4020405@phys.washington.edu>	<000001cbb5c1$d8427260$88c75720$@se>	<4D336735.3080607@phys.washington.edu>	<4D3380F6.2020404@phys.washington.edu>	<003401cbb64d$25c4e9b0$714ebd10$@se>	<4D37336B.8020303@phys.washington.edu>	<4D388365.1060904@phys.washington.edu>	<000301cbb956$47f621f0$d7e265d0$@se>	<loom.20110124T195223-272@post.gmane.org>
	<4D3DDD36.60308@phys.washington.edu>
Message-ID: <4D3DF5B9.5080407@phys.washington.edu>

Oops, I just realized that I forgot to include in the patch an extra 
line in Makefile.in to install the new header.  The amended patch is 
attached to this e-mail.

Also, I forgot in my previous to mention that also included in the patch 
is a test for the WrapVal iterator in test/iter.hpp;  that test program 
includes checks on some of the examples that I described in the e-mail 
to make sure that they have the expected result.

Cheers,
Greg


On 01/24/2011 12:12 PM, Gregory Crosswhite wrote:
> Well then, I am glad that I got the patch ready over the weekend.  :-)
>
> The patch has been attached to this e-mail as the file "patch";  it is 
> the result of running "svn diff" against revision 11556.
>
> I have modified "gecode/kernel/array.hpp" along the lines that we 
> discussed, and have added a new test to your suite under 
> "test/array.cpp" to verify that it works as expected.
>
> While I was add it, I added another feature.  The patch includes a 
> file "gecode/iter/wrap-val.hpp" (and a patch to "gecode/iter.hh" to 
> include this file) which contains an iterator class "WrapVal" that 
> wraps another iterator and upon dereferencing returns the the result 
> of calling ".val()" on the dereferenced wrapped iterator, as well as a 
> function "wrap_val" that is a convenience function for constructing a 
> "WrapVal" (since this causes the template parameters to automatically 
> be inferred).
>
> That might sound complicated, but the point of it is to allow someone 
> to do the following:
>
>     #include <algorithm>
>     #include <gecode/iter.hh>
>     #include <iterator>
>     #include <vector>
>     ...
>     using namespace Gecode;
>     using namespace Gecode::Iter;
>     using namespace std;
>     ...
>     IntVarArray a;
>     ...
>     vector<int> v;
>     copy(wrap_val(a.begin()),wrap_val(a.end()),back_inserter(x));
>
> which has the effect of copying all of the values from the array a 
> into the vector v, since a.begin() returns an iterator that 
> dereferences to an IntVar and wrap_val(a.begin()) returns a wrapped 
> iterator that returns the result of calling .val() on the IntVar.
>
> The basic use case of the iterators is as follows:
>
>     IntVarArgs a;
>     ...
>     for(IntVarArgs::iterator i = a.begin(); i != a.end(); ++i) { 
> rel(space,*i,IRT_EQ,0); }
>
> Of course, you could more easily do this with rel(space,a,IRT_EQ,0).  
> A more interesting example is:
>
>     IntVarArgs a;
>     ...
>     for(IntVarArgs::iterator i = a.begin(); i != a.end()-1; ++i) { 
> rel(space,*i > *(i+1)+2); }
>
> More powerfully, iterators give you the ability to work with STL 
> algorithms:
>
>     #include <algorithm>
>     ...
>     void f(IntVar& v) { ... }
>     ...
>     IntVarArgs a;
>     ...
>     std::for_each(a.begin(),a.end(),f);
>
> The iterators returned by a.begin() and a.end() dereference to a 
> reference to an IntVar/BoolVar (or a view in the case of ViewArray).  
> If you are interested in iterating over the *values* of the array --- 
> that is, the value currently assigned to to each variable then you can 
> use the function wrap_val to wrap these iterators so that 
> dereferencing them returns the value assigned to the variable.  For 
> example, the last two lines in the following have exactly the same 
> result:
>
>     #include <algorithm>
>     #include <iostream>
>     ...
>     void f(IntVar& v) { std::cout << v.val() << " "; }
>     void g(int i) { std::cout << i << " "; }
>     ...
>     IntVarArgs a;
>     ...
>     std::for_each(a.begin(),a.end(),f); std::cout << std::endl;
>     std::for_each(wrap_val(a.begin()),wrap_val(a.end()),g); std::cout 
> << std::endl;
>
> Or if you want to copy the values assigned to the variables into a 
> std::vector:
>
>     #include <algorithm>
>     #include <iterator>
>     #include <vector>
>     ...
>     IntVarArray a;
>     ...
>     std::vector<int> v;
>     
> std::copy(wrap_val(a.begin()),wrap_val(a.end()),std::back_inserter(x));
>
> Or if you are interested in computing the sum of the values in the 
> variables:
>
>     #include <numeric>
>     ...
>     IntVarArray a;
>     ...
>     int sum = std::accumulate(wrap_val(a.begin()),wrap_val(a.end()),0);
>
> Or alternatively if you are interested in counting the number of zeros 
> in the variables:
>
>     #include <algorithm>
>     ...
>     IntVarArray a;
>     ...
>     unsigned int number_of_zeros = 
> std::count(wrap_val(a.begin()),wrap_val(a.end()),0);
>
> ===
>
> Anyway, I hope that this patch can make it into Gecode this week; you 
> have my official permission to release it under whatever license 
> Gecode uses.
>
> Let me know if you have any questions!  :-)
>
> Cheers,
> Gregory Crosswhite
>
>
>
> On 01/24/2011 10:54 AM, Christian Schulte wrote:
>> Christian Schulte<cschulte at ...>  writes:
>>
>> Hi again,
>>
>> There is one thing I forgot to say: we intend to release end of this 
>> week
>> (hopefully). So if your patch arrives until then, it'll be included 
>> in the
>> next version.
>>
>> Cheers
>> Christian
>>
>>
>>
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>
>
>
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110124/693199fc/attachment-0001.htm>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: patch2
URL: <http://www.gecode.org/pipermail/users/attachments/20110124/693199fc/attachment-0001.asc>

From cschulte at kth.se  Tue Jan 25 11:01:23 2011
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 25 Jan 2011 11:01:23 +0100
Subject: [gecode-users] int vs. unsigned int for Matrix dimensions
In-Reply-To: <4D3DF5B9.5080407@phys.washington.edu>
References: <4D308719.4020405@phys.washington.edu>	<000001cbb5c1$d8427260$88c75720$@se>	<4D336735.3080607@phys.washington.edu>	<4D3380F6.2020404@phys.washington.edu>	<003401cbb64d$25c4e9b0$714ebd10$@se>	<4D37336B.8020303@phys.washington.edu>	<4D388365.1060904@phys.washington.edu>	<000301cbb956$47f621f0$d7e265d0$@se>	<loom.20110124T195223-272@post.gmane.org>	<4D3DDD36.60308@phys.washington.edu>
	<4D3DF5B9.5080407@phys.washington.edu>
Message-ID: <001e01cbbc76$d45823a0$7d086ae0$@se>

Hi,

 

While I buy into the iterator stuff I have to admit that I am not (yet)
excited over the wrap stuff: that looks very very specific. There are only
few cases where you really can rely on the fact that variables are assigned.

 

For example, a common misconception is that the print() function of a script
can only be called on a solution and hence all variables are assigned. This
is wrong, printing must also be able to deal with not yet assigned variables
as the print function can be called on any script and not only solutions.
This for example happens when you click a node in Gist.

 

So I will include the iterators but not the wrap stuff. Is that okay?

 

Thanks a lot for your effort!

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Gregory Crosswhite
Sent: Monday, January 24, 2011 10:57 PM
To: users at gecode.org
Subject: Re: [gecode-users] int vs. unsigned int for Matrix dimensions

 

Oops, I just realized that I forgot to include in the patch an extra line in
Makefile.in to install the new header.  The amended patch is attached to
this e-mail.

Also, I forgot in my previous to mention that also included in the patch is
a test for the WrapVal iterator in test/iter.hpp;  that test program
includes checks on some of the examples that I described in the e-mail to
make sure that they have the expected result.

Cheers,
Greg


On 01/24/2011 12:12 PM, Gregory Crosswhite wrote: 

Well then, I am glad that I got the patch ready over the weekend.  :-) 

The patch has been attached to this e-mail as the file "patch";  it is the
result of running "svn diff" against revision 11556. 

I have modified "gecode/kernel/array.hpp" along the lines that we discussed,
and have added a new test to your suite under "test/array.cpp" to verify
that it works as expected. 

While I was add it, I added another feature.  The patch includes a file
"gecode/iter/wrap-val.hpp" (and a patch to "gecode/iter.hh" to include this
file) which contains an iterator class "WrapVal" that wraps another iterator
and upon dereferencing returns the the result of calling ".val()" on the
dereferenced wrapped iterator, as well as a function "wrap_val" that is a
convenience function for constructing a "WrapVal" (since this causes the
template parameters to automatically be inferred). 

That might sound complicated, but the point of it is to allow someone to do
the following: 

    #include <algorithm> 
    #include <gecode/iter.hh> 
    #include <iterator> 
    #include <vector> 
    ... 
    using namespace Gecode; 
    using namespace Gecode::Iter; 
    using namespace std; 
    ... 
    IntVarArray a; 
    ... 
    vector<int> v; 
    copy(wrap_val(a.begin()),wrap_val(a.end()),back_inserter(x)); 

which has the effect of copying all of the values from the array a into the
vector v, since a.begin() returns an iterator that dereferences to an IntVar
and wrap_val(a.begin()) returns a wrapped iterator that returns the result
of calling .val() on the IntVar. 

The basic use case of the iterators is as follows: 

    IntVarArgs a; 
    ... 
    for(IntVarArgs::iterator i = a.begin(); i != a.end(); ++i) {
rel(space,*i,IRT_EQ,0); } 

Of course, you could more easily do this with rel(space,a,IRT_EQ,0).  A more
interesting example is: 

    IntVarArgs a; 
    ... 
    for(IntVarArgs::iterator i = a.begin(); i != a.end()-1; ++i) {
rel(space,*i > *(i+1)+2); } 

More powerfully, iterators give you the ability to work with STL algorithms:


    #include <algorithm> 
    ... 
    void f(IntVar& v) { ... } 
    ... 
    IntVarArgs a; 
    ... 
    std::for_each(a.begin(),a.end(),f); 

The iterators returned by a.begin() and a.end() dereference to a reference
to an IntVar/BoolVar (or a view in the case of ViewArray).  If you are
interested in iterating over the *values* of the array --- that is, the
value currently assigned to to each variable then you can use the function
wrap_val to wrap these iterators so that dereferencing them returns the
value assigned to the variable.  For example, the last two lines in the
following have exactly the same result: 

    #include <algorithm> 
    #include <iostream> 
    ... 
    void f(IntVar& v) { std::cout << v.val() << " "; } 
    void g(int i) { std::cout << i << " "; } 
    ... 
    IntVarArgs a; 
    ... 
    std::for_each(a.begin(),a.end(),f); std::cout << std::endl; 
    std::for_each(wrap_val(a.begin()),wrap_val(a.end()),g); std::cout <<
std::endl; 

Or if you want to copy the values assigned to the variables into a
std::vector: 

    #include <algorithm> 
    #include <iterator> 
    #include <vector> 
    ... 
    IntVarArray a; 
    ... 
    std::vector<int> v; 
    std::copy(wrap_val(a.begin()),wrap_val(a.end()),std::back_inserter(x)); 

Or if you are interested in computing the sum of the values in the
variables: 

    #include <numeric> 
    ... 
    IntVarArray a; 
    ... 
    int sum = std::accumulate(wrap_val(a.begin()),wrap_val(a.end()),0); 

Or alternatively if you are interested in counting the number of zeros in
the variables: 

    #include <algorithm> 
    ... 
    IntVarArray a; 
    ... 
    unsigned int number_of_zeros =
std::count(wrap_val(a.begin()),wrap_val(a.end()),0); 

=== 

Anyway, I hope that this patch can make it into Gecode this week; you have
my official permission to release it under whatever license Gecode uses. 

Let me know if you have any questions!  :-) 

Cheers, 
Gregory Crosswhite 



On 01/24/2011 10:54 AM, Christian Schulte wrote: 



Christian Schulte <mailto:cschulte at ...> <cschulte at ...>  writes: 

Hi again, 

There is one thing I forgot to say: we intend to release end of this week 
(hopefully). So if your patch arrives until then, it'll be included in the 
next version. 

Cheers 
Christian 




_______________________________________________ 
Gecode users mailing list 
users at gecode.org 
https://www.gecode.org/mailman/listinfo/gecode-users 








 
 
_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110125/361086ad/attachment.htm>

From saidisamira13 at yahoo.fr  Tue Jan 25 16:37:27 2011
From: saidisamira13 at yahoo.fr (sami sami1)
Date: Tue, 25 Jan 2011 15:37:27 +0000 (GMT)
Subject: [gecode-users] integrate a new search strategy in Gecode
Message-ID: <96734.62684.qm@web27204.mail.ukl.yahoo.com>

but we have a problem?in Librairy Gecode, I know

thank you for this information
?
I would create a new search strategy NOUVSEARCH ?like DFS,BAB..., so it must add 
or create a new file nouvsearch.cpp in gecode/search.
In gecode/search there are:
dfs.cpp? bab.cpp? nouvsearch.cpp
?
after, I'll take an example of Gecode? as money.cpp
in the line "run":
?
Script::run<Money,DFS,Options>(opt);
?
I replace DFS by NOUVSEARCH like this:
?
Script::run<Money,NOUVSEARCH,Options>(opt);
? 
but we have a problem?in Librairy Gecode, I know
how i resourd this problem?



      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110125/e865f43e/attachment.htm>

From cschulte at kth.se  Tue Jan 25 16:43:05 2011
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 25 Jan 2011 16:43:05 +0100
Subject: [gecode-users] integrate a new search strategy in Gecode
In-Reply-To: <96734.62684.qm@web27204.mail.ukl.yahoo.com>
References: <96734.62684.qm@web27204.mail.ukl.yahoo.com>
Message-ID: <008601cbbca6$8f5bc420$ae134c60$@se>

Please learn something about namespaces in C++.

 

What you want to do does not require to modify Gecode in any way or form.

 

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of sami sami1
Sent: Tuesday, January 25, 2011 4:37 PM
To: users at gecode.org
Subject: [gecode-users] integrate a new search strategy in Gecode

 

but we have a problem in Librairy Gecode, I know



thank you for this information

 

I would create a new search strategy NOUVSEARCH  like DFS,BAB..., so it must
add or create a new file nouvsearch.cpp in gecode/search.

In gecode/search there are:

dfs.cpp  bab.cpp  nouvsearch.cpp

 

after, I'll take an example of Gecode  as money.cpp

in the line "run":

 

Script::run<Money,DFS,Options>(opt);

 

I replace DFS by NOUVSEARCH like this:

 

Script::run<Money,NOUVSEARCH,Options>(opt);

 

but we have a problem in Librairy Gecode, I know

how i resourd this problem?

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110125/b61b60bc/attachment.htm>

From javimena at gmail.com  Tue Jan 25 18:32:09 2011
From: javimena at gmail.com (=?ISO-8859-1?Q?Javier_Andr=E9s_Mena_Zapata?=)
Date: Tue, 25 Jan 2011 12:32:09 -0500
Subject: [gecode-users] integrate a new search strategy in Gecode
In-Reply-To: <96734.62684.qm@web27204.mail.ukl.yahoo.com>
References: <96734.62684.qm@web27204.mail.ukl.yahoo.com>
Message-ID: <AANLkTi=4=n_URtoaDqBZk=cq4xiXw1zaaLfG-1sR4hD9@mail.gmail.com>

This book may help you to resolve your question.  It is very, very good:

http://www.amazon.com/C-Programming-Language-Special/dp/0201700735/

<http://www.amazon.com/C-Programming-Language-Special/dp/0201700735/>Best
regards,

2011/1/25 sami sami1 <saidisamira13 at yahoo.fr>

>  but we have a problem in Librairy Gecode, I know
>
> thank you for this information
>
> I would create a new search strategy NOUVSEARCH  like DFS,BAB..., so it
> must add or create a new file nouvsearch.cpp in gecode/search.
> In gecode/search there are:
> dfs.cpp  bab.cpp  nouvsearch.cpp
>
> after, I'll take an example of Gecode  as money.cpp
> in the line "run":
>
> Script::run<Money,DFS,Options>(opt);
>
> I replace DFS by NOUVSEARCH like this:
>
> Script::run<Money,NOUVSEARCH,Options>(opt);
>
> but we have a problem in Librairy Gecode, I know
> how i resourd this problem?
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>


-- 
Javier Andr?s Mena Zapata
Cali - Colombia
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110125/cb27c98d/attachment-0001.htm>

From gcross at phys.washington.edu  Tue Jan 25 20:42:52 2011
From: gcross at phys.washington.edu (Gregory Crosswhite)
Date: Tue, 25 Jan 2011 11:42:52 -0800
Subject: [gecode-users] int vs. unsigned int for Matrix dimensions
In-Reply-To: <001e01cbbc76$d45823a0$7d086ae0$@se>
References: <4D308719.4020405@phys.washington.edu>	<000001cbb5c1$d8427260$88c75720$@se>	<4D336735.3080607@phys.washington.edu>	<4D3380F6.2020404@phys.washington.edu>	<003401cbb64d$25c4e9b0$714ebd10$@se>	<4D37336B.8020303@phys.washington.edu>	<4D388365.1060904@phys.washington.edu>	<000301cbb956$47f621f0$d7e265d0$@se>	<loom.20110124T195223-272@post.gmane.org>	<4D3DDD36.60308@phys.washington.edu>
	<4D3DF5B9.5080407@phys.washington.edu>
	<001e01cbbc76$d45823a0$7d086ae0$@se>
Message-ID: <4D3F27BC.8000103@phys.washington.edu>

Hey Christian,

Yes, I am fine with the WrapVal iterator being removed from the patch, 
especially since it is not necessary for it to be in Gecode as it needs 
no access to the internals of the arrays.

The tweaked patch and added documentation all look good to me as well.

So in summary, responding to all three of your queries: everything looks 
fine to me --- thanks for including my patch in Gecode!  :-)

Cheers,
Greg


On 01/25/2011 02:01 AM, Christian Schulte wrote:
>
> Hi,
>
> While I buy into the iterator stuff I have to admit that I am not 
> (yet) excited over the wrap stuff: that looks very very specific. 
> There are only few cases where you really can rely on the fact that 
> variables are assigned.
>
> For example, a common misconception is that the print() function of a 
> script can only be called on a solution and hence all variables are 
> assigned. This is wrong, printing must also be able to deal with not 
> yet assigned variables as the print function can be called on any 
> script and not only solutions. This for example happens when you click 
> a node in Gist.
>
> So I will include the iterators but not the wrap stuff. Is that okay?
>
> Thanks a lot for your effort!
>
> Christian
>
> --
>
> Christian Schulte, www.ict.kth.se/~cschulte/
>
> *From:*users-bounces at gecode.org [mailto:users-bounces at gecode.org] *On 
> Behalf Of *Gregory Crosswhite
> *Sent:* Monday, January 24, 2011 10:57 PM
> *To:* users at gecode.org
> *Subject:* Re: [gecode-users] int vs. unsigned int for Matrix dimensions
>
> Oops, I just realized that I forgot to include in the patch an extra 
> line in Makefile.in to install the new header.  The amended patch is 
> attached to this e-mail.
>
> Also, I forgot in my previous to mention that also included in the 
> patch is a test for the WrapVal iterator in test/iter.hpp;  that test 
> program includes checks on some of the examples that I described in 
> the e-mail to make sure that they have the expected result.
>
> Cheers,
> Greg
>
>
> On 01/24/2011 12:12 PM, Gregory Crosswhite wrote:
>
> Well then, I am glad that I got the patch ready over the weekend.  :-)
>
> The patch has been attached to this e-mail as the file "patch";  it is 
> the result of running "svn diff" against revision 11556.
>
> I have modified "gecode/kernel/array.hpp" along the lines that we 
> discussed, and have added a new test to your suite under 
> "test/array.cpp" to verify that it works as expected.
>
> While I was add it, I added another feature.  The patch includes a 
> file "gecode/iter/wrap-val.hpp" (and a patch to "gecode/iter.hh" to 
> include this file) which contains an iterator class "WrapVal" that 
> wraps another iterator and upon dereferencing returns the the result 
> of calling ".val()" on the dereferenced wrapped iterator, as well as a 
> function "wrap_val" that is a convenience function for constructing a 
> "WrapVal" (since this causes the template parameters to automatically 
> be inferred).
>
> That might sound complicated, but the point of it is to allow someone 
> to do the following:
>
>     #include <algorithm>
>     #include <gecode/iter.hh>
>     #include <iterator>
>     #include <vector>
>     ...
>     using namespace Gecode;
>     using namespace Gecode::Iter;
>     using namespace std;
>     ...
>     IntVarArray a;
>     ...
>     vector<int> v;
>     copy(wrap_val(a.begin()),wrap_val(a.end()),back_inserter(x));
>
> which has the effect of copying all of the values from the array a 
> into the vector v, since a.begin() returns an iterator that 
> dereferences to an IntVar and wrap_val(a.begin()) returns a wrapped 
> iterator that returns the result of calling .val() on the IntVar.
>
> The basic use case of the iterators is as follows:
>
>     IntVarArgs a;
>     ...
>     for(IntVarArgs::iterator i = a.begin(); i != a.end(); ++i) { 
> rel(space,*i,IRT_EQ,0); }
>
> Of course, you could more easily do this with rel(space,a,IRT_EQ,0).  
> A more interesting example is:
>
>     IntVarArgs a;
>     ...
>     for(IntVarArgs::iterator i = a.begin(); i != a.end()-1; ++i) { 
> rel(space,*i > *(i+1)+2); }
>
> More powerfully, iterators give you the ability to work with STL 
> algorithms:
>
>     #include <algorithm>
>     ...
>     void f(IntVar& v) { ... }
>     ...
>     IntVarArgs a;
>     ...
>     std::for_each(a.begin(),a.end(),f);
>
> The iterators returned by a.begin() and a.end() dereference to a 
> reference to an IntVar/BoolVar (or a view in the case of ViewArray).  
> If you are interested in iterating over the *values* of the array --- 
> that is, the value currently assigned to to each variable then you can 
> use the function wrap_val to wrap these iterators so that 
> dereferencing them returns the value assigned to the variable.  For 
> example, the last two lines in the following have exactly the same 
> result:
>
>     #include <algorithm>
>     #include <iostream>
>     ...
>     void f(IntVar& v) { std::cout << v.val() << " "; }
>     void g(int i) { std::cout << i << " "; }
>     ...
>     IntVarArgs a;
>     ...
>     std::for_each(a.begin(),a.end(),f); std::cout << std::endl;
>     std::for_each(wrap_val(a.begin()),wrap_val(a.end()),g); std::cout 
> << std::endl;
>
> Or if you want to copy the values assigned to the variables into a 
> std::vector:
>
>     #include <algorithm>
>     #include <iterator>
>     #include <vector>
>     ...
>     IntVarArray a;
>     ...
>     std::vector<int> v;
>     
> std::copy(wrap_val(a.begin()),wrap_val(a.end()),std::back_inserter(x));
>
> Or if you are interested in computing the sum of the values in the 
> variables:
>
>     #include <numeric>
>     ...
>     IntVarArray a;
>     ...
>     int sum = std::accumulate(wrap_val(a.begin()),wrap_val(a.end()),0);
>
> Or alternatively if you are interested in counting the number of zeros 
> in the variables:
>
>     #include <algorithm>
>     ...
>     IntVarArray a;
>     ...
>     unsigned int number_of_zeros = 
> std::count(wrap_val(a.begin()),wrap_val(a.end()),0);
>
> ===
>
> Anyway, I hope that this patch can make it into Gecode this week; you 
> have my official permission to release it under whatever license 
> Gecode uses.
>
> Let me know if you have any questions!  :-)
>
> Cheers,
> Gregory Crosswhite
>
>
>
> On 01/24/2011 10:54 AM, Christian Schulte wrote:
>
> Christian Schulte<cschulte at ...> <mailto:cschulte at ...>  writes:
>
> Hi again,
>
> There is one thing I forgot to say: we intend to release end of this week
> (hopefully). So if your patch arrives until then, it'll be included in 
> the
> next version.
>
> Cheers
> Christian
>
>
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org <mailto:users at gecode.org>
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>
>
>
>
>
>   
>   
> _______________________________________________
> Gecode users mailing list
> users at gecode.org  <mailto:users at gecode.org>
> https://www.gecode.org/mailman/listinfo/gecode-users
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110125/c3d77ce9/attachment.htm>

From mauriciotorob at gmail.com  Sat Jan 29 02:03:41 2011
From: mauriciotorob at gmail.com (Mauricio Toro)
Date: Fri, 28 Jan 2011 20:03:41 -0500
Subject: [gecode-users] Constraint deduction in Gecode
Message-ID: <AANLkTikw5qO7cZ1UEZ0ziw1KxwbEvU7jPX=T+U4oCkAO@mail.gmail.com>

Hello all,

I am trying to do logic deduction in Gecode and I do not know how to do it.
As an example, I have a,b,c as IntVars(0,100), d as BoolVar(0,1), and I have
the constraints
a > b, b> c and a > c <-> d. I want to be able to prove that a > c can be
deduced from a > b ^ b > c.

I tried using propagation and the value for d is [0..1].
I also tried using search (branching over d) and the answer is 1, but if I
change
the constraints to a > f, b > c and a > c <-> d, the answer
is also 1, which is not true in constraint deduction.

What can I do to implement the concept of constraint deduction in Gecode?

Cheers,
Mauricio

-- 
Mauricio TORO BERMUDEZ

http://www.labri.fr/perso/mtoro/

Invited Researcher
Pontificia Universidad Javeriana de Cali
Phone: +57 2 3218200

Research Postgraduate Student (Ph.D)
Computer Science Research Laboratory of Bordeaux (LABRI)
Universit? de Bordeaux 1

351, cours de la Lib?ration
F-33405 Talence Cedex. France.
Phone: (+33) 5 4000 24 85
Fax: (+33) 5 4000 66 69

Please do not print this e-mail unless you really need to.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20110128/4401b576/attachment.htm>

From tack at gecode.org  Sat Jan 29 11:47:45 2011
From: tack at gecode.org (Guido Tack)
Date: Sat, 29 Jan 2011 11:47:45 +0100
Subject: [gecode-users] Constraint deduction in Gecode
In-Reply-To: <AANLkTikw5qO7cZ1UEZ0ziw1KxwbEvU7jPX=T+U4oCkAO@mail.gmail.com>
References: <AANLkTikw5qO7cZ1UEZ0ziw1KxwbEvU7jPX=T+U4oCkAO@mail.gmail.com>
Message-ID: <B4D63A4D-AC17-44AE-A63A-610DAC9ED1BF@gecode.org>

Mauricio Toro wrote:

> Hello all,
> 
> I am trying to do logic deduction in Gecode and I do not know how to do it.
> As an example, I have a,b,c as IntVars(0,100), d as BoolVar(0,1), and I have the constraints
> a > b, b> c and a > c <-> d. I want to be able to prove that a > c can be 
> deduced from a > b ^ b > c.
> 
> I tried using propagation and the value for d is [0..1].
> I also tried using search (branching over d) and the answer is 1, but if I change
> the constraints to a > f, b > c and a > c <-> d, the answer
> is also 1, which is not true in constraint deduction.
> 
> What can I do to implement the concept of constraint deduction in Gecode?

CP solvers solve existentially quantified problems: is there an assignment to the values that satisfies the constraints.  You are asking a universally quantified question: is it true that for /all/ assignments that satisfy a>b and b>c, it follows that a>c.  In your case, this could be answered by checking whether /all/ solutions to the problem have d=1.

There are solvers that handle these kinds of problems directly.  Have a look at quantified constraint solving, e.g. Qecode:
http://www.univ-orleans.fr/lifo/software/qecode/QeCode.html

Cheers,
	Guido

-- 
Guido Tack, http://people.cs.kuleuven.be/~guido.tack/





