From tack at gecode.org  Mon Oct  1 01:17:37 2012
From: tack at gecode.org (Guido Tack)
Date: Mon, 1 Oct 2012 09:17:37 +1000
Subject: [gecode-users] Linking problems flatzinc in
	searchcombinators-0.9.3.zip
In-Reply-To: <CALtg6jnDD8d+=k0nCnTov0Y0xSbUyxkoSQnaY7GT3xAzSYnWTw@mail.gmail.com>
References: <CALtg6jmOG2Ew7M6Vhv+Onc6vm554UHFeUMhO-DhqA-rUb_d-RQ@mail.gmail.com>
	<BDCD8DF5-457A-4969-8252-B59BE97FD460@gecode.org>
	<CALtg6jnDD8d+=k0nCnTov0Y0xSbUyxkoSQnaY7GT3xAzSYnWTw@mail.gmail.com>
Message-ID: <4B95D9CF-B93C-4438-A49E-39CD6F916AE8@gecode.org>

Hi,

seems like I got the link order wrong again.  Could you try the following command line to link the code:

g++ -g -pthread -O2 -Wall -I. -I/usr/local/include fz_sc.o flatzinc/bool_search.o flatzinc/int_search.o
flatzinc/print.o flatzinc/search.o -L/usr/local/lib -lgecodeflatzinc -lgecodegist -lgecodedriver -lgecodesearch -lgecodeminimodel -lgecodeset -lgecodeint -lgecodekernel -lgecodesupport -o fz_sc

Cheers,
Guido

On 28/09/2012, at 5:39 PM, Andrea Pretto <a.pretto at miriade.it> wrote:

> Gecode release-2.7.3 installed from sources downloaded from svn.
> The in searchcombinators I changed the Makefile this way:
> 
> PLATFORM=linux
> GECODEDIR=/usr/local
> ...
> 
> Make fails in linking:
> 
> $ make
> g++ -g -pthread -O2 -Wall -I. -I/usr/local/include -L/usr/local/lib
> -lgecodeflatzinc -lgecodegist -lgecodedriver -lgecodesearch
> -lgecodeminimodel -lgecodeset -lgecodeint -lgecodekernel
> -lgecodesupport fz_sc.o flatzinc/bool_search.o flatzinc/int_search.o
> flatzinc/print.o flatzinc/search.o -o fz_sc
> ..
> errors posted before
> ..
> 
> Hope it can help.
> 
> Cheers.



From a.pretto at miriade.it  Mon Oct  1 09:41:14 2012
From: a.pretto at miriade.it (Andrea Pretto)
Date: Mon, 1 Oct 2012 09:41:14 +0200
Subject: [gecode-users] Linking problems flatzinc in
	searchcombinators-0.9.3.zip
In-Reply-To: <4B95D9CF-B93C-4438-A49E-39CD6F916AE8@gecode.org>
References: <CALtg6jmOG2Ew7M6Vhv+Onc6vm554UHFeUMhO-DhqA-rUb_d-RQ@mail.gmail.com>
	<BDCD8DF5-457A-4969-8252-B59BE97FD460@gecode.org>
	<CALtg6jnDD8d+=k0nCnTov0Y0xSbUyxkoSQnaY7GT3xAzSYnWTw@mail.gmail.com>
	<4B95D9CF-B93C-4438-A49E-39CD6F916AE8@gecode.org>
Message-ID: <CALtg6jnkJfKv-761gPF+RygpYPfzzx1_R4LPFiqGrXrXM6FUuw@mail.gmail.com>

It works.

Thanks.


From a.pretto at miriade.it  Wed Oct  3 15:45:47 2012
From: a.pretto at miriade.it (Andrea Pretto)
Date: Wed, 3 Oct 2012 15:45:47 +0200
Subject: [gecode-users] Problems on source tree generated by "make dist"
Message-ID: <CALtg6jk2qn=k4_YvHznpCZ4FwHMHwCjbrjTVWp9WMjpBV3PBOQ@mail.gmail.com>

Hi,

I'm trying to create the .tar.gz dist file using "make dist" (from
release-2.7.3 downloaded from svn)
I guess there are missing files in the generated .tar.gz, cause I get this:

config.status: creating Makefile
config.status: error: cannot find input file: `tools/flatzinc/mzn-gecode.in'

Maybe something is missing from the autotools config stuff.

Cheers.


From cschulte at kth.se  Wed Oct  3 15:52:04 2012
From: cschulte at kth.se (Christian Schulte)
Date: Wed, 3 Oct 2012 15:52:04 +0200
Subject: [gecode-users] Problems on source tree generated by "make dist"
In-Reply-To: <CALtg6jk2qn=k4_YvHznpCZ4FwHMHwCjbrjTVWp9WMjpBV3PBOQ@mail.gmail.com>
References: <CALtg6jk2qn=k4_YvHznpCZ4FwHMHwCjbrjTVWp9WMjpBV3PBOQ@mail.gmail.com>
Message-ID: <007a01cda16e$45d0d1c0$d1727540$@se>

I think the dist target is obsolete (Guido: Is it really?). It is safe to
just use the stuff from the svn directly (with svn export). That's how we
build the source packages we distribute.

Cheers
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Andrea Pretto
Sent: Wednesday, October 03, 2012 3:46 PM
To: users at gecode.org list
Subject: [gecode-users] Problems on source tree generated by "make dist"

Hi,

I'm trying to create the .tar.gz dist file using "make dist" (from
release-2.7.3 downloaded from svn)
I guess there are missing files in the generated .tar.gz, cause I get this:

config.status: creating Makefile
config.status: error: cannot find input file: `tools/flatzinc/mzn-gecode.in'

Maybe something is missing from the autotools config stuff.

Cheers.

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users



From tack at gecode.org  Thu Oct  4 01:20:49 2012
From: tack at gecode.org (Guido Tack)
Date: Thu, 4 Oct 2012 09:20:49 +1000
Subject: [gecode-users] Problems on source tree generated by "make dist"
In-Reply-To: <007a01cda16e$45d0d1c0$d1727540$@se>
References: <CALtg6jk2qn=k4_YvHznpCZ4FwHMHwCjbrjTVWp9WMjpBV3PBOQ@mail.gmail.com>
	<007a01cda16e$45d0d1c0$d1727540$@se>
Message-ID: <BBD1F701-CFBE-4641-88D3-13B65C107768@gecode.org>

Yes, the dist target is obsolete (I think it hasn't been working for quite a while).  I removed the target from the svn trunk.

Cheers,
Guido

On 03/10/2012, at 11:52 PM, Christian Schulte <cschulte at kth.se> wrote:

> I think the dist target is obsolete (Guido: Is it really?). It is safe to
> just use the stuff from the svn directly (with svn export). That's how we
> build the source packages we distribute.
> 
> Cheers
> Christian
> 
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
> 
> 
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Andrea Pretto
> Sent: Wednesday, October 03, 2012 3:46 PM
> To: users at gecode.org list
> Subject: [gecode-users] Problems on source tree generated by "make dist"
> 
> Hi,
> 
> I'm trying to create the .tar.gz dist file using "make dist" (from
> release-2.7.3 downloaded from svn)
> I guess there are missing files in the generated .tar.gz, cause I get this:
> 
> config.status: creating Makefile
> config.status: error: cannot find input file: `tools/flatzinc/mzn-gecode.in'
> 
> Maybe something is missing from the autotools config stuff.
> 
> Cheers.
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users



From baptiste.soyer at opencubeproject.org  Thu Oct 18 23:41:12 2012
From: baptiste.soyer at opencubeproject.org (Baptiste Soyer)
Date: Thu, 18 Oct 2012 23:41:12 +0200
Subject: [gecode-users] Cumulatives for scheduling
Message-ID: <CAD4we4h+7eL1SYmO1dCEk+hr-PQeYTZVnpd7ZuH=pKjsKRjuZA@mail.gmail.com>

Hi,

I've run into some issue while trying to implement a scheduler using
gecode. I hope someone can help me...
My goal is to make a schedule of different tasks with the following
requirements :

   - Some task consumes resources. They are defined by :
      - The type of resources that it consumes
      - The amount consumed
      - The duration of the task
      - The earliest and latest start time (earliest start time + time out
      time)  allowed
   - Some task can produce resources. They are defined by :
   - The type of resources that it produces
      - The amount produced
      - The start time (no timeout, the start time is a fixed value) and
      duration of the production

My end goal is to have the possible start time for producer, so that the
amount of resource is always greater or equal to 0.

>From all the above, I thought that the cumulatives constraint implemented
in gecode would be suitable (use of machines for different type of
resources, positive or negative usage for production and consumption,...).

So what I'm doing is defining 2 variables array representing the start time
and end time of each task, and then constraining the start time to be
between the earliest start time and latest start time (same value for
producers). The end time is constraint for fixed duration tasks. And
finally I'm posting the cumulatives constraint.

The gecode code looks something like that :

for(unsigned int i = 0;i<n;i++)
    {
        Booking booking = Bookings[i];//Get the current booking

        //Set Duration, Capacity and Machine arguments
        Duration[i] = booking.getDuration();
        Capacity[i] = booking.getCapacity();
        Machine[i]  = ResourceList[i];

        //Constraint the domain of the StartValue
        StartTime[i] =
IntVar(*this,booking.earliestStart(),booking.latestStart());

        //Constraint to a fixed duration activity
        rel(*this,EndTime[i] == StartTime[i] + Duration[i]);

}

// Constrain the problem with a cumulative scheduling constraint

cumulatives(*this,Machine,StartTime,Duration,EndTime,Capacity,Zero,false);

// Choose the branching mechanism
    branch(*this, EndTime, INT_VAR_MAX_MAX, INT_VAL_MAX);
    branch(*this, StartTime, INT_VAR_MIN_MIN, INT_VAL_MIN);

So my problem (after this long introduction...). I'm checking that gecode
gives me the expected schedule for simple problem. I have 2 consumers and 1
producer which have the following value.

consumer 1(Power:2)
Start Time :0
Duration   :5
TimeOut    :4

consumer 2(Power:9)
Start Time :0
Duration   :5
TimeOut    :5

producer 1(Power:10)
Start Time :0
Duration   :10
TimeOut    :0

Which gives me the following value for the cumulative constraint on :
    Machine :{0, 0, 0}
    StartTime :{[0..4], [0..5], 0}
    Duration :{5, 5, 10}
    EndTime :{[0..10], [0..10], 10}
    Capacity :{-2, -9, 10}

So I'm expecting to have 1 solution :consumer 1 starting at 0 and consumer
2 starting at 5. But my code finds no solutions.

If I'm putting the time out for the first producer at 5 I find 1 solutions
where I should find 2 (both producer are interchangeable). The solution
found depends on the branching selected (which I understand in a way, but
it should still find me both solutions).

So I'm sure I'm doing something wrong, but I can't find out what.

I hope I made myself clear.

Cheers,

Baptiste
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20121018/36d2e08e/attachment.html>

From tack at gecode.org  Mon Oct 22 04:50:28 2012
From: tack at gecode.org (Guido Tack)
Date: Mon, 22 Oct 2012 13:50:28 +1100
Subject: [gecode-users] Cumulatives for scheduling
In-Reply-To: <CAD4we4h+7eL1SYmO1dCEk+hr-PQeYTZVnpd7ZuH=pKjsKRjuZA@mail.gmail.com>
References: <CAD4we4h+7eL1SYmO1dCEk+hr-PQeYTZVnpd7ZuH=pKjsKRjuZA@mail.gmail.com>
Message-ID: <4862B24B-F878-400C-8FF3-DB9613EC5923@gecode.org>

Hi,

I can't reproduce your problem on my machine.  Can you please have a look at the attached source code and check if it models the problem correctly.  If this does not give the expected answers, please let me know exactly which version of Gecode you're using, which operating system etc.

Cheers,
Guido



On 19/10/2012, at 8:41 AM, Baptiste Soyer <baptiste.soyer at opencubeproject.org> wrote:

> Hi,
> 
> I've run into some issue while trying to implement a scheduler using gecode. I hope someone can help me...
> My goal is to make a schedule of different tasks with the following requirements :
> Some task consumes resources. They are defined by :
> The type of resources that it consumes
> The amount consumed
> The duration of the task
> The earliest and latest start time (earliest start time + time out time)  allowed
> Some task can produce resources. They are defined by :
> The type of resources that it produces
> The amount produced
> The start time (no timeout, the start time is a fixed value) and duration of the production
> My end goal is to have the possible start time for producer, so that the amount of resource is always greater or equal to 0.
> From all the above, I thought that the cumulatives constraint implemented in gecode would be suitable (use of machines for different type of resources, positive or negative usage for production and consumption,...).
> 
> So what I'm doing is defining 2 variables array representing the start time and end time of each task, and then constraining the start time to be between the earliest start time and latest start time (same value for producers). The end time is constraint for fixed duration tasks. And finally I'm posting the cumulatives constraint.
> 
> The gecode code looks something like that :
> 
> for(unsigned int i = 0;i<n;i++)
>     {
>         Booking booking = Bookings[i];//Get the current booking
>         
>         //Set Duration, Capacity and Machine arguments
>         Duration[i] = booking.getDuration(); 
>         Capacity[i] = booking.getCapacity();
>         Machine[i]  = ResourceList[i];
>         
>         //Constraint the domain of the StartValue
>         StartTime[i] = IntVar(*this,booking.earliestStart(),booking.latestStart());    
>         
>         //Constraint to a fixed duration activity
>         rel(*this,EndTime[i] == StartTime[i] + Duration[i]);
> 
> }
> 
> // Constrain the problem with a cumulative scheduling constraint
>     cumulatives(*this,Machine,StartTime,Duration,EndTime,Capacity,Zero,false);
> 
> // Choose the branching mechanism
>     branch(*this, EndTime, INT_VAR_MAX_MAX, INT_VAL_MAX);
>     branch(*this, StartTime, INT_VAR_MIN_MIN, INT_VAL_MIN);
> 
> So my problem (after this long introduction...). I'm checking that gecode gives me the expected schedule for simple problem. I have 2 consumers and 1 producer which have the following value.
> consumer 1(Power:2)
> Start Time :0
> Duration   :5
> TimeOut    :4
> 
> consumer 2(Power:9)
> Start Time :0
> Duration   :5
> TimeOut    :5
> 
> producer 1(Power:10)
> Start Time :0
> Duration   :10
> TimeOut    :0
> 
> Which gives me the following value for the cumulative constraint on :
>     Machine :{0, 0, 0}
>     StartTime :{[0..4], [0..5], 0}
>     Duration :{5, 5, 10}
>     EndTime :{[0..10], [0..10], 10}
>     Capacity :{-2, -9, 10}
> 
> So I'm expecting to have 1 solution :consumer 1 starting at 0 and consumer 2 starting at 5. But my code finds no solutions.
> 
> If I'm putting the time out for the first producer at 5 I find 1 solutions where I should find 2 (both producer are interchangeable). The solution found depends on the branching selected (which I understand in a way, but it should still find me both solutions).
> 
> So I'm sure I'm doing something wrong, but I can't find out what.
> 
> I hope I made myself clear.
> 
> 
> Cheers,
> 
> Baptiste
> 
> 
> 
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20121022/eb963bf3/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cumul.cpp
Type: application/octet-stream
Size: 1270 bytes
Desc: not available
URL: <http://www.gecode.org/pipermail/users/attachments/20121022/eb963bf3/attachment.obj>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20121022/eb963bf3/attachment-0001.html>

From ostrowsk at cs.uni-potsdam.de  Tue Oct 23 13:31:12 2012
From: ostrowsk at cs.uni-potsdam.de (Max Ostrowski)
Date: Tue, 23 Oct 2012 13:31:12 +0200
Subject: [gecode-users] Number of branches/choices
In-Reply-To: <4862B24B-F878-400C-8FF3-DB9613EC5923@gecode.org>
References: <CAD4we4h+7eL1SYmO1dCEk+hr-PQeYTZVnpd7ZuH=pKjsKRjuZA@mail.gmail.com>
	<4862B24B-F878-400C-8FF3-DB9613EC5923@gecode.org>
Message-ID: <50868000.1080904@cs.uni-potsdam.de>

Hi,

i want to compare some statistics,
and want to find out how many choices (non-deterministic decisions) 
gecode has made during branching.
(So, not talking about non-deterministic propagation, just simple 
select/propagate).

The statistic object
dfsSearchEngine_->statistics().node
tells me something about the used nodes, but this not seem to be the 
right thing to use.

So, for a simple CSP, with variable x = 0..9 without any constraint,
i get 19 nodes (enumerating all solutions).
Can i simply divide this by 2 to get my 9 decisions?

Best,
Max


From cschulte at kth.se  Tue Oct 23 16:50:19 2012
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 23 Oct 2012 16:50:19 +0200
Subject: [gecode-users] Number of branches/choices
In-Reply-To: <50868000.1080904@cs.uni-potsdam.de>
References: <CAD4we4h+7eL1SYmO1dCEk+hr-PQeYTZVnpd7ZuH=pKjsKRjuZA@mail.gmail.com>	<4862B24B-F878-400C-8FF3-DB9613EC5923@gecode.org>
	<50868000.1080904@cs.uni-potsdam.de>
Message-ID: <00ef01cdb12d$b9a4ea90$2ceebfb0$@se>

Hi,

So we could say that every edge (corresponding to an alternative) in the
search tree is a decision made during search (even though the branching in
the parent node defines all alternatives directly below).

Then, if we are talking binary branchings only, we all know that the number
of edges #e is the number of nodes #n minus 1. The total number of nodes #n
is the number of nodes reported plus the number of solutions and failures.
Voila!

Cheers
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Max Ostrowski
Sent: Tuesday, October 23, 2012 1:31 PM
To: users at gecode.org
Subject: [gecode-users] Number of branches/choices

Hi,

i want to compare some statistics,
and want to find out how many choices (non-deterministic decisions) gecode
has made during branching.
(So, not talking about non-deterministic propagation, just simple
select/propagate).

The statistic object
dfsSearchEngine_->statistics().node
tells me something about the used nodes, but this not seem to be the right
thing to use.

So, for a simple CSP, with variable x = 0..9 without any constraint, i get
19 nodes (enumerating all solutions).
Can i simply divide this by 2 to get my 9 decisions?

Best,
Max

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users



From baptiste.soyer at opencubeproject.org  Tue Oct 23 22:23:10 2012
From: baptiste.soyer at opencubeproject.org (Baptiste Soyer)
Date: Tue, 23 Oct 2012 22:23:10 +0200
Subject: [gecode-users] Cumulatives for scheduling
Message-ID: <CAD4we4iDLkHA7tFgtNVhFc1f_NJYhSm0Vp2x3aucz2RQf2YdzA@mail.gmail.com>

Hi,

Thanks for the bit of code, it worked perfectly fine ! It helped me found
my newbie mistake. I was checking if I found any solution by doing :

if (solutions.next() ==NULL){
  os<<"No solutions"<<endl;
        return false;
        }

while(RMModel *solution = solutions.next())
    {
        solution->print(os);
delete solution;}

In restrospect that was a very stupid way of doing it. So my code did in
fact find the right solutions, it just skipped the first one, while
checking if it found a solution in the first place.

Another question loosely related to my initial problem of not finding all
solutions : is it usual for the BAB search engine to not give the same
number of solutions (I have one less) than the DFS. I modified your file to
reproduce this"problem", and attached it to this mail. Maybe this is how it
is supposed to work.

Thanks again for your help,

Baptiste
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20121023/96a55994/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cumuBAB_DFS.cpp
Type: text/x-c++src
Size: 2296 bytes
Desc: not available
URL: <http://www.gecode.org/pipermail/users/attachments/20121023/96a55994/attachment.cpp>

From tack at gecode.org  Wed Oct 24 00:04:25 2012
From: tack at gecode.org (Guido Tack)
Date: Wed, 24 Oct 2012 09:04:25 +1100
Subject: [gecode-users] Cumulatives for scheduling
In-Reply-To: <CAD4we4iDLkHA7tFgtNVhFc1f_NJYhSm0Vp2x3aucz2RQf2YdzA@mail.gmail.com>
References: <CAD4we4iDLkHA7tFgtNVhFc1f_NJYhSm0Vp2x3aucz2RQf2YdzA@mail.gmail.com>
Message-ID: <115403A8-AA59-42A6-BD8E-B57096819799@gecode.org>

Hi,

glad to hear that it was easy to fix.  DFS finds all solutions, while BAB finds increasingly better solutions, after finding each solution it prunes solutions that are not better (and the overall last solution is guaranteed to be the overall best solution).  So it's expected that BAB finds fewer solutions.

Cheers,
Guido

On 24/10/2012, at 7:23 AM, Baptiste Soyer <baptiste.soyer at opencubeproject.org> wrote:

> Hi,
> 
> Thanks for the bit of code, it worked perfectly fine ! It helped me found my newbie mistake. I was checking if I found any solution by doing :
> 
> if (solutions.next() ==NULL){
>   os<<"No solutions"<<endl;
>         return false;
>         }
> 
> while(RMModel *solution = solutions.next())
>     {   
>         solution->print(os);
> delete solution;}
> 
> In restrospect that was a very stupid way of doing it. So my code did in fact find the right solutions, it just skipped the first one, while checking if it found a solution in the first place.
> 
> Another question loosely related to my initial problem of not finding all solutions : is it usual for the BAB search engine to not give the same number of solutions (I have one less) than the DFS. I modified your file to reproduce this"problem", and attached it to this mail. Maybe this is how it is supposed to work.
> 
> Thanks again for your help,
> 
> Baptiste
> <cumuBAB_DFS.cpp>



From ostrowsk at cs.uni-potsdam.de  Wed Oct 24 10:24:27 2012
From: ostrowsk at cs.uni-potsdam.de (Max Ostrowski)
Date: Wed, 24 Oct 2012 10:24:27 +0200
Subject: [gecode-users] Number of branches/choices
In-Reply-To: <00ef01cdb12d$b9a4ea90$2ceebfb0$@se>
References: <CAD4we4h+7eL1SYmO1dCEk+hr-PQeYTZVnpd7ZuH=pKjsKRjuZA@mail.gmail.com>	<4862B24B-F878-400C-8FF3-DB9613EC5923@gecode.org>
	<50868000.1080904@cs.uni-potsdam.de>
	<00ef01cdb12d$b9a4ea90$2ceebfb0$@se>
Message-ID: <5087A5BB.5090403@cs.uni-potsdam.de>

Thanks for this, so a solution and a failure is also a node.
This formula seems to fit.
Thx

On 10/23/2012 04:50 PM, Christian Schulte wrote:
> Hi,
>
> So we could say that every edge (corresponding to an alternative) in the
> search tree is a decision made during search (even though the branching in
> the parent node defines all alternatives directly below).
>
> Then, if we are talking binary branchings only, we all know that the number
> of edges #e is the number of nodes #n minus 1. The total number of nodes #n
> is the number of nodes reported plus the number of solutions and failures.
> Voila!
>
> Cheers
> Christian
>
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
>
>
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Max Ostrowski
> Sent: Tuesday, October 23, 2012 1:31 PM
> To: users at gecode.org
> Subject: [gecode-users] Number of branches/choices
>
> Hi,
>
> i want to compare some statistics,
> and want to find out how many choices (non-deterministic decisions) gecode
> has made during branching.
> (So, not talking about non-deterministic propagation, just simple
> select/propagate).
>
> The statistic object
> dfsSearchEngine_->statistics().node
> tells me something about the used nodes, but this not seem to be the right
> thing to use.
>
> So, for a simple CSP, with variable x = 0..9 without any constraint, i get
> 19 nodes (enumerating all solutions).
> Can i simply divide this by 2 to get my 9 decisions?
>
> Best,
> Max
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>



From hejunnudt at gmail.com  Sat Oct 27 17:23:06 2012
From: hejunnudt at gmail.com (Jun He)
Date: Sat, 27 Oct 2012 17:23:06 +0200
Subject: [gecode-users] branching and copy in Gecode
Message-ID: <508BFC5A.2070604@gmail.com>

Hi,

In Gecode, copy doesn't happen for every branching of the search tree, 
and whenever a failure happens it just backtracks to a node between the 
current failure node and the previous copied node.  If a propagator 
works dependent on some data structure, and the backtrack jumps to a 
node that is not copied, then the data structure should be recomputed.  
My question is how to maintain the data structure incrementally for the 
propagator?  Is there an easy setting to make Gecode copy at each 
branching, so that a simple undo policy can be used to maintain the data 
structure?

Best regards,
Jun


From tack at gecode.org  Sun Oct 28 01:24:51 2012
From: tack at gecode.org (Guido Tack)
Date: Sun, 28 Oct 2012 10:24:51 +1100
Subject: [gecode-users] branching and copy in Gecode
In-Reply-To: <508BFC5A.2070604@gmail.com>
References: <508BFC5A.2070604@gmail.com>
Message-ID: <A0D8E02E-6C23-4F25-9194-C1E05063D955@gecode.org>

Hi,

backtracking always jumps back to a copy and then recomputes the node that it actually wants to jump to.  So you can maintain your propagator data structures incrementally, as long as they're copied (or marked for recomputation) during cloning.  See chapter 7.2 in MPG for a more detailed explanation of recomputation.

Cheers,
Guido

On 28/10/2012, at 2:23 , Jun He <hejunnudt at gmail.com> wrote:

> Hi,
> 
> In Gecode, copy doesn't happen for every branching of the search tree, and whenever a failure happens it just backtracks to a node between the current failure node and the previous copied node.  If a propagator works dependent on some data structure, and the backtrack jumps to a node that is not copied, then the data structure should be recomputed.  My question is how to maintain the data structure incrementally for the propagator?  Is there an easy setting to make Gecode copy at each branching, so that a simple undo policy can be used to maintain the data structure?
> 
> Best regards,
> Jun
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-- 
Guido Tack,
http://www.csse.monash.edu/~guidot/



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20121028/d82c7942/attachment.html>

From hejunnudt at gmail.com  Sun Oct 28 10:58:51 2012
From: hejunnudt at gmail.com (Jun He)
Date: Sun, 28 Oct 2012 10:58:51 +0100
Subject: [gecode-users] branching and copy in Gecode
In-Reply-To: <A0D8E02E-6C23-4F25-9194-C1E05063D955@gecode.org>
References: <508BFC5A.2070604@gmail.com>
	<A0D8E02E-6C23-4F25-9194-C1E05063D955@gecode.org>
Message-ID: <508D01DB.8010103@gmail.com>

Hi,

Thank you for your explanation.

I want all the instances of my propagator to share the data structure 
instead of making a copy, as storing the data structure needs too much 
memory.  Hence I want my propagator to rollback the data structure when 
a backtracking happens.  Is there an event to notify the propagator (or 
some policy to make the propagator detects) when a backtracking happens?

Best regards,
Jun


On 28/10/12 01:24, Guido Tack wrote:
> Hi,
>
> backtracking always jumps back to a copy and then recomputes the node 
> that it actually wants to jump to.  So you can maintain your 
> propagator data structures incrementally, as long as they're copied 
> (or marked for recomputation) during cloning.  See chapter 7.2 in MPG 
> for a more detailed explanation of recomputation.
>
> Cheers,
> Guido
>
> On 28/10/2012, at 2:23 , Jun He <hejunnudt at gmail.com 
> <mailto:hejunnudt at gmail.com>> wrote:
>
>> Hi,
>>
>> In Gecode, copy doesn't happen for every branching of the search 
>> tree, and whenever a failure happens it just backtracks to a node 
>> between the current failure node and the previous copied node.  If a 
>> propagator works dependent on some data structure, and the backtrack 
>> jumps to a node that is not copied, then the data structure should be 
>> recomputed.  My question is how to maintain the data structure 
>> incrementally for the propagator?  Is there an easy setting to make 
>> Gecode copy at each branching, so that a simple undo policy can be 
>> used to maintain the data structure?
>>
>> Best regards,
>> Jun
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org <mailto:users at gecode.org>
>> https://www.gecode.org/mailman/listinfo/gecode-users
>
> -- 
> Guido Tack,
> http://www.csse.monash.edu/~guidot/ 
> <http://www.csse.monash.edu/%7Eguidot/>
>
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20121028/60166a4a/attachment.html>

From tack at gecode.org  Mon Oct 29 00:32:56 2012
From: tack at gecode.org (Guido Tack)
Date: Mon, 29 Oct 2012 10:32:56 +1100
Subject: [gecode-users] branching and copy in Gecode
In-Reply-To: <508D01DB.8010103@gmail.com>
References: <508BFC5A.2070604@gmail.com>
	<A0D8E02E-6C23-4F25-9194-C1E05063D955@gecode.org>
	<508D01DB.8010103@gmail.com>
Message-ID: <2E9945A8-5802-40B7-AA09-691CDFC17D1D@gecode.org>

There is no direct event or notification for backtracking.  But your propagator could have a pointer to the shared data structure (see chapter 27.3 in MPG), and both the data structure and the propagator could have a "time stamp".  When the propagator gets copied, you increment the time stamp in the copy.  Every time you run the propagator, you check if the time stamps of the propagator and the shared data structure match, and if they don't you repair the data structure and set its time stamp to the current propagator's.  This is quite cheap, just an additional integer in the propagator and a simple check in its propagate method.

Cheers,
Guido

On 28/10/2012, at 8:58 PM, Jun He <hejunnudt at gmail.com> wrote:

> Hi,
> 
> Thank you for your explanation.
> 
> I want all the instances of my propagator to share the data structure instead of making a copy, as storing the data structure needs too much memory.  Hence I want my propagator to rollback the data structure when a backtracking happens.  Is there an event to notify the propagator (or some policy to make the propagator detects) when a backtracking happens?  
> 
> Best regards,
> Jun
> 
> 
> On 28/10/12 01:24, Guido Tack wrote:
>> Hi,
>> 
>> backtracking always jumps back to a copy and then recomputes the node that it actually wants to jump to.  So you can maintain your propagator data structures incrementally, as long as they're copied (or marked for recomputation) during cloning.  See chapter 7.2 in MPG for a more detailed explanation of recomputation.
>> 
>> Cheers,
>> Guido
>> 
>> On 28/10/2012, at 2:23 , Jun He <hejunnudt at gmail.com> wrote:
>> 
>>> Hi,
>>> 
>>> In Gecode, copy doesn't happen for every branching of the search tree, and whenever a failure happens it just backtracks to a node between the current failure node and the previous copied node.  If a propagator works dependent on some data structure, and the backtrack jumps to a node that is not copied, then the data structure should be recomputed.  My question is how to maintain the data structure incrementally for the propagator?  Is there an easy setting to make Gecode copy at each branching, so that a simple undo policy can be used to maintain the data structure?
>>> 
>>> Best regards,
>>> Jun
>>> 
>>> _______________________________________________
>>> Gecode users mailing list
>>> users at gecode.org
>>> https://www.gecode.org/mailman/listinfo/gecode-users
>> 
>> -- 
>> Guido Tack,
>> http://www.csse.monash.edu/~guidot/
>> 
>> 
>> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20121029/f764702d/attachment.html>

