From manu.baclet at gmail.com  Mon Sep  3 16:41:47 2012
From: manu.baclet at gmail.com (Manuel Baclet)
Date: Mon, 3 Sep 2012 16:41:47 +0200
Subject: [gecode-users] Slow down between revision 13005 and 13037
Message-ID: <4E194A6D-5AB7-446D-8EF2-A5083AEA4781@gmail.com>

Hello,
i don't know if you already know about this but i have found a huge slow down between revision 13005 and revision 13037.
Testing on the same program with 80 threads on osx 10.8.1 (compiled with clang), the mean time for finding a solution:

revision 13005: 
time 15s 
cpu system 10%/400%

revision: 13037
time 50s
cpu system 30%/400%

Hope this can help, regards,
Manuel Baclet



From cschulte at kth.se  Mon Sep  3 16:52:45 2012
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 3 Sep 2012 16:52:45 +0200
Subject: [gecode-users] Slow down between revision 13005 and 13037
In-Reply-To: <4E194A6D-5AB7-446D-8EF2-A5083AEA4781@gmail.com>
References: <4E194A6D-5AB7-446D-8EF2-A5083AEA4781@gmail.com>
Message-ID: <00ca01cd89e3$c7376410$55a62c30$@se>

Thanks, but this is the trunk so this is to be expected in between releases.

Which kind of program did you try? And how many CPUs does your machine have
(I guess less than 80)?

Cheers
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Manuel Baclet
Sent: Monday, September 03, 2012 4:42 PM
To: users at gecode.org
Subject: [gecode-users] Slow down between revision 13005 and 13037

Hello,
i don't know if you already know about this but i have found a huge slow
down between revision 13005 and revision 13037.
Testing on the same program with 80 threads on osx 10.8.1 (compiled with
clang), the mean time for finding a solution:

revision 13005: 
time 15s 
cpu system 10%/400%

revision: 13037
time 50s
cpu system 30%/400%

Hope this can help, regards,
Manuel Baclet


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users



From manu.baclet at gmail.com  Mon Sep  3 17:13:37 2012
From: manu.baclet at gmail.com (Manuel Baclet)
Date: Mon, 3 Sep 2012 17:13:37 +0200
Subject: [gecode-users] Slow down between revision 13005 and 13037
In-Reply-To: <00ca01cd89e3$c7376410$55a62c30$@se>
References: <4E194A6D-5AB7-446D-8EF2-A5083AEA4781@gmail.com>
	<00ca01cd89e3$c7376410$55a62c30$@se>
Message-ID: <5FAFF962-C236-42B5-BF42-CE94123F1825@gmail.com>

The program is a personal production to find a timetable for students. I run it on a Core i5 laptop with two cores. I have found that a high number of threads increases the chances of finding a solution (from 20% with one thread to almost 100% with 80 threads). I can try to find a simple example if you want.

Cheers,
Manuel


Le 3 sept. 2012 ? 16:52, "Christian Schulte" <cschulte at kth.se> a ?crit :

> Thanks, but this is the trunk so this is to be expected in between releases.
> 
> Which kind of program did you try? And how many CPUs does your machine have
> (I guess less than 80)?
> 
> Cheers
> Christian
> 
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
> 
> 
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Manuel Baclet
> Sent: Monday, September 03, 2012 4:42 PM
> To: users at gecode.org
> Subject: [gecode-users] Slow down between revision 13005 and 13037
> 
> Hello,
> i don't know if you already know about this but i have found a huge slow
> down between revision 13005 and revision 13037.
> Testing on the same program with 80 threads on osx 10.8.1 (compiled with
> clang), the mean time for finding a solution:
> 
> revision 13005: 
> time 15s 
> cpu system 10%/400%
> 
> revision: 13037
> time 50s
> cpu system 30%/400%
> 
> Hope this can help, regards,
> Manuel Baclet
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
> 



From cschulte at kth.se  Mon Sep  3 20:45:50 2012
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 3 Sep 2012 20:45:50 +0200
Subject: [gecode-users] Slow down between revision 13005 and 13037
In-Reply-To: <5FAFF962-C236-42B5-BF42-CE94123F1825@gmail.com>
References: <4E194A6D-5AB7-446D-8EF2-A5083AEA4781@gmail.com>
	<00ca01cd89e3$c7376410$55a62c30$@se>
	<5FAFF962-C236-42B5-BF42-CE94123F1825@gmail.com>
Message-ID: <001b01cd8a04$57d372f0$077a58d0$@kth.se>

Hi Manuel,

I think I know where the problem is. I reimplemented part of the memory
management with the hope that the performance would be okay (even on Mac OS,
where we had issues before with many threads). I'll have to get back to
drawing board it seems ;-(

Thanks for letting us know!
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/

> -----Original Message-----
> From: Manuel Baclet [mailto:manu.baclet at gmail.com]
> Sent: Monday, September 03, 2012 5:14 PM
> To: cschulte at kth.se
> Cc: users at gecode.org
> Subject: Re: [gecode-users] Slow down between revision 13005 and 13037
> 
> The program is a personal production to find a timetable for students. I
run it on
> a Core i5 laptop with two cores. I have found that a high number of
threads
> increases the chances of finding a solution (from 20% with one thread to
almost
> 100% with 80 threads). I can try to find a simple example if you want.
> 
> Cheers,
> Manuel
> 
> 
> Le 3 sept. 2012 ? 16:52, "Christian Schulte" <cschulte at kth.se> a ?crit :
> 
> > Thanks, but this is the trunk so this is to be expected in between
releases.
> >
> > Which kind of program did you try? And how many CPUs does your machine
> > have (I guess less than 80)?
> >
> > Cheers
> > Christian
> >
> > --
> > Christian Schulte, www.ict.kth.se/~cschulte/
> >
> >
> > -----Original Message-----
> > From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On
> > Behalf Of Manuel Baclet
> > Sent: Monday, September 03, 2012 4:42 PM
> > To: users at gecode.org
> > Subject: [gecode-users] Slow down between revision 13005 and 13037
> >
> > Hello,
> > i don't know if you already know about this but i have found a huge
> > slow down between revision 13005 and revision 13037.
> > Testing on the same program with 80 threads on osx 10.8.1 (compiled
> > with clang), the mean time for finding a solution:
> >
> > revision 13005:
> > time 15s
> > cpu system 10%/400%
> >
> > revision: 13037
> > time 50s
> > cpu system 30%/400%
> >
> > Hope this can help, regards,
> > Manuel Baclet
> >
> >
> > _______________________________________________
> > Gecode users mailing list
> > users at gecode.org
> > https://www.gecode.org/mailman/listinfo/gecode-users
> >




From cschulte at kth.se  Fri Sep  7 18:04:11 2012
From: cschulte at kth.se (Christian Schulte)
Date: Fri, 7 Sep 2012 18:04:11 +0200
Subject: [gecode-users] Slow down between revision 13005 and 13037
In-Reply-To: <5FAFF962-C236-42B5-BF42-CE94123F1825@gmail.com>
References: <4E194A6D-5AB7-446D-8EF2-A5083AEA4781@gmail.com>
	<00ca01cd89e3$c7376410$55a62c30$@se>
	<5FAFF962-C236-42B5-BF42-CE94123F1825@gmail.com>
Message-ID: <001b01cd8d12$6b9cac50$42d604f0$@kth.se>

Hi again,

Thanks again for spotting this. The trunk has reverted to the previous
implementation of Region memory management, so performance should be roughly
the same.

I realized that the old (and now current again) implementation of region was
in fact correct. However, its explanation in MPG was as wrong as could be
(actually the example of how to use several regions is now the example of
how to _not_ use several regions) . As I feel so ashamed, I attach the fixed
part from MPG (Jean-No?l: I think this should clarify matters).

Watch out: the trunk has a number of changes that break backwards
compatibility (yes, Gecode 4 is coming closer), you will have to consult the
changelog.

Best
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


> -----Original Message-----
> From: Manuel Baclet [mailto:manu.baclet at gmail.com]
> Sent: Monday, September 03, 2012 5:14 PM
> To: cschulte at kth.se
> Cc: users at gecode.org
> Subject: Re: [gecode-users] Slow down between revision 13005 and 13037
> 
> The program is a personal production to find a timetable for students. I
run it on
> a Core i5 laptop with two cores. I have found that a high number of
threads
> increases the chances of finding a solution (from 20% with one thread to
almost
> 100% with 80 threads). I can try to find a simple example if you want.
> 
> Cheers,
> Manuel
> 
> 
> Le 3 sept. 2012 ? 16:52, "Christian Schulte" <cschulte at kth.se> a ?crit :
> 
> > Thanks, but this is the trunk so this is to be expected in between
releases.
> >
> > Which kind of program did you try? And how many CPUs does your machine
> > have (I guess less than 80)?
> >
> > Cheers
> > Christian
> >
> > --
> > Christian Schulte, www.ict.kth.se/~cschulte/
> >
> >
> > -----Original Message-----
> > From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On
> > Behalf Of Manuel Baclet
> > Sent: Monday, September 03, 2012 4:42 PM
> > To: users at gecode.org
> > Subject: [gecode-users] Slow down between revision 13005 and 13037
> >
> > Hello,
> > i don't know if you already know about this but i have found a huge
> > slow down between revision 13005 and revision 13037.
> > Testing on the same program with 80 threads on osx 10.8.1 (compiled
> > with clang), the mean time for finding a solution:
> >
> > revision 13005:
> > time 15s
> > cpu system 10%/400%
> >
> > revision: 13037
> > time 50s
> > cpu system 30%/400%
> >
> > Hope this can help, regards,
> > Manuel Baclet
> >
> >
> > _______________________________________________
> > Gecode users mailing list
> > users at gecode.org
> > https://www.gecode.org/mailman/listinfo/gecode-users
> >

-------------- next part --------------
A non-text attachment was scrubbed...
Name: Region.pdf
Type: application/pdf
Size: 49403 bytes
Desc: not available
URL: <http://www.gecode.org/pipermail/users/attachments/20120907/bdf5a7b0/attachment-0001.pdf>

From l.digaspero at uniud.it  Tue Sep 25 17:51:08 2012
From: l.digaspero at uniud.it (Luca Di Gaspero)
Date: Tue, 25 Sep 2012 17:51:08 +0200
Subject: [gecode-users] Gecode/XCode 4.4+
Message-ID: <AD8737E8-484C-4132-8C7B-02EBA5504453@uniud.it>

Hi all,

I am trying to use the binary gecode framework for Mac OS X with the most recent version of Xcode (both 4.4 and 4.5), but the source code I've written failed to compile (it does not find the proper headers within the gecode.framework bundle). Are the developers aware of this issue (and possibly do they have a way to fix it)?

All the best,

Luca Di Gaspero

From a.pretto at miriade.it  Tue Sep 25 12:09:26 2012
From: a.pretto at miriade.it (Andrea Pretto)
Date: Tue, 25 Sep 2012 12:09:26 +0200
Subject: [gecode-users] Add constraints to Flatzinc sharing parameters
	between them
Message-ID: <CALtg6jndccZQgcbww4FQ9Xxx0FWQCTAYO7YRkh_sXOqM7hxO7Q@mail.gmail.com>

Hi,

I'm trying to add a custom constraint in Flatizinc/Gecode. A simple version
is already working. (Yes, I figured out how to modify registry.cpp etc...
and yes, I know this is more hacking than extending cause there's no an
official way to do that)

I have the problem of sharing data (parameters) between constraints.
This is the constraint signature:

predicate my_con(var int: x, var int: y, array[int] of int: params1,
array[int] of int: params2);

my_con is a constraint between X and Y, parametrized by params1 and params2.
params1 and params2 are (possibly) large arrays, so I want to share them
between different my_con instances:

There's a clean way to do that ??


The simplest solution I found was using flatzinc parameters, but I have
some problems.

% flatzinc file
array [1..many many] of int: p1;
array [1..many many] of int: p2;

...

my_con(x, y, p1, p2)
...
my_con(z, w, p1, p2)
%

The flatzinc file above should resolve the problem alone, because the
parameter arrays should be shared.
This is a snippet of the function in registry.cpp that receives the
constraint declaration.

void p_my_con(FlatZincSpace& s, const ConExpr& ce, AST::Node* ann) {
      ...
      AST::Array* s_array = ce[2]->getArray();
      AST::Array* e_array = ce[3]->getArray();

      std::cout << "SA " << s_array << std::endl;
      std::cout << "SE " << e_array << std::endl;
      ...
}

Now the output shows me that s_array pointer is the same between
invocation, but e_array is not, so it's like the second parameter array is
copied every time.

I don't know if this is a bug or not.
However the main question is how to share data between multiple constraints.

Any help is appreciated.

Cheers.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20120925/31462faa/attachment.html>

From vmersheyeva at gmail.com  Mon Sep 17 10:43:09 2012
From: vmersheyeva at gmail.com (Vera Mersheeva)
Date: Mon, 17 Sep 2012 08:43:09 +0000 (UTC)
Subject: [gecode-users] Multiple thread lock error
References: <AANLkTik+E1PrjS+gj804F+7vMAuiRZtbLns+ZtCd2By6@mail.gmail.com>
Message-ID: <loom.20120917T104225-227@post.gmane.org>

Chris Mears <chris.mears at ...> writes:

> 
> Hello all,
> 
> Sometimes when running an example (e.g. ./bibd -threads 4) with more
> than one thread I provoke this error at the end:
> 
>   terminate called after throwing an instance of 
'Gecode::OperatingSystemError'
> 
> ... or sometimes this one:
> 
>   terminate called after throwing an instance of 
'Gecode::OperatingSystemError'
>     what():  Mutex::acquire[pthread_mutex_lock]: Operating system error
>   Aborted
> 
> It happens only some of the time, with Gecode 3.4.0 and with the trunk
> version, on Debian Linux with kernel version 2.6.32.
> 
> Is this a serious error?  It still seems to give the right answer
> before it prints the error.
> 
> Cheers,
> Chris
> 


Hello!

I have faced the same problem. Do you know what may cause it?

Sincerelly,
Vera




From tack at gecode.org  Wed Sep 26 01:13:56 2012
From: tack at gecode.org (Guido Tack)
Date: Wed, 26 Sep 2012 09:13:56 +1000
Subject: [gecode-users] Gecode/XCode 4.4+
In-Reply-To: <AD8737E8-484C-4132-8C7B-02EBA5504453@uniud.it>
References: <AD8737E8-484C-4132-8C7B-02EBA5504453@uniud.it>
Message-ID: <7C23B685-A3A1-42BB-A74D-A8A6A3A7B892@gecode.org>

Hi Luca,

I can't reproduce this problem on my machine (Mac OS 10.8.2, Xcode 4.5), it's working for me.  Did you try copying one of the examples that come with Gecode (e.g. money.cpp) to a tmp folder and compiling it? It should be as simple as this:

g++ -c money.cpp
g++ -framework gecode money.o -o money

Cheers,
Guido

-- 
Guido Tack
http://www.csse.monash.edu/~guidot/



On 26/09/2012, at 1:51 AM, Luca Di Gaspero <l.digaspero at uniud.it> wrote:

> Hi all,
> 
> I am trying to use the binary gecode framework for Mac OS X with the most recent version of Xcode (both 4.4 and 4.5), but the source code I've written failed to compile (it does not find the proper headers within the gecode.framework bundle). Are the developers aware of this issue (and possibly do they have a way to fix it)?
> 
> All the best,
> 
> Luca Di Gaspero
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20120926/009c5067/attachment.html>

From tack at gecode.org  Wed Sep 26 01:34:06 2012
From: tack at gecode.org (Guido Tack)
Date: Wed, 26 Sep 2012 09:34:06 +1000
Subject: [gecode-users] Add constraints to Flatzinc sharing
	parameters	between them
In-Reply-To: <CALtg6jndccZQgcbww4FQ9Xxx0FWQCTAYO7YRkh_sXOqM7hxO7Q@mail.gmail.com>
References: <CALtg6jndccZQgcbww4FQ9Xxx0FWQCTAYO7YRkh_sXOqM7hxO7Q@mail.gmail.com>
Message-ID: <76234AC3-E28C-4AE1-B964-F5308A67BE7C@gecode.org>

Hi Andrea,

there's currently no sharing between arrays (i.e., a new AST::Array object is created for each invocation), and it's probably coincidental that s_array is the same between invocations.  The reason for this is the very simple memory management model for AST objects.
Do you already have a problem just posting the constraints because FlatZinc/Gecode creates the duplicate arrays, or are you mainly worried about solver performance?  If it's the latter, you could create a global hash table mapping AST::Arrays to IntSharedArrays in your registry post function.

Cheers,
Guido

On 25/09/2012, at 8:09 PM, Andrea Pretto <a.pretto at miriade.it> wrote:

> Hi,
> 
> I'm trying to add a custom constraint in Flatizinc/Gecode. A simple version is already working. (Yes, I figured out how to modify registry.cpp etc... and yes, I know this is more hacking than extending cause there's no an official way to do that)
> 
> I have the problem of sharing data (parameters) between constraints.
> This is the constraint signature:
> 
> predicate my_con(var int: x, var int: y, array[int] of int: params1, array[int] of int: params2);
> 
> my_con is a constraint between X and Y, parametrized by params1 and params2.
> params1 and params2 are (possibly) large arrays, so I want to share them between different my_con instances:
> 
> There's a clean way to do that ??
> 
> 
> The simplest solution I found was using flatzinc parameters, but I have some problems.
> 
> % flatzinc file
> array [1..many many] of int: p1;
> array [1..many many] of int: p2;
> 
> ...
> 
> my_con(x, y, p1, p2)
> ...
> my_con(z, w, p1, p2)
> %
> 
> The flatzinc file above should resolve the problem alone, because the parameter arrays should be shared.
> This is a snippet of the function in registry.cpp that receives the constraint declaration.
> 
> void p_my_con(FlatZincSpace& s, const ConExpr& ce, AST::Node* ann) {
>       ...
>       AST::Array* s_array = ce[2]->getArray();
>       AST::Array* e_array = ce[3]->getArray();
> 
>       std::cout << "SA " << s_array << std::endl;
>       std::cout << "SE " << e_array << std::endl;
>       ...
> }
> 
> Now the output shows me that s_array pointer is the same between invocation, but e_array is not, so it's like the second parameter array is copied every time.
> 
> I don't know if this is a bug or not.
> However the main question is how to share data between multiple constraints.
> 
> Any help is appreciated.
> 
> Cheers.
>  
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users



From l.digaspero at uniud.it  Wed Sep 26 08:54:03 2012
From: l.digaspero at uniud.it (Luca Di Gaspero)
Date: Wed, 26 Sep 2012 08:54:03 +0200
Subject: [gecode-users] Gecode/XCode 4.4+
In-Reply-To: <7C23B685-A3A1-42BB-A74D-A8A6A3A7B892@gecode.org>
References: <AD8737E8-484C-4132-8C7B-02EBA5504453@uniud.it>
	<7C23B685-A3A1-42BB-A74D-A8A6A3A7B892@gecode.org>
Message-ID: <31BC209A-5E61-46C9-919E-6FCE8C9179DD@uniud.it>

Hi Guido,

I've been a bit imprecise in my question. Actually from the command line the compilation works fine, but it's inside Xcode that it's failing because headers cannot be found. I added to Xcode the gecode framework through the Build Settings (the whole framework) as recommended with the new version of Xcode (in the previous version you add an "Add Framework to Project" menu item which disappeared now).

All the best,

Luca

Il giorno 26/set/2012, alle ore 01:13, Guido Tack <tack at gecode.org> ha scritto:

> Hi Luca,
> 
> I can't reproduce this problem on my machine (Mac OS 10.8.2, Xcode 4.5), it's working for me.  Did you try copying one of the examples that come with Gecode (e.g. money.cpp) to a tmp folder and compiling it? It should be as simple as this:
> 
> g++ -c money.cpp
> g++ -framework gecode money.o -o money
> 
> Cheers,
> Guido
> 
> -- 
> Guido Tack
> http://www.csse.monash.edu/~guidot/
> 
> 
> 
> On 26/09/2012, at 1:51 AM, Luca Di Gaspero <l.digaspero at uniud.it> wrote:
> 
>> Hi all,
>> 
>> I am trying to use the binary gecode framework for Mac OS X with the most recent version of Xcode (both 4.4 and 4.5), but the source code I've written failed to compile (it does not find the proper headers within the gecode.framework bundle). Are the developers aware of this issue (and possibly do they have a way to fix it)?
>> 
>> All the best,
>> 
>> Luca Di Gaspero
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20120926/08aa0818/attachment.html>

From cschulte at kth.se  Wed Sep 26 11:58:09 2012
From: cschulte at kth.se (Christian Schulte)
Date: Wed, 26 Sep 2012 11:58:09 +0200
Subject: [gecode-users] Multiple thread lock error
In-Reply-To: <loom.20120917T104225-227@post.gmane.org>
References: <AANLkTik+E1PrjS+gj804F+7vMAuiRZtbLns+ZtCd2By6@mail.gmail.com>
	<loom.20120917T104225-227@post.gmane.org>
Message-ID: <002b01cd9bcd$6f876e80$4e964b80$@se>

Hi Chris & Vera,

Could any of you try to locate (with a breakpoint in a debugger) when this
occurs. I have a suspicion but cannot confirm this on my Windows box.

Thanks!
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Vera Mersheeva
Sent: Monday, September 17, 2012 10:43 AM
To: users at gecode.org
Subject: Re: [gecode-users] Multiple thread lock error

Chris Mears <chris.mears at ...> writes:

> 
> Hello all,
> 
> Sometimes when running an example (e.g. ./bibd -threads 4) with more 
> than one thread I provoke this error at the end:
> 
>   terminate called after throwing an instance of
'Gecode::OperatingSystemError'
> 
> ... or sometimes this one:
> 
>   terminate called after throwing an instance of
'Gecode::OperatingSystemError'
>     what():  Mutex::acquire[pthread_mutex_lock]: Operating system error
>   Aborted
> 
> It happens only some of the time, with Gecode 3.4.0 and with the trunk 
> version, on Debian Linux with kernel version 2.6.32.
> 
> Is this a serious error?  It still seems to give the right answer 
> before it prints the error.
> 
> Cheers,
> Chris
> 


Hello!

I have faced the same problem. Do you know what may cause it?

Sincerelly,
Vera



_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users



From a.pretto at miriade.it  Wed Sep 26 09:41:30 2012
From: a.pretto at miriade.it (Andrea Pretto)
Date: Wed, 26 Sep 2012 09:41:30 +0200
Subject: [gecode-users] Add constraints to Flatzinc sharing parameters
 between them
In-Reply-To: <76234AC3-E28C-4AE1-B964-F5308A67BE7C@gecode.org>
References: <CALtg6jndccZQgcbww4FQ9Xxx0FWQCTAYO7YRkh_sXOqM7hxO7Q@mail.gmail.com>
	<76234AC3-E28C-4AE1-B964-F5308A67BE7C@gecode.org>
Message-ID: <CALtg6j=rcOQGwUdyvVsjphLvFHRO4Y7ZLjkQ5vjhPFC1QcpJEA@mail.gmail.com>

Thanks.
Yes, I'm worried about performance (memory consumption). The arrays are
very large, and there are many constraint invocation.

For the "global hash table" approach, I thought something like this:

% flatzinc
predicate my_declare_param(int: param_id, array[int] of int:
params1, array[int] of int: params2);

predicate my_con(var int: x, var int: y, var int: param_id);

...

my_declare_param(3, [1,2,3,4,..], [1,2,3,4..])
my_con(a, b, 3)

% end flatzinc

I add a predicate my_declare_param for registering params, wich "register"
(in a global map) the parameters giving them and ID wich is PARAM_ID as
argument.
Then in the constraint (instead of arrays) I give the ID (PARAM_ID above)
to specify which parameters declared before I want to use.

Is that did you mean  ??

Thanks in advance.
Cheers.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20120926/8f2fd1d8/attachment.html>

From tack at gecode.org  Thu Sep 27 00:44:34 2012
From: tack at gecode.org (Guido Tack)
Date: Thu, 27 Sep 2012 08:44:34 +1000
Subject: [gecode-users] Add constraints to Flatzinc sharing parameters
	between them
In-Reply-To: <CALtg6j=rcOQGwUdyvVsjphLvFHRO4Y7ZLjkQ5vjhPFC1QcpJEA@mail.gmail.com>
References: <CALtg6jndccZQgcbww4FQ9Xxx0FWQCTAYO7YRkh_sXOqM7hxO7Q@mail.gmail.com>
	<76234AC3-E28C-4AE1-B964-F5308A67BE7C@gecode.org>
	<CALtg6j=rcOQGwUdyvVsjphLvFHRO4Y7ZLjkQ5vjhPFC1QcpJEA@mail.gmail.com>
Message-ID: <B97A08BE-CA03-4167-A5FD-C06FD994E752@gecode.org>

Hi,

that's not what I meant, but it's even better (my idea was to just look at the incoming AST::Array and check if you've seen the same array before, but with your idea you save that check).

Cheers,
Guido

On 26/09/2012, at 5:41 PM, Andrea Pretto <a.pretto at miriade.it> wrote:

> Thanks.
> Yes, I'm worried about performance (memory consumption). The arrays are very large, and there are many constraint invocation.
> 
> For the "global hash table" approach, I thought something like this:
> 
> % flatzinc 
> predicate my_declare_param(int: param_id, array[int] of int: params1, array[int] of int: params2); 
> 
> predicate my_con(var int: x, var int: y, var int: param_id);
> 
> ...
> 
> my_declare_param(3, [1,2,3,4,..], [1,2,3,4..])
> my_con(a, b, 3)
> 
> % end flatzinc
> 
> I add a predicate my_declare_param for registering params, wich "register" (in a global map) the parameters giving them and ID wich is PARAM_ID as argument.
> Then in the constraint (instead of arrays) I give the ID (PARAM_ID above) to specify which parameters declared before I want to use.
> 
> Is that did you mean  ??
> 
> Thanks in advance.
> Cheers.



From tack at gecode.org  Thu Sep 27 02:28:43 2012
From: tack at gecode.org (Guido Tack)
Date: Thu, 27 Sep 2012 10:28:43 +1000
Subject: [gecode-users] Gecode/XCode 4.4+
In-Reply-To: <31BC209A-5E61-46C9-919E-6FCE8C9179DD@uniud.it>
References: <AD8737E8-484C-4132-8C7B-02EBA5504453@uniud.it>
	<7C23B685-A3A1-42BB-A74D-A8A6A3A7B892@gecode.org>
	<31BC209A-5E61-46C9-919E-6FCE8C9179DD@uniud.it>
Message-ID: <8F87DF98-1558-4C9C-AA97-F26CE66C2C36@gecode.org>

Hi Luca,

I just tried it myself and unfortunately I have no idea how to fix this (I tried adding search paths in various places but that doesn't seem to help).

Cheers,
Guido

On 26/09/2012, at 4:54 PM, Luca Di Gaspero <l.digaspero at uniud.it> wrote:

> Hi Guido,
> 
> I've been a bit imprecise in my question. Actually from the command line the compilation works fine, but it's inside Xcode that it's failing because headers cannot be found. I added to Xcode the gecode framework through the Build Settings (the whole framework) as recommended with the new version of Xcode (in the previous version you add an "Add Framework to Project" menu item which disappeared now).
> 
> All the best,
> 
> Luca
> 
> Il giorno 26/set/2012, alle ore 01:13, Guido Tack <tack at gecode.org> ha scritto:
> 
>> Hi Luca,
>> 
>> I can't reproduce this problem on my machine (Mac OS 10.8.2, Xcode 4.5), it's working for me.  Did you try copying one of the examples that come with Gecode (e.g. money.cpp) to a tmp folder and compiling it? It should be as simple as this:
>> 
>> g++ -c money.cpp
>> g++ -framework gecode money.o -o money
>> 
>> Cheers,
>> Guido
>> 
>> -- 
>> Guido Tack
>> http://www.csse.monash.edu/~guidot/
>> 
>> 
>> 
>> On 26/09/2012, at 1:51 AM, Luca Di Gaspero <l.digaspero at uniud.it> wrote:
>> 
>>> Hi all,
>>> 
>>> I am trying to use the binary gecode framework for Mac OS X with the most recent version of Xcode (both 4.4 and 4.5), but the source code I've written failed to compile (it does not find the proper headers within the gecode.framework bundle). Are the developers aware of this issue (and possibly do they have a way to fix it)?
>>> 
>>> All the best,
>>> 
>>> Luca Di Gaspero
>>> _______________________________________________
>>> Gecode users mailing list
>>> users at gecode.org
>>> https://www.gecode.org/mailman/listinfo/gecode-users
>> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20120927/04b048b5/attachment.html>

From cschulte at kth.se  Thu Sep 27 11:38:40 2012
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 27 Sep 2012 11:38:40 +0200
Subject: [gecode-users] Multiple thread lock error
In-Reply-To: <002b01cd9bcd$6f876e80$4e964b80$@se>
References: <AANLkTik+E1PrjS+gj804F+7vMAuiRZtbLns+ZtCd2By6@mail.gmail.com>	<loom.20120917T104225-227@post.gmane.org>
	<002b01cd9bcd$6f876e80$4e964b80$@se>
Message-ID: <008a01cd9c93$e0ea27e0$a2be77a0$@se>

Hi,

The error is not serious, it occurs during program termination. You can
ignore it and it'll be fixed in Gecode 4.

Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Christian Schulte
Sent: Wednesday, September 26, 2012 11:58 AM
To: 'Vera Mersheeva'; users at gecode.org
Subject: Re: [gecode-users] Multiple thread lock error

Hi Chris & Vera,

Could any of you try to locate (with a breakpoint in a debugger) when this
occurs. I have a suspicion but cannot confirm this on my Windows box.

Thanks!
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Vera Mersheeva
Sent: Monday, September 17, 2012 10:43 AM
To: users at gecode.org
Subject: Re: [gecode-users] Multiple thread lock error

Chris Mears <chris.mears at ...> writes:

> 
> Hello all,
> 
> Sometimes when running an example (e.g. ./bibd -threads 4) with more 
> than one thread I provoke this error at the end:
> 
>   terminate called after throwing an instance of
'Gecode::OperatingSystemError'
> 
> ... or sometimes this one:
> 
>   terminate called after throwing an instance of
'Gecode::OperatingSystemError'
>     what():  Mutex::acquire[pthread_mutex_lock]: Operating system error
>   Aborted
> 
> It happens only some of the time, with Gecode 3.4.0 and with the trunk 
> version, on Debian Linux with kernel version 2.6.32.
> 
> Is this a serious error?  It still seems to give the right answer 
> before it prints the error.
> 
> Cheers,
> Chris
> 


Hello!

I have faced the same problem. Do you know what may cause it?

Sincerelly,
Vera



_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users



From mzamalloa at clip.dia.fi.upm.es  Thu Sep 27 12:11:20 2012
From: mzamalloa at clip.dia.fi.upm.es (Miky Zamalloa)
Date: Thu, 27 Sep 2012 12:11:20 +0200
Subject: [gecode-users] Constraints over real numbers?
Message-ID: <50642648.4010500@clip.dia.fi.upm.es>

Hi all,

is there support for constraints over real numbers in Gecode? or is it 
planned for the near future?

Thanks in advance


Miky Zamalloa


From cschulte at kth.se  Thu Sep 27 12:50:13 2012
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 27 Sep 2012 12:50:13 +0200
Subject: [gecode-users] Constraints over real numbers?
In-Reply-To: <50642648.4010500@clip.dia.fi.upm.es>
References: <50642648.4010500@clip.dia.fi.upm.es>
Message-ID: <009001cd9c9d$e0ba59c0$a22f0d40$@se>

Please read the mailing list archives: this has been asked before.

The next major version (end of 2012) will have it.

Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Miky Zamalloa
Sent: Thursday, September 27, 2012 12:11 PM
To: users at gecode.org
Subject: [gecode-users] Constraints over real numbers?

Hi all,

is there support for constraints over real numbers in Gecode? or is it
planned for the near future?

Thanks in advance


Miky Zamalloa

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users



From a.pretto at miriade.it  Thu Sep 27 17:52:00 2012
From: a.pretto at miriade.it (Andrea Pretto)
Date: Thu, 27 Sep 2012 17:52:00 +0200
Subject: [gecode-users] Linking problems flatzinc in
	searchcombinators-0.9.3.zip
Message-ID: <CALtg6jmOG2Ew7M6Vhv+Onc6vm554UHFeUMhO-DhqA-rUb_d-RQ@mail.gmail.com>

Hi,

I'am trying to compile the flatzinc interpreter in
searchcombinators-0.9.3.zip following the instructions, but I get linking
errors:

/usr/local/include/gecode/support/exception.hpp:46: undefined reference to
`vtable for Gecode::Exception'
/usr/local/include/gecode/support/exception.hpp:46: undefined reference to
`vtable for Gecode::Exception'
/usr/local/include/gecode/support/exception.hpp:46: undefined reference to
`vtable for Gecode::Exception'
fz_sc.o: In function `BTrue::bexpr(Gecode::FlatZinc::FlatZincSpace&)':
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/search.hh:258:
undefined reference to `Gecode::BoolVar::BoolVar(Gecode::Space&, int, int)'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/search.hh:258:
undefined reference to `Gecode::BoolExpr::BoolExpr(Gecode::BoolVar const&)'
fz_sc.o: In function `BFalse::bexpr(Gecode::FlatZinc::FlatZincSpace&)':
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/search.hh:251:
undefined reference to `Gecode::BoolVar::BoolVar(Gecode::Space&, int, int)'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/search.hh:251:
undefined reference to `Gecode::BoolExpr::BoolExpr(Gecode::BoolVar const&)'
fz_sc.o: In function `BExpr::post(Gecode::FlatZinc::FlatZincSpace&)':
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/search.hh:151:
undefined reference to `Gecode::rel(Gecode::Home, Gecode::BoolExpr const&,
Gecode::IntConLevel)'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/search.hh:151:
undefined reference to `Gecode::BoolExpr::~BoolExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/search.hh:151:
undefined reference to `Gecode::BoolExpr::~BoolExpr()'
fz_sc.o: In function `OperatingSystemError':
/usr/local/include/gecode/support/exception.hpp:98: undefined reference to
`Gecode::Exception::Exception(char const*, char const*)'
fz_sc.o: In function `~Exception':
/usr/local/include/gecode/support/exception.hpp:46: undefined reference to
`vtable for Gecode::Exception'
/usr/local/include/gecode/support/exception.hpp:46: undefined reference to
`vtable for Gecode::Exception'
/usr/local/include/gecode/support/exception.hpp:46: undefined reference to
`vtable for Gecode::Exception'
fz_sc.o: In function `OperatingSystemError':
/usr/local/include/gecode/support/exception.hpp:98: undefined reference to
`Gecode::Exception::Exception(char const*, char const*)'
fz_sc.o: In function `MemoryExhausted':
/usr/local/include/gecode/support/exception.hpp:90: undefined reference to
`Gecode::Exception::Exception(char const*, char const*)'
fz_sc.o: In function `StateMgr<Gecode::FlatZinc::FlatZincSpace,
(StateMaintenance)0>::recompute(StateMgr<Gecode::FlatZinc::FlatZincSpace,
(StateMaintenance)0>::State*)':
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./generic/statemgr_copying.hpp:187:
undefined reference to `Gecode::Space::unused_status'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./generic/statemgr_copying.hpp:187:
undefined reference to `Gecode::Space::status(Gecode::StatusStatistics&)'
fz_sc.o: In function `Gecode::Space::clone(bool, Gecode::CloneStatistics&)
const':
/usr/local/include/gecode/kernel/core.hpp:2469: undefined reference to
`Gecode::Space::_clone(bool)'
fz_sc.o: In function `ValOfUnassignedVar':
/usr/local/include/gecode/int/exception.hpp:187: undefined reference to
`Gecode::Exception::Exception(char const*, char const*)'
fz_sc.o: In function `StateMgr<Gecode::FlatZinc::FlatZincSpace,
(StateMaintenance)0>::root(Gecode::FlatZinc::FlatZincSpace&)':
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./generic/statemgr_copying.hpp:141:
undefined reference to `Gecode::Space::unused_status'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./generic/statemgr_copying.hpp:141:
undefined reference to `Gecode::Space::status(Gecode::StatusStatistics&)'
fz_sc.o: In function `DynamicStack':
/usr/local/include/gecode/support/dynamic-stack.hpp:119: undefined
reference to `Gecode::heap'
fz_sc.o: In function `main':
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/fz_sc.cpp:424:
undefined reference to `Gecode::FlatZinc::parse(std::basic_string<char,
std::char_traits<char>, std::allocator<char> > const&,
Gecode::FlatZinc::Printer&, std::basic_ostream<char, std::char_traits<char>
>&, Gecode::FlatZinc::FlatZincSpace*)'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/fz_sc.cpp:428:
undefined reference to `Gecode::FlatZinc::FlatZincSpace::solveAnnotations()
const'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/fz_sc.cpp:422:
undefined reference to `Gecode::FlatZinc::parse(std::basic_istream<char,
std::char_traits<char> >&, Gecode::FlatZinc::Printer&,
std::basic_ostream<char, std::char_traits<char> >&,
Gecode::FlatZinc::FlatZincSpace*)'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/fz_sc.cpp:419:
undefined reference to `Gecode::FlatZinc::Printer::~Printer()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/fz_sc.cpp:419:
undefined reference to `Gecode::FlatZinc::Printer::~Printer()'
fz_sc.o:(.rodata._ZTVN6Gecode6ChoiceE[vtable for Gecode::Choice]+0x14):
undefined reference to `Gecode::Choice::archive(Gecode::Archive&) const'
fz_sc.o:(.rodata._ZTVN6Gecode3DFA4DFAIE[vtable for Gecode::DFA::DFAI]+0x8):
undefined reference to `Gecode::DFA::DFAI::copy() const'
fz_sc.o:(.rodata._ZTIN6Gecode15MemoryExhaustedE[typeinfo for
Gecode::MemoryExhausted]+0x8): undefined reference to `typeinfo for
Gecode::Exception'
fz_sc.o:(.rodata._ZTVN6Gecode15MemoryExhaustedE[vtable for
Gecode::MemoryExhausted]+0x10): undefined reference to
`Gecode::Exception::what() const'
fz_sc.o:(.rodata._ZTVN6Gecode3Int18ValOfUnassignedVarE[vtable for
Gecode::Int::ValOfUnassignedVar]+0x10): undefined reference to
`Gecode::Exception::what() const'
fz_sc.o:(.rodata._ZTIN6Gecode3Int18ValOfUnassignedVarE[typeinfo for
Gecode::Int::ValOfUnassignedVar]+0x8): undefined reference to `typeinfo for
Gecode::Exception'
fz_sc.o:(.rodata._ZTVN6Gecode20OperatingSystemErrorE[vtable for
Gecode::OperatingSystemError]+0x10): undefined reference to
`Gecode::Exception::what() const'
fz_sc.o:(.rodata._ZTIN6Gecode20OperatingSystemErrorE[typeinfo for
Gecode::OperatingSystemError]+0x8): undefined reference to `typeinfo for
Gecode::Exception'
flatzinc/bool_search.o: In function
`BoolExcludeValSel::post(Gecode::FlatZinc::FlatZincSpace&, Gecode::BoolVar,
int, int)':
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/bool_search.cpp:80:
undefined reference to `Gecode::rel(Gecode::Home, Gecode::BoolVar,
Gecode::IntRelType, int, Gecode::IntConLevel)'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/bool_search.cpp:78:
undefined reference to `Gecode::rel(Gecode::Home, Gecode::BoolVar,
Gecode::IntRelType, int, Gecode::IntConLevel)'
flatzinc/bool_search.o: In function
`BoolAssignValSel::post(Gecode::FlatZinc::FlatZincSpace&, Gecode::BoolVar,
int, int)':
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/bool_search.cpp:70:
undefined reference to `Gecode::rel(Gecode::Home, Gecode::BoolVar,
Gecode::IntRelType, int, Gecode::IntConLevel)'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/bool_search.cpp:68:
undefined reference to `Gecode::rel(Gecode::Home, Gecode::BoolVar,
Gecode::IntRelType, int, Gecode::IntConLevel)'
flatzinc/bool_search.o: In function `~Region':
/usr/local/include/gecode/kernel/region.hpp:316: undefined reference to
`Gecode::Region::heap_free()'
flatzinc/bool_search.o: In function `Gecode::Region::ralloc(unsigned int)':
/usr/local/include/gecode/kernel/region.hpp:306: undefined reference to
`Gecode::Region::heap_alloc(unsigned int)'
flatzinc/bool_search.o: In function `~Region':
/usr/local/include/gecode/kernel/region.hpp:316: undefined reference to
`Gecode::Region::heap_free()'
flatzinc/int_search.o: In function `Gecode::IntVar::med() const':
/usr/local/include/gecode/int/var/int.hpp:71: undefined reference to
`Gecode::Int::IntVarImp::med() const'
/usr/local/include/gecode/int/var/int.hpp:71: undefined reference to
`Gecode::Int::IntVarImp::med() const'
flatzinc/int_search.o: In function
`BisectHigh::post(Gecode::FlatZinc::FlatZincSpace&, Gecode::IntVar, int,
int)':
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/int_search.cpp:264:
undefined reference to `Gecode::rel(Gecode::Home, Gecode::IntVar,
Gecode::IntRelType, int, Gecode::IntConLevel)'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/int_search.cpp:262:
undefined reference to `Gecode::rel(Gecode::Home, Gecode::IntVar,
Gecode::IntRelType, int, Gecode::IntConLevel)'
flatzinc/int_search.o: In function
`BisectLow::post(Gecode::FlatZinc::FlatZincSpace&, Gecode::IntVar, int,
int)':
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/int_search.cpp:253:
undefined reference to `Gecode::rel(Gecode::Home, Gecode::IntVar,
Gecode::IntRelType, int, Gecode::IntConLevel)'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/int_search.cpp:251:
undefined reference to `Gecode::rel(Gecode::Home, Gecode::IntVar,
Gecode::IntRelType, int, Gecode::IntConLevel)'
flatzinc/int_search.o: In function
`ExcludeValSel::post(Gecode::FlatZinc::FlatZincSpace&, Gecode::IntVar, int,
int)':
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/int_search.cpp:185:
undefined reference to `Gecode::rel(Gecode::Home, Gecode::IntVar,
Gecode::IntRelType, int, Gecode::IntConLevel)'
flatzinc/int_search.o:/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/int_search.cpp:183:
more undefined references to `Gecode::rel(Gecode::Home, Gecode::IntVar,
Gecode::IntRelType, int, Gecode::IntConLevel)' follow
flatzinc/int_search.o: In function `~Region':
/usr/local/include/gecode/kernel/region.hpp:316: undefined reference to
`Gecode::Region::heap_free()'
flatzinc/int_search.o: In function `Gecode::Region::ralloc(unsigned int)':
/usr/local/include/gecode/kernel/region.hpp:306: undefined reference to
`Gecode::Region::heap_alloc(unsigned int)'
flatzinc/int_search.o: In function `~Region':
/usr/local/include/gecode/kernel/region.hpp:316: undefined reference to
`Gecode::Region::heap_free()'
flatzinc/search.o: In function `linexpr(IntExpr<VarAccessor>*,
Gecode::FlatZinc::FlatZincSpace&)':
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/search.cpp:43:
undefined reference to `Gecode::LinExpr::LinExpr(int)'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/search.cpp:46:
undefined reference to `Gecode::operator+(Gecode::LinExpr const&,
Gecode::LinExpr const&)'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/search.cpp:46:
undefined reference to `Gecode::LinExpr::~LinExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/search.cpp:52:
undefined reference to `Gecode::LinExpr::~LinExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/search.cpp:49:
undefined reference to `Gecode::operator-(Gecode::LinExpr const&,
Gecode::LinExpr const&)'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/search.cpp:49:
undefined reference to `Gecode::LinExpr::~LinExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/search.cpp:52:
undefined reference to `Gecode::operator*(Gecode::LinExpr const&,
Gecode::LinExpr const&)'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/search.cpp:52:
undefined reference to `Gecode::LinExpr::~LinExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/search.cpp:55:
undefined reference to `Gecode::LinExpr::LinExpr(Gecode::IntVar const&,
int)'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/search.cpp:46:
undefined reference to `Gecode::LinExpr::~LinExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/search.cpp:52:
undefined reference to `Gecode::LinExpr::~LinExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/search.cpp:52:
undefined reference to `Gecode::LinExpr::~LinExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/search.cpp:46:
undefined reference to `Gecode::LinExpr::~LinExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/search.cpp:49:
undefined reference to `Gecode::LinExpr::~LinExpr()'
flatzinc/search.o:/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/flatzinc/search.cpp:49:
more undefined references to `Gecode::LinExpr::~LinExpr()' follow
flatzinc/search.o: In function
`BXor::bexpr(Gecode::FlatZinc::FlatZincSpace&)':
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:244:
undefined reference to `Gecode::operator^(Gecode::BoolExpr const&,
Gecode::BoolExpr const&)'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:244:
undefined reference to `Gecode::BoolExpr::~BoolExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:244:
undefined reference to `Gecode::BoolExpr::~BoolExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:244:
undefined reference to `Gecode::BoolExpr::~BoolExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:244:
undefined reference to `Gecode::BoolExpr::~BoolExpr()'
flatzinc/search.o: In function
`BEq::bexpr(Gecode::FlatZinc::FlatZincSpace&)':
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:232:
undefined reference to `Gecode::operator==(Gecode::BoolExpr const&,
Gecode::BoolExpr const&)'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:232:
undefined reference to `Gecode::BoolExpr::~BoolExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:232:
undefined reference to `Gecode::BoolExpr::~BoolExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:232:
undefined reference to `Gecode::BoolExpr::~BoolExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:232:
undefined reference to `Gecode::BoolExpr::~BoolExpr()'
flatzinc/search.o: In function
`BOr::bexpr(Gecode::FlatZinc::FlatZincSpace&)':
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:220:
undefined reference to `Gecode::operator||(Gecode::BoolExpr const&,
Gecode::BoolExpr const&)'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:220:
undefined reference to `Gecode::BoolExpr::~BoolExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:220:
undefined reference to `Gecode::BoolExpr::~BoolExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:220:
undefined reference to `Gecode::BoolExpr::~BoolExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:220:
undefined reference to `Gecode::BoolExpr::~BoolExpr()'
flatzinc/search.o: In function
`BAnd::bexpr(Gecode::FlatZinc::FlatZincSpace&)':
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:208:
undefined reference to `Gecode::operator&&(Gecode::BoolExpr const&,
Gecode::BoolExpr const&)'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:208:
undefined reference to `Gecode::BoolExpr::~BoolExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:208:
undefined reference to `Gecode::BoolExpr::~BoolExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:208:
undefined reference to `Gecode::BoolExpr::~BoolExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:208:
undefined reference to `Gecode::BoolExpr::~BoolExpr()'
flatzinc/search.o: In function
`BNot::bexpr(Gecode::FlatZinc::FlatZincSpace&)':
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:196:
undefined reference to `Gecode::operator!(Gecode::BoolExpr const&)'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:196:
undefined reference to `Gecode::BoolExpr::~BoolExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:196:
undefined reference to `Gecode::BoolExpr::~BoolExpr()'
flatzinc/search.o: In function
`CmpIntRel::bexpr(Gecode::FlatZinc::FlatZincSpace&)':
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:178:
undefined reference to `Gecode::operator>(Gecode::LinExpr const&,
Gecode::LinExpr const&)'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:178:
undefined reference to `Gecode::BoolExpr::BoolExpr(Gecode::LinRel const&)'
flatzinc/search.o: In function `~LinRel':
/usr/local/include/gecode/minimodel.hh:259: undefined reference to
`Gecode::LinExpr::~LinExpr()'
flatzinc/search.o: In function
`CmpIntRel::bexpr(Gecode::FlatZinc::FlatZincSpace&)':
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:178:
undefined reference to `Gecode::LinExpr::~LinExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:178:
undefined reference to `Gecode::LinExpr::~LinExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:179:
undefined reference to `Gecode::operator!=(Gecode::LinExpr const&,
Gecode::LinExpr const&)'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:179:
undefined reference to `Gecode::BoolExpr::BoolExpr(Gecode::LinRel const&)'
flatzinc/search.o: In function `~LinRel':
/usr/local/include/gecode/minimodel.hh:259: undefined reference to
`Gecode::LinExpr::~LinExpr()'
flatzinc/search.o: In function
`CmpIntRel::bexpr(Gecode::FlatZinc::FlatZincSpace&)':
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:179:
undefined reference to `Gecode::LinExpr::~LinExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:179:
undefined reference to `Gecode::LinExpr::~LinExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:174:
undefined reference to `Gecode::operator==(Gecode::LinExpr const&,
Gecode::LinExpr const&)'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:174:
undefined reference to `Gecode::BoolExpr::BoolExpr(Gecode::LinRel const&)'
flatzinc/search.o: In function `~LinRel':
/usr/local/include/gecode/minimodel.hh:259: undefined reference to
`Gecode::LinExpr::~LinExpr()'
flatzinc/search.o: In function
`CmpIntRel::bexpr(Gecode::FlatZinc::FlatZincSpace&)':
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:174:
undefined reference to `Gecode::LinExpr::~LinExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:174:
undefined reference to `Gecode::LinExpr::~LinExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:175:
undefined reference to `Gecode::operator<=(Gecode::LinExpr const&,
Gecode::LinExpr const&)'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:175:
undefined reference to `Gecode::BoolExpr::BoolExpr(Gecode::LinRel const&)'
flatzinc/search.o: In function `~LinRel':
/usr/local/include/gecode/minimodel.hh:259: undefined reference to
`Gecode::LinExpr::~LinExpr()'
flatzinc/search.o: In function
`CmpIntRel::bexpr(Gecode::FlatZinc::FlatZincSpace&)':
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:175:
undefined reference to `Gecode::LinExpr::~LinExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:175:
undefined reference to `Gecode::LinExpr::~LinExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:176:
undefined reference to `Gecode::operator<(Gecode::LinExpr const&,
Gecode::LinExpr const&)'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:176:
undefined reference to `Gecode::BoolExpr::BoolExpr(Gecode::LinRel const&)'
flatzinc/search.o: In function `~LinRel':
/usr/local/include/gecode/minimodel.hh:259: undefined reference to
`Gecode::LinExpr::~LinExpr()'
flatzinc/search.o: In function
`CmpIntRel::bexpr(Gecode::FlatZinc::FlatZincSpace&)':
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:176:
undefined reference to `Gecode::LinExpr::~LinExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:176:
undefined reference to `Gecode::LinExpr::~LinExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:177:
undefined reference to `Gecode::operator>=(Gecode::LinExpr const&,
Gecode::LinExpr const&)'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:177:
undefined reference to `Gecode::BoolExpr::BoolExpr(Gecode::LinRel const&)'
flatzinc/search.o: In function `~LinRel':
/usr/local/include/gecode/minimodel.hh:259: undefined reference to
`Gecode::LinExpr::~LinExpr()'
flatzinc/search.o: In function
`CmpIntRel::bexpr(Gecode::FlatZinc::FlatZincSpace&)':
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:177:
undefined reference to `Gecode::LinExpr::~LinExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:177:
undefined reference to `Gecode::LinExpr::~LinExpr()'
/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:178:
undefined reference to `Gecode::LinExpr::~LinExpr()'
flatzinc/search.o: In function `~LinRel':
/usr/local/include/gecode/minimodel.hh:259: undefined reference to
`Gecode::LinExpr::~LinExpr()'
flatzinc/search.o:/home/andrea/GecodeSvn/Combinators/searchcombinators-0.9.3/src/sc_flatzinc/./flatzinc/search.hh:177:
more undefined references to `Gecode::LinExpr::~LinExpr()' follow
collect2: ld returned 1 exit status
make: *** [fz_sc] Errore 1


Any help appreciated.

Cheers.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20120927/a6f44d6e/attachment-0001.html>

From tack at gecode.org  Fri Sep 28 00:58:37 2012
From: tack at gecode.org (Guido Tack)
Date: Fri, 28 Sep 2012 08:58:37 +1000
Subject: [gecode-users] Linking problems flatzinc
	in	searchcombinators-0.9.3.zip
In-Reply-To: <CALtg6jmOG2Ew7M6Vhv+Onc6vm554UHFeUMhO-DhqA-rUb_d-RQ@mail.gmail.com>
References: <CALtg6jmOG2Ew7M6Vhv+Onc6vm554UHFeUMhO-DhqA-rUb_d-RQ@mail.gmail.com>
Message-ID: <BDCD8DF5-457A-4969-8252-B59BE97FD460@gecode.org>

Hi,
I'll need slightly more information than that, e.g. the Gecode version you try to link against, the platform (macos or linux), and how you invoke make (make platform=linux, I guess?).  And you could send the actual compiler invocation, not just the output.

Cheers,
Guido

On 28/09/2012, at 1:52 AM, Andrea Pretto <a.pretto at miriade.it> wrote:

> Hi,
> 
> I'am trying to compile the flatzinc interpreter in searchcombinators-0.9.3.zip following the instructions, but I get linking errors:
> 
> /usr/local/include/gecode/support/exception.hpp:46: undefined reference to `vtable for Gecode::Exception'
> ...
> 
> Any help appreciated.
> 
> Cheers.
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20120928/46bc9c50/attachment.html>

From a.pretto at miriade.it  Fri Sep 28 09:39:58 2012
From: a.pretto at miriade.it (Andrea Pretto)
Date: Fri, 28 Sep 2012 09:39:58 +0200
Subject: [gecode-users] Linking problems flatzinc in
	searchcombinators-0.9.3.zip
In-Reply-To: <BDCD8DF5-457A-4969-8252-B59BE97FD460@gecode.org>
References: <CALtg6jmOG2Ew7M6Vhv+Onc6vm554UHFeUMhO-DhqA-rUb_d-RQ@mail.gmail.com>
	<BDCD8DF5-457A-4969-8252-B59BE97FD460@gecode.org>
Message-ID: <CALtg6jnDD8d+=k0nCnTov0Y0xSbUyxkoSQnaY7GT3xAzSYnWTw@mail.gmail.com>

Gecode release-2.7.3 installed from sources downloaded from svn.
The in searchcombinators I changed the Makefile this way:

PLATFORM=linux
GECODEDIR=/usr/local
...

Make fails in linking:

$ make
g++ -g -pthread -O2 -Wall -I. -I/usr/local/include -L/usr/local/lib
-lgecodeflatzinc -lgecodegist -lgecodedriver -lgecodesearch
-lgecodeminimodel -lgecodeset -lgecodeint -lgecodekernel
-lgecodesupport fz_sc.o flatzinc/bool_search.o flatzinc/int_search.o
flatzinc/print.o flatzinc/search.o -o fz_sc
..
errors posted before
..

Hope it can help.

Cheers.


