From tack at gecode.org  Thu Aug  1 05:19:37 2013
From: tack at gecode.org (Guido Tack)
Date: Thu, 1 Aug 2013 13:19:37 +1000
Subject: [gecode-users] BAB Observation
In-Reply-To: <op.w02963nuvqe8uy@hiller-t60p.fayor.com>
References: <op.w02963nuvqe8uy@hiller-t60p.fayor.com>
Message-ID: <B6ADEB24-0295-4CCB-9752-EB7945648420@gecode.org>

Hi,

BAB is not meant to produce all solutions, the only guarantee it gives is that the last solution is going to be optimal, but intermediate solutions can be skipped (that's in fact the whole point of BAB).
If you need all solutions and still want to know which one is best, simply use DFS and then sort the solutions afterwards.

Cheers,
Guido

On 31/07/2013, at 11:53 PM, Dean Hiller <hiller at employees.org> wrote:

> I was having a problem with finding all my solutions while using BAB.
> I finally created a very simple model that demonstrated my problem
> and using that model, I was able to find a solution to the problem.
> 
> I could not find this issue discussed anywhere, so I am going to
> describe it here in case any one else runs into it and is looking
> for a solution to it.
> 
> This is the scenario:
> 
> IntVar X(0,1);
> branch(X, INT_VAL_MIN());
> IntVar Y(0,2);
> branch(Y, INT_VAL_MIN());
> IntArgs C(1,2);
> IntVarArray V(2, 0, 2);
> rel(V[0] == X);
> rel(V[1] == Y);
> IntVar Cost(0,5);
> linear(C, X, V, IRT_EQ, Cost);
> 
> If I solve this with DFS, I get 6 solutions.
> If I solve this with BAB and in the constrain function say
> rel(cost > b.cost);
> I only get 4 solutions.
> 
> Note: If I run with GIST and expand the nodes in the
> correct order, I can cause BAB to display all 6 solutions,
> but the normal search order does not find all of them.
> 
> To have BAB find all 6 solutions, I removed the above
> two branch statements and replaced them with
> branch(Cost, INT_VAL_MIN());
> 
> So, the general rule I would conclude from this test is
> that when using linear to create a cost function for
> BAB, always branch on the output of the equation rather
> than on the terms making up the equation.
> 
> I don't know if this holds true for other uses of linear.
> 
> Dean
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users



From hiller at employees.org  Thu Aug  1 05:43:20 2013
From: hiller at employees.org (Dean Hiller)
Date: Wed, 31 Jul 2013 23:43:20 -0400
Subject: [gecode-users] BAB Observation
In-Reply-To: <B6ADEB24-0295-4CCB-9752-EB7945648420@gecode.org>
References: <op.w02963nuvqe8uy@hiller-t60p.fayor.com>
	<B6ADEB24-0295-4CCB-9752-EB7945648420@gecode.org>
Message-ID: <op.w04cmimivqe8uy@hiller-t60p.fayor.com>

Are you saying that using "next" in a loop makes no sense with BAB
in that only the first result is the optimal result and the "next"
result is not the next optimal result, but just another possible
result?

Thanks,
Dean


On Wed, 31 Jul 2013 23:19:37 -0400, Guido Tack <tack at gecode.org> wrote:

> Hi,
>
> BAB is not meant to produce all solutions, the only guarantee it gives  
> is that the last solution is going to be optimal, but intermediate  
> solutions can be skipped (that's in fact the whole point of BAB).
> If you need all solutions and still want to know which one is best,  
> simply use DFS and then sort the solutions afterwards.
>
> Cheers,
> Guido
>
> On 31/07/2013, at 11:53 PM, Dean Hiller <hiller at employees.org> wrote:
>
>> I was having a problem with finding all my solutions while using BAB.
>> I finally created a very simple model that demonstrated my problem
>> and using that model, I was able to find a solution to the problem.
>>
>> I could not find this issue discussed anywhere, so I am going to
>> describe it here in case any one else runs into it and is looking
>> for a solution to it.
>>
>> This is the scenario:
>>
>> IntVar X(0,1);
>> branch(X, INT_VAL_MIN());
>> IntVar Y(0,2);
>> branch(Y, INT_VAL_MIN());
>> IntArgs C(1,2);
>> IntVarArray V(2, 0, 2);
>> rel(V[0] == X);
>> rel(V[1] == Y);
>> IntVar Cost(0,5);
>> linear(C, X, V, IRT_EQ, Cost);
>>
>> If I solve this with DFS, I get 6 solutions.
>> If I solve this with BAB and in the constrain function say
>> rel(cost > b.cost);
>> I only get 4 solutions.
>>
>> Note: If I run with GIST and expand the nodes in the
>> correct order, I can cause BAB to display all 6 solutions,
>> but the normal search order does not find all of them.
>>
>> To have BAB find all 6 solutions, I removed the above
>> two branch statements and replaced them with
>> branch(Cost, INT_VAL_MIN());
>>
>> So, the general rule I would conclude from this test is
>> that when using linear to create a cost function for
>> BAB, always branch on the output of the equation rather
>> than on the terms making up the equation.
>>
>> I don't know if this holds true for other uses of linear.
>>
>> Dean
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users


From cschulte at kth.se  Thu Aug  1 12:46:29 2013
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 1 Aug 2013 12:46:29 +0200
Subject: [gecode-users] BAB Observation
In-Reply-To: <op.w04cmimivqe8uy@hiller-t60p.fayor.com>
References: <op.w02963nuvqe8uy@hiller-t60p.fayor.com>	<B6ADEB24-0295-4CCB-9752-EB7945648420@gecode.org>
	<op.w04cmimivqe8uy@hiller-t60p.fayor.com>
Message-ID: <003001ce8ea4$625e21c0$271a6540$@kth.se>

Next() makes perfect sense: each solution delivered by next() is better than
the previous. The last is a best solution.

Christian

--
Christian Schulte, www.ict.kth.se/~cschulte

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Dean Hiller
Sent: Thursday, August 1, 2013 05:43 AM
To: Guido Tack
Cc: users at gecode.org
Subject: Re: [gecode-users] BAB Observation

Are you saying that using "next" in a loop makes no sense with BAB in that
only the first result is the optimal result and the "next"
result is not the next optimal result, but just another possible result?

Thanks,
Dean


On Wed, 31 Jul 2013 23:19:37 -0400, Guido Tack <tack at gecode.org> wrote:

> Hi,
>
> BAB is not meant to produce all solutions, the only guarantee it gives 
> is that the last solution is going to be optimal, but intermediate 
> solutions can be skipped (that's in fact the whole point of BAB).
> If you need all solutions and still want to know which one is best, 
> simply use DFS and then sort the solutions afterwards.
>
> Cheers,
> Guido
>
> On 31/07/2013, at 11:53 PM, Dean Hiller <hiller at employees.org> wrote:
>
>> I was having a problem with finding all my solutions while using BAB.
>> I finally created a very simple model that demonstrated my problem 
>> and using that model, I was able to find a solution to the problem.
>>
>> I could not find this issue discussed anywhere, so I am going to 
>> describe it here in case any one else runs into it and is looking for 
>> a solution to it.
>>
>> This is the scenario:
>>
>> IntVar X(0,1);
>> branch(X, INT_VAL_MIN());
>> IntVar Y(0,2);
>> branch(Y, INT_VAL_MIN());
>> IntArgs C(1,2);
>> IntVarArray V(2, 0, 2);
>> rel(V[0] == X);
>> rel(V[1] == Y);
>> IntVar Cost(0,5);
>> linear(C, X, V, IRT_EQ, Cost);
>>
>> If I solve this with DFS, I get 6 solutions.
>> If I solve this with BAB and in the constrain function say rel(cost > 
>> b.cost); I only get 4 solutions.
>>
>> Note: If I run with GIST and expand the nodes in the correct order, I 
>> can cause BAB to display all 6 solutions, but the normal search order 
>> does not find all of them.
>>
>> To have BAB find all 6 solutions, I removed the above two branch 
>> statements and replaced them with branch(Cost, INT_VAL_MIN());
>>
>> So, the general rule I would conclude from this test is that when 
>> using linear to create a cost function for BAB, always branch on the 
>> output of the equation rather than on the terms making up the 
>> equation.
>>
>> I don't know if this holds true for other uses of linear.
>>
>> Dean
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users



From ktorpi at gmail.com  Fri Aug  2 10:26:40 2013
From: ktorpi at gmail.com (kTorpi)
Date: Fri, 2 Aug 2013 10:26:40 +0200
Subject: [gecode-users] compilation without cygwin
In-Reply-To: <CANawtxbh1FaUir+idaLSvmw3MhuSTD+Wo3OgaaM0nXBUmAG2sg@mail.gmail.com>
References: <CAL1Z-6yg7q1AVOaDS-Rz6BmbZZOjbggcGSqdVjiVQDh-PcjeQg@mail.gmail.com>
	<CAFcfiNXDoo8bH_pT8zRYqK01nzZ-jP5M0Wbq=pV_XmTyZi+5gQ@mail.gmail.com>
	<CAL1Z-6yAXCmP_UGRt7ffLusKEyrH+cSH4MEet=TTg+AxeAV5kg@mail.gmail.com>
	<CANawtxY7EpVu26ZiPQr+q=U955ZYzMhr6iJguSvfKfGsKyMDMg@mail.gmail.com>
	<CAL1Z-6zFw9RTXZx0rjY09RSDBaHd90vcL9ngtzrvkodtH4Fg7w@mail.gmail.com>
	<CANawtxbh1FaUir+idaLSvmw3MhuSTD+Wo3OgaaM0nXBUmAG2sg@mail.gmail.com>
Message-ID: <CAL1Z-6wSLqR28jX7-devcG34ML0pinAtJ0ScLz+gfX98yzfeDg@mail.gmail.com>

How could I disable autolink? The cmake generated support/config.hpp says:

/* Disable autolink because all the dependencies are handled by CMake. */
#define GECODE_BUILD_SUPPORT
#define GECODE_BUILD_KERNEL
#define GECODE_BUILD_SEARCH
...

but at linkage I get the following error: gecodeint.lib : fatal error
LNK1107: invalid or corrupt file: cannot read at 0x2A0
I think it want link these libs like import libs, so may be autolink isn't
disabled.

Thanks,
Steve


2013/7/31 victor.zverovich at gmail.com <victor.zverovich at gmail.com>

> The names of the libraries produced by the CMake build do not have
> version/platform suffix such as "-4-1-0-d-x86" although it is not too
> difficult to implement (patches are welcome =)). Therefore you have to
> specify the libraries manually when linking and not rely on autolink (or
> change the CMake script to produce these suffixes).
>
> Best regards,
> Victor
>
>
> On Wed, Jul 31, 2013 at 2:21 AM, kTorpi <ktorpi at gmail.com> wrote:
>
>> Thanks Victor! It almost works. :)
>> I generated VS 10.0 build files with cmake, and I could build static
>> gecode libs with it, which is exactly what I need. But I have a problem
>> with linking these libs with my application. This build process generetes
>> only a support/config.hpp file. I copied this file into gecode/support dir
>> which I founded in the downloaded source of gecode, and I used this dir
>> (gecode dir) as the includes
>>  directory.
>> My program compiles this way, but during linkage I get "cannot open file
>> 'GecodeSupport-4-1-0-d-x86.lib'" message, which is no wonder cause the
>> builded gecode libs has named like "gecodesupport.lib". I tried to rename
>> the .lib files (concat version, architecture and r/d information) and also
>> hacked the support/auto-link.hpp file, but no success, linker complains
>> about bad lib format.
>> Any ideas?
>>
>> Thanks in advance,
>> Steve
>>
>>
>> 2013/7/26 victor.zverovich at gmail.com <victor.zverovich at gmail.com>
>>
>> You can build Gecode with cl/Visual C++ using CMake. This doesn't require
>>> Cygwin.
>>>
>>> HTH,
>>> Victor
>>> On Jul 25, 2013 4:21 PM, "kTorpi" <ktorpi at gmail.com> wrote:
>>>
>>>>  Hi,
>>>>
>>>> Thank you, but I don't think so.
>>>> I'd like to compile the gecode itself. In Section 2.6.2 it is
>>>> mentioned, that "For Windows, we require Cygwin environment...", but I'd
>>>> like to compile gecode without it.
>>>>
>>>> Thank you,
>>>> Steve
>>>>
>>>>
>>>> 2013/7/24 Gustavo Gutierrez <gustavo.ggutierrez at gmail.com>
>>>>
>>>>>
>>>>>
>>>>> On Wed, Jul 24, 2013 at 8:37 AM, kTorpi <ktorpi at gmail.com> wrote:
>>>>>
>>>>>> Hi,
>>>>>>
>>>>>> Is there someone who tried to compile gecode under windows without
>>>>>> using cygwin? I'd like to compile it with cl natively somehow. Is it
>>>>>> possible?
>>>>>>
>>>>>>
>>>>> Seems like section 2.3.1 of the following document is what you are
>>>>> looking for.
>>>>>
>>>>> http://www.gecode.org/doc-latest/MPG.pdf
>>>>>
>>>>>
>>>>> Regards,
>>>>> --
>>>>> Gustavo Gutierrez
>>>>
>>>>
>>>>
>>>> _______________________________________________
>>>> Gecode users mailing list
>>>> users at gecode.org
>>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>>>
>>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20130802/9958ca4e/attachment.html>

From campe8 at nmsu.edu  Fri Aug  2 15:18:50 2013
From: campe8 at nmsu.edu (Federico Campeotto)
Date: Fri, 2 Aug 2013 13:18:50 +0000
Subject: [gecode-users] Values from Float vars
Message-ID: <0D056223-11A0-46E4-8BBB-A1DDDAAA50E2@nmsu.edu>

I'm currently working on a CP-model for a project that involves geometric operations on vectors, points in R^3, etc.. 
I would like to know if there is a way to obtain the min/max value of a float variable that is constrained in a float expression or relation as in the following example.

/// Note:  FloatVarArray& T
/// First we constrain the float vars of the array T to be equal to some rescaled integer values...
FloatVar float_x (  home, -255.0, +255.0 );
FloatVar float_y (  home, -255.0, +255.0 );
channel (  home, int_x, float_x  );
channel (  home, int_y, float_y  );
...
FloatVar div_var (  home,  100,  100  );
div (  home, float_x, div_var, T[ 0 ]  );
div (  home, float_y, div_var, T[ 1 ]  );
...

///  Then we perform some operations (e.g., subtracting two vectors of points in R^3)...
FloatVarArray p1 ( home, 3, -255.0, +255.0 );
FloatVarArray p2 ( home, 3, -255.0, +255.0 );
FloatVarArgs  p3 ( home, 3, -255.0, +255.0 );

for ( int i = 0; i < 3; i++)  {
	rel ( home, p1[ i ] == T[ i ] );
	rel ( home, p2[ i ] == T[ i ] );
}

rel ( home, v[0] ==  p2[0] - p1[0] );
rel ( home, v[1] ==  p2[1] - p1[1] );
rel ( home, v[2] ==  p2[2] - p1[2] );
?

/// Note: FloatVarArgs x, FloatVarArgs temp( prot, 3,  MIN, MAX )
///           FloatVar sum ( home, MIN, MAX ), FloatVar sqr_rt ( prot, MIN, MAX ),
sqr ( home, x[ 0 ], temp[ 0 ] );
sqr ( home, x[ 1 ], temp[ 1 ] );
sqr ( home, x[ 2 ], temp[ 2 ] );
rel ( home, sum == temp[ 0 ] + temp[ 1 ] + temp[ 2 ] );
sqrt ( home, sum, sqr_rt );

If we finally print the values for the variables in the vectors v and x we obtain restricted ranges.  
Eventually we would like to calculate some real values obtained from such vectors (e.g., the value of
a certain physics formula given by the current labeling).
Is there a way to obtain the current min,max or the mean value of such restricted domains?
It is also possible to set such current min, max, mean value to another real variable?

Thanks,
Federico Campeotto




From victor.zverovich at gmail.com  Fri Aug  2 15:55:14 2013
From: victor.zverovich at gmail.com (victor.zverovich at gmail.com)
Date: Fri, 2 Aug 2013 06:55:14 -0700
Subject: [gecode-users] compilation without cygwin
In-Reply-To: <CAL1Z-6wSLqR28jX7-devcG34ML0pinAtJ0ScLz+gfX98yzfeDg@mail.gmail.com>
References: <CAL1Z-6yg7q1AVOaDS-Rz6BmbZZOjbggcGSqdVjiVQDh-PcjeQg@mail.gmail.com>
	<CAFcfiNXDoo8bH_pT8zRYqK01nzZ-jP5M0Wbq=pV_XmTyZi+5gQ@mail.gmail.com>
	<CAL1Z-6yAXCmP_UGRt7ffLusKEyrH+cSH4MEet=TTg+AxeAV5kg@mail.gmail.com>
	<CANawtxY7EpVu26ZiPQr+q=U955ZYzMhr6iJguSvfKfGsKyMDMg@mail.gmail.com>
	<CAL1Z-6zFw9RTXZx0rjY09RSDBaHd90vcL9ngtzrvkodtH4Fg7w@mail.gmail.com>
	<CANawtxbh1FaUir+idaLSvmw3MhuSTD+Wo3OgaaM0nXBUmAG2sg@mail.gmail.com>
	<CAL1Z-6wSLqR28jX7-devcG34ML0pinAtJ0ScLz+gfX98yzfeDg@mail.gmail.com>
Message-ID: <CANawtxZVmyby6Bs76oSLb1AAJjPONz1XtaXs7ZGfApL_B_wvSw@mail.gmail.com>

As you've already found out, the generated support/config.hpp disables
autolink by defining GECODE_BUILD_*. There might be a better way to do this
which I don't know about.

I'm not sure why you get LNK1107, have you tried to check if gecodeint.lib
is a valid library using dumpbin or lib?

Best regards,
Victor


On Fri, Aug 2, 2013 at 1:26 AM, kTorpi <ktorpi at gmail.com> wrote:

> How could I disable autolink? The cmake generated support/config.hpp says:
>
> /* Disable autolink because all the dependencies are handled by CMake. */
> #define GECODE_BUILD_SUPPORT
> #define GECODE_BUILD_KERNEL
> #define GECODE_BUILD_SEARCH
> ...
>
> but at linkage I get the following error: gecodeint.lib : fatal error
> LNK1107: invalid or corrupt file: cannot read at 0x2A0
> I think it want link these libs like import libs, so may be autolink isn't
> disabled.
>
> Thanks,
> Steve
>
>
> 2013/7/31 victor.zverovich at gmail.com <victor.zverovich at gmail.com>
>
> The names of the libraries produced by the CMake build do not have
>> version/platform suffix such as "-4-1-0-d-x86" although it is not too
>> difficult to implement (patches are welcome =)). Therefore you have to
>> specify the libraries manually when linking and not rely on autolink (or
>> change the CMake script to produce these suffixes).
>>
>> Best regards,
>> Victor
>>
>>
>> On Wed, Jul 31, 2013 at 2:21 AM, kTorpi <ktorpi at gmail.com> wrote:
>>
>>> Thanks Victor! It almost works. :)
>>> I generated VS 10.0 build files with cmake, and I could build static
>>> gecode libs with it, which is exactly what I need. But I have a problem
>>> with linking these libs with my application. This build process generetes
>>> only a support/config.hpp file. I copied this file into gecode/support dir
>>> which I founded in the downloaded source of gecode, and I used this dir
>>> (gecode dir) as the includes
>>>  directory.
>>> My program compiles this way, but during linkage I get "cannot open file
>>> 'GecodeSupport-4-1-0-d-x86.lib'" message, which is no wonder cause the
>>> builded gecode libs has named like "gecodesupport.lib". I tried to rename
>>> the .lib files (concat version, architecture and r/d information) and also
>>> hacked the support/auto-link.hpp file, but no success, linker complains
>>> about bad lib format.
>>> Any ideas?
>>>
>>> Thanks in advance,
>>> Steve
>>>
>>>
>>> 2013/7/26 victor.zverovich at gmail.com <victor.zverovich at gmail.com>
>>>
>>> You can build Gecode with cl/Visual C++ using CMake. This doesn't
>>>> require Cygwin.
>>>>
>>>> HTH,
>>>> Victor
>>>> On Jul 25, 2013 4:21 PM, "kTorpi" <ktorpi at gmail.com> wrote:
>>>>
>>>>>  Hi,
>>>>>
>>>>> Thank you, but I don't think so.
>>>>> I'd like to compile the gecode itself. In Section 2.6.2 it is
>>>>> mentioned, that "For Windows, we require Cygwin environment...", but I'd
>>>>> like to compile gecode without it.
>>>>>
>>>>> Thank you,
>>>>> Steve
>>>>>
>>>>>
>>>>> 2013/7/24 Gustavo Gutierrez <gustavo.ggutierrez at gmail.com>
>>>>>
>>>>>>
>>>>>>
>>>>>> On Wed, Jul 24, 2013 at 8:37 AM, kTorpi <ktorpi at gmail.com> wrote:
>>>>>>
>>>>>>> Hi,
>>>>>>>
>>>>>>> Is there someone who tried to compile gecode under windows without
>>>>>>> using cygwin? I'd like to compile it with cl natively somehow. Is it
>>>>>>> possible?
>>>>>>>
>>>>>>>
>>>>>> Seems like section 2.3.1 of the following document is what you are
>>>>>> looking for.
>>>>>>
>>>>>> http://www.gecode.org/doc-latest/MPG.pdf
>>>>>>
>>>>>>
>>>>>> Regards,
>>>>>> --
>>>>>> Gustavo Gutierrez
>>>>>
>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> Gecode users mailing list
>>>>> users at gecode.org
>>>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>>>>
>>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20130802/3d709db4/attachment.html>

From Vincent.Barichard at univ-angers.fr  Fri Aug  2 17:31:44 2013
From: Vincent.Barichard at univ-angers.fr (Vincent Barichard)
Date: Fri, 2 Aug 2013 17:31:44 +0200
Subject: [gecode-users] Values from Float vars
In-Reply-To: <0D056223-11A0-46E4-8BBB-A1DDDAAA50E2@nmsu.edu>
References: <0D056223-11A0-46E4-8BBB-A1DDDAAA50E2@nmsu.edu>
Message-ID: <CAF6ZHekoHjyeM9nGkMXaz4mPWjSEst9bErJZJJqhxw-iijBbtA@mail.gmail.com>

Hi,

You can get the min, max or mean with the min(), max() or med() member
functions of a FloatVar.
You can set another float variable with the rel() function :
rel(home, x, FRT_EQ, FloatVal(y.min()));

I hope it will be usefull to you.

Best,
Vincent


2013/8/2 Federico Campeotto <campe8 at nmsu.edu>

> I'm currently working on a CP-model for a project that involves geometric
> operations on vectors, points in R^3, etc..
> I would like to know if there is a way to obtain the min/max value of a
> float variable that is constrained in a float expression or relation as in
> the following example.
>
> /// Note:  FloatVarArray& T
> /// First we constrain the float vars of the array T to be equal to some
> rescaled integer values...
> FloatVar float_x (  home, -255.0, +255.0 );
> FloatVar float_y (  home, -255.0, +255.0 );
> channel (  home, int_x, float_x  );
> channel (  home, int_y, float_y  );
> ...
> FloatVar div_var (  home,  100,  100  );
> div (  home, float_x, div_var, T[ 0 ]  );
> div (  home, float_y, div_var, T[ 1 ]  );
> ...
>
> ///  Then we perform some operations (e.g., subtracting two vectors of
> points in R^3)...
> FloatVarArray p1 ( home, 3, -255.0, +255.0 );
> FloatVarArray p2 ( home, 3, -255.0, +255.0 );
> FloatVarArgs  p3 ( home, 3, -255.0, +255.0 );
>
> for ( int i = 0; i < 3; i++)  {
>         rel ( home, p1[ i ] == T[ i ] );
>         rel ( home, p2[ i ] == T[ i ] );
> }
>
> rel ( home, v[0] ==  p2[0] - p1[0] );
> rel ( home, v[1] ==  p2[1] - p1[1] );
> rel ( home, v[2] ==  p2[2] - p1[2] );
> ?
>
> /// Note: FloatVarArgs x, FloatVarArgs temp( prot, 3,  MIN, MAX )
> ///           FloatVar sum ( home, MIN, MAX ), FloatVar sqr_rt ( prot,
> MIN, MAX ),
> sqr ( home, x[ 0 ], temp[ 0 ] );
> sqr ( home, x[ 1 ], temp[ 1 ] );
> sqr ( home, x[ 2 ], temp[ 2 ] );
> rel ( home, sum == temp[ 0 ] + temp[ 1 ] + temp[ 2 ] );
> sqrt ( home, sum, sqr_rt );
>
> If we finally print the values for the variables in the vectors v and x we
> obtain restricted ranges.
> Eventually we would like to calculate some real values obtained from such
> vectors (e.g., the value of
> a certain physics formula given by the current labeling).
> Is there a way to obtain the current min,max or the mean value of such
> restricted domains?
> It is also possible to set such current min, max, mean value to another
> real variable?
>
> Thanks,
> Federico Campeotto
>
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>


-- 
Vincent Barichard         Universit? d'Angers (LERIA)
Tel:  02 41 73 52 06      D?partement Informatique
Fax: 02 41 73 50 73      H203
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20130802/7de6c47d/attachment.html>

From ktorpi at gmail.com  Sat Aug  3 13:55:44 2013
From: ktorpi at gmail.com (kTorpi)
Date: Sat, 3 Aug 2013 13:55:44 +0200
Subject: [gecode-users] compilation without cygwin
In-Reply-To: <CANawtxZVmyby6Bs76oSLb1AAJjPONz1XtaXs7ZGfApL_B_wvSw@mail.gmail.com>
References: <CAL1Z-6yg7q1AVOaDS-Rz6BmbZZOjbggcGSqdVjiVQDh-PcjeQg@mail.gmail.com>
	<CAFcfiNXDoo8bH_pT8zRYqK01nzZ-jP5M0Wbq=pV_XmTyZi+5gQ@mail.gmail.com>
	<CAL1Z-6yAXCmP_UGRt7ffLusKEyrH+cSH4MEet=TTg+AxeAV5kg@mail.gmail.com>
	<CANawtxY7EpVu26ZiPQr+q=U955ZYzMhr6iJguSvfKfGsKyMDMg@mail.gmail.com>
	<CAL1Z-6zFw9RTXZx0rjY09RSDBaHd90vcL9ngtzrvkodtH4Fg7w@mail.gmail.com>
	<CANawtxbh1FaUir+idaLSvmw3MhuSTD+Wo3OgaaM0nXBUmAG2sg@mail.gmail.com>
	<CAL1Z-6wSLqR28jX7-devcG34ML0pinAtJ0ScLz+gfX98yzfeDg@mail.gmail.com>
	<CANawtxZVmyby6Bs76oSLb1AAJjPONz1XtaXs7ZGfApL_B_wvSw@mail.gmail.com>
Message-ID: <CAL1Z-6yCRoS6Zr-1h3oTANP_mXbrG0pzD1HTEOy+1DMy6qZ+qQ@mail.gmail.com>

My gecodeint.lib was damged, but I fixed it. :)
Now I have just a little incompletion:
support/config.hpp does not define  GECODE_BUILD_FLOAT, so I added this
macro manually.
This way, float.hh does not include support/auto-link.hpp (so
theoretically autolink is disabled), but durring linkage I still get "LINK
: fatal error LNK1104: cannot open file 'GecodeFloat-4-1-0-r-x86.lib'" (Of
course GecodeFloat-4-1-0-r-x86.lib isn't added to my project as a
dependency lib.)
I only experienced this in case of GecodeFloat, I can't find out the reason.


2013/8/2 victor.zverovich at gmail.com <victor.zverovich at gmail.com>

> As you've already found out, the generated support/config.hpp disables
> autolink by defining GECODE_BUILD_*. There might be a better way to do this
> which I don't know about.
>
> I'm not sure why you get LNK1107, have you tried to check if gecodeint.lib
> is a valid library using dumpbin or lib?
>
> Best regards,
> Victor
>
>
> On Fri, Aug 2, 2013 at 1:26 AM, kTorpi <ktorpi at gmail.com> wrote:
>
>> How could I disable autolink? The cmake generated support/config.hpp says:
>>
>> /* Disable autolink because all the dependencies are handled by CMake. */
>> #define GECODE_BUILD_SUPPORT
>> #define GECODE_BUILD_KERNEL
>> #define GECODE_BUILD_SEARCH
>> ...
>>
>> but at linkage I get the following error: gecodeint.lib : fatal error
>> LNK1107: invalid or corrupt file: cannot read at 0x2A0
>> I think it want link these libs like import libs, so may be autolink
>> isn't disabled.
>>
>> Thanks,
>> Steve
>>
>>
>> 2013/7/31 victor.zverovich at gmail.com <victor.zverovich at gmail.com>
>>
>> The names of the libraries produced by the CMake build do not have
>>> version/platform suffix such as "-4-1-0-d-x86" although it is not too
>>> difficult to implement (patches are welcome =)). Therefore you have to
>>> specify the libraries manually when linking and not rely on autolink (or
>>> change the CMake script to produce these suffixes).
>>>
>>> Best regards,
>>> Victor
>>>
>>>
>>> On Wed, Jul 31, 2013 at 2:21 AM, kTorpi <ktorpi at gmail.com> wrote:
>>>
>>>> Thanks Victor! It almost works. :)
>>>> I generated VS 10.0 build files with cmake, and I could build static
>>>> gecode libs with it, which is exactly what I need. But I have a problem
>>>> with linking these libs with my application. This build process generetes
>>>> only a support/config.hpp file. I copied this file into gecode/support dir
>>>> which I founded in the downloaded source of gecode, and I used this dir
>>>> (gecode dir) as the includes
>>>>  directory.
>>>> My program compiles this way, but during linkage I get "cannot open
>>>> file 'GecodeSupport-4-1-0-d-x86.lib'" message, which is no wonder cause the
>>>> builded gecode libs has named like "gecodesupport.lib". I tried to rename
>>>> the .lib files (concat version, architecture and r/d information) and also
>>>> hacked the support/auto-link.hpp file, but no success, linker complains
>>>> about bad lib format.
>>>> Any ideas?
>>>>
>>>> Thanks in advance,
>>>> Steve
>>>>
>>>>
>>>> 2013/7/26 victor.zverovich at gmail.com <victor.zverovich at gmail.com>
>>>>
>>>> You can build Gecode with cl/Visual C++ using CMake. This doesn't
>>>>> require Cygwin.
>>>>>
>>>>> HTH,
>>>>> Victor
>>>>> On Jul 25, 2013 4:21 PM, "kTorpi" <ktorpi at gmail.com> wrote:
>>>>>
>>>>>>  Hi,
>>>>>>
>>>>>> Thank you, but I don't think so.
>>>>>> I'd like to compile the gecode itself. In Section 2.6.2 it is
>>>>>> mentioned, that "For Windows, we require Cygwin environment...", but I'd
>>>>>> like to compile gecode without it.
>>>>>>
>>>>>> Thank you,
>>>>>> Steve
>>>>>>
>>>>>>
>>>>>> 2013/7/24 Gustavo Gutierrez <gustavo.ggutierrez at gmail.com>
>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> On Wed, Jul 24, 2013 at 8:37 AM, kTorpi <ktorpi at gmail.com> wrote:
>>>>>>>
>>>>>>>> Hi,
>>>>>>>>
>>>>>>>> Is there someone who tried to compile gecode under windows without
>>>>>>>> using cygwin? I'd like to compile it with cl natively somehow. Is it
>>>>>>>> possible?
>>>>>>>>
>>>>>>>>
>>>>>>> Seems like section 2.3.1 of the following document is what you are
>>>>>>> looking for.
>>>>>>>
>>>>>>> http://www.gecode.org/doc-latest/MPG.pdf
>>>>>>>
>>>>>>>
>>>>>>> Regards,
>>>>>>> --
>>>>>>> Gustavo Gutierrez
>>>>>>
>>>>>>
>>>>>>
>>>>>> _______________________________________________
>>>>>> Gecode users mailing list
>>>>>> users at gecode.org
>>>>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>>>>>
>>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20130803/d3c971e8/attachment.html>

From aqwzsxaqwzsx at orange.fr  Tue Aug  6 15:46:02 2013
From: aqwzsxaqwzsx at orange.fr (Philippe)
Date: Tue, 6 Aug 2013 13:46:02 +0000 (UTC)
Subject: [gecode-users] counting constraint with BoolVarArgs
Message-ID: <loom.20130806T134240-521@post.gmane.org>

Hello Everybody,

I need to count the number of 'true' values stored in a BoolVarArray
(accessed through a Matrix<BoolVarArgs>). However, the counting constraint
(as described page 63 of gecode 4.2.0 manual) only takes integer variables.
Thus, the following pseudo-code doesn't work :

BoolVarArray _FPR(*this, _Na, _Ne);
IntVarArray _NFPR(*this, _Na);
Matrix<BoolVarArgs> fpr(_FPR, _Na, _Ne);

for(int i = 0 ; i < _Na ; ++i)
  {
   // after count's call, 
   // _NFPR[i] = number of 'true' in fpr.row(i)
   count(*this, fpr.row(i), true, IRT_EQ, _NFPR[i]);
  }


1) What is the reason to forbide BoolVar in count ?

2) Is it legal (don't think so) to write :

Matrix<IntVarArgs> fpr(_FPR, _Na, _Ne);

for(int i = 0 ; i < _Na ; ++i)
  count(*this, fpr.row(i), 1, IRT_EQ, _NFPR[i]);

3) Or do I need to replace fpr's definition by :

Matrix<IntVarArgs> fpr(_FPR, _Na, _Ne); 

4) Or, do I need to use channeling ?
   But i don't find the way to express it
   It seems that the tips page 67 is not relevant here. 
   help please !

5) Or something else ?

Thanks for any help,
Philippe




From tack at gecode.org  Wed Aug  7 01:53:07 2013
From: tack at gecode.org (Guido Tack)
Date: Wed, 7 Aug 2013 09:53:07 +1000
Subject: [gecode-users] counting constraint with BoolVarArgs
In-Reply-To: <loom.20130806T134240-521@post.gmane.org>
References: <loom.20130806T134240-521@post.gmane.org>
Message-ID: <84223FE2-7961-46FB-931A-83C0D7437491@gecode.org>

Hi Philippe,

counting ones in BoolVar arrays is the same as the sum over the array, so just use linear with BoolVar arguments.

Cheers,
Guido

On 06/08/2013, at 11:46 PM, Philippe <aqwzsxaqwzsx at orange.fr> wrote:

> Hello Everybody,
> 
> I need to count the number of 'true' values stored in a BoolVarArray
> (accessed through a Matrix<BoolVarArgs>). However, the counting constraint
> (as described page 63 of gecode 4.2.0 manual) only takes integer variables.
> Thus, the following pseudo-code doesn't work :
> 
> BoolVarArray _FPR(*this, _Na, _Ne);
> IntVarArray _NFPR(*this, _Na);
> Matrix<BoolVarArgs> fpr(_FPR, _Na, _Ne);
> 
> for(int i = 0 ; i < _Na ; ++i)
>  {
>   // after count's call, 
>   // _NFPR[i] = number of 'true' in fpr.row(i)
>   count(*this, fpr.row(i), true, IRT_EQ, _NFPR[i]);
>  }
> 
> 
> 1) What is the reason to forbide BoolVar in count ?
> 
> 2) Is it legal (don't think so) to write :
> 
> Matrix<IntVarArgs> fpr(_FPR, _Na, _Ne);
> 
> for(int i = 0 ; i < _Na ; ++i)
>  count(*this, fpr.row(i), 1, IRT_EQ, _NFPR[i]);
> 
> 3) Or do I need to replace fpr's definition by :
> 
> Matrix<IntVarArgs> fpr(_FPR, _Na, _Ne); 
> 
> 4) Or, do I need to use channeling ?
>   But i don't find the way to express it
>   It seems that the tips page 67 is not relevant here. 
>   help please !
> 
> 5) Or something else ?
> 
> Thanks for any help,
> Philippe
> 
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users



From aqwzsxaqwzsx at orange.fr  Wed Aug  7 15:51:15 2013
From: aqwzsxaqwzsx at orange.fr (Philippe)
Date: Wed, 7 Aug 2013 13:51:15 +0000 (UTC)
Subject: [gecode-users] counting constraint with BoolVarArgs
References: <loom.20130806T134240-521@post.gmane.org>
	<84223FE2-7961-46FB-931A-83C0D7437491@gecode.org>
Message-ID: <loom.20130807T153536-256@post.gmane.org>

Hi Guido,

Thanks for your help. I've first used :

linear(*this, fpr.row(i), IRT_EQ, _NFPR[i])

which works as expected. Now, I use :

rel(*this, sum(fpr.row(i)) == _NFPR[i]);

which is more readable thanks to minimodel.

I was confused, because p44 i've read :
"A Boolean variable is not an integer variable with a domain 
that is included in {0, 1}."

So i thought that it was not possible to sum boolean variables.

However, p46 we can read :
"The only difference between integer and Boolean variables is that 
Boolean variables can only take the values 0 or 1"

Thanks again,
Cheers,
Philippe



From tack at gecode.org  Thu Aug  8 01:19:26 2013
From: tack at gecode.org (Guido Tack)
Date: Thu, 8 Aug 2013 09:19:26 +1000
Subject: [gecode-users] counting constraint with BoolVarArgs
In-Reply-To: <loom.20130807T153536-256@post.gmane.org>
References: <loom.20130806T134240-521@post.gmane.org>
	<84223FE2-7961-46FB-931A-83C0D7437491@gecode.org>
	<loom.20130807T153536-256@post.gmane.org>
Message-ID: <4E723BBC-23ED-484A-9228-7DB27708872F@gecode.org>

Hi,

it's simply a different type (in the C++ sense), but linear and sum provide overloaded versions for both IntVar and BoolVar.

Cheers,
Guido

On 07/08/2013, at 11:51 PM, Philippe <aqwzsxaqwzsx at orange.fr> wrote:

> Hi Guido,
> 
> Thanks for your help. I've first used :
> 
> linear(*this, fpr.row(i), IRT_EQ, _NFPR[i])
> 
> which works as expected. Now, I use :
> 
> rel(*this, sum(fpr.row(i)) == _NFPR[i]);
> 
> which is more readable thanks to minimodel.
> 
> I was confused, because p44 i've read :
> "A Boolean variable is not an integer variable with a domain 
> that is included in {0, 1}."
> 
> So i thought that it was not possible to sum boolean variables.
> 
> However, p46 we can read :
> "The only difference between integer and Boolean variables is that 
> Boolean variables can only take the values 0 or 1"
> 
> Thanks again,
> Cheers,
> Philippe
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users



From aqwzsxaqwzsx at orange.fr  Mon Aug 12 11:33:21 2013
From: aqwzsxaqwzsx at orange.fr (Philippe)
Date: Mon, 12 Aug 2013 09:33:21 +0000 (UTC)
Subject: [gecode-users] Cloning
Message-ID: <loom.20130812T112238-104@post.gmane.org>

Hi all,

In all examples provided in Gecode manual, all the works is done
In the constructor (initialisation, calls to 'rel', 'branch' ...). 

For some reasons, my inputs are setted via setters and, when it's done, 
a do_post() function member (which calls 'rel','branch' ...) is called only
once from the main.

It seems to work but is it valid ? Does this have an impact on cloning ?
Do i need to call the do_post in the 'copy(bool share)' ?


Thanks,
Philippe



From tack at gecode.org  Mon Aug 12 11:37:06 2013
From: tack at gecode.org (Guido Tack)
Date: Mon, 12 Aug 2013 19:37:06 +1000
Subject: [gecode-users] Cloning
In-Reply-To: <loom.20130812T112238-104@post.gmane.org>
References: <loom.20130812T112238-104@post.gmane.org>
Message-ID: <32F6BFDB-014C-4B8F-8922-A8B2963001D3@gecode.org>

Hi Philippe,

that's fine, it's not required to do that stuff in the constructor.  The copy method shouldn't have to change.

Cheers,
Guido

On 12/08/2013, at 19:33 , Philippe <aqwzsxaqwzsx at orange.fr> wrote:

> Hi all,
> 
> In all examples provided in Gecode manual, all the works is done
> In the constructor (initialisation, calls to 'rel', 'branch' ...). 
> 
> For some reasons, my inputs are setted via setters and, when it's done, 
> a do_post() function member (which calls 'rel','branch' ...) is called only
> once from the main.
> 
> It seems to work but is it valid ? Does this have an impact on cloning ?
> Do i need to call the do_post in the 'copy(bool share)' ?
> 
> 
> Thanks,
> Philippe
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-- 
Guido Tack,
http://www.csse.monash.edu/~guidot/



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20130812/5b4f7f2c/attachment.html>

From aqwzsxaqwzsx at orange.fr  Mon Aug 12 17:14:35 2013
From: aqwzsxaqwzsx at orange.fr (Philippe)
Date: Mon, 12 Aug 2013 15:14:35 +0000 (UTC)
Subject: [gecode-users] Cloning
References: <loom.20130812T112238-104@post.gmane.org>
	<32F6BFDB-014C-4B8F-8922-A8B2963001D3@gecode.org>
Message-ID: <loom.20130812T171348-514@post.gmane.org>

Hi Guido,

Thanks for your answer. 
As you guessed, i'm discovering Gecode and I have many questions (coming
very soon) 
about it...

Cheers,
Philippe




From aqwzsxaqwzsx at orange.fr  Mon Aug 12 17:18:10 2013
From: aqwzsxaqwzsx at orange.fr (Philippe)
Date: Mon, 12 Aug 2013 15:18:10 +0000 (UTC)
Subject: [gecode-users] sum of IntArgs
Message-ID: <loom.20130812T171558-718@post.gmane.org>


Hi to all Geocode authors,


I needed to compute the sum of IntArgs the same way we compute the sum
of IntVarArray. Tell me if i'm wrong, but it seems that this facility
is not natively provided by Gecode. 

For now, i use my own implementation which do the job (i'm not sure of the 
code below but it seems to work).

Don't you think this facility could be useful for other and thus natively 
provided by Gecode ?


Anyway, congratulations for your work. I'm a new user of Gecode and I
really like it !

Cheers,
Philippe


 LinIntExpr 
 sum(const Slice<IntArgs>& slice)
 {
   const Slice<IntArgs>::ArgsType & args = slice;
   return sum(args);
 }

 LinIntExpr 
 sum(const Matrix<IntArgs>& matrix)
 {
   const Matrix<IntArgs>::ArgsType & args = matrix.get_array();
   return sum(args);
 }


 LinIntExpr
 sum(const IntArgs& args)
 {
  int i, sum = 0;
  const int size = args.size();

  for (i = 0 ; i < size ; ++i)    
  {
    sum += args[i];
  }

  return LinIntExpr(sum);
 }





From shawnleem at outlook.com  Mon Aug 12 17:34:27 2013
From: shawnleem at outlook.com (S L)
Date: Mon, 12 Aug 2013 23:34:27 +0800
Subject: [gecode-users] Customized search engine
Message-ID: <BLU178-W110997CA461CF613D30B18BE5B0@phx.gbl>

Hi All,
I see that there are implementations of search strategies of DFS and BAB in Gecode system. But, if I want to implement a customized search engine, like mySearch in a file mySearch.hh. How should I update the configure files so that the newly generated Makefile can have my lds.hh file compiled?  Thanks a lot!
regards,Shawn 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20130812/4c1384a4/attachment.html>

From cschulte at kth.se  Mon Aug 12 21:20:54 2013
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 12 Aug 2013 21:20:54 +0200
Subject: [gecode-users] Customized search engine
In-Reply-To: <BLU178-W110997CA461CF613D30B18BE5B0@phx.gbl>
References: <BLU178-W110997CA461CF613D30B18BE5B0@phx.gbl>
Message-ID: <00a301ce9791$10e9e860$32bdb920$@kth.se>

Add it to Makefile.in and rerun configure. The structure of it is easy to
get C

 

--

Christian Schulte, www.ict.kth.se/~cschulte

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of S L
Sent: Monday, August 12, 2013 05:34 PM
To: users at gecode.org
Subject: [gecode-users] Customized search engine

 

Hi All,

 

I see that there are implementations of search strategies of DFS and BAB in
Gecode system. But, if I want to implement a customized search engine, like
mySearch in a file mySearch.hh. How should I update the configure files so
that the newly generated Makefile can have my lds.hh file compiled?  Thanks
a lot!

 

regards,

Shawn

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20130812/e03cfa3b/attachment.html>

From cschulte at kth.se  Mon Aug 12 21:21:46 2013
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 12 Aug 2013 21:21:46 +0200
Subject: [gecode-users] sum of IntArgs
In-Reply-To: <loom.20130812T171558-718@post.gmane.org>
References: <loom.20130812T171558-718@post.gmane.org>
Message-ID: <00b001ce9791$30300ab0$90902010$@kth.se>

Will add it to the trunk after holidays. C

--
Christian Schulte, www.ict.kth.se/~cschulte


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Philippe
Sent: Monday, August 12, 2013 05:18 PM
To: users at gecode.org
Subject: [gecode-users] sum of IntArgs


Hi to all Geocode authors,


I needed to compute the sum of IntArgs the same way we compute the sum of
IntVarArray. Tell me if i'm wrong, but it seems that this facility is not
natively provided by Gecode. 

For now, i use my own implementation which do the job (i'm not sure of the
code below but it seems to work).

Don't you think this facility could be useful for other and thus natively
provided by Gecode ?


Anyway, congratulations for your work. I'm a new user of Gecode and I
really like it !

Cheers,
Philippe


 LinIntExpr 
 sum(const Slice<IntArgs>& slice)
 {
   const Slice<IntArgs>::ArgsType & args = slice;
   return sum(args);
 }

 LinIntExpr 
 sum(const Matrix<IntArgs>& matrix)
 {
   const Matrix<IntArgs>::ArgsType & args = matrix.get_array();
   return sum(args);
 }


 LinIntExpr
 sum(const IntArgs& args)
 {
  int i, sum = 0;
  const int size = args.size();

  for (i = 0 ; i < size ; ++i)    
  {
    sum += args[i];
  }

  return LinIntExpr(sum);
 }




_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users



From Ajit.Dingankar at gmail.com  Tue Aug 13 22:16:06 2013
From: Ajit.Dingankar at gmail.com (Ajit Dingankar)
Date: Tue, 13 Aug 2013 20:16:06 +0000 (UTC)
Subject: [gecode-users] Dynamically constructing a model using solution of
	an IntVar
Message-ID: <loom.20130813T220504-742@post.gmane.org>

I'm a newbie to Gecode (although I've used constraint programming before) 
so please excuse me for a stupid question. ;-)

I'm working on a problem of generating some test files according to some 
constraints on the structure and content. The file header has a field for 
the size of the data content (rest of the file). 

>From what I've read in MPG, Tip 4.5 seems to be the right approach for the 
problem, except that the length of the for dynamically sized IntVarArray 
(representing Data) is determined by a partial solution (for the IntVar 
representing Length). 

I'd appreciate any pointers to modeling or solving this problem. 

Thanks, 
Ajit
==== 




From cschulte at kth.se  Tue Aug 13 22:57:54 2013
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 13 Aug 2013 22:57:54 +0200
Subject: [gecode-users] Dynamically constructing a model using solution
	of	an IntVar
In-Reply-To: <loom.20130813T220504-742@post.gmane.org>
References: <loom.20130813T220504-742@post.gmane.org>
Message-ID: <000601ce9867$c8491810$58db4830$@kth.se>

Try to use a variable of IntVarArgs while constructing the model to which
additional variables can be added. Then, after you are done with
constructing your model you can copy the elements of the IntVarArgs into an
IntVar Array.

Not sure that this actually answers your question.

Cheers
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Ajit Dingankar
Sent: Tuesday, August 13, 2013 10:16 PM
To: users at gecode.org
Subject: [gecode-users] Dynamically constructing a model using solution of
an IntVar

I'm a newbie to Gecode (although I've used constraint programming before) so
please excuse me for a stupid question. ;-)

I'm working on a problem of generating some test files according to some
constraints on the structure and content. The file header has a field for
the size of the data content (rest of the file). 

>From what I've read in MPG, Tip 4.5 seems to be the right approach for the
problem, except that the length of the for dynamically sized IntVarArray
(representing Data) is determined by a partial solution (for the IntVar
representing Length). 

I'd appreciate any pointers to modeling or solving this problem. 

Thanks,
Ajit
==== 



_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users



From Ajit.Dingankar at gmail.com  Thu Aug 15 00:08:49 2013
From: Ajit.Dingankar at gmail.com (Ajit Dingankar)
Date: Wed, 14 Aug 2013 22:08:49 +0000 (UTC)
Subject: [gecode-users]
	=?utf-8?q?Dynamically_constructing_a_model_using_s?=
	=?utf-8?q?olution=09of=09an_IntVar?=
References: <loom.20130813T220504-742@post.gmane.org>
	<000601ce9867$c8491810$58db4830$@kth.se>
Message-ID: <loom.20130815T000826-459@post.gmane.org>

> Try to use a variable of IntVarArgs while constructing the model to which
> additional variables can be added. Then, after you are done with
> constructing your model you can copy the elements of the IntVarArgs into an
> IntVar Array.
> 
> Not sure that this actually answers your question.
> 
> Cheers
> Christian

Thanks, Christian! I think your suggestion is the same as Tip 4.5, but 
my problem is that the terminating condition for the while loop there 
(or "how many variables should be added") depends on the solution of 
the IntVar representing the size; unlike the case for Tip 4.5 where 
the size is read from a file (or is a known value obtained somehow). 

Thanks, 
Ajit
==== 




From tack at gecode.org  Thu Aug 15 01:18:17 2013
From: tack at gecode.org (Guido Tack)
Date: Thu, 15 Aug 2013 09:18:17 +1000
Subject: [gecode-users] Dynamically constructing a model using
	solution	of	an IntVar
In-Reply-To: <loom.20130815T000826-459@post.gmane.org>
References: <loom.20130813T220504-742@post.gmane.org>
	<000601ce9867$c8491810$58db4830$@kth.se>
	<loom.20130815T000826-459@post.gmane.org>
Message-ID: <3FB39802-B859-466E-9318-350233B9D7C4@gecode.org>

That's more difficult.  Let's say your variable that contains the required array length is called x.  You either need to decompose your model into two parts (the first part determining x, the second part then using that solution to construct a new model with the right length), or you need to allocate an array with the maximum possible length and use constraints to say that everything beyond index x is ignored.

Cheers,
Guido

On 15/08/2013, at 8:08 AM, Ajit Dingankar <Ajit.Dingankar at gmail.com> wrote:

>> Try to use a variable of IntVarArgs while constructing the model to which
>> additional variables can be added. Then, after you are done with
>> constructing your model you can copy the elements of the IntVarArgs into an
>> IntVar Array.
>> 
>> Not sure that this actually answers your question.
>> 
>> Cheers
>> Christian
> 
> Thanks, Christian! I think your suggestion is the same as Tip 4.5, but 
> my problem is that the terminating condition for the while loop there 
> (or "how many variables should be added") depends on the solution of 
> the IntVar representing the size; unlike the case for Tip 4.5 where 
> the size is read from a file (or is a known value obtained somehow). 
> 
> Thanks, 
> Ajit
> ==== 
> 
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users



From Ajit.Dingankar at gmail.com  Thu Aug 15 05:33:22 2013
From: Ajit.Dingankar at gmail.com (Ajit Dingankar)
Date: Thu, 15 Aug 2013 03:33:22 +0000 (UTC)
Subject: [gecode-users]
	=?utf-8?q?Dynamically_constructing_a_model_using?=
	=?utf-8?q?=09solution=09of=09an_IntVar?=
References: <loom.20130813T220504-742@post.gmane.org>
	<000601ce9867$c8491810$58db4830$@kth.se>
	<loom.20130815T000826-459@post.gmane.org>
	<3FB39802-B859-466E-9318-350233B9D7C4@gecode.org>
Message-ID: <loom.20130815T045700-234@post.gmane.org>


> That's more difficult.  Let's say your variable that contains the required 
array length is called x.  You
> either need to decompose your model into two parts (the first part 
determining x, the second part then
> using that solution to construct a new model with the right length), or 
you need to allocate an array with
> the maximum possible length and use constraints to say that everything 
beyond index x is ignored.
> 
> Cheers,
> Guido

Thanks, Guido! I was thinking about an approach similar to your first 
suggestion which may be better suited for my situation (in addition to 
being more memory efficient ;-) since it's a natural fit for my solution 
requirement: I need to solve for every legal length but the data should 
be randomly picked (one solution for every length) since the data space 
is very large and most solutions don't add any insight into the problem 
over that of a single representative solution. 

I couldn't find an example of model decomposition in MPG, so I'd really 
appreciate any pointers or hints of handling the underlying space; mainly 
if I can/must use a different space for the second model.  I think I've 
to use a different space and the variables in the first model can't be 
constrained by those in the second model in this approach. If there are 
any such constraints, I must use the second approach of maximum possible 
length. 

Thanks, 
Ajit
==== 




From tack at gecode.org  Thu Aug 15 05:41:02 2013
From: tack at gecode.org (Guido Tack)
Date: Thu, 15 Aug 2013 13:41:02 +1000
Subject: [gecode-users] Dynamically constructing a model
	using	solution	of	an IntVar
In-Reply-To: <loom.20130815T045700-234@post.gmane.org>
References: <loom.20130813T220504-742@post.gmane.org>
	<000601ce9867$c8491810$58db4830$@kth.se>
	<loom.20130815T000826-459@post.gmane.org>
	<3FB39802-B859-466E-9318-350233B9D7C4@gecode.org>
	<loom.20130815T045700-234@post.gmane.org>
Message-ID: <BD3CD462-5D95-4071-A16F-5D9D2F1C4D5B@gecode.org>

On 15/08/2013, at 1:33 PM, Ajit Dingankar <Ajit.Dingankar at gmail.com> wrote:

> 
>> That's more difficult.  Let's say your variable that contains the required 
> array length is called x.  You
>> either need to decompose your model into two parts (the first part 
> determining x, the second part then
>> using that solution to construct a new model with the right length), or 
> you need to allocate an array with
>> the maximum possible length and use constraints to say that everything 
> beyond index x is ignored.
>> 
>> Cheers,
>> Guido
> 
> Thanks, Guido! I was thinking about an approach similar to your first 
> suggestion which may be better suited for my situation (in addition to 
> being more memory efficient ;-) since it's a natural fit for my solution 
> requirement: I need to solve for every legal length but the data should 
> be randomly picked (one solution for every length) since the data space 
> is very large and most solutions don't add any insight into the problem 
> over that of a single representative solution. 
> 
> I couldn't find an example of model decomposition in MPG, so I'd really 
> appreciate any pointers or hints of handling the underlying space; mainly 
> if I can/must use a different space for the second model.  I think I've 
> to use a different space and the variables in the first model can't be 
> constrained by those in the second model in this approach. If there are 
> any such constraints, I must use the second approach of maximum possible 
> length. 

You can simply add variables and constraints to an existing space. Something like this should work (this is just pseudo code, you may need to use the right options for DFS so that you don't get memory leaks etc):

MySpace* s = new MySpace;
DFS<MySpace> dfs(s);
while (MySpace* s = dfs.next()) {
  s->add_second_level_vars_and_constraints();
  DFS<MySpace> nestedDFS(s);
  while (MySpace* ns = nestedDFS.next()) {
    ns->print();
    delete ns;
  }
}

Cheers,
Guido



From kisshen at cisco.com  Fri Aug 16 22:16:51 2013
From: kisshen at cisco.com (Kish Shen)
Date: Fri, 16 Aug 2013 21:16:51 +0100
Subject: [gecode-users] Adding restart-based search to ECLiPSe's interface
	to Gecode
Message-ID: <520E88B3.1020602@cisco.com>

Hi,

I am still trying to figure out how to add restart based search to 
ECLiPSe's interface to Gecode. I tried modifying my existing code (which 
does not support restart-based search), and managed to get a restarted 
based bab search to return the optimal answer, but the code then 
crashes, probably because I am not doing things correctly.

If someone can point me in the right direction, I would be very 
grateful. I sent a message about this about 2 weeks ago to this mailing 
list, but perhaps I did not give the correct information to get any 
help, so I will try again.

An outline of what I am doing now:

The user defines the problem to be solved in ECLiPSe, and the interface 
maps this to Gecode. At the Gecode level, the problem is represented in
GecodeSpace, which is derived from Gecode::MinimizeSpace

Searching can be done with a Gecode search engine, or it can be done at 
the ECLiPSe level (in which case search engines are not used).

To do the search with a search engine, I have a GecodeSearch class,
which has a Search::Engine* sengine, which is then dynamically assigned 
with the problem and search engine type when the user specify that a 
search is to be done by Gecode with a particular search method (like 
bab), e.g.

solver->vCost = <Cost variable>
sengine = Search::bab(solver, option)

where solver is a GecodeSpace*, and vCost is the cost variable (for 
MinimizeSpace).

The MPG describes the search engine classes such as BAB, which I don't 
use directly. I think the reason is that I want to be able to assign 
different types of search engines to sengine, as the search type is only 
known at run-time, and in fact the user can call search as often as they 
like on the same problem.

My problem is that I cannot extend this current scheme to work with 
restart-based search. What I tried was to use Search::rbs, which is also 
of class Engine*, and so can be assigned to sengine, but this crashed 
after returning the solution:

sengine0 = Search::bab(solver, option);
sengine = Search::rbs(solver, metastop, sengine0, metaoption);

I needed to use an extra Engine* sengine0, because using the same engine 
in bab and rbs crashed immediately.

The crash seems to happen when the rbs engine is destroyed, and it looks 
like it is related to using 2 search engines.

Is rbs supposed to be used by the user? I found it by looking for rbs in 
the documentation, but I noticed that although it is listed, it doesn't 
seem to have any description associated with it.

Can I use Engine* in this way if I want to use restart-based search, or 
do I need to use something else (i.e. not a Engine*)?

Thanks in advance for any help!

Cheers,

Kish


From zandra.norman at gmail.com  Tue Aug 20 03:35:25 2013
From: zandra.norman at gmail.com (Zandra Norman)
Date: Tue, 20 Aug 2013 09:35:25 +0800
Subject: [gecode-users] glibc
Message-ID: <CAG2_8hR=5i-WV=R_m5c8RsYtrH-BGKgjDngWJ9JtzLqv=MpY_g@mail.gmail.com>

Hi,

Gecode seems to require glibc 2.7 which we don't have at the servers we use
for development, so I am wondering if there is some way to do install
Gecode without glibc 2.7? If so, how? We have 2.8 and some other versions
above that as well.

Cheers,
Zandra
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20130820/db53f528/attachment.html>

From tack at gecode.org  Tue Aug 20 04:05:05 2013
From: tack at gecode.org (Guido Tack)
Date: Tue, 20 Aug 2013 12:05:05 +1000
Subject: [gecode-users] glibc
In-Reply-To: <CAG2_8hR=5i-WV=R_m5c8RsYtrH-BGKgjDngWJ9JtzLqv=MpY_g@mail.gmail.com>
References: <CAG2_8hR=5i-WV=R_m5c8RsYtrH-BGKgjDngWJ9JtzLqv=MpY_g@mail.gmail.com>
Message-ID: <3DC60A1F-A75D-43EF-9489-E37A415DB9E0@gecode.org>

Hi,

I don't think there should be any problem installing Gecode with glibc 2.8.  Are you using a pre-built binary package?  If yes, you may have to install from the sources.

Cheers,
Guido

On 20/08/2013, at 11:35 AM, Zandra Norman <zandra.norman at gmail.com> wrote:

> Hi,
> 
> Gecode seems to require glibc 2.7 which we don't have at the servers we use for development, so I am wondering if there is some way to do install Gecode without glibc 2.7? If so, how? We have 2.8 and some other versions above that as well.
> 
> Cheers, 
> Zandra
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20130820/0005b1e3/attachment.html>

From cschulte at kth.se  Tue Aug 20 21:51:56 2013
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 20 Aug 2013 21:51:56 +0200
Subject: [gecode-users] Adding restart-based search to ECLiPSe's
	interface	to Gecode
In-Reply-To: <520E88B3.1020602@cisco.com>
References: <520E88B3.1020602@cisco.com>
Message-ID: <000001ce9dde$ba86a590$2f93f0b0$@kth.se>

Hi Kish,

Sorry for the delay, I was on holidays and I am still catching up.

You are basically on your own. The stuff in the Search namespace is not
documented in MPG for a reason ;-)

Having said that, the stuff you are doing might work and I have an idea
where the problem is: the meta engine deletes the engine that you pass to it
(so sengine0 in your example). That means you are not allowed to delete it
yourself in your code. But as said, just an idea.

Cheers
Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/

> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On
> Behalf Of Kish Shen
> Sent: Friday, August 16, 2013 10:17 PM
> To: users at gecode.org
> Subject: [gecode-users] Adding restart-based search to ECLiPSe's interface
to
> Gecode
> 
> Hi,
> 
> I am still trying to figure out how to add restart based search to
ECLiPSe's
> interface to Gecode. I tried modifying my existing code (which does not
support
> restart-based search), and managed to get a restarted based bab search to
> return the optimal answer, but the code then crashes, probably because I
am
> not doing things correctly.
> 
> If someone can point me in the right direction, I would be very grateful.
I sent a
> message about this about 2 weeks ago to this mailing list, but perhaps I
did not
> give the correct information to get any help, so I will try again.
> 
> An outline of what I am doing now:
> 
> The user defines the problem to be solved in ECLiPSe, and the interface
maps
> this to Gecode. At the Gecode level, the problem is represented in
GecodeSpace,
> which is derived from Gecode::MinimizeSpace
> 
> Searching can be done with a Gecode search engine, or it can be done at
the
> ECLiPSe level (in which case search engines are not used).
> 
> To do the search with a search engine, I have a GecodeSearch class, which
has a
> Search::Engine* sengine, which is then dynamically assigned with the
problem
> and search engine type when the user specify that a search is to be done
by
> Gecode with a particular search method (like bab), e.g.
> 
> solver->vCost = <Cost variable>
> sengine = Search::bab(solver, option)
> 
> where solver is a GecodeSpace*, and vCost is the cost variable (for
> MinimizeSpace).
> 
> The MPG describes the search engine classes such as BAB, which I don't use
> directly. I think the reason is that I want to be able to assign different
types of
> search engines to sengine, as the search type is only known at run-time,
and in
> fact the user can call search as often as they like on the same problem.
> 
> My problem is that I cannot extend this current scheme to work with
restart-
> based search. What I tried was to use Search::rbs, which is also of class
Engine*,
> and so can be assigned to sengine, but this crashed after returning the
solution:
> 
> sengine0 = Search::bab(solver, option);
> sengine = Search::rbs(solver, metastop, sengine0, metaoption);
> 
> I needed to use an extra Engine* sengine0, because using the same engine
in
> bab and rbs crashed immediately.
> 
> The crash seems to happen when the rbs engine is destroyed, and it looks
like it
> is related to using 2 search engines.
> 
> Is rbs supposed to be used by the user? I found it by looking for rbs in
the
> documentation, but I noticed that although it is listed, it doesn't seem
to have
> any description associated with it.
> 
> Can I use Engine* in this way if I want to use restart-based search, or do
I need
> to use something else (i.e. not a Engine*)?
> 
> Thanks in advance for any help!
> 
> Cheers,
> 
> Kish
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users



From Hugh.Ferguson at nzqa.govt.nz  Wed Aug 21 05:16:13 2013
From: Hugh.Ferguson at nzqa.govt.nz (Hugh Ferguson)
Date: Wed, 21 Aug 2013 15:16:13 +1200
Subject: [gecode-users] Reusing the old Gecode/J interface
Message-ID: <5214D9BD020000850005C035@pdmail02.nzqa.govt.nz>

I am evaluating various commercial and open-source CP solvers for use in a Java context. Gecode looks attractive, aside from the lack of a Java interface. It may be worth implementing a Java interface, given that we only need a small part of the API. I am aware that the Gecode/J interface was abandoned many years ago. Can anyone give me an idea of whether it would be worth using Gecode/J as a starting point, or whether it would be better to start from scratch?
 
Thanks
 
 
Hugh Ferguson
Senior Analyst Programmer
Information Systems
New Zealand Qualifications Authority
 
Ext: 3309
DDI: 64-4-463-3309
 
Web: http://www.nzqa.govt.nz/

********************************************************************************
This email may contain legally privileged information and is intended only for the addressee. It is not necessarily the official view or 
communication of the New Zealand Qualifications Authority. If you are not the intended recipient you must not use, disclose, copy or distribute this email or 
information in it. If you have received this email in error, please contact the sender immediately. NZQA does not accept any liability for changes made to this email or attachments after sending by NZQA. 

All emails have been scanned for viruses and content by MailMarshal. 
NZQA reserves the right to monitor all email communications through its network.

********************************************************************************
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20130821/9f15cc4f/attachment.html>

From tack at gecode.org  Wed Aug 21 05:27:45 2013
From: tack at gecode.org (Guido Tack)
Date: Wed, 21 Aug 2013 13:27:45 +1000
Subject: [gecode-users] Reusing the old Gecode/J interface
In-Reply-To: <5214D9BD020000850005C035@pdmail02.nzqa.govt.nz>
References: <5214D9BD020000850005C035@pdmail02.nzqa.govt.nz>
Message-ID: <041320F5-06CE-4D26-A50A-033B985BED79@gecode.org>

Hello Hugh,

I would start from scratch.  Gecode/J used a much tighter coupling between Java and C++ than necessary for most users (e.g. you could implement propagators and branchers in Java, which is usually not necessary).  At the time we used SWIG to generate the interface from the C++ headers plus some custom annotations.  I wasn't particularly impressed with the quality of the generated code (IIRC I even had to patch some things manually), and there was a huge problem with the Java multi thread garbage collection.  But that was so long ago that I'd probably give it another try, especially if the interface you need is much simpler than what we had (we had to export C++ classes that you could subclass in Java, including virtual method calls etc... the result was a huge mess and not very efficient).

If you need more concrete ideas, just let me know.

Cheers,
Guido

On 21/08/2013, at 1:16 PM, Hugh Ferguson <Hugh.Ferguson at nzqa.govt.nz> wrote:

> I am evaluating various commercial and open-source CP solvers for use in a Java context. Gecode looks attractive, aside from the lack of a Java interface. It may be worth implementing a Java interface, given that we only need a small part of the API. I am aware that the Gecode/J interface was abandoned many years ago. Can anyone give me an idea of whether it would be worth using Gecode/J as a starting point, or whether it would be better to start from scratch?
>  
> Thanks
>  
>  
> Hugh Ferguson
> Senior Analyst Programmer
> Information Systems
> New Zealand Qualifications Authority
>  
> Ext: 3309
> DDI: 64-4-463-3309
>  
> Web: http://www.nzqa.govt.nz/
> ********************************************************************************
> This email may contain legally privileged information and is intended only for the addressee. It is not necessarily the official view or 
> communication of the New Zealand Qualifications Authority. If you are not the intended recipient you must not use, disclose, copy or distribute this email or 
> information in it. If you have received this email in error, please contact the sender immediately. NZQA does not accept any liability for changes made to this email or attachments after sending by NZQA.
> 
> All emails have been scanned for viruses and content by MailMarshal. 
> NZQA reserves the right to monitor all email communications through its network.
> 
> ********************************************************************************
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20130821/935e973c/attachment.html>

From kisshen at cisco.com  Wed Aug 21 06:53:27 2013
From: kisshen at cisco.com (Kish Shen)
Date: Wed, 21 Aug 2013 05:53:27 +0100
Subject: [gecode-users] Adding restart-based search to ECLiPSe's
 interface to Gecode
In-Reply-To: <000001ce9dde$ba86a590$2f93f0b0$@kth.se>
References: <520E88B3.1020602@cisco.com>
	<000001ce9dde$ba86a590$2f93f0b0$@kth.se>
Message-ID: <521447C7.7050903@cisco.com>

Hi Christian,

Thanks for your reply!

On 20/08/2013 20:51, Christian Schulte wrote:
> Hi Kish,
>
> Sorry for the delay, I was on holidays and I am still catching up.
>
> You are basically on your own. The stuff in the Search namespace is not
> documented in MPG for a reason ;-)

I don't mind changing the existing code more extensively, but I think I 
probably would need to have a pointer to a 'search engine' thingy 
(currently I have a class -- GecodeSearch for this, sengine is not 
visible outside the class), which I can set to the appropriate search or 
meta- search engine, and for which I can call a next() function to get 
the next solution. Can this be done?


> Having said that, the stuff you are doing might work and I have an idea
> where the problem is: the meta engine deletes the engine that you pass to it
> (so sengine0 in your example). That means you are not allowed to delete it
> yourself in your code. But as said, just an idea.

I actually do not delete sengine0 already, i.e. in ~GecodeSearch, I only 
delete sengine. This was because deleting segine0 crashed.

Cheers,

Kish

> Cheers
> Christian
>
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
>
>> -----Original Message-----
>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On
>> Behalf Of Kish Shen
>> Sent: Friday, August 16, 2013 10:17 PM
>> To: users at gecode.org
>> Subject: [gecode-users] Adding restart-based search to ECLiPSe's interface
> to
>> Gecode
>>
>> Hi,
>>
>> I am still trying to figure out how to add restart based search to
> ECLiPSe's
>> interface to Gecode. I tried modifying my existing code (which does not
> support
>> restart-based search), and managed to get a restarted based bab search to
>> return the optimal answer, but the code then crashes, probably because I
> am
>> not doing things correctly.
>>
>> If someone can point me in the right direction, I would be very grateful.
> I sent a
>> message about this about 2 weeks ago to this mailing list, but perhaps I
> did not
>> give the correct information to get any help, so I will try again.
>>
>> An outline of what I am doing now:
>>
>> The user defines the problem to be solved in ECLiPSe, and the interface
> maps
>> this to Gecode. At the Gecode level, the problem is represented in
> GecodeSpace,
>> which is derived from Gecode::MinimizeSpace
>>
>> Searching can be done with a Gecode search engine, or it can be done at
> the
>> ECLiPSe level (in which case search engines are not used).
>>
>> To do the search with a search engine, I have a GecodeSearch class, which
> has a
>> Search::Engine* sengine, which is then dynamically assigned with the
> problem
>> and search engine type when the user specify that a search is to be done
> by
>> Gecode with a particular search method (like bab), e.g.
>>
>> solver->vCost = <Cost variable>
>> sengine = Search::bab(solver, option)
>>
>> where solver is a GecodeSpace*, and vCost is the cost variable (for
>> MinimizeSpace).
>>
>> The MPG describes the search engine classes such as BAB, which I don't use
>> directly. I think the reason is that I want to be able to assign different
> types of
>> search engines to sengine, as the search type is only known at run-time,
> and in
>> fact the user can call search as often as they like on the same problem.
>>
>> My problem is that I cannot extend this current scheme to work with
> restart-
>> based search. What I tried was to use Search::rbs, which is also of class
> Engine*,
>> and so can be assigned to sengine, but this crashed after returning the
> solution:
>>
>> sengine0 = Search::bab(solver, option);
>> sengine = Search::rbs(solver, metastop, sengine0, metaoption);
>>
>> I needed to use an extra Engine* sengine0, because using the same engine
> in
>> bab and rbs crashed immediately.
>>
>> The crash seems to happen when the rbs engine is destroyed, and it looks
> like it
>> is related to using 2 search engines.
>>
>> Is rbs supposed to be used by the user? I found it by looking for rbs in
> the
>> documentation, but I noticed that although it is listed, it doesn't seem
> to have
>> any description associated with it.
>>
>> Can I use Engine* in this way if I want to use restart-based search, or do
> I need
>> to use something else (i.e. not a Engine*)?
>>
>> Thanks in advance for any help!
>>
>> Cheers,
>>
>> Kish
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>



From zayenz at gmail.com  Wed Aug 21 10:16:27 2013
From: zayenz at gmail.com (Mikael Zayenz Lagerkvist)
Date: Wed, 21 Aug 2013 10:16:27 +0200
Subject: [gecode-users] Reusing the old Gecode/J interface
In-Reply-To: <5214D9BD020000850005C035@pdmail02.nzqa.govt.nz>
References: <5214D9BD020000850005C035@pdmail02.nzqa.govt.nz>
Message-ID: <5214775B.1060100@gmail.com>

Hugh Ferguson skrev 8/21/13 5:16 AM:
> I am evaluating various commercial and open-source CP solvers for use 
> in a Java context. Gecode looks attractive, aside from the lack of a 
> Java interface. It may be worth implementing a Java interface, given 
> that we only need a small part of the API. I am aware that the 
> Gecode/J interface was abandoned many years ago. Can anyone give me an 
> idea of whether it would be worth using Gecode/J as a starting point, 
> or whether it would be better to start from scratch?

I agree with Guido's comments on not to reuse Gecode/J.

However, depending on what your particular use case is, building a 
direct Java interface may be way to general. If what you need is to 
solve a single optimization problem, then it might make more sense to 
build the model in C++ and to interface that model with the rest of your 
system. This way, the only thing that is needed to communicate between 
Java and C++ is the model instance and the result. This way, it is 
possible to run the Gecode part in a separate process that will not 
interfere with the JVM.

Cheers,
Mikael


From cschulte at kth.se  Wed Aug 21 10:53:35 2013
From: cschulte at kth.se (Christian Schulte)
Date: Wed, 21 Aug 2013 10:53:35 +0200
Subject: [gecode-users] Adding restart-based search to ECLiPSe's
	interface to Gecode
In-Reply-To: <521447C7.7050903@cisco.com>
References: <520E88B3.1020602@cisco.com>
	<000001ce9dde$ba86a590$2f93f0b0$@kth.se>
	<521447C7.7050903@cisco.com>
Message-ID: <013001ce9e4b$ec0772d0$c4165870$@se>

Yes, that can be done.  There is even a virtual base class for it (so a type
for all engines). It is Gecode::Search::Engine.

Cheers
Christian

--
Christian Schulte, Professor of Computer Science, KTH,
www.ict.kth.se/~cschulte/


-----Original Message-----
From: Kish Shen [mailto:kisshen at cisco.com] 
Sent: Wednesday, August 21, 2013 6:53 AM
To: cschulte at kth.se
Cc: users at gecode.org
Subject: Re: [gecode-users] Adding restart-based search to ECLiPSe's
interface to Gecode

Hi Christian,

Thanks for your reply!

On 20/08/2013 20:51, Christian Schulte wrote:
> Hi Kish,
>
> Sorry for the delay, I was on holidays and I am still catching up.
>
> You are basically on your own. The stuff in the Search namespace is 
> not documented in MPG for a reason ;-)

I don't mind changing the existing code more extensively, but I think I
probably would need to have a pointer to a 'search engine' thingy (currently
I have a class -- GecodeSearch for this, sengine is not visible outside the
class), which I can set to the appropriate search or
meta- search engine, and for which I can call a next() function to get the
next solution. Can this be done?


> Having said that, the stuff you are doing might work and I have an 
> idea where the problem is: the meta engine deletes the engine that you 
> pass to it (so sengine0 in your example). That means you are not 
> allowed to delete it yourself in your code. But as said, just an idea.

I actually do not delete sengine0 already, i.e. in ~GecodeSearch, I only
delete sengine. This was because deleting segine0 crashed.

Cheers,

Kish

> Cheers
> Christian
>
> --
> Christian Schulte, www.ict.kth.se/~cschulte/
>
>> -----Original Message-----
>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On 
>> Behalf Of Kish Shen
>> Sent: Friday, August 16, 2013 10:17 PM
>> To: users at gecode.org
>> Subject: [gecode-users] Adding restart-based search to ECLiPSe's 
>> interface
> to
>> Gecode
>>
>> Hi,
>>
>> I am still trying to figure out how to add restart based search to
> ECLiPSe's
>> interface to Gecode. I tried modifying my existing code (which does 
>> not
> support
>> restart-based search), and managed to get a restarted based bab 
>> search to return the optimal answer, but the code then crashes, 
>> probably because I
> am
>> not doing things correctly.
>>
>> If someone can point me in the right direction, I would be very grateful.
> I sent a
>> message about this about 2 weeks ago to this mailing list, but 
>> perhaps I
> did not
>> give the correct information to get any help, so I will try again.
>>
>> An outline of what I am doing now:
>>
>> The user defines the problem to be solved in ECLiPSe, and the 
>> interface
> maps
>> this to Gecode. At the Gecode level, the problem is represented in
> GecodeSpace,
>> which is derived from Gecode::MinimizeSpace
>>
>> Searching can be done with a Gecode search engine, or it can be done 
>> at
> the
>> ECLiPSe level (in which case search engines are not used).
>>
>> To do the search with a search engine, I have a GecodeSearch class, 
>> which
> has a
>> Search::Engine* sengine, which is then dynamically assigned with the
> problem
>> and search engine type when the user specify that a search is to be 
>> done
> by
>> Gecode with a particular search method (like bab), e.g.
>>
>> solver->vCost = <Cost variable>
>> sengine = Search::bab(solver, option)
>>
>> where solver is a GecodeSpace*, and vCost is the cost variable (for 
>> MinimizeSpace).
>>
>> The MPG describes the search engine classes such as BAB, which I 
>> don't use directly. I think the reason is that I want to be able to 
>> assign different
> types of
>> search engines to sengine, as the search type is only known at 
>> run-time,
> and in
>> fact the user can call search as often as they like on the same problem.
>>
>> My problem is that I cannot extend this current scheme to work with
> restart-
>> based search. What I tried was to use Search::rbs, which is also of 
>> class
> Engine*,
>> and so can be assigned to sengine, but this crashed after returning 
>> the
> solution:
>>
>> sengine0 = Search::bab(solver, option); sengine = Search::rbs(solver, 
>> metastop, sengine0, metaoption);
>>
>> I needed to use an extra Engine* sengine0, because using the same 
>> engine
> in
>> bab and rbs crashed immediately.
>>
>> The crash seems to happen when the rbs engine is destroyed, and it 
>> looks
> like it
>> is related to using 2 search engines.
>>
>> Is rbs supposed to be used by the user? I found it by looking for rbs 
>> in
> the
>> documentation, but I noticed that although it is listed, it doesn't 
>> seem
> to have
>> any description associated with it.
>>
>> Can I use Engine* in this way if I want to use restart-based search, 
>> or do
> I need
>> to use something else (i.e. not a Engine*)?
>>
>> Thanks in advance for any help!
>>
>> Cheers,
>>
>> Kish
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>




From kisshen at cisco.com  Wed Aug 21 19:07:48 2013
From: kisshen at cisco.com (Kish Shen)
Date: Wed, 21 Aug 2013 18:07:48 +0100
Subject: [gecode-users] Adding restart-based search to ECLiPSe's
 interface to Gecode
In-Reply-To: <013001ce9e4b$ec0772d0$c4165870$@se>
References: <520E88B3.1020602@cisco.com>
	<000001ce9dde$ba86a590$2f93f0b0$@kth.se>
	<521447C7.7050903@cisco.com> <013001ce9e4b$ec0772d0$c4165870$@se>
Message-ID: <5214F3E4.6000301@cisco.com>

Hi Christian,

Thanks again for your reply!

On 21/08/2013 09:53, Christian Schulte wrote:
> Yes, that can be done.  There is even a virtual base class for it (so a type
> for all engines). It is Gecode::Search::Engine.
>

As far as I can tell from the documentation pages, sengine in my code is 
(a pointer to) class Gecode::Search::Engine, in

Engine* Gecode::Search::bab(...)

Engine* Gecode::Search::dfs(...)

Engine* Gecode::Search::rbs(...)

clicking on the "Engine" in the reference doc brings me to the 
Gecode::Search::Engine page.

So am I doing this incorrectly (I am not very familiar with C++)? Should 
I be assigning the engine type differently than what I am doing with 
sengine (and sengine0 -- it would be much better if I don't have to 
explicitly use two Engines)?

Cheers,

Kish



From cschulte at kth.se  Wed Aug 21 20:17:03 2013
From: cschulte at kth.se (Christian Schulte)
Date: Wed, 21 Aug 2013 20:17:03 +0200
Subject: [gecode-users] Adding restart-based search to ECLiPSe's
	interface to Gecode
In-Reply-To: <5214F3E4.6000301@cisco.com>
References: <520E88B3.1020602@cisco.com>	<000001ce9dde$ba86a590$2f93f0b0$@kth.se>	<521447C7.7050903@cisco.com>
	<013001ce9e4b$ec0772d0$c4165870$@se> <5214F3E4.6000301@cisco.com>
Message-ID: <001801ce9e9a$a40e0ee0$ec2a2ca0$@kth.se>

Try to avoid the Gecode::Search::bab .... functions. Just create as follows:
	Gecode::Search::Engine* e = new Gecode::BAB(...)
Then it also will work for RBS, and you do not have to create a second
engine yourself, this will the RBS class do for you.

And do not forget to delete e eventually!

Cheers
Christian
--
Christian Schulte, www.ict.kth.se/~cschulte

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Kish Shen
Sent: Wednesday, August 21, 2013 07:08 PM
To: cschulte at kth.se
Cc: users at gecode.org
Subject: Re: [gecode-users] Adding restart-based search to ECLiPSe's
interface to Gecode

Hi Christian,

Thanks again for your reply!

On 21/08/2013 09:53, Christian Schulte wrote:
> Yes, that can be done.  There is even a virtual base class for it (so 
> a type for all engines). It is Gecode::Search::Engine.
>

As far as I can tell from the documentation pages, sengine in my code is (a
pointer to) class Gecode::Search::Engine, in

Engine* Gecode::Search::bab(...)

Engine* Gecode::Search::dfs(...)

Engine* Gecode::Search::rbs(...)

clicking on the "Engine" in the reference doc brings me to the
Gecode::Search::Engine page.

So am I doing this incorrectly (I am not very familiar with C++)? Should I
be assigning the engine type differently than what I am doing with sengine
(and sengine0 -- it would be much better if I don't have to explicitly use
two Engines)?

Cheers,

Kish


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users



From hugh.ferguson at nzqa.govt.nz  Thu Aug 22 04:09:16 2013
From: hugh.ferguson at nzqa.govt.nz (Hugh Ferguson)
Date: Thu, 22 Aug 2013 02:09:16 +0000 (UTC)
Subject: [gecode-users] Reusing the old Gecode/J interface
References: <5214D9BD020000850005C035@pdmail02.nzqa.govt.nz>
	<5214775B.1060100@gmail.com>
Message-ID: <loom.20130822T035925-460@post.gmane.org>

Mikael Zayenz Lagerkvist <zayenz at ...> writes:

> 
> Hugh Ferguson skrev 8/21/13 5:16 AM:
> > Gecode looks attractive, aside from the lack of a 
> > Java interface. Can anyone give me an 
> > idea of whether it would be worth using Gecode/J as a starting point, 
> > or whether it would be better to start from scratch?
> 
> I agree with Guido's comments on not to reuse Gecode/J.
> 
> However, depending on what your particular use case is, building a 
> direct Java interface may be way to general. If what you need is to 
> solve a single optimization problem, then it might make more sense to 
> build the model in C++ and to interface that model with the rest of your 
> system. This way, the only thing that is needed to communicate between 
> Java and C++ is the model instance and the result. This way, it is 
> possible to run the Gecode part in a separate process that will not 
> interfere with the JVM.
> 
> Cheers,
> Mikael
> 
Mikael

Thanks to you and Guido for the quick response. Unfortunately, I am dealing
with literally hundreds of problems, although they are all similar. In some
cases I must build and solve 50,000+ model instances in a day, although they
are all fairly small problems. I need to be able to build models "on the
fly" from a more abstract specification - perhaps FlatZinc.






From hugh.ferguson at nzqa.govt.nz  Thu Aug 22 04:50:47 2013
From: hugh.ferguson at nzqa.govt.nz (Hugh Ferguson)
Date: Thu, 22 Aug 2013 02:50:47 +0000 (UTC)
Subject: [gecode-users] Populating a parsed FlatZinc model with data
	programmatically.
Message-ID: <loom.20130822T043557-698@post.gmane.org>

I have looked through the guides, the API documentation, and the examples,
and I haven't been able to find an answer to this question. Apologies if I
have missed something obvious.

I have to build a system capable of solving literally hundreds of different
but similar problems. In some cases, the peak volume is fairly high - on the
order of 50K instances per day. Fortunately none of the instances will be
large - less than 100 variables.

I am investigating defining the problems in FlatZinc files (constraints
only), but programmatically populating the parsed models with data. I want
to avoid the overhead of generating and then parsing a complete FlatZinc
file (constraints + data) for each instance. 

Having looked at the documentation, with my limited knowledge of C++, I get
the impression that it is possible to do this. Can anybody confirm my
impression?

Thanks



From tack at gecode.org  Thu Aug 22 05:36:50 2013
From: tack at gecode.org (Guido Tack)
Date: Thu, 22 Aug 2013 13:36:50 +1000
Subject: [gecode-users] Populating a parsed FlatZinc model with data
	programmatically.
In-Reply-To: <loom.20130822T043557-698@post.gmane.org>
References: <loom.20130822T043557-698@post.gmane.org>
Message-ID: <F186BD42-CDBA-49FA-A40F-CB3FE33751E5@gecode.org>

On 22/08/2013, at 12:50 PM, Hugh Ferguson <hugh.ferguson at nzqa.govt.nz> wrote:

> I have looked through the guides, the API documentation, and the examples,
> and I haven't been able to find an answer to this question. Apologies if I
> have missed something obvious.
> 
> I have to build a system capable of solving literally hundreds of different
> but similar problems. In some cases, the peak volume is fairly high - on the
> order of 50K instances per day. Fortunately none of the instances will be
> large - less than 100 variables.
> 
> I am investigating defining the problems in FlatZinc files (constraints
> only), but programmatically populating the parsed models with data. I want
> to avoid the overhead of generating and then parsing a complete FlatZinc
> file (constraints + data) for each instance. 
> 
> Having looked at the documentation, with my limited knowledge of C++, I get
> the impression that it is possible to do this. Can anybody confirm my
> impression?

You would save the cost of generating the FlatZinc, but not the parsing time.  You can only parse FlatZinc that has all parameters instantiated, so you always have to pass the complete FlatZinc model to the parser.

The idea to use FlatZinc to communicate through the Java/C++ interface makes a lot of sense (if that's what you're planning to do), at least you don't have to worry at all about how to represent variables etc. And you don't have to write the models to files, the Gecode FlatZinc parser can read them from a string.  You can also get access to the solutions directly without printing them, so you don't have to parse the FlatZinc output again in Java.

Cheers,
Guido



From kisshen at cisco.com  Thu Aug 22 09:44:34 2013
From: kisshen at cisco.com (Kish Shen)
Date: Thu, 22 Aug 2013 08:44:34 +0100
Subject: [gecode-users] Adding restart-based search to ECLiPSe's
 interface to Gecode
In-Reply-To: <001801ce9e9a$a40e0ee0$ec2a2ca0$@kth.se>
References: <520E88B3.1020602@cisco.com>	<000001ce9dde$ba86a590$2f93f0b0$@kth.se>	<521447C7.7050903@cisco.com>
	<013001ce9e4b$ec0772d0$c4165870$@se> <5214F3E4.6000301@cisco.com>
	<001801ce9e9a$a40e0ee0$ec2a2ca0$@kth.se>
Message-ID: <5215C162.5050300@cisco.com>

Hi Christian,

Thanks again!

On 21/08/2013 19:17, Christian Schulte wrote:
> Try to avoid the Gecode::Search::bab .... functions. Just create as follows:
> 	Gecode::Search::Engine* e = new Gecode::BAB(...)
> Then it also will work for RBS, and you do not have to create a second
> engine yourself, this will the RBS class do for you.
>
> And do not forget to delete e eventually!
>

This is the part that I don't know how to do correct -- probably because 
of my lack of C++ knowledge, but as far as I can tell,
Gecode::DFS etc are not of class Engine*, according to the doc:

template<class T>
class Gecode::DFS<T>

for subclasses T of Space

T is GecodeSpace in my case, I assume. I am not sure what class DFS is, 
but I can't see how it could be Engine*.

Anway, I tried to do the assignment as you suggested:


Search::Engine* segine;
...
sengine = new DFS<GecodeSpace>(solver, o); and indeed I get the error

cannot convert 'Gecode::DFS<GecodeSpace>*' to 'Gecode::Search::Engine*'

(I first tried sengine = new DFS(solver, o) but got an error 'expected 
type-specifier')

So I am not sure what to do -- do I need to change the type of sengine, 
and/or the way I assign an engine to sengine?

Cheers,

Kish





From cschulte at kth.se  Thu Aug 22 09:49:32 2013
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 22 Aug 2013 09:49:32 +0200
Subject: [gecode-users] Adding restart-based search to ECLiPSe's
	interface to Gecode
In-Reply-To: <5215C162.5050300@cisco.com>
References: <520E88B3.1020602@cisco.com>	<000001ce9dde$ba86a590$2f93f0b0$@kth.se>	<521447C7.7050903@cisco.com>
	<013001ce9e4b$ec0772d0$c4165870$@se> <5214F3E4.6000301@cisco.com>
	<001801ce9e9a$a40e0ee0$ec2a2ca0$@kth.se>
	<5215C162.5050300@cisco.com>
Message-ID: <024f01ce9f0c$23e90220$6bbb0660$@kth.se>

Hi Kish,

My bad... There is really no common basetype for search engines, the type I
mentioned is actually for the implementations and not the interfaces...

I think you will have to wait until I have added a common basetype (there is
a basetype, but it is not powerful enough), I might be able to do it until
the end of the week.

Sorry for the confusion!

Cheers
Christian

--
Christian Schulte, Professor of Computer Science, KTH,
www.ict.kth.se/~cschulte/



-----Original Message-----
From: Kish Shen [mailto:kisshen at cisco.com] 
Sent: Thursday, August 22, 2013 9:45 AM
To: cschulte at kth.se
Cc: users at gecode.org
Subject: Re: [gecode-users] Adding restart-based search to ECLiPSe's
interface to Gecode

Hi Christian,

Thanks again!

On 21/08/2013 19:17, Christian Schulte wrote:
> Try to avoid the Gecode::Search::bab .... functions. Just create as
follows:
> 	Gecode::Search::Engine* e = new Gecode::BAB(...) Then it also will 
> work for RBS, and you do not have to create a second engine yourself, 
> this will the RBS class do for you.
>
> And do not forget to delete e eventually!
>

This is the part that I don't know how to do correct -- probably because of
my lack of C++ knowledge, but as far as I can tell, Gecode::DFS etc are not
of class Engine*, according to the doc:

template<class T>
class Gecode::DFS<T>

for subclasses T of Space

T is GecodeSpace in my case, I assume. I am not sure what class DFS is, but
I can't see how it could be Engine*.

Anway, I tried to do the assignment as you suggested:


Search::Engine* segine;
...
sengine = new DFS<GecodeSpace>(solver, o); and indeed I get the error

cannot convert 'Gecode::DFS<GecodeSpace>*' to 'Gecode::Search::Engine*'

(I first tried sengine = new DFS(solver, o) but got an error 'expected
type-specifier')

So I am not sure what to do -- do I need to change the type of sengine,
and/or the way I assign an engine to sengine?

Cheers,

Kish






From kisshen at cisco.com  Fri Aug 23 20:25:34 2013
From: kisshen at cisco.com (Kish Shen)
Date: Fri, 23 Aug 2013 19:25:34 +0100
Subject: [gecode-users] Adding restart-based search to ECLiPSe's
 interface to Gecode
In-Reply-To: <024f01ce9f0c$23e90220$6bbb0660$@kth.se>
References: <520E88B3.1020602@cisco.com>	<000001ce9dde$ba86a590$2f93f0b0$@kth.se>	<521447C7.7050903@cisco.com>
	<013001ce9e4b$ec0772d0$c4165870$@se> <5214F3E4.6000301@cisco.com>
	<001801ce9e9a$a40e0ee0$ec2a2ca0$@kth.se>
	<5215C162.5050300@cisco.com>
	<024f01ce9f0c$23e90220$6bbb0660$@kth.se>
Message-ID: <5217A91E.9050700@cisco.com>

Hi Christian,

Thanks for your reply again!

I am reluctant to use Gecode features that are not in the official 
releases yet, as the user should be able to compile ECLiPSe and its 
open-source third-party components (like Gecode) on their own.

Currently, the released gfd interface is to Gecode 3.7. I have not 
updated the release to Gecode 4(.2) mainly because I do not want to 
remove the RESTART search engine, only to reintroduce the equivalent 
when I get RBS working with gfd.

I understand that it is easiest and perhaps best to use a common base 
type for the search engines, but in the absence of this base type at the 
moment, should I try to hide the different types of search engines 
inside my GecodeSearch class? Currently I have a singe Engine* (sengine) 
that points to the actual search engine, and a next method to obtain the 
next solution but I assume I can have different (private) pointers to 
the different search engines, and a next method that calls the 
appropriate next, depending on the search method.

I also have a related question about getting the next solution with RBS 
-- I had assumed that the next solution will be computed with a restart, 
but as there seems to be 2 search engines in rbs, with RBS controlling 
the restart on another engine doing the "actual" search (e.g. BAB), I am 
wondering if the behaviour when getting the next solution is controlled 
by this "actual" search engine, and for BAB, I don't think this is done 
with a restart (hence the need for the old RESTART engine). So is the 
search restarted when next() is called in RBS, or does this depend on 
the "actual" search engine?

Assuming that the search is restarted with next(), then can the 
functionality of the old RESTART engine be reproduced by setting the 
cutoff threshold to be very high? A related question is if it make sense 
(and if so, is there any way to do so) to use something other than the 
number of failures for deciding when to restart?

Cheers,
Kish


On 22/08/2013 08:49, Christian Schulte wrote:
> Hi Kish,
>
> My bad... There is really no common basetype for search engines, the type I
> mentioned is actually for the implementations and not the interfaces...
>
> I think you will have to wait until I have added a common basetype (there is
> a basetype, but it is not powerful enough), I might be able to do it until
> the end of the week.
>
> Sorry for the confusion!
>
> Cheers
> Christian
>
> --
> Christian Schulte, Professor of Computer Science, KTH,
> www.ict.kth.se/~cschulte/
>
>
>
> -----Original Message-----
> From: Kish Shen [mailto:kisshen at cisco.com]
> Sent: Thursday, August 22, 2013 9:45 AM
> To: cschulte at kth.se
> Cc: users at gecode.org
> Subject: Re: [gecode-users] Adding restart-based search to ECLiPSe's
> interface to Gecode
>
> Hi Christian,
>
> Thanks again!
>
> On 21/08/2013 19:17, Christian Schulte wrote:
>> Try to avoid the Gecode::Search::bab .... functions. Just create as
> follows:
>> 	Gecode::Search::Engine* e = new Gecode::BAB(...) Then it also will
>> work for RBS, and you do not have to create a second engine yourself,
>> this will the RBS class do for you.
>>
>> And do not forget to delete e eventually!
>>
>
> This is the part that I don't know how to do correct -- probably because of
> my lack of C++ knowledge, but as far as I can tell, Gecode::DFS etc are not
> of class Engine*, according to the doc:
>
> template<class T>
> class Gecode::DFS<T>
>
> for subclasses T of Space
>
> T is GecodeSpace in my case, I assume. I am not sure what class DFS is, but
> I can't see how it could be Engine*.
>
> Anway, I tried to do the assignment as you suggested:
>
>
> Search::Engine* segine;
> ...
> sengine = new DFS<GecodeSpace>(solver, o); and indeed I get the error
>
> cannot convert 'Gecode::DFS<GecodeSpace>*' to 'Gecode::Search::Engine*'
>
> (I first tried sengine = new DFS(solver, o) but got an error 'expected
> type-specifier')
>
> So I am not sure what to do -- do I need to change the type of sengine,
> and/or the way I assign an engine to sengine?
>
> Cheers,
>
> Kish
>
>
>
>



From cschulte at kth.se  Sun Aug 25 15:45:24 2013
From: cschulte at kth.se (Christian Schulte)
Date: Sun, 25 Aug 2013 15:45:24 +0200
Subject: [gecode-users] Adding restart-based search to ECLiPSe's
	interface to Gecode
In-Reply-To: <5217A91E.9050700@cisco.com>
References: <520E88B3.1020602@cisco.com>	<000001ce9dde$ba86a590$2f93f0b0$@kth.se>	<521447C7.7050903@cisco.com>
	<013001ce9e4b$ec0772d0$c4165870$@se> <5214F3E4.6000301@cisco.com>
	<001801ce9e9a$a40e0ee0$ec2a2ca0$@kth.se>
	<5215C162.5050300@cisco.com>
	<024f01ce9f0c$23e90220$6bbb0660$@kth.se>
	<5217A91E.9050700@cisco.com>
Message-ID: <006b01cea199$5a6af3f0$0f40dbd0$@kth.se>

What I wrote earlier was just nonsense. I think I really have to use my
brain here and think it through how to do it best. I'll get back to you
later.

Christian

--
Christian Schulte, www.ict.kth.se/~cschulte


-----Original Message-----
From: Kish Shen [mailto:kisshen at cisco.com] 
Sent: Friday, August 23, 2013 08:26 PM
To: cschulte at kth.se
Cc: users at gecode.org
Subject: Re: [gecode-users] Adding restart-based search to ECLiPSe's
interface to Gecode

Hi Christian,

Thanks for your reply again!

I am reluctant to use Gecode features that are not in the official releases
yet, as the user should be able to compile ECLiPSe and its open-source
third-party components (like Gecode) on their own.

Currently, the released gfd interface is to Gecode 3.7. I have not updated
the release to Gecode 4(.2) mainly because I do not want to remove the
RESTART search engine, only to reintroduce the equivalent when I get RBS
working with gfd.

I understand that it is easiest and perhaps best to use a common base type
for the search engines, but in the absence of this base type at the moment,
should I try to hide the different types of search engines inside my
GecodeSearch class? Currently I have a singe Engine* (sengine) that points
to the actual search engine, and a next method to obtain the next solution
but I assume I can have different (private) pointers to the different search
engines, and a next method that calls the appropriate next, depending on the
search method.

I also have a related question about getting the next solution with RBS
-- I had assumed that the next solution will be computed with a restart, but
as there seems to be 2 search engines in rbs, with RBS controlling the
restart on another engine doing the "actual" search (e.g. BAB), I am
wondering if the behaviour when getting the next solution is controlled by
this "actual" search engine, and for BAB, I don't think this is done with a
restart (hence the need for the old RESTART engine). So is the search
restarted when next() is called in RBS, or does this depend on the "actual"
search engine?

Assuming that the search is restarted with next(), then can the
functionality of the old RESTART engine be reproduced by setting the cutoff
threshold to be very high? A related question is if it make sense (and if
so, is there any way to do so) to use something other than the number of
failures for deciding when to restart?

Cheers,
Kish


On 22/08/2013 08:49, Christian Schulte wrote:
> Hi Kish,
>
> My bad... There is really no common basetype for search engines, the 
> type I mentioned is actually for the implementations and not the
interfaces...
>
> I think you will have to wait until I have added a common basetype 
> (there is a basetype, but it is not powerful enough), I might be able 
> to do it until the end of the week.
>
> Sorry for the confusion!
>
> Cheers
> Christian
>
> --
> Christian Schulte, Professor of Computer Science, KTH, 
> www.ict.kth.se/~cschulte/
>
>
>
> -----Original Message-----
> From: Kish Shen [mailto:kisshen at cisco.com]
> Sent: Thursday, August 22, 2013 9:45 AM
> To: cschulte at kth.se
> Cc: users at gecode.org
> Subject: Re: [gecode-users] Adding restart-based search to ECLiPSe's 
> interface to Gecode
>
> Hi Christian,
>
> Thanks again!
>
> On 21/08/2013 19:17, Christian Schulte wrote:
>> Try to avoid the Gecode::Search::bab .... functions. Just create as
> follows:
>> 	Gecode::Search::Engine* e = new Gecode::BAB(...) Then it also will 
>> work for RBS, and you do not have to create a second engine yourself, 
>> this will the RBS class do for you.
>>
>> And do not forget to delete e eventually!
>>
>
> This is the part that I don't know how to do correct -- probably 
> because of my lack of C++ knowledge, but as far as I can tell, 
> Gecode::DFS etc are not of class Engine*, according to the doc:
>
> template<class T>
> class Gecode::DFS<T>
>
> for subclasses T of Space
>
> T is GecodeSpace in my case, I assume. I am not sure what class DFS 
> is, but I can't see how it could be Engine*.
>
> Anway, I tried to do the assignment as you suggested:
>
>
> Search::Engine* segine;
> ...
> sengine = new DFS<GecodeSpace>(solver, o); and indeed I get the error
>
> cannot convert 'Gecode::DFS<GecodeSpace>*' to 'Gecode::Search::Engine*'
>
> (I first tried sengine = new DFS(solver, o) but got an error 'expected
> type-specifier')
>
> So I am not sure what to do -- do I need to change the type of 
> sengine, and/or the way I assign an engine to sengine?
>
> Cheers,
>
> Kish
>
>
>
>




From cschulte at kth.se  Tue Aug 27 10:51:02 2013
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 27 Aug 2013 10:51:02 +0200
Subject: [gecode-users] Adding restart-based search to
	ECLiPSe's	interface to Gecode
In-Reply-To: <024f01ce9f0c$23e90220$6bbb0660$@kth.se>
References: <520E88B3.1020602@cisco.com>	<000001ce9dde$ba86a590$2f93f0b0$@kth.se>	<521447C7.7050903@cisco.com>	<013001ce9e4b$ec0772d0$c4165870$@se>
	<5214F3E4.6000301@cisco.com>	<001801ce9e9a$a40e0ee0$ec2a2ca0$@kth.se>	<5215C162.5050300@cisco.com>
	<024f01ce9f0c$23e90220$6bbb0660$@kth.se>
Message-ID: <011e01cea302$8faa7c60$aeff7520$@se>

Hi Kish,

Here is a solution built on top of Gecode. It defines a type
Kish::EngineBase that can be passed around irrespective of which engine it
actual is. The other stuff is just for illustration and how to recast
Gecode's engines as engines of type Kish::EngineBase.

Hope this helps.

Best
Christian


namespace Kish {

  class EngineBase {
  public:
    EngineBase(void) {}
    virtual Gecode::Space* next(void) = 0;
    virtual Gecode::Search::Statistics statistics(void) const = 0;
    virtual bool stopped(void) const = 0;
    virtual ~EngineBase(void) {}
  };

  class DFS : public EngineBase {
  protected:
    Gecode::DFS<Gecode::Space> e;
  public:
    DFS(Gecode::Space* s, const Gecode::Search::Options& o)
      : e(s,o) {}
    virtual Gecode::Space* next(void) { 
      return e.next(); 
    }
    virtual Gecode::Search::Statistics statistics(void) const {
      return e.statistics();
    }
    virtual bool stopped(void) const {
      return e.stopped();
    }
    virtual ~DFS(void) {}
  };

  class BAB : public EngineBase {
  protected:
    Gecode::BAB<Gecode::Space> e;
  public:
    BAB(Gecode::Space* s, const Gecode::Search::Options& o)
      : e(s,o) {}
    virtual Gecode::Space* next(void) { 
      return e.next(); 
    }
    virtual Gecode::Search::Statistics statistics(void) const {
      return e.statistics();
    }
    virtual bool stopped(void) const {
      return e.stopped();
    }
    virtual ~BAB(void) {}
  };

  template<template<class> class E>
  class RBS : public EngineBase {
  protected:
    Gecode::RBS<E,Gecode::Space> e;
  public:
    RBS(Gecode::Space* s, const Gecode::Search::Options& o)
      : e(s,o) {}
    virtual Gecode::Space* next(void) { 
      return e.next(); 
    }
    virtual Gecode::Search::Statistics statistics(void) const {
      return e.statistics();
    }
    virtual bool stopped(void) const {
      return e.stopped();
    }
    virtual ~RBS(void) {}
  };

  enum WhichEngine {
    WE_DFS, WE_BAB, 
    WE_RBS_DFS, WE_RBS_BAB
  };

  EngineBase* engine(WhichEngine we,
                     Gecode::Space* s, 
                     const Gecode::Search::Options& o) {
    switch (we) {
    case WE_DFS: return new DFS(s,o);
    case WE_BAB: return new BAB(s,o);
    case WE_RBS_DFS: return new RBS<Gecode::DFS>(s,o);
    case WE_RBS_BAB: return new RBS<Gecode::BAB>(s,o);
    }
  }
}


--
Christian Schulte, Professor of Computer Science, KTH,
www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Christian Schulte
Sent: Thursday, August 22, 2013 9:50 AM
To: 'Kish Shen'
Cc: users at gecode.org
Subject: Re: [gecode-users] Adding restart-based search to ECLiPSe's
interface to Gecode

Hi Kish,

My bad... There is really no common basetype for search engines, the type I
mentioned is actually for the implementations and not the interfaces...

I think you will have to wait until I have added a common basetype (there is
a basetype, but it is not powerful enough), I might be able to do it until
the end of the week.

Sorry for the confusion!

Cheers
Christian

--
Christian Schulte, Professor of Computer Science, KTH,
www.ict.kth.se/~cschulte/



-----Original Message-----
From: Kish Shen [mailto:kisshen at cisco.com]
Sent: Thursday, August 22, 2013 9:45 AM
To: cschulte at kth.se
Cc: users at gecode.org
Subject: Re: [gecode-users] Adding restart-based search to ECLiPSe's
interface to Gecode

Hi Christian,

Thanks again!

On 21/08/2013 19:17, Christian Schulte wrote:
> Try to avoid the Gecode::Search::bab .... functions. Just create as
follows:
> 	Gecode::Search::Engine* e = new Gecode::BAB(...) Then it also will 
> work for RBS, and you do not have to create a second engine yourself, 
> this will the RBS class do for you.
>
> And do not forget to delete e eventually!
>

This is the part that I don't know how to do correct -- probably because of
my lack of C++ knowledge, but as far as I can tell, Gecode::DFS etc are not
of class Engine*, according to the doc:

template<class T>
class Gecode::DFS<T>

for subclasses T of Space

T is GecodeSpace in my case, I assume. I am not sure what class DFS is, but
I can't see how it could be Engine*.

Anway, I tried to do the assignment as you suggested:


Search::Engine* segine;
...
sengine = new DFS<GecodeSpace>(solver, o); and indeed I get the error

cannot convert 'Gecode::DFS<GecodeSpace>*' to 'Gecode::Search::Engine*'

(I first tried sengine = new DFS(solver, o) but got an error 'expected
type-specifier')

So I am not sure what to do -- do I need to change the type of sengine,
and/or the way I assign an engine to sengine?

Cheers,

Kish





_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users



From ostrowsk at cs.uni-potsdam.de  Tue Aug 27 11:50:45 2013
From: ostrowsk at cs.uni-potsdam.de (Max Ostrowski)
Date: Tue, 27 Aug 2013 11:50:45 +0200
Subject: [gecode-users] Division by zero
In-Reply-To: <520E88B3.1020602@cisco.com>
References: <520E88B3.1020602@cisco.com>
Message-ID: <521C7675.4000505@cs.uni-potsdam.de>

I recognized that the div constraint for integers removes the zero from
the domain of the second argument (to avoid division by zero).
This seems to be a problem as i want to express the following:


x/y+c > 7 reified b

So, if b1 is true, y should not be zero or otherwise some undefined
behaviour happens.
So  i add a constraint

y != 0 reified b

to avoid this case.
(Sometimes it happens that this is done via other boolean variables,
more complex constructs, own propagators etc...,
but i always avoid the case that y is zero if b is true).

To express this in gecode i currently use
div(x,y,z);
z + c > 7 refied b
y != 0 reified b

This gives wrong results, as in the case where b is false, y is also
constraint to be != 0 via the div constraint.
I thought about reifying the division with b, but this would also lead
to wrong results.

So any idea how to express this?
Is removing the 0 from the domain via the div constraint really the
right way?
I could live with an undefined behaviour in the case that y \in {0}.

Any ideas?
Best Max

Sample Code follows


class TempSpace : public Space
{
public:

    TempSpace() : x_(*this,4), b_(*this,2)
    {
        x_[0] = IntVar(*this,1,3);
        x_[1] = IntVar(*this,-4,4);
        x_[2] = IntVar(*this, -10,10);
        x_[3] = IntVar(*this, -10,10);
        b_[0] = BoolVar(*this,0,1);
        b_[1] = BoolVar(*this,0,1);

        Gecode::div(*this,x_[0],x_[1],x_[2]);

        if (status()==SS_FAILED)
            std::cout << "failed " << std::endl;
        print();

        IntArgs intArgs;
        IntVarArgs intVarArgs;
        intArgs << 1;
        intVarArgs << x_[2];
        intArgs << 1;
        intVarArgs << x_[3];
        linear(*this, intArgs, intVarArgs, IRT_EQ,0,b_[0],ICL_DEF);

        rel(*this,x_[2],IRT_NQ,0, b_[0], ICL_DEF);

        //rel(*this, b_[0], IRT_EQ, b_[1], ICL_DEF);

        if (status()==SS_FAILED)
            std::cout << "failed " << std::endl;
        print();
        branch(*this, x_, branchVar, branchVal);
    }


    TempSpace(bool share, TempSpace& sp) : Space(share, sp)
    {
        x_.update(*this, share, sp.x_);
        b_.update(*this, share, sp.b_);
    }

    virtual TempSpace* copy(bool share)
    {
        return new TempSpace(share, *this);
    }

    void print()
    {
        std::cout << x_[0] << " " << x_[1] << " " << x_[2] << std::endl;
    }

    virtual ~TempSpace(){}
    void run()
    {
        dfsSearchEngine_ = new DFS<TempSpace>(this);
        while (enumerator_ = dfsSearchEngine_->next())
            enumerator_->print();
    }

    IntVarArray x_;
    BoolVarArray b_;
    DFS<TempSpace>* dfsSearchEngine_;
    TempSpace* enumerator_;
};



From cschulte at kth.se  Tue Aug 27 13:23:47 2013
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 27 Aug 2013 13:23:47 +0200
Subject: [gecode-users] Division by zero
In-Reply-To: <521C7675.4000505@cs.uni-potsdam.de>
References: <520E88B3.1020602@cisco.com> <521C7675.4000505@cs.uni-potsdam.de>
Message-ID: <012701cea317$e6f42ba0$b4dc82e0$@se>

Yes, that is the right definition: the values for x,y,z must be solutions of
div(x,y,z).

There is a standard trick: introduce a new variable y' and reify that if y
!= 0, then y=y' and post div(x,y',z). The problem is that you do not get
much propagation.

Christian

--
Christian Schulte, Professor of Computer Science, KTH,
www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Max Ostrowski
Sent: Tuesday, August 27, 2013 11:51 AM
To: users at gecode.org
Subject: [gecode-users] Division by zero

I recognized that the div constraint for integers removes the zero from the
domain of the second argument (to avoid division by zero).
This seems to be a problem as i want to express the following:


x/y+c > 7 reified b

So, if b1 is true, y should not be zero or otherwise some undefined
behaviour happens.
So  i add a constraint

y != 0 reified b

to avoid this case.
(Sometimes it happens that this is done via other boolean variables, more
complex constructs, own propagators etc..., but i always avoid the case that
y is zero if b is true).

To express this in gecode i currently use div(x,y,z); z + c > 7 refied b y
!= 0 reified b

This gives wrong results, as in the case where b is false, y is also
constraint to be != 0 via the div constraint.
I thought about reifying the division with b, but this would also lead to
wrong results.

So any idea how to express this?
Is removing the 0 from the domain via the div constraint really the right
way?
I could live with an undefined behaviour in the case that y \in {0}.

Any ideas?
Best Max

Sample Code follows


class TempSpace : public Space
{
public:

    TempSpace() : x_(*this,4), b_(*this,2)
    {
        x_[0] = IntVar(*this,1,3);
        x_[1] = IntVar(*this,-4,4);
        x_[2] = IntVar(*this, -10,10);
        x_[3] = IntVar(*this, -10,10);
        b_[0] = BoolVar(*this,0,1);
        b_[1] = BoolVar(*this,0,1);

        Gecode::div(*this,x_[0],x_[1],x_[2]);

        if (status()==SS_FAILED)
            std::cout << "failed " << std::endl;
        print();

        IntArgs intArgs;
        IntVarArgs intVarArgs;
        intArgs << 1;
        intVarArgs << x_[2];
        intArgs << 1;
        intVarArgs << x_[3];
        linear(*this, intArgs, intVarArgs, IRT_EQ,0,b_[0],ICL_DEF);

        rel(*this,x_[2],IRT_NQ,0, b_[0], ICL_DEF);

        //rel(*this, b_[0], IRT_EQ, b_[1], ICL_DEF);

        if (status()==SS_FAILED)
            std::cout << "failed " << std::endl;
        print();
        branch(*this, x_, branchVar, branchVal);
    }


    TempSpace(bool share, TempSpace& sp) : Space(share, sp)
    {
        x_.update(*this, share, sp.x_);
        b_.update(*this, share, sp.b_);
    }

    virtual TempSpace* copy(bool share)
    {
        return new TempSpace(share, *this);
    }

    void print()
    {
        std::cout << x_[0] << " " << x_[1] << " " << x_[2] << std::endl;
    }

    virtual ~TempSpace(){}
    void run()
    {
        dfsSearchEngine_ = new DFS<TempSpace>(this);
        while (enumerator_ = dfsSearchEngine_->next())
            enumerator_->print();
    }

    IntVarArray x_;
    BoolVarArray b_;
    DFS<TempSpace>* dfsSearchEngine_;
    TempSpace* enumerator_;
};


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users



From askri.manel1 at gmail.com  Tue Aug 27 23:11:55 2013
From: askri.manel1 at gmail.com (manel askri)
Date: Tue, 27 Aug 2013 22:11:55 +0100
Subject: [gecode-users] Linear function problem
Message-ID: <CAKWqT4AwRre4Bt95t6hHEXyP+qci8i3hDmFF5q315iuCgUXnGw@mail.gmail.com>

 hi everyone !

I have problem with Linear function when i compile , the compiler tells me
that :

exeption Int::linear :size of arguments mismatch

i think that the problem is with the linear function : my code is this :

#include <gecode/driver.hh>
#include <gecode/int.hh>
#include <gecode/search.hh>
#include <gecode/minimodel.hh>

using namespace Gecode;

class MMKP : public Script{

protected:
	static const int n=4 ;//number of testers
	static const int m=5;// number of nodes
	IntArgs R;
	IntArgs C;
	IntArgs B;
	IntArgs Dr;
	IntArgs Dc;
	IntArgs Db;
	IntArgs g;

	IntVarArray a;
	IntVarArray k;
	IntVar l;
public :
	enum {
    find_Optimal_Solution, find_realizable_solution
  };
	MMKP (const Options& opt) : a(*this,n*m, 0,1){

		R=IntArgs(4,10,15,20,40);
		C=IntArgs(4,20,25,30,40);
		B=IntArgs(4,20,30,35,40);

		Dr=IntArgs(4,5,10,15,25);
		Dc=IntArgs(4,15,20,35,37);
		Db=IntArgs(4,10,15,20,35);


		k=IntVarArray(*this,n*m ,0,100000);
		Matrix <IntVarArray> results(k, n,m);

		//creation variables

		//IntVarArray a(*this,n*m,0,1); // Array of n*m boolean variables
		Matrix <IntVarArray> X (a,n,m);// Matrix "view" of the array a

		// objectiv variable
		IntVar gain (*this, 1,1000000);


		//creation of constraints
			// ... over rows
		for ( int j=0; j<n;j++)
		{

				linear(*this , X.row(j),IRT_EQ,1);
			
		}

		//... over columns
			// first, get the columns, we will use an intermidiare matrix XDual

		IntVarArray b(*this, m*n,0,1);
		Matrix <IntVarArray> XDual (b, m, n);
		for (int i=0; i<m;i++)
		{
			for ( int j =0; j<n ; j++)
			{
				XDual(i,j)=X(j,i);
			}
		}

		for (int j = 0; j < m; j++) {

			linear(*this, Dr,XDual.row(j),IRT_NQ, R[j]);
		}

		for (int j = 0; j < m; j++) {
			linear (*this, Dc, XDual.row(j), IRT_NQ,C[j]);

		}

		for (int j = 0; j < m; j++) {
			linear (*this, Db, XDual.row(j), IRT_NQ,B[j]);

		}
		switch (opt.model()) {
        case find_Optimal_Solution:

			g=IntArgs(4,20,30,40,50);
		//Objective function

		for (int i = 0; i < n; i++)
		{
			linear(*this, g,X.row(i), IRT_EQ, gain);

		}
		for ( int i=0; i<n;i++){
			for ( int j =0; j<m;j++)
			{
				results(i,j)=X(i,j);
			}
		}

		break;

		case find_realizable_solution:
			for ( int i=0; i<n;i++){
			for ( int j =0; j<m;j++)
			{
				results(i,j)=X(i,j);
			}
		}
        break;

		    // post branching
        branch(*this, a, INT_VAR_SIZE_MAX(), INT_VAL_MAX());
		}
	}
		// search support
     MMKP(bool share, MMKP& s) : Script(share, s){
      a.update(*this, share, s.a);
    }

    virtual Space* copy(bool share) {
      return new MMKP(share,*this);
    }

	    // print solution
    void print(std::ostream& os) const  {
		for(int i = 0; i < n; i++) {
		 for(int j = 0; j < n; j++)
           os << std::setw(4) << a[i * n + j];
		 os << std::endl;
	}
}
	};

	// main function
int main(int argc, char* argv[]) {
  Options opt("MMKP");
  opt.model(MMKP::find_Optimal_Solution);
  opt.model(MMKP::find_realizable_solution);

  opt.parse(argc,argv);
  Script::run<MMKP,DFS,Options>(opt);
  return 0;
}

so thank you very much for helping me
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20130827/188c5dfa/attachment.html>

From tack at gecode.org  Tue Aug 27 23:15:25 2013
From: tack at gecode.org (Guido Tack)
Date: Wed, 28 Aug 2013 07:15:25 +1000
Subject: [gecode-users] Linear function problem
In-Reply-To: <CAKWqT4AwRre4Bt95t6hHEXyP+qci8i3hDmFF5q315iuCgUXnGw@mail.gmail.com>
References: <CAKWqT4AwRre4Bt95t6hHEXyP+qci8i3hDmFF5q315iuCgUXnGw@mail.gmail.com>
Message-ID: <2666460F-D3D9-4F17-840E-74C2A062A7B6@gecode.org>

You've probably swapped rows and columns of the matrix, please have a look at the documentation. The error says that the size of the coefficient array is different from the size of the variable array.

Cheers,
Guido

-- 
Guido Tack


On 28/08/2013, at 7:11, manel askri <askri.manel1 at gmail.com> wrote:

>  hi everyone !
> 
> I have problem with Linear function when i compile , the compiler tells me that :
> exeption Int::linear :size of arguments mismatch 
> i think that the problem is with the linear function : my code is this : 
> #include <gecode/driver.hh>
> #include <gecode/int.hh>
> #include <gecode/search.hh>
> #include <gecode/minimodel.hh>
> 
> using namespace Gecode;
> 
> class MMKP : public Script{
> 
> protected:
> 	static const int n=4 ;//number of testers
> 	static const int m=5;// number of nodes
> 	IntArgs R;
> 	IntArgs C;
> 	IntArgs B;
> 	IntArgs Dr;
> 	IntArgs Dc;
> 	IntArgs Db;
> 	IntArgs g;
> 
> 	IntVarArray a;
> 	IntVarArray k;
> 	IntVar l;
> public :
> 	enum {
>     find_Optimal_Solution, find_realizable_solution
>   };
> 	MMKP (const Options& opt) : a(*this,n*m, 0,1){
> 
> 		R=IntArgs(4,10,15,20,40);
> 		C=IntArgs(4,20,25,30,40);
> 		B=IntArgs(4,20,30,35,40);
> 
> 		Dr=IntArgs(4,5,10,15,25);
> 		Dc=IntArgs(4,15,20,35,37);
> 		Db=IntArgs(4,10,15,20,35);
> 
> 
> 		k=IntVarArray(*this,n*m ,0,100000); 
> 		Matrix <IntVarArray> results(k, n,m);
> 
> 		//creation variables
> 
> 		//IntVarArray a(*this,n*m,0,1); // Array of n*m boolean variables
> 		Matrix <IntVarArray> X (a,n,m);// Matrix "view" of the array a
> 
> 		// objectiv variable
> 		IntVar gain (*this, 1,1000000);
> 
> 
> 		//creation of constraints 
> 			// ... over rows
> 		for ( int j=0; j<n;j++)
> 		{
> 
> 				linear(*this , X.row(j),IRT_EQ,1);
> 			
> 		}
> 
> 		//... over columns
> 			// first, get the columns, we will use an intermidiare matrix XDual
> 
> 		IntVarArray b(*this, m*n,0,1);
> 		Matrix <IntVarArray> XDual (b, m, n);
> 		for (int i=0; i<m;i++)
> 		{
> 			for ( int j =0; j<n ; j++)
> 			{
> 				XDual(i,j)=X(j,i);
> 			}
> 		}
> 
> 		for (int j = 0; j < m; j++) {
> 
> 			linear(*this, Dr,XDual.row(j),IRT_NQ, R[j]);
> 		}
> 
> 		for (int j = 0; j < m; j++) {
> 			linear (*this, Dc, XDual.row(j), IRT_NQ,C[j]);
> 
> 		}
> 
> 		for (int j = 0; j < m; j++) {
> 			linear (*this, Db, XDual.row(j), IRT_NQ,B[j]);
> 
> 		}
> 		switch (opt.model()) {
>         case find_Optimal_Solution:
> 
> 			g=IntArgs(4,20,30,40,50);
> 		//Objective function
> 
> 		for (int i = 0; i < n; i++)
> 		{
> 			linear(*this, g,X.row(i), IRT_EQ, gain);
> 
> 		}
> 		for ( int i=0; i<n;i++){
> 			for ( int j =0; j<m;j++)
> 			{
> 				results(i,j)=X(i,j);
> 			}
> 		}
> 
> 		break;
> 
> 		case find_realizable_solution:
> 			for ( int i=0; i<n;i++){
> 			for ( int j =0; j<m;j++)
> 			{
> 				results(i,j)=X(i,j);
> 			}
> 		}
>         break;
> 
> 		    // post branching
>         branch(*this, a, INT_VAR_SIZE_MAX(), INT_VAL_MAX());
> 		}
> 	}
> 		// search support
>      MMKP(bool share, MMKP& s) : Script(share, s){
>       a.update(*this, share, s.a);
>     }
> 
>     virtual Space* copy(bool share) {
>       return new MMKP(share,*this);
>     }
> 
> 	    // print solution
>     void print(std::ostream& os) const  {
> 		for(int i = 0; i < n; i++) {
> 		 for(int j = 0; j < n; j++)
>            os << std::setw(4) << a[i * n + j];
> 		 os << std::endl;
> 	}
> }
> 	};
> 
> 	// main function
> int main(int argc, char* argv[]) {
>   Options opt("MMKP");
>   opt.model(MMKP::find_Optimal_Solution);
>   opt.model(MMKP::find_realizable_solution);
> 
>   opt.parse(argc,argv);
>   Script::run<MMKP,DFS,Options>(opt);
>   return 0;
> }
> 
> so thank you very much for helping me 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20130828/639a18ae/attachment.html>

From cschulte at kth.se  Thu Aug 29 16:06:25 2013
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 29 Aug 2013 16:06:25 +0200
Subject: [gecode-users] nroot for negative integers
In-Reply-To: <51EDA3C0.9010807@cisco.com>
References: <51EDA3C0.9010807@cisco.com>
Message-ID: <010201cea4c0$f3c43000$db4c9000$@kth.se>

Fixed in the trunk! That was a pain in the back... Christian

--
Christian Schulte, www.ict.kth.se/~cschulte/


> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On
> Behalf Of Kish Shen
> Sent: Monday, July 22, 2013 11:27 PM
> To: users at gecode.org
> Subject: [gecode-users] nroot for negative integers
> 
> Hi,
> 
> I have just added support for pow and nroot to expressions in the ECLiPSe
> interface to Gecode, and on testing it, I get failures with negative
numbers, for
> example (in ECLiPSe syntax):
> 
> A #= rootn(-8,3)
> 
> fails, while
> 
> A #= rootn(8, 3)
> 
> succeeds, with A = 2.
> 
> Should the first case set A to -2?
> 
> The above expressions are passed to MiniModel and parsed as IntExpr. I
used
> Gecode 4.2.0 for the above tests.
> 
> Cheers,
> 
> Kish
> 
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users



From kisshen at cisco.com  Fri Aug 30 20:01:26 2013
From: kisshen at cisco.com (Kish Shen)
Date: Fri, 30 Aug 2013 19:01:26 +0100
Subject: [gecode-users] Adding restart-based search to
 ECLiPSe's	interface to Gecode
In-Reply-To: <011e01cea302$8faa7c60$aeff7520$@se>
References: <520E88B3.1020602@cisco.com>	<000001ce9dde$ba86a590$2f93f0b0$@kth.se>	<521447C7.7050903@cisco.com>	<013001ce9e4b$ec0772d0$c4165870$@se>
	<5214F3E4.6000301@cisco.com>	<001801ce9e9a$a40e0ee0$ec2a2ca0$@kth.se>	<5215C162.5050300@cisco.com>
	<024f01ce9f0c$23e90220$6bbb0660$@kth.se>
	<011e01cea302$8faa7c60$aeff7520$@se>
Message-ID: <5220DDF6.2010503@cisco.com>

Hi Christian,

Thanks for the code. This code looks to be more C++ like than what I 
have now, where my GecodeSearch class (equivalent to EngineBase here) 
has several private engine pointers for the different engine types, and 
the functions like next() switch on the search methods to call the 
function of the correct engine type. I will change my code to be more 
like what you are doing here. Thanks again.

My next question is now about doing the restart: are there any 
alternatives to doing restart based on the number of failures? One 
alternative is to do restart only with a new solution. I assume this is 
what the old RESTART engine did. As the current gfd interface supports 
this engine, I would like to continue to support it. As I said in my 
previous posting, I am not sure if the next solution is done via restart 
in RBS, because it seem to use DFS or BAB as the "actual" search engine, 
and these engines don't restart (as far as I can tell) with the next 
solution.

Thanks and cheers,

Kish

On 27/08/2013 09:51, Christian Schulte wrote:
> Hi Kish,
>
> Here is a solution built on top of Gecode. It defines a type
> Kish::EngineBase that can be passed around irrespective of which engine it
> actual is. The other stuff is just for illustration and how to recast
> Gecode's engines as engines of type Kish::EngineBase.
>
> Hope this helps.
>
> Best
> Christian
>
>
> namespace Kish {
>
>    class EngineBase {
>    public:
>      EngineBase(void) {}
>      virtual Gecode::Space* next(void) = 0;
>      virtual Gecode::Search::Statistics statistics(void) const = 0;
>      virtual bool stopped(void) const = 0;
>      virtual ~EngineBase(void) {}
>    };
>
>    class DFS : public EngineBase {
>    protected:
>      Gecode::DFS<Gecode::Space> e;
>    public:
>      DFS(Gecode::Space* s, const Gecode::Search::Options& o)
>        : e(s,o) {}
>      virtual Gecode::Space* next(void) {
>        return e.next();
>      }
>      virtual Gecode::Search::Statistics statistics(void) const {
>        return e.statistics();
>      }
>      virtual bool stopped(void) const {
>        return e.stopped();
>      }
>      virtual ~DFS(void) {}
>    };
>
>    class BAB : public EngineBase {
>    protected:
>      Gecode::BAB<Gecode::Space> e;
>    public:
>      BAB(Gecode::Space* s, const Gecode::Search::Options& o)
>        : e(s,o) {}
>      virtual Gecode::Space* next(void) {
>        return e.next();
>      }
>      virtual Gecode::Search::Statistics statistics(void) const {
>        return e.statistics();
>      }
>      virtual bool stopped(void) const {
>        return e.stopped();
>      }
>      virtual ~BAB(void) {}
>    };
>
>    template<template<class> class E>
>    class RBS : public EngineBase {
>    protected:
>      Gecode::RBS<E,Gecode::Space> e;
>    public:
>      RBS(Gecode::Space* s, const Gecode::Search::Options& o)
>        : e(s,o) {}
>      virtual Gecode::Space* next(void) {
>        return e.next();
>      }
>      virtual Gecode::Search::Statistics statistics(void) const {
>        return e.statistics();
>      }
>      virtual bool stopped(void) const {
>        return e.stopped();
>      }
>      virtual ~RBS(void) {}
>    };
>
>    enum WhichEngine {
>      WE_DFS, WE_BAB,
>      WE_RBS_DFS, WE_RBS_BAB
>    };
>
>    EngineBase* engine(WhichEngine we,
>                       Gecode::Space* s,
>                       const Gecode::Search::Options& o) {
>      switch (we) {
>      case WE_DFS: return new DFS(s,o);
>      case WE_BAB: return new BAB(s,o);
>      case WE_RBS_DFS: return new RBS<Gecode::DFS>(s,o);
>      case WE_RBS_BAB: return new RBS<Gecode::BAB>(s,o);
>      }
>    }
> }
>
>
> --
> Christian Schulte, Professor of Computer Science, KTH,
> www.ict.kth.se/~cschulte/
>
>
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Christian Schulte
> Sent: Thursday, August 22, 2013 9:50 AM
> To: 'Kish Shen'
> Cc: users at gecode.org
> Subject: Re: [gecode-users] Adding restart-based search to ECLiPSe's
> interface to Gecode
>
> Hi Kish,
>
> My bad... There is really no common basetype for search engines, the type I
> mentioned is actually for the implementations and not the interfaces...
>
> I think you will have to wait until I have added a common basetype (there is
> a basetype, but it is not powerful enough), I might be able to do it until
> the end of the week.
>
> Sorry for the confusion!
>
> Cheers
> Christian
>
> --
> Christian Schulte, Professor of Computer Science, KTH,
> www.ict.kth.se/~cschulte/
>
>
>
> -----Original Message-----
> From: Kish Shen [mailto:kisshen at cisco.com]
> Sent: Thursday, August 22, 2013 9:45 AM
> To: cschulte at kth.se
> Cc: users at gecode.org
> Subject: Re: [gecode-users] Adding restart-based search to ECLiPSe's
> interface to Gecode
>
> Hi Christian,
>
> Thanks again!
>
> On 21/08/2013 19:17, Christian Schulte wrote:
>> Try to avoid the Gecode::Search::bab .... functions. Just create as
> follows:
>> 	Gecode::Search::Engine* e = new Gecode::BAB(...) Then it also will
>> work for RBS, and you do not have to create a second engine yourself,
>> this will the RBS class do for you.
>>
>> And do not forget to delete e eventually!
>>
>
> This is the part that I don't know how to do correct -- probably because of
> my lack of C++ knowledge, but as far as I can tell, Gecode::DFS etc are not
> of class Engine*, according to the doc:
>
> template<class T>
> class Gecode::DFS<T>
>
> for subclasses T of Space
>
> T is GecodeSpace in my case, I assume. I am not sure what class DFS is, but
> I can't see how it could be Engine*.
>
> Anway, I tried to do the assignment as you suggested:
>
>
> Search::Engine* segine;
> ...
> sengine = new DFS<GecodeSpace>(solver, o); and indeed I get the error
>
> cannot convert 'Gecode::DFS<GecodeSpace>*' to 'Gecode::Search::Engine*'
>
> (I first tried sengine = new DFS(solver, o) but got an error 'expected
> type-specifier')
>
> So I am not sure what to do -- do I need to change the type of sengine,
> and/or the way I assign an engine to sengine?
>
> Cheers,
>
> Kish
>
>
>
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>



