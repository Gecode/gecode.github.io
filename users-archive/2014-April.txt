From kellen at cretin.net  Tue Apr  1 11:26:04 2014
From: kellen at cretin.net (kellen at cretin.net)
Date: Tue, 1 Apr 2014 10:26:04 +0100
Subject: [gecode-users] commit on already-assigned variable
In-Reply-To: <00a901cf4cd5$32dcf440$9896dcc0$@se>
References: <20140330171920.GA29584@cretin.net>
	<006401cf4cca$e8a361c0$b9ea2540$@se>
	<20140331105941.GC29584@cretin.net>
	<00a901cf4cd5$32dcf440$9896dcc0$@se>
Message-ID: <20140401092603.GD29584@cretin.net>

> Did you try switching recomputation off?

Yes, this seemed to resolve the issue. 

Thanks for your help!
Kellen


From tack at gecode.org  Thu Apr  3 01:12:31 2014
From: tack at gecode.org (Guido Tack)
Date: Thu, 3 Apr 2014 10:12:31 +1100
Subject: [gecode-users] Compilation problems with latest Xcode
In-Reply-To: <AB5E4211-325A-4F10-AE28-2FDD03F69423@beds.ac.uk>
References: <7E37AFCD-5444-4953-AFC9-EEA58A101D97@beds.ac.uk>
	<DDE298CE-41CB-48C6-8DE0-558B82F4459F@beds.ac.uk>
	<7AF082AD-EA50-40A3-9A65-6108EF9E3286@gecode.org>
	<3D6F7CDE-C432-46FD-BE6A-BE3A4AA54D58@beds.ac.uk>
	<0231C13F-3925-48E9-A254-EF8D7FB7E1AE@gecode.org>
	<AB5E4211-325A-4F10-AE28-2FDD03F69423@beds.ac.uk>
Message-ID: <36EC897A-5A3D-47C7-840F-71C0812732B6@gecode.org>

This took far too long, sorry for the delay, but I think I've figured out the problem now.  It's an incompatibility with the c++ standard library on mac os.  You should be able to fix it by using -stdlib=libstdc++ as an additional compiler argument (it seems like Xcode changed its default to the new libc++).

Cheers,
Guido

On 12 Dec 2013, at 11:09 pm, Torsten Anders <Torsten.Anders at beds.ac.uk> wrote:

> On 3 Nov 2013, at 23:01, Guido Tack <tack at gecode.org> wrote:
>> I can reproduce the linker issue related to the branch function, and I currently don?t know what the problem might be.
> 
> 
> Has anybody perhaps managed to get Gecode programs compiled with the latest Xcode (5.0.2)?
> 
> If I create a project with the first example of the tutorial (http://www.gecode.org/doc/4.2.0/MPG/send-more-money.cpp), and add the Gecode framework, then the build fails as detailed below. 
> 
> Interestingly, using the minimal flags of the tutorial as follows does work. So, this may not be a problem of the compiler clang, but Xcode -- possibly one of the many flags set by Xcode automatically gets in the way?
> 
> clang++ -O3 -c send-more-money.cpp
> clang++ -framework gecode -o send-more-money send-more-money.cpp
> 
> By contrast, for the Xcode project send-more-money, where the actual sources are in the file main.cpp, Xcode generates the following call with the shown error message. I have difficulties understanding this call (I am now to C++) to identify where the problem may be. Anyway, I noticed that the flag  -framework geocode is there.
> 
> Any help?
> 
> Ld /Users/torsten/Library/Developer/Xcode/DerivedData/send-more-money-auavgbgssaurbrdkynwwzauevqbu/Build/Products/Debug/send-more-money normal x86_64
>    cd /Users/torsten/c_cpp/Gecode/send-more-money
>    setenv MACOSX_DEPLOYMENT_TARGET 10.8
>    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ -arch x86_64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk -L/Users/torsten/Library/Developer/Xcode/DerivedData/send-more-money-auavgbgssaurbrdkynwwzauevqbu/Build/Products/Debug -F/Users/torsten/Library/Developer/Xcode/DerivedData/send-more-money-auavgbgssaurbrdkynwwzauevqbu/Build/Products/Debug -F/Library/Frameworks -filelist /Users/torsten/Library/Developer/Xcode/DerivedData/send-more-money-auavgbgssaurbrdkynwwzauevqbu/Build/Intermediates/send-more-money.build/Debug/send-more-money.build/Objects-normal/x86_64/send-more-money.LinkFileList -mmacosx-version-min=10.8 -stdlib=libc++ -framework gecode -Xlinker -dependency_info -Xlinker /Users/torsten/Library/Developer/Xcode/DerivedData/send-more-money-auavgbgssaurbrdkynwwzauevqbu/Build/Intermediates/send-more-money.build/Debug/send-more-money.build/Objects-normal/x86_64/send-more-money_dependency_info.dat -o /Users/torsten/Library/Developer/Xcode/DerivedData/send-more-money-auavgbgssaurbrdkynwwzauevqbu/Build/Products/Debug/send-more-money
> 
> Undefined symbols for architecture x86_64:
>  "Gecode::branch(Gecode::Home, Gecode::IntVarArgs const&, Gecode::IntVarBranch, Gecode::IntValBranch, bool (*)(Gecode::Space const&, Gecode::IntVar, int), void (*)(Gecode::Space const&, Gecode::BrancherHandle const&, unsigned int, Gecode::IntVar, int, int const&, std::__1::basic_ostream<char, std::__1::char_traits<char> >&))", referenced from:
>      SendMoreMoney::SendMoreMoney() in main.o
> ld: symbol(s) not found for architecture x86_64
> clang: error: linker command failed with exit code 1 (use -v to see invocation)
> 
> Best wishes,
> Torsten
> 
> PS: I am using MacOS 10.8.5
> 
> 
> --
> Dr Torsten Anders
> Course Leader, Music Technology
> University of Bedfordshire
> Park Square, Room A315
> http://www.torsten-anders.de
> 
> 
> 
> 
> On 3 Nov 2013, at 23:01, Guido Tack <tack at gecode.org> wrote:
>> The linker problems in your second example can be fixed by using clang++ instead of clang (so that the standard C++ library gets linked).  However I can reproduce the linker issue related to the branch function, and I currently don?t know what the problem might be.  We?re preparing a new release at the moment, and I?ll try to get this fixed as soon as possible.
>> 
>> Cheers,
>> Guido
>> 
>> On 4 Nov 2013, at 9:29 am, Torsten Anders <Torsten.Anders at beds.ac.uk> wrote:
>> 
>>> Dear Guido,
>>> 
>>> Thanks a lot for your help! After removing /usr/local/gecode (ignored by uninstall.sh -- likely too old), I could compile and run send-more-money.cpp successfully with g++ at the command line as described in the tutorial. Great! 
>>> 
>>> However, I would like to use Gecode with an IDE. I tried configuring Xcode as described in your tutorial, but still ran into linking problems. I added the geocode framework (not shown in the list, had to directly move to the path /Library/Frameworks/gecode.framework. For Xcode, the Gecode tutorial recommends "You may have to edit your project settings to choose Mac OS 10.6 as the base SDK." With the current version Xcode 5.01 that is not possible anymore. Anyway, regardless whether or not it is set to my system 10.8, I get linker errors from clang.
>>> 
>>> Undefined symbols for architecture x86_64:
>>> "Gecode::branch(Gecode::Home, Gecode::IntVarArgs const&, Gecode::IntVarBranch, Gecode::IntValBranch, bool (*)(Gecode::Space const&, Gecode::IntVar, int), void (*)(Gecode::Space const&, Gecode::BrancherHandle const&, unsigned int, Gecode::IntVar, int, int const&, std::__1::basic_ostream<char, std::__1::char_traits<char> >&))", referenced from:
>>>   SendMoreMoney::SendMoreMoney() in main.o
>>> ld: symbol(s) not found for architecture x86_64
>>> 
>>> With Eclipse I have similar problems.
>>> 
>>> To better understand the problem I tried command line calls for clang with the same arguments as for g++ given in your tutorial, and got the more detailed error message below. Not sure whether my flags are exactly the same in Xcode as well, but the error looks at least similar. 
>>> 
>>> Any idea what I could be missing? Thanks a lot! 
>>> 
>>> Best wishes,
>>> Torsten
>>> 
>>> 
>>> The following silently results in an *.o file.
>>> 
>>> $ clang -O3 -c send-more-money.cpp
>>> 
>>> $ clang -framework gecode -o send-more-money send-more-money.cpp
>>> Undefined symbols for architecture x86_64:
>>> "std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::str() const", referenced from:
>>>   std::basic_ostream<char, std::char_traits<char> >& Gecode::operator<<<char, std::char_traits<char>, Gecode::IntVar>(std::basic_ostream<char, std::char_traits<char> >&, Gecode::VarArray<Gecode::IntVar> const&) in send-more-money-cyceYe.o
>>>   std::basic_ostream<char, std::char_traits<char> >& Gecode::Int::print_view<char, std::char_traits<char>, Gecode::Int::IntView>(std::basic_ostream<char, std::char_traits<char> >&, Gecode::Int::IntView const&) in send-more-money-cyceYe.o
>>> "std::ostream::operator<<(std::ostream& (*)(std::ostream&))", referenced from:
>>>   SendMoreMoney::print() const in send-more-money-cyceYe.o
>>> "std::ostream::operator<<(int)", referenced from:
>>>   std::basic_ostream<char, std::char_traits<char> >& Gecode::Int::print_view<char, std::char_traits<char>, Gecode::Int::IntView>(std::basic_ostream<char, std::char_traits<char> >&, Gecode::Int::IntView const&) in send-more-money-cyceYe.o
>>> "std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()", referenced from:
>>>   std::basic_ostream<char, std::char_traits<char> >& Gecode::operator<<<char, std::char_traits<char>, Gecode::IntVar>(std::basic_ostream<char, std::char_traits<char> >&, Gecode::VarArray<Gecode::IntVar> const&) in send-more-money-cyceYe.o
>>>   std::basic_ostream<char, std::char_traits<char> >& Gecode::Int::print_view<char, std::char_traits<char>, Gecode::Int::IntView>(std::basic_ostream<char, std::char_traits<char> >&, Gecode::Int::IntView const&) in send-more-money-cyceYe.o
>>> "std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::basic_ostringstream(std::_Ios_Openmode)", referenced from:
>>>   std::basic_ostream<char, std::char_traits<char> >& Gecode::operator<<<char, std::char_traits<char>, Gecode::IntVar>(std::basic_ostream<char, std::char_traits<char> >&, Gecode::VarArray<Gecode::IntVar> const&) in send-more-money-cyceYe.o
>>>   std::basic_ostream<char, std::char_traits<char> >& Gecode::Int::print_view<char, std::char_traits<char>, Gecode::Int::IntView>(std::basic_ostream<char, std::char_traits<char> >&, Gecode::Int::IntView const&) in send-more-money-cyceYe.o
>>> "std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_ostringstream()", referenced from:
>>>   std::basic_ostream<char, std::char_traits<char> >& Gecode::operator<<<char, std::char_traits<char>, Gecode::IntVar>(std::basic_ostream<char, std::char_traits<char> >&, Gecode::VarArray<Gecode::IntVar> const&) in send-more-money-cyceYe.o
>>>   std::basic_ostream<char, std::char_traits<char> >& Gecode::Int::print_view<char, std::char_traits<char>, Gecode::Int::IntView>(std::basic_ostream<char, std::char_traits<char> >&, Gecode::Int::IntView const&) in send-more-money-cyceYe.o
>>> "std::ios_base::Init::Init()", referenced from:
>>>   ___cxx_global_var_init in send-more-money-cyceYe.o
>>> "std::ios_base::Init::~Init()", referenced from:
>>>   ___cxx_global_var_init in send-more-money-cyceYe.o
>>> "std::basic_ios<char, std::char_traits<char> >::copyfmt(std::basic_ios<char, std::char_traits<char> > const&)", referenced from:
>>>   std::basic_ostream<char, std::char_traits<char> >& Gecode::operator<<<char, std::char_traits<char>, Gecode::IntVar>(std::basic_ostream<char, std::char_traits<char> >&, Gecode::VarArray<Gecode::IntVar> const&) in send-more-money-cyceYe.o
>>>   std::basic_ostream<char, std::char_traits<char> >& Gecode::Int::print_view<char, std::char_traits<char>, Gecode::Int::IntView>(std::basic_ostream<char, std::char_traits<char> >&, Gecode::Int::IntView const&) in send-more-money-cyceYe.o
>>> "std::exception::~exception()", referenced from:
>>>   Gecode::Exception::~Exception() in send-more-money-cyceYe.o
>>> "std::cout", referenced from:
>>>   SendMoreMoney::print() const in send-more-money-cyceYe.o
>>> "std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)", referenced from:
>>>   SendMoreMoney::print() const in send-more-money-cyceYe.o
>>> "std::terminate()", referenced from:
>>>   ___clang_call_terminate in send-more-money-cyceYe.o
>>> "std::basic_ostream<char, std::char_traits<char> >& std::operator<<<std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)", referenced from:
>>>   std::basic_ostream<char, std::char_traits<char> >& Gecode::operator<<<char, std::char_traits<char>, Gecode::IntVar>(std::basic_ostream<char, std::char_traits<char> >&, Gecode::VarArray<Gecode::IntVar> const&) in send-more-money-cyceYe.o
>>>   std::basic_ostream<char, std::char_traits<char> >& Gecode::Int::print_view<char, std::char_traits<char>, Gecode::Int::IntView>(std::basic_ostream<char, std::char_traits<char> >&, Gecode::Int::IntView const&) in send-more-money-cyceYe.o
>>> "std::basic_ostream<char, std::char_traits<char> >& std::operator<<<std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char)", referenced from:
>>>   std::basic_ostream<char, std::char_traits<char> >& Gecode::operator<<<char, std::char_traits<char>, Gecode::IntVar>(std::basic_ostream<char, std::char_traits<char> >&, Gecode::VarArray<Gecode::IntVar> const&) in send-more-money-cyceYe.o
>>>   std::basic_ostream<char, std::char_traits<char> >& Gecode::Int::print_view<char, std::char_traits<char>, Gecode::Int::IntView>(std::basic_ostream<char, std::char_traits<char> >&, Gecode::Int::IntView const&) in send-more-money-cyceYe.o
>>> "std::basic_ostream<char, std::char_traits<char> >& std::operator<<<char, std::char_traits<char>, std::allocator<char> >(std::basic_ostream<char, std::char_traits<char> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)", referenced from:
>>>   std::basic_ostream<char, std::char_traits<char> >& Gecode::operator<<<char, std::char_traits<char>, Gecode::IntVar>(std::basic_ostream<char, std::char_traits<char> >&, Gecode::VarArray<Gecode::IntVar> const&) in send-more-money-cyceYe.o
>>>   std::basic_ostream<char, std::char_traits<char> >& Gecode::Int::print_view<char, std::char_traits<char>, Gecode::Int::IntView>(std::basic_ostream<char, std::char_traits<char> >&, Gecode::Int::IntView const&) in send-more-money-cyceYe.o
>>> "vtable for __cxxabiv1::__class_type_info", referenced from:
>>>   typeinfo for Gecode::SharedHandle::Object in send-more-money-cyceYe.o
>>>   typeinfo for Gecode::ActorLink in send-more-money-cyceYe.o
>>>   typeinfo for Gecode::Choice in send-more-money-cyceYe.o
>>>   typeinfo for Gecode::Search::Stop in send-more-money-cyceYe.o
>>>   typeinfo for Gecode::Search::Cutoff in send-more-money-cyceYe.o
>>> NOTE: a missing vtable usually means the first non-inline virtual member function has no definition.
>>> "vtable for __cxxabiv1::__si_class_type_info", referenced from:
>>>   typeinfo for Gecode::Rnd::IMP in send-more-money-cyceYe.o
>>>   typeinfo for Gecode::PosChoice in send-more-money-cyceYe.o
>>>   typeinfo for Gecode::DFA::DFAI in send-more-money-cyceYe.o
>>>   typeinfo for SendMoreMoney in send-more-money-cyceYe.o
>>>   typeinfo for Gecode::MemoryExhausted in send-more-money-cyceYe.o
>>> NOTE: a missing vtable usually means the first non-inline virtual member function has no definition.
>>> "vtable for __cxxabiv1::__vmi_class_type_info", referenced from:
>>>   typeinfo for Gecode::Actor in send-more-money-cyceYe.o
>>> NOTE: a missing vtable usually means the first non-inline virtual member function has no definition.
>>> "operator delete(void*)", referenced from:
>>>   Gecode::MemoryExhausted::~MemoryExhausted() in send-more-money-cyceYe.o
>>> "___cxa_allocate_exception", referenced from:
>>>   _main in send-more-money-cyceYe.o
>>>   SendMoreMoney::SendMoreMoney() in send-more-money-cyceYe.o
>>>   SendMoreMoney::copy(bool) in send-more-money-cyceYe.o
>>>   Gecode::IntVarArgs::IntVarArgs(int) in send-more-money-cyceYe.o
>>>   Gecode::VarArgArray<Gecode::IntVar>::VarArgArray(Gecode::VarArray<Gecode::IntVar> const&) in send-more-money-cyceYe.o
>>> "___cxa_begin_catch", referenced from:
>>>   ___clang_call_terminate in send-more-money-cyceYe.o
>>> "___cxa_free_exception", referenced from:
>>>   _main in send-more-money-cyceYe.o
>>>   SendMoreMoney::SendMoreMoney() in send-more-money-cyceYe.o
>>>   SendMoreMoney::copy(bool) in send-more-money-cyceYe.o
>>>   Gecode::IntVarArgs::IntVarArgs(int) in send-more-money-cyceYe.o
>>>   Gecode::VarArgArray<Gecode::IntVar>::VarArgArray(Gecode::VarArray<Gecode::IntVar> const&) in send-more-money-cyceYe.o
>>> "___cxa_pure_virtual", referenced from:
>>>   vtable for Gecode::SharedHandle::Object in send-more-money-cyceYe.o
>>>   vtable for Gecode::Actor in send-more-money-cyceYe.o
>>>   vtable for Gecode::Choice in send-more-money-cyceYe.o
>>>   vtable for Gecode::Search::Stop in send-more-money-cyceYe.o
>>>   vtable for Gecode::Search::Cutoff in send-more-money-cyceYe.o
>>> "___cxa_throw", referenced from:
>>>   _main in send-more-money-cyceYe.o
>>>   SendMoreMoney::SendMoreMoney() in send-more-money-cyceYe.o
>>>   SendMoreMoney::copy(bool) in send-more-money-cyceYe.o
>>>   Gecode::IntVarArgs::IntVarArgs(int) in send-more-money-cyceYe.o
>>>   Gecode::VarArgArray<Gecode::IntVar>::VarArgArray(Gecode::VarArray<Gecode::IntVar> const&) in send-more-money-cyceYe.o
>>> "___dynamic_cast", referenced from:
>>>   _main in send-more-money-cyceYe.o
>>> "___gxx_personality_v0", referenced from:
>>>   _main in send-more-money-cyceYe.o
>>>   Gecode::SharedHandle::Object::~Object() in send-more-money-cyceYe.o
>>>   Gecode::Rnd::IMP::~IMP() in send-more-money-cyceYe.o
>>>   Gecode::DFA::DFAI::~DFAI() in send-more-money-cyceYe.o
>>>   Gecode::DFA::DFAI::~DFAI() in send-more-money-cyceYe.o
>>>   Gecode::PosChoice::~PosChoice() in send-more-money-cyceYe.o
>>>   std::basic_ostream<char, std::char_traits<char> >& Gecode::operator<<<char, std::char_traits<char>, Gecode::IntVar>(std::basic_ostream<char, std::char_traits<char> >&, Gecode::VarArray<Gecode::IntVar> const&) in send-more-money-cyceYe.o
>>>   ...
>>> ld: symbol(s) not found for architecture x86_64
>>> clang: error: linker command failed with exit code 1 (use -v to see invocation)
>>> Torstens-MacBook-Pro:tmp torsten$ 
>>> 
>>> 
>>> 
>>> 
>>> Undefined symbols for architecture x86_64:
>>> "Gecode::branch(Gecode::Home, Gecode::IntVarArgs const&, Gecode::IntVarBranch, Gecode::IntValBranch, bool (*)(Gecode::Space const&, Gecode::IntVar, int), void (*)(Gecode::Space const&, Gecode::BrancherHandle const&, unsigned int, Gecode::IntVar, int, int const&, std::__1::basic_ostream<char, std::__1::char_traits<char> >&))", referenced from:
>>>   SendMoreMoney::SendMoreMoney() in main.o
>>> ld: symbol(s) not found for architecture x86_64
>>> clang: error: linker command failed with exit code 1 (use -v to see invocation)
>>> 
>>> 
>>> 
>>> 
>>> 
>>> On 2 Nov 2013, at 23:20, Guido Tack <tack at gecode.org>
>>> wrote:
>>> 
>>>> Hi Torsten,
>>>> 
>>>> you seem to have an older version of Gecode installed in /usr/local (that's what the clang error messages point to).
>>>> 
>>>> The 35 is the "library version", which is simply incremented with each release and doesn't follow the major.minor.patch scheme.
>>>> 
>>>> Cheers,
>>>> Guido
>>>> 
>>>> On 3 Nov 2013, at 4:11 am, Torsten Anders <Torsten.Anders at beds.ac.uk> wrote:
>>>> 
>>>>> On 2 Nov 2013, at 09:13, Torsten Anders <torsten.anders at beds.ac.uk> wrote:
>>>>>> Dear Gecoders,
>>>>>> 
>>>>>> I am trying to run some ready-made Gecode examples on a Mac without success. For example, with the first example from the tutorial (http://www.gecode.org/doc/4.2.0/MPG/send-more-money.cpp) in run into several errors, for example, 
>>>>>> 
>>>>>> 'INT_VAL_SPLIT_MIN' cannot be used as a function	
>>>>>> 'INT_VAR_SIZE_MIN' cannot be used as a function	
>>>>>> 
>>>>>> As these errors appear for several examples, it appears to me there is something fundamentally wrong. This might well be some installation error on my part. Nevertheless, help is appreciated -- I simply do not know where to start addressing such a problem.  
>>>>>> 
>>>>>> BTW: I just installed Gecode version 4.2 (binaries Gecode-4.2.0.dmg) on my Mac, after uninstalling some older version. I was surprised to find that /Library/Frameworks/gecode.framework/Versions/ contains a folder named "35" -- I would have expected it to be named "42", for version 4.2, but that could of course be simply a wrong guess on my part.   
>>>>>> 
>>>>>> Best wishes,
>>>>>> Torsten
>>>>> 
>>>>> 
>>>>> I tried to better isolate the problem. Both g++ (gcc) 4.2.1 and clang 5.0 report problems with the example send-more-money.cpp (http://www.gecode.org/doc/4.2.0/MPG/send-more-money.cpp), but the errors differ. The details are below. 
>>>>> 
>>>>> What am I missing?  
>>>>> 
>>>>> Best wishes,
>>>>> Torsten
>>>>> 
>>>>> $ g++ -O3 -c send-more-money.cpp
>>>>> send-more-money.cpp: In constructor ?SendMoreMoney::SendMoreMoney()?:
>>>>> send-more-money.cpp:55: error: ?INT_VAR_SIZE_MIN? cannot be used as a function
>>>>> send-more-money.cpp:55: error: ?INT_VAL_MIN? cannot be used as a function
>>>>> 
>>>>> $ g++ --version
>>>>> i686-apple-darwin11-llvm-g++-4.2 (GCC) 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)
>>>>> Copyright (C) 2007 Free Software Foundation, Inc.
>>>>> 
>>>>> 
>>>>> $ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -O3 -c send-more-money.cpp
>>>>> In file included from send-more-money.cpp:28:
>>>>> In file included from /usr/local/include/gecode/int.hh:50:
>>>>> In file included from /usr/local/include/gecode/iter.hh:97:
>>>>> /usr/local/include/gecode/iter/ranges-scale.hpp:197:27: error: reference to
>>>>> non-static member function must be called; did you mean to call it with no
>>>>> arguments?
>>>>> static_cast<UnsVal>(max - min + 1);
>>>>>                     ^~~
>>>>> /usr/local/include/gecode/iter/ranges-scale.hpp:197:33: error: reference to
>>>>> non-static member function must be called; did you mean to call it with no
>>>>> arguments?
>>>>> static_cast<UnsVal>(max - min + 1);
>>>>>                           ^~~
>>>>> send-more-money.cpp:55:42: error: called object type 'int' is not a function or
>>>>> function pointer
>>>>>   branch(*this, l, INT_VAR_SIZE_MIN(), INT_VAL_MIN());
>>>>>                    ~~~~~~~~~~~~~~~~^
>>>>> 3 errors generated.
>>>>> 
>>>>> $ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang --version
>>>>> Apple LLVM version 5.0 (clang-500.2.79) (based on LLVM 3.3svn)
>>>>> 
>>>>> 
>>>>>> --
>>>>>> Dr Torsten Anders
>>>>>> Course Leader, Music Technology
>>>>>> University of Bedfordshire
>>>>>> Park Square, Room A315
>>>>>> http://www.torsten-anders.de
>>>>> 
>>>>> _______________________________________________
>>>>> Gecode users mailing list
>>>>> users at gecode.org
>>>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>>> 
>>> 
>>> 
>>> _______________________________________________
>>> Gecode users mailing list
>>> users at gecode.org
>>> https://www.gecode.org/mailman/listinfo/gecode-users
>> 
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users



From negate273 at gmail.com  Fri Apr  4 08:42:10 2014
From: negate273 at gmail.com (negate273 at gmail.com)
Date: Thu, 3 Apr 2014 23:42:10 -0700
Subject: [gecode-users] Unsigned Int Constraint Variables
Message-ID: <AFA2B1FD-1CEA-4E03-BCB3-729479A99042@gmail.com>

Hi, 

Is there anyway by which the bounds of an integer constraint variable be set to 0..2**32-1 (0xFFFF_FFFF) instead of the bounds for a signed integer (-0x7FFF_FFFF, 0x7FFF_FFFF) ? 

I tried recompiling gecod by setting 
    - gecode/int.hh Gecode::Int::Limits.max to UINT_MAX -1  (original INT_MAX-1)
    - gecode/int.hh Gecode::Int::Limits.min to 0  (original -max) 
    - gecode/support/int-type.hpp IntTypeTraits<signed int> min = 0 (originally INT_MIN)
    - gecode/support/int-type.hpp IntTypeTraits<signed int> max = UNIT_MAX-1 (originally INT_MAX)
but these do not help, in recognizing variables that may have values > 2**31. 

Any pointers ? 

Thanks
~az

From cschulte at kth.se  Fri Apr  4 08:53:24 2014
From: cschulte at kth.se (Christian Schulte)
Date: Fri, 4 Apr 2014 08:53:24 +0200
Subject: [gecode-users] Unsigned Int Constraint Variables
In-Reply-To: <AFA2B1FD-1CEA-4E03-BCB3-729479A99042@gmail.com>
References: <AFA2B1FD-1CEA-4E03-BCB3-729479A99042@gmail.com>
Message-ID: <000001cf4fd2$93183f40$b948bdc0$@se>

No, that will not work at all. Most constraints assume signedness of integer
variables and there are many datatypes that directly depend on the choice of
the type for integer variables.

So, unfortunately, there is no easy way.

Cheers
Christian

--
Christian Schulte, Professor of Computer Science, KTH,
www.ict.kth.se/~cschulte/

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of negate273 at gmail.com
Sent: Friday, April 04, 2014 8:42 AM
To: users at gecode.org
Subject: [gecode-users] Unsigned Int Constraint Variables

Hi, 

Is there anyway by which the bounds of an integer constraint variable be set
to 0..2**32-1 (0xFFFF_FFFF) instead of the bounds for a signed integer
(-0x7FFF_FFFF, 0x7FFF_FFFF) ? 

I tried recompiling gecod by setting 
    - gecode/int.hh Gecode::Int::Limits.max to UINT_MAX -1  (original
INT_MAX-1)
    - gecode/int.hh Gecode::Int::Limits.min to 0  (original -max) 
    - gecode/support/int-type.hpp IntTypeTraits<signed int> min = 0
(originally INT_MIN)
    - gecode/support/int-type.hpp IntTypeTraits<signed int> max = UNIT_MAX-1
(originally INT_MAX) but these do not help, in recognizing variables that
may have values > 2**31. 

Any pointers ? 

Thanks
~az
_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users



From negate273 at gmail.com  Fri Apr  4 09:10:41 2014
From: negate273 at gmail.com (negate273 at gmail.com)
Date: Fri, 4 Apr 2014 00:10:41 -0700
Subject: [gecode-users] Unsigned Int Constraint Variables
In-Reply-To: <AFA2B1FD-1CEA-4E03-BCB3-729479A99042@gmail.com>
References: <AFA2B1FD-1CEA-4E03-BCB3-729479A99042@gmail.com>
Message-ID: <3CB6351B-EA97-4437-BF98-59979CC8E877@gmail.com>

Is there any way we can make the integer variable an int64_t (type long on a 64bit machine)  - 8 byte data type instead of the the 4-byte that it is currently. If not, are there any alternatives for constraint variables that may take values > 0x7FFF_FFFF ? 

Thanks 
~az

> No, that will not work at all. Most constraints assume signedness of integer
> variables and there are many datatypes that directly depend on the choice of
> the type for integer variables.
> 
> So, unfortunately, there is no easy way.
> 
> Cheers
> Christian
> 
> --
> Christian Schulte, Professor of Computer Science, KTH,
> www.ict.kth.se/~cschulte/
> 
>> -----Original Message-----
>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of  negate273 at gmail.com
>> Sent: Friday, April 04, 2014 8:42 AM
>> To: users at gecode.org
>> Subject: [gecode-users] Unsigned Int Constraint Variables
>> Hi, 
>> 
>> Is there anyway by which the bounds of an integer constraint variable be set to 0..2**32-1 (0xFFFF_FFFF) instead of the bounds for a signed integer (-0x7FFF_FFFF, 0x7FFF_FFFF) ? 
>> 
>> I tried recompiling gecod by setting 
>>    - gecode/int.hh Gecode::Int::Limits.max to UINT_MAX -1  (original INT_MAX-1)
>>    - gecode/int.hh Gecode::Int::Limits.min to 0  (original -max) 
>>    - gecode/support/int-type.hpp IntTypeTraits<signed int> min = 0 (originally INT_MIN)
>>    - gecode/support/int-type.hpp IntTypeTraits<signed int> max = UNIT_MAX-1 (originally INT_MAX)
>> but these do not help, in recognizing variables that may have values > 2**31. 
>> 
>> Any pointers ? 
>> 
>> Thanks
>> ~az
> 


From cschulte at kth.se  Fri Apr  4 13:05:51 2014
From: cschulte at kth.se (Christian Schulte)
Date: Fri, 4 Apr 2014 13:05:51 +0200
Subject: [gecode-users] Unsigned Int Constraint Variables
In-Reply-To: <3CB6351B-EA97-4437-BF98-59979CC8E877@gmail.com>
References: <AFA2B1FD-1CEA-4E03-BCB3-729479A99042@gmail.com>
	<3CB6351B-EA97-4437-BF98-59979CC8E877@gmail.com>
Message-ID: <000601cf4ff5$d7790c50$866b24f0$@se>

This again is harder than it sounds because there are two issues:
 - one also needs a 16 byte integer data type as money constraints require
extended precision
 - one would have to go through all of Gecode to check whether the C++ type
int is really an int of there value type of an integer variable (that is
most likely the biggest design flaw in Gecode).

Conceptually easy but lots of work.

Cheers
Christian

--
Christian Schulte, Professor of Computer Science, KTH,
www.ict.kth.se/~cschulte/

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of negate273 at gmail.com
Sent: Friday, April 04, 2014 9:11 AM
To: users at gecode.org
Subject: Re: [gecode-users] Unsigned Int Constraint Variables

Is there any way we can make the integer variable an int64_t (type long on a
64bit machine)  - 8 byte data type instead of the the 4-byte that it is
currently. If not, are there any alternatives for constraint variables that
may take values > 0x7FFF_FFFF ? 

Thanks
~az

> No, that will not work at all. Most constraints assume signedness of 
> integer variables and there are many datatypes that directly depend on 
> the choice of the type for integer variables.
> 
> So, unfortunately, there is no easy way.
> 
> Cheers
> Christian
> 
> --
> Christian Schulte, Professor of Computer Science, KTH, 
> www.ict.kth.se/~cschulte/
> 
>> -----Original Message-----
>> From: users-bounces at gecode.org [mailto:users-bounces at 
>> gecode.org] On Behalf Of  negate273 at gmail.com
>> Sent: Friday, April 04, 2014 8:42 AM
>> To: users at gecode.org
>> Subject: [gecode-users] Unsigned Int Constraint Variables Hi,
>> 
>> Is there anyway by which the bounds of an integer constraint variable be
set to 0..2**32-1 (0xFFFF_FFFF) instead of the bounds for a signed integer
(-0x7FFF_FFFF, 0x7FFF_FFFF) ? 
>> 
>> I tried recompiling gecod by setting 
>>    - gecode/int.hh Gecode::Int::Limits.max to UINT_MAX -1  (original
INT_MAX-1)
>>    - gecode/int.hh Gecode::Int::Limits.min to 0  (original -max) 
>>    - gecode/support/int-type.hpp IntTypeTraits<signed int> min = 0
(originally INT_MIN)
>>    - gecode/support/int-type.hpp IntTypeTraits<signed int> max = 
>> UNIT_MAX-1 (originally INT_MAX) but these do not help, in recognizing
variables that may have values > 2**31.
>> 
>> Any pointers ? 
>> 
>> Thanks
>> ~az
> 

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users



From tadkebau at gmail.com  Sat Apr  5 00:35:51 2014
From: tadkebau at gmail.com (Tadele Kebebe)
Date: Sat, 5 Apr 2014 04:05:51 +0530
Subject: [gecode-users] Using custom branching options
Message-ID: <CAAruBSoe-9ZM2xmkVjM0BR4RUcPQ3b0SDYHYhPWSEAqoic9sgw@mail.gmail.com>

Hi there,

I am using a custom option class which inherits from the Gecode::Options
class. The custom class looks as below:

class Cbcl_Options : public Options{
    protected:
         StringOption _branchval;
         ...
    public:
        Cbcl_Options(const char* e) : Options(e), ....{
             ....
             _branching.add(INT_VAR_NONE, "input");
             _branching.add(INT_VAR_MIN_MIN, "min");
             ...
             branching(INT_VAR_DEGREE_MAX);
             ....
             _branchval.add(INT_VAL_MIN, "min");
             ...
             add(_branchval);
             ....
        }
        ...
}

I have used the proper namespaces and header files, but when I compile the
code it gave me the following errors:

g++ -Wall -g -I/usr/local/include -c cbcl_options.cpp
cbcl_options.cpp: In constructor 'Cbcl_Options::Cbcl_Options(const char*)':
cbcl_options.cpp:75:40: error: invalid conversion from
'Gecode::IntVarBranch (*)()' to 'int' [-fpermissive]
    _branching.add(INT_VAR_NONE, "input");
                                        ^
In file included from cbcl_options.cpp:7:0:
/usr/local/include/gecode/driver.hh:195:12: error:   initializing argument
1 of 'void Gecode::Driver::StringOption::add(int, const char*, const
char*)' [-fpermissive]
       void add(int v, const char* o, const char* h = NULL);
            ^

I am using gecode-4.2.1, but the seems to work on gecode-3.7.1.
Can you please help me in correcting those errors.

Thanks
tad.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140405/a70d2ee6/attachment.html>

From tomas.liden at liu.se  Sun Apr  6 22:26:16 2014
From: tomas.liden at liu.se (=?ISO-8859-1?Q?Tomas_Lid=E9n?=)
Date: Sun, 6 Apr 2014 22:26:16 +0200
Subject: [gecode-users] Mac XCode configuration
Message-ID: <5341B868.7090007@liu.se>

Hi!

I'm running MacOS 10.9.2, Xcode 5.1 (5B130a) and Gecode 4.2.1 - all 
freshly updated/installed.
But being a newbie (both to Xcode and Gecode) and a bit rusty on C++, I 
have some trouble getting the configurations right..

Firstly a great thanks for Guido's help regarding libstdc++ 
(http://www.gecode.org/pipermail/users/2014-April/004368.html) - which 
got me past the first blocking point.

But now I can't get Qt to work (e.g. examples/queens.cpp). I can see 
that qt5.1.0 is installed in /usr/local/ but I can't figure out how to 
add the necessary frameworks (probably the ones in 
/usr/local/qt5.1.0/lib/.) to the project. For gecode.framework I use 
File/Add Files to.. and click to /Library/Frameworks - but /usr/local is 
inaccessible from the Finder interface.. Is there some other mechanism 
or do I need to add some soft links or similar? (The Add/Existing 
Frameworks.. mentioned in MGP 2.3.2 I have not found..)

BTW, the command line option does not work either as stated in the 
documentation (MGP 2.3.2), neither with g++ or clang - see the log 
below. The "default header search path" does not seem to be sufficient.. 
I guess there's some include or library options that's needed - any help 
on that as well? (I think this is the reason I have no success in using 
Eclipse/CDT either..).

Thanks for any help or tip you can provide, primarily regarding 
accessing Qt in Xcode!
/Tomas

--------- command line log ---------
$ env
TERM_PROGRAM=Apple_Terminal
SHELL=/bin/bash
TERM=xterm-256color
TMPDIR=/var/folders/qr/pv91fgrs0x9chlc7_h411hzwz2vd45/T/
Apple_PubSub_Socket_Render=/tmp/launch-rD5NPz/Render
TERM_PROGRAM_VERSION=326
OLDPWD=/Users/tomli64
TERM_SESSION_ID=C04798D4-1BFC-4040-9DC3-5CC51F9B3C87
USER=xxx
SSH_AUTH_SOCK=/tmp/launch-mHzJQr/Listeners
__CF_USER_TEXT_ENCODING=0x3E2DB485:0:7

PATH=/Users/xxx/Applications/sbt/bin:/usr/local/bin:/usr/local/pgsql-9.3/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/texbin
__CHECKFIX1436934=1
PWD=/Users/xxx/Documents/Courses/ConstraintProgramming_ID2204/examples
LANG=sv_SE.UTF-8
SHLVL=1
HOME=/Users/xxx
LOGNAME=xxx
SECURITYSESSIONID=186a4
_=/usr/bin/env

$ g++ --version
Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr 
--with-gxx-include-dir=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk/usr/include/c++/4.2.1
Apple LLVM version 5.1 (clang-503.0.38) (based on LLVM 3.4svn)
Target: x86_64-apple-darwin13.1.0
Thread model: posix

$ g++ -O3 -c money.cpp
money.cpp:38:10: fatal error: 'gecode/driver.hh' file not found
#include <gecode/driver.hh>
          ^
1 error generated.

$ clang --version
Apple LLVM version 5.1 (clang-503.0.38) (based on LLVM 3.4svn)
Target: x86_64-apple-darwin13.1.0
Thread model: posix

$ clang -O3 -c money.cpp
money.cpp:1:1: error: expected unqualified-id
<U+001C>/* -*- mode: C++; c-basic-offset: 2; indent-tabs-mode: nil -*- */
^
money.cpp:38:10: fatal error: 'gecode/driver.hh' file not found
#include <gecode/driver.hh>
          ^
2 errors generated.



From tack at gecode.org  Mon Apr  7 02:03:10 2014
From: tack at gecode.org (Guido Tack)
Date: Mon, 7 Apr 2014 10:03:10 +1000
Subject: [gecode-users] Mac XCode configuration
In-Reply-To: <5341B868.7090007@liu.se>
References: <5341B868.7090007@liu.se>
Message-ID: <6ADD648E-116B-48AB-9143-8613B6EC768C@gecode.org>

Hi,

to add a system folder such as /usr/local, open the "Add Files to..." dialog, press Command+Shift+G, and enter the path directly.
On the command line, I think Xcode may have changed the default paths for frameworks, you could try adding -F/Library/Frameworks to your compiler options.

Cheers
Guido

On 7 Apr 2014, at 6:26 am, Tomas Lid?n <tomas.liden at liu.se> wrote:

> Hi!
> 
> I'm running MacOS 10.9.2, Xcode 5.1 (5B130a) and Gecode 4.2.1 - all freshly updated/installed.
> But being a newbie (both to Xcode and Gecode) and a bit rusty on C++, I have some trouble getting the configurations right..
> 
> Firstly a great thanks for Guido's help regarding libstdc++ (http://www.gecode.org/pipermail/users/2014-April/004368.html) - which got me past the first blocking point.
> 
> But now I can't get Qt to work (e.g. examples/queens.cpp). I can see that qt5.1.0 is installed in /usr/local/ but I can't figure out how to add the necessary frameworks (probably the ones in /usr/local/qt5.1.0/lib/.) to the project. For gecode.framework I use File/Add Files to.. and click to /Library/Frameworks - but /usr/local is inaccessible from the Finder interface.. Is there some other mechanism or do I need to add some soft links or similar? (The Add/Existing Frameworks.. mentioned in MGP 2.3.2 I have not found..)
> 
> BTW, the command line option does not work either as stated in the documentation (MGP 2.3.2), neither with g++ or clang - see the log below. The "default header search path" does not seem to be sufficient.. I guess there's some include or library options that's needed - any help on that as well? (I think this is the reason I have no success in using Eclipse/CDT either..).
> 
> Thanks for any help or tip you can provide, primarily regarding accessing Qt in Xcode!
> /Tomas
> 
> --------- command line log ---------
> $ env
> TERM_PROGRAM=Apple_Terminal
> SHELL=/bin/bash
> TERM=xterm-256color
> TMPDIR=/var/folders/qr/pv91fgrs0x9chlc7_h411hzwz2vd45/T/
> Apple_PubSub_Socket_Render=/tmp/launch-rD5NPz/Render
> TERM_PROGRAM_VERSION=326
> OLDPWD=/Users/tomli64
> TERM_SESSION_ID=C04798D4-1BFC-4040-9DC3-5CC51F9B3C87
> USER=xxx
> SSH_AUTH_SOCK=/tmp/launch-mHzJQr/Listeners
> __CF_USER_TEXT_ENCODING=0x3E2DB485:0:7
> 
> PATH=/Users/xxx/Applications/sbt/bin:/usr/local/bin:/usr/local/pgsql-9.3/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/texbin
> __CHECKFIX1436934=1
> PWD=/Users/xxx/Documents/Courses/ConstraintProgramming_ID2204/examples
> LANG=sv_SE.UTF-8
> SHLVL=1
> HOME=/Users/xxx
> LOGNAME=xxx
> SECURITYSESSIONID=186a4
> _=/usr/bin/env
> 
> $ g++ --version
> Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk/usr/include/c++/4.2.1
> Apple LLVM version 5.1 (clang-503.0.38) (based on LLVM 3.4svn)
> Target: x86_64-apple-darwin13.1.0
> Thread model: posix
> 
> $ g++ -O3 -c money.cpp
> money.cpp:38:10: fatal error: 'gecode/driver.hh' file not found
> #include <gecode/driver.hh>
>         ^
> 1 error generated.
> 
> $ clang --version
> Apple LLVM version 5.1 (clang-503.0.38) (based on LLVM 3.4svn)
> Target: x86_64-apple-darwin13.1.0
> Thread model: posix
> 
> $ clang -O3 -c money.cpp
> money.cpp:1:1: error: expected unqualified-id
> <U+001C>/* -*- mode: C++; c-basic-offset: 2; indent-tabs-mode: nil -*- */
> ^
> money.cpp:38:10: fatal error: 'gecode/driver.hh' file not found
> #include <gecode/driver.hh>
>         ^
> 2 errors generated.
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users



From tomas.liden at liu.se  Mon Apr  7 09:40:31 2014
From: tomas.liden at liu.se (=?ISO-8859-1?Q?Tomas_Lid=E9n?=)
Date: Mon, 7 Apr 2014 09:40:31 +0200
Subject: [gecode-users] Mac XCode configuration
In-Reply-To: <6ADD648E-116B-48AB-9143-8613B6EC768C@gecode.org>
References: <5341B868.7090007@liu.se>
	<6ADD648E-116B-48AB-9143-8613B6EC768C@gecode.org>
Message-ID: <5342566F.1030904@liu.se>

Thanks for quick and adequate response!
But still there's trouble... see below
/T

Guido Tack wrote 2014-04-07 02:03:
> Hi,
>
> to add a system folder such as /usr/local, open the "Add Files to..." dialog, press Command+Shift+G, and enter the path directly.
Great. That got me halfway.
After adding the frameworks QtGui, QtWidgets and QtCore and adjusting 
the include statements to
#include <QtGui/QtGui>
#include <QtWidgets/QtWidgets>
the compilation ends with the following error:
/usr/local/qt5.1.0/lib/QtCore.framework/Headers/qlist.h:52:10: 
'initializer_list' file not found

According to (http://comments.gmane.org/gmane.comp.lib.qt.user/8357) and 
(the subsequent links) this is due to Qt requiring -stdlib=libc+ (not 
libc++ ?) and c++11 - which is in conflict with libstdc++ that is 
required by Gecode. Hmm.. I can't figure out to get passed this - tried 
varies ways in Xcode, but no luck so far. Should I perhaps download and 
install Qt directly from the source rather than using the version coming 
with Gecode?
> On the command line, I think Xcode may have changed the default paths for frameworks, you could try adding -F/Library/Frameworks to your compiler options.
That almost did the trick. Again I had to add options for selecting 
libstdc++ etc, but still I get an error. After trying the (what I think) 
options that Xcode uses I get:

$ g++ -std=gnu++11 -stdlib=libstdc++ -O3 -F/Library/Frameworks -c money.cpp
money.cpp:1:1: error: expected unqualified-id
<U+001C>/* -*- mode: C++; c-basic-offset: 2; indent-tabs-mode: nil -*- */
^
In file included from money.cpp:38:
In file included from 
/Library/Frameworks/gecode.framework/Headers/driver.hh:41:
In file included from 
/Library/Frameworks/gecode.framework/Headers/minimodel.hh:47:
In file included from 
/Library/Frameworks/gecode.framework/Headers/kernel.hh:127:
/Library/Frameworks/gecode.framework/Headers/kernel/core.hpp:3800:7: 
warning:
       array index 1 is past the end of the array (which contains 1 element)
       [-Warray-bounds]
       x->u.idx[1] = u.idx[1];
       ^        ~
/Library/Frameworks/gecode.framework/Headers/kernel/core.hpp:3829:49: 
note: in
       instantiation of member function
       'Gecode::VarImp<Gecode::Int::BoolVarImpConf>::update' requested here
       VarImp<VIC>* n = x->next(); x->forward()->update(x,sub); x = n;
                                                 ^
/Library/Frameworks/gecode.framework/Headers/kernel/var-imp.hpp:407:50: 
note:
       in instantiation of member function
       'Gecode::VarImp<Gecode::Int::BoolVarImpConf>::update' requested here
Gecode::VarImp<Gecode::Int::BoolVarImpConf>::update(*this,sub);
                                                  ^
/Library/Frameworks/gecode.framework/Headers/kernel/core.hpp:339:7: 
note: array
       'idx' declared here
       unsigned int idx[pc_max+1];
       ^
/Library/Frameworks/gecode.framework/Headers/kernel/core.hpp:3800:21: 
warning:
       array index 1 is past the end of the array (which contains 1 element)
       [-Warray-bounds]
       x->u.idx[1] = u.idx[1];
                     ^     ~
/Library/Frameworks/gecode.framework/Headers/kernel/core.hpp:339:7: 
note: array
       'idx' declared here
       unsigned int idx[pc_max+1];
       ^
2 warnings and 1 error generated.

clang gives the same result..
> Cheers
> Guido
>
> On 7 Apr 2014, at 6:26 am, Tomas Lid?n <tomas.liden at liu.se> wrote:
>
>> Hi!
>>
>> I'm running MacOS 10.9.2, Xcode 5.1 (5B130a) and Gecode 4.2.1 - all freshly updated/installed.
>> But being a newbie (both to Xcode and Gecode) and a bit rusty on C++, I have some trouble getting the configurations right..
>>
>> Firstly a great thanks for Guido's help regarding libstdc++ (http://www.gecode.org/pipermail/users/2014-April/004368.html) - which got me past the first blocking point.
>>
>> But now I can't get Qt to work (e.g. examples/queens.cpp). I can see that qt5.1.0 is installed in /usr/local/ but I can't figure out how to add the necessary frameworks (probably the ones in /usr/local/qt5.1.0/lib/.) to the project. For gecode.framework I use File/Add Files to.. and click to /Library/Frameworks - but /usr/local is inaccessible from the Finder interface.. Is there some other mechanism or do I need to add some soft links or similar? (The Add/Existing Frameworks.. mentioned in MGP 2.3.2 I have not found..)
>>
>> BTW, the command line option does not work either as stated in the documentation (MGP 2.3.2), neither with g++ or clang - see the log below. The "default header search path" does not seem to be sufficient.. I guess there's some include or library options that's needed - any help on that as well? (I think this is the reason I have no success in using Eclipse/CDT either..).
>>
>> Thanks for any help or tip you can provide, primarily regarding accessing Qt in Xcode!
>> /Tomas

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140407/c38c4a23/attachment.html>

From cschulte at kth.se  Mon Apr  7 09:48:00 2014
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 7 Apr 2014 09:48:00 +0200
Subject: [gecode-users] Using custom branching options
In-Reply-To: <CAAruBSoe-9ZM2xmkVjM0BR4RUcPQ3b0SDYHYhPWSEAqoic9sgw@mail.gmail.com>
References: <CAAruBSoe-9ZM2xmkVjM0BR4RUcPQ3b0SDYHYhPWSEAqoic9sgw@mail.gmail.com>
Message-ID: <002301cf5235$b2d82dd0$18888970$@se>

Hi,

 

Please read the changelog! 

 

What used to be an enum value such as INT_VAR_NONE before 4.* is now a
function that when called creates a branching description, that is
INT_VAR_NONE(). Please check MPG.

 

Cheers

Christian

 

--

Christian Schulte, Professor of Computer Science, KTH,
www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Tadele Kebebe
Sent: Saturday, April 05, 2014 12:36 AM
To: users at gecode.org
Subject: [gecode-users] Using custom branching options

 

Hi there, 

 

I am using a custom option class which inherits from the Gecode::Options
class. The custom class looks as below:

 

class Cbcl_Options : public Options{

    protected:

         StringOption _branchval;

         ...

    public:

        Cbcl_Options(const char* e) : Options(e), ....{

             ....

             _branching.add(INT_VAR_NONE, "input");

             _branching.add(INT_VAR_MIN_MIN, "min");

             ...

             branching(INT_VAR_DEGREE_MAX);

             ....

             _branchval.add(INT_VAL_MIN, "min");

             ...

             add(_branchval);

             ....

        }

        ...

}

 

I have used the proper namespaces and header files, but when I compile the
code it gave me the following errors:

 

g++ -Wall -g -I/usr/local/include -c cbcl_options.cpp

cbcl_options.cpp: In constructor 'Cbcl_Options::Cbcl_Options(const char*)':

cbcl_options.cpp:75:40: error: invalid conversion from 'Gecode::IntVarBranch
(*)()' to 'int' [-fpermissive]

    _branching.add(INT_VAR_NONE, "input");

                                        ^

In file included from cbcl_options.cpp:7:0:

/usr/local/include/gecode/driver.hh:195:12: error:   initializing argument 1
of 'void Gecode::Driver::StringOption::add(int, const char*, const char*)'
[-fpermissive]

       void add(int v, const char* o, const char* h = NULL);

            ^

 

I am using gecode-4.2.1, but the seems to work on gecode-3.7.1. 

Can you please help me in correcting those errors. 

 

Thanks

tad.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140407/cb569407/attachment-0001.html>

From tack at gecode.org  Mon Apr  7 12:18:49 2014
From: tack at gecode.org (Guido Tack)
Date: Mon, 7 Apr 2014 20:18:49 +1000
Subject: [gecode-users] Mac XCode configuration
In-Reply-To: <5342566F.1030904@liu.se>
References: <5341B868.7090007@liu.se>
	<6ADD648E-116B-48AB-9143-8613B6EC768C@gecode.org>
	<5342566F.1030904@liu.se>
Message-ID: <AD6A61B3-4AE9-46DB-9B5D-2AEE185AF1BA@gecode.org>

On 7 Apr 2014, at 5:40 pm, Tomas Lid?n <tomas.liden at liu.se> wrote:

> Thanks for quick and adequate response!
> But still there's trouble... see below
> /T
> 
> Guido Tack wrote 2014-04-07 02:03:
>> Hi,
>> 
>> to add a system folder such as /usr/local, open the "Add Files to..." dialog, press Command+Shift+G, and enter the path directly.
>> 
> Great. That got me halfway.
> After adding the frameworks QtGui, QtWidgets and QtCore and adjusting the include statements to
> #include <QtGui/QtGui>
> #include <QtWidgets/QtWidgets>
> the compilation ends with the following error:
> /usr/local/qt5.1.0/lib/QtCore.framework/Headers/qlist.h:52:10: 'initializer_list' file not found
> 
> According to (http://comments.gmane.org/gmane.comp.lib.qt.user/8357) and (the subsequent links) this is due to Qt requiring -stdlib=libc+ (not libc++ ?) and c++11 - which is in conflict with libstdc++ that is required by Gecode. Hmm.. I can't figure out to get passed this - tried varies ways in Xcode, but no luck so far. Should I perhaps download and install Qt directly from the source rather than using the version coming with Gecode?

I will probably build new packages soon based on libc++ and linked to the newest version of Qt, but until then you basically have two alternatives: compile Gecode from sources with libc++, or compile Qt from sources with libstdc++.

>> On the command line, I think Xcode may have changed the default paths for frameworks, you could try adding -F/Library/Frameworks to your compiler options.
>> 
> That almost did the trick. Again I had to add options for selecting libstdc++ etc, but still I get an error. After trying the (what I think) options that Xcode uses I get:
> 
> $ g++ -std=gnu++11 -stdlib=libstdc++ -O3 -F/Library/Frameworks -c money.cpp
> money.cpp:1:1: error: expected unqualified-id
> <U+001C>/* -*- mode: C++; c-basic-offset: 2; indent-tabs-mode: nil -*- */
> ^

Have a look at the money.cpp file, looks like there's a funny character on the first line.

Cheers,
Guido

> In file included from money.cpp:38:
> In file included from /Library/Frameworks/gecode.framework/Headers/driver.hh:41:
> In file included from /Library/Frameworks/gecode.framework/Headers/minimodel.hh:47:
> In file included from /Library/Frameworks/gecode.framework/Headers/kernel.hh:127:
> /Library/Frameworks/gecode.framework/Headers/kernel/core.hpp:3800:7: warning: 
>       array index 1 is past the end of the array (which contains 1 element)
>       [-Warray-bounds]
>       x->u.idx[1] = u.idx[1];
>       ^        ~
> /Library/Frameworks/gecode.framework/Headers/kernel/core.hpp:3829:49: note: in
>       instantiation of member function
>       'Gecode::VarImp<Gecode::Int::BoolVarImpConf>::update' requested here
>       VarImp<VIC>* n = x->next(); x->forward()->update(x,sub); x = n;
>                                                 ^
> /Library/Frameworks/gecode.framework/Headers/kernel/var-imp.hpp:407:50: note: 
>       in instantiation of member function
>       'Gecode::VarImp<Gecode::Int::BoolVarImpConf>::update' requested here
>     Gecode::VarImp<Gecode::Int::BoolVarImpConf>::update(*this,sub);
>                                                  ^
> /Library/Frameworks/gecode.framework/Headers/kernel/core.hpp:339:7: note: array
>       'idx' declared here
>       unsigned int idx[pc_max+1];
>       ^
> /Library/Frameworks/gecode.framework/Headers/kernel/core.hpp:3800:21: warning: 
>       array index 1 is past the end of the array (which contains 1 element)
>       [-Warray-bounds]
>       x->u.idx[1] = u.idx[1];
>                     ^     ~
> /Library/Frameworks/gecode.framework/Headers/kernel/core.hpp:339:7: note: array
>       'idx' declared here
>       unsigned int idx[pc_max+1];
>       ^
> 2 warnings and 1 error generated.
> 
> clang gives the same result..
>> Cheers
>> Guido
>> 
>> On 7 Apr 2014, at 6:26 am, Tomas Lid?n 
>> <tomas.liden at liu.se>
>>  wrote:
>> 
>> 
>>> Hi!
>>> 
>>> I'm running MacOS 10.9.2, Xcode 5.1 (5B130a) and Gecode 4.2.1 - all freshly updated/installed.
>>> But being a newbie (both to Xcode and Gecode) and a bit rusty on C++, I have some trouble getting the configurations right..
>>> 
>>> Firstly a great thanks for Guido's help regarding libstdc++ (
>>> http://www.gecode.org/pipermail/users/2014-April/004368.html
>>> ) - which got me past the first blocking point.
>>> 
>>> But now I can't get Qt to work (e.g. examples/queens.cpp). I can see that qt5.1.0 is installed in /usr/local/ but I can't figure out how to add the necessary frameworks (probably the ones in /usr/local/qt5.1.0/lib/.) to the project. For gecode.framework I use File/Add Files to.. and click to /Library/Frameworks - but /usr/local is inaccessible from the Finder interface.. Is there some other mechanism or do I need to add some soft links or similar? (The Add/Existing Frameworks.. mentioned in MGP 2.3.2 I have not found..)
>>> 
>>> BTW, the command line option does not work either as stated in the documentation (MGP 2.3.2), neither with g++ or clang - see the log below. The "default header search path" does not seem to be sufficient.. I guess there's some include or library options that's needed - any help on that as well? (I think this is the reason I have no success in using Eclipse/CDT either..).
>>> 
>>> Thanks for any help or tip you can provide, primarily regarding accessing Qt in Xcode!
>>> /Tomas
>>> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users



From tomas.liden at liu.se  Mon Apr  7 19:54:38 2014
From: tomas.liden at liu.se (=?ISO-8859-1?Q?Tomas_Lid=E9n?=)
Date: Mon, 7 Apr 2014 19:54:38 +0200
Subject: [gecode-users] Mac XCode configuration
In-Reply-To: <AD6A61B3-4AE9-46DB-9B5D-2AEE185AF1BA@gecode.org>
References: <5341B868.7090007@liu.se>
	<6ADD648E-116B-48AB-9143-8613B6EC768C@gecode.org>
	<5342566F.1030904@liu.se>
	<AD6A61B3-4AE9-46DB-9B5D-2AEE185AF1BA@gecode.org>
Message-ID: <5342E65E.3090808@liu.se>

Guido Tack skrev 2014-04-07 12:18:
> On 7 Apr 2014, at 5:40 pm, Tomas Lid?n <tomas.liden at liu.se> wrote:
>
>> Thanks for quick and adequate response!
>> But still there's trouble... see below
>> /T
>>
>> Guido Tack wrote 2014-04-07 02:03:
>>> Hi,
>>>
>>> to add a system folder such as /usr/local, open the "Add Files to..." dialog, press Command+Shift+G, and enter the path directly.
>>>
>> Great. That got me halfway.
>> After adding the frameworks QtGui, QtWidgets and QtCore and adjusting the include statements to
>> #include <QtGui/QtGui>
>> #include <QtWidgets/QtWidgets>
>> the compilation ends with the following error:
>> /usr/local/qt5.1.0/lib/QtCore.framework/Headers/qlist.h:52:10: 'initializer_list' file not found
>>
>> According to (http://comments.gmane.org/gmane.comp.lib.qt.user/8357) and (the subsequent links) this is due to Qt requiring -stdlib=libc+ (not libc++ ?) and c++11 - which is in conflict with libstdc++ that is required by Gecode. Hmm.. I can't figure out to get passed this - tried varies ways in Xcode, but no luck so far. Should I perhaps download and install Qt directly from the source rather than using the version coming with Gecode?
> I will probably build new packages soon based on libc++ and linked to the newest version of Qt, but until then you basically have two alternatives: compile Gecode from sources with libc++, or compile Qt from sources with libstdc++.
>
Great. I will await the new builds. And until then I'll do without Qt.
>>> On the command line, I think Xcode may have changed the default paths for frameworks, you could try adding -F/Library/Frameworks to your compiler options.
>>>
>> That almost did the trick. Again I had to add options for selecting libstdc++ etc, but still I get an error. After trying the (what I think) options that Xcode uses I get:
>>
>> $ g++ -std=gnu++11 -stdlib=libstdc++ -O3 -F/Library/Frameworks -c money.cpp
>> money.cpp:1:1: error: expected unqualified-id
>> <U+001C>/* -*- mode: C++; c-basic-offset: 2; indent-tabs-mode: nil -*- */
>> ^
> Have a look at the money.cpp file, looks like there's a funny character on the first line.
>
>
:-? That was a creepy one! And I had to pick just that file... Removing 
the character did the trick. Maybe you should fix that in the next build 
as well.

And in MGP section 2.3.2 there's some minor issues:
1) Correct the command line example - the last line should at least end 
with send-more-money.o
2) Update the Xcode description regarding adding frameworks

Thanks again for your help!
/Tomas



From negate273 at gmail.com  Fri Apr 11 08:22:55 2014
From: negate273 at gmail.com (negate273 at gmail.com)
Date: Thu, 10 Apr 2014 23:22:55 -0700
Subject: [gecode-users] C++ equivalent of flatzinc
Message-ID: <5C31B39E-D6C3-422B-8ED7-763FF7956792@gmail.com>

Hi, 
Gecode can solve models that are written in Flatzinc with the tools/flatzinc/fzn-gecode. Since Gecode allows models to be specified in the C++ and compiled (as shown in the examples ), Is there any way by which we can dump the C++ code equivalent for the flatzinc model ?

Thanks, ~az

From tack at gecode.org  Fri Apr 11 08:24:26 2014
From: tack at gecode.org (Guido Tack)
Date: Fri, 11 Apr 2014 16:24:26 +1000
Subject: [gecode-users] C++ equivalent of flatzinc
In-Reply-To: <5C31B39E-D6C3-422B-8ED7-763FF7956792@gmail.com>
References: <5C31B39E-D6C3-422B-8ED7-763FF7956792@gmail.com>
Message-ID: <FEAFCE64-86CC-425B-8526-9802F0059B96@gecode.org>

Hi,

sorry, that's currently not supported.  If you think that would be worthwhile, you could start from the flatzinc interpreter and write a simple code generator.

Cheers,
Guido

On 11 Apr 2014, at 4:22 pm, negate273 at gmail.com wrote:

> Hi, 
> Gecode can solve models that are written in Flatzinc with the tools/flatzinc/fzn-gecode. Since Gecode allows models to be specified in the C++ and compiled (as shown in the examples ), Is there any way by which we can dump the C++ code equivalent for the flatzinc model ?
> 
> Thanks, ~az
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users



From negate273 at gmail.com  Fri Apr 11 09:38:55 2014
From: negate273 at gmail.com (negate273 at gmail.com)
Date: Fri, 11 Apr 2014 00:38:55 -0700
Subject: [gecode-users] Random Distributions (INT_VAL_RAND)
Message-ID: <5619149A-A726-43DC-84F9-C737D82F4FA1@gmail.com>

Are there any implementations for different random distributions for integer *value* selection, besides the uniform distribution supported by INT_VAL_RND() ? For Eg. I?d like the values to be distributed based on a normal distribution or maybe a logarithmic distribution. 
If not, can you point me to some code which would be a good starting point to implement such a value selection method, as I?m not sure where the implementation for INT_VAL_RND exists ? Is it in gecode/int/branch/val-sel-commit.cpp ?
There was a thread in May 2009 titled ?How to set an arbitrary RandomGenerator for randomized branching?, but  not sure if it ever got implemented ?

Thanks, ~az 

From tack at gecode.org  Fri Apr 11 10:11:42 2014
From: tack at gecode.org (Guido Tack)
Date: Fri, 11 Apr 2014 18:11:42 +1000
Subject: [gecode-users] Random Distributions (INT_VAL_RAND)
In-Reply-To: <5619149A-A726-43DC-84F9-C737D82F4FA1@gmail.com>
References: <5619149A-A726-43DC-84F9-C737D82F4FA1@gmail.com>
Message-ID: <E1473C49-24FB-4E54-A519-54500E368C01@gecode.org>

Have a look at Sect. 8.8 in MPG, it shows how to implement a custom value selection strategy.

Cheers,
Guido

On 11 Apr 2014, at 5:38 pm, negate273 at gmail.com wrote:

> Are there any implementations for different random distributions for integer *value* selection, besides the uniform distribution supported by INT_VAL_RND() ? For Eg. I?d like the values to be distributed based on a normal distribution or maybe a logarithmic distribution. 
> If not, can you point me to some code which would be a good starting point to implement such a value selection method, as I?m not sure where the implementation for INT_VAL_RND exists ? Is it in gecode/int/branch/val-sel-commit.cpp ?
> There was a thread in May 2009 titled ?How to set an arbitrary RandomGenerator for randomized branching?, but  not sure if it ever got implemented ?
> 
> Thanks, ~az 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users



From cschulte at kth.se  Fri Apr 11 10:19:06 2014
From: cschulte at kth.se (Christian Schulte)
Date: Fri, 11 Apr 2014 10:19:06 +0200
Subject: [gecode-users] Random Distributions (INT_VAL_RAND)
In-Reply-To: <E1473C49-24FB-4E54-A519-54500E368C01@gecode.org>
References: <5619149A-A726-43DC-84F9-C737D82F4FA1@gmail.com>
	<E1473C49-24FB-4E54-A519-54500E368C01@gecode.org>
Message-ID: <013701cf555e$b52a78a0$1f7f69e0$@se>

Actually, there might be an easier way to do. Have a look at the Gecode
source file gecode/kernel/rnd.hpp. If you implement a random number
generator that has the very same interface (just replace
Support::RandomGenerator by your own random number generator) you can use
that instead for the normal branchers.

Cheers
Christian

--
Christian Schulte, Professor of Computer Science, KTH,
www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Guido Tack
Sent: Friday, April 11, 2014 10:12 AM
To: negate273 at gmail.com
Cc: users at gecode.org
Subject: Re: [gecode-users] Random Distributions (INT_VAL_RAND)

Have a look at Sect. 8.8 in MPG, it shows how to implement a custom value
selection strategy.

Cheers,
Guido

On 11 Apr 2014, at 5:38 pm, negate273 at gmail.com wrote:

> Are there any implementations for different random distributions for
integer *value* selection, besides the uniform distribution supported by
INT_VAL_RND() ? For Eg. I'd like the values to be distributed based on a
normal distribution or maybe a logarithmic distribution. 
> If not, can you point me to some code which would be a good starting point
to implement such a value selection method, as I'm not sure where the
implementation for INT_VAL_RND exists ? Is it in
gecode/int/branch/val-sel-commit.cpp ?
> There was a thread in May 2009 titled "How to set an arbitrary
RandomGenerator for randomized branching", but  not sure if it ever got
implemented ?
> 
> Thanks, ~az 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users



From andrea.peano at unife.it  Tue Apr 15 14:35:09 2014
From: andrea.peano at unife.it (Andrea Peano)
Date: Tue, 15 Apr 2014 14:35:09 +0200
Subject: [gecode-users] Multithreading executions crash
Message-ID: <CAGTgUnO1f9GAFjzxTudLQDjkNAa3zibErg2cd+2mKOF2FhKgZg@mail.gmail.com>

Hello everyone,
my model is solved by a two-steps search. The first step can be a DFS as
well as a BAB search, the second step is always a DFS.

I implemented this search by following the section "Executing code between
branchers" of the Gecode's guide, like this:
branch(*this, MyModel::post)

The function "post" copies the current space into a local variable, then
instantiates a new DFS engine and finally calls the method "next", in order
to compute only the first solution.

MyModel *inner_model=static_cast<MyModel *>(this->clone(true));
inner_model->status();
...
inner_dfs.next();

The idea is to parallelize the first level of the search... but if I use
only one thread everything works fine, otherwise every time the execution
crashes on a different instruction of the function "post".

Do you have any clue about this behavior?
The worst scenario I see is that this solving architecture is totally
incompatible with the multithreading system implemented in Gecode.

Thanks,
Andrea
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140415/de65e106/attachment.html>

From cschulte at kth.se  Tue Apr 15 16:27:37 2014
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 15 Apr 2014 16:27:37 +0200
Subject: [gecode-users] Multithreading executions crash
In-Reply-To: <CAGTgUnO1f9GAFjzxTudLQDjkNAa3zibErg2cd+2mKOF2FhKgZg@mail.gmail.com>
References: <CAGTgUnO1f9GAFjzxTudLQDjkNAa3zibErg2cd+2mKOF2FhKgZg@mail.gmail.com>
Message-ID: <016101cf58b6$d9e269e0$8da73da0$@se>

Hi Andrea,

 

Whoa! Scary stuff ;-) That's not possible to clone a space that is currently in use for propagation (because that is what is still going on when the ::post function is executed).

 

However it should work much much easier: there has been a discussion in this users group a while ago on how to split search into two parts. Then you can parallelize each one. Just go through the archive (or maybe one of the users who took part in the discussion can help here).

 

Cheers

Christian

 

--

Christian Schulte, Professor of Computer Science, KTH, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Andrea Peano
Sent: Tuesday, April 15, 2014 2:35 PM
To: users at gecode.org
Subject: [gecode-users] Multithreading executions crash

 

Hello everyone,

my model is solved by a two-steps search. The first step can be a DFS as well as a BAB search, the second step is always a DFS.

 

I implemented this search by following the section "Executing code between branchers" of the Gecode's guide, like this:

branch(*this, MyModel::post)

 

The function "post" copies the current space into a local variable, then instantiates a new DFS engine and finally calls the method "next", in order to compute only the first solution.

 

MyModel *inner_model=static_cast<MyModel *>(this->clone(true));

inner_model->status();

...

inner_dfs.next();

 

The idea is to parallelize the first level of the search... but if I use only one thread everything works fine, otherwise every time the execution crashes on a different instruction of the function "post".

 

Do you have any clue about this behavior?

The worst scenario I see is that this solving architecture is totally incompatible with the multithreading system implemented in Gecode.

 

Thanks,

Andrea

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140415/0b3285ca/attachment.html>

From andrea.peano at unife.it  Tue Apr 15 17:07:31 2014
From: andrea.peano at unife.it (Andrea Peano)
Date: Tue, 15 Apr 2014 17:07:31 +0200
Subject: [gecode-users] Multithreading executions crash
In-Reply-To: <016101cf58b6$d9e269e0$8da73da0$@se>
References: <CAGTgUnO1f9GAFjzxTudLQDjkNAa3zibErg2cd+2mKOF2FhKgZg@mail.gmail.com>
	<016101cf58b6$d9e269e0$8da73da0$@se>
Message-ID: <CAGTgUnNmv4dG8cTqWXfU+hb4f-98+-SkCH=abKki9Fg0NKii2w@mail.gmail.com>

Thanks for your reply.

I tried to simplify my real architecture, maybe too much!

I create a "backup" space before starting the search, that is a copy of the
original space used during the search, and it is a global variable of the
code.

Within the ::post function I create a copy of the backup model, I update
this space by passing the current (partial) solution, and then I search the
first sol, like that:
MyModel *inner_model=static_cast<MyModel *>(backup->clone(true));
inner_model->update_variables(this->partial_sol_values());
inner_model->status();
...
inner_dfs.next();

Scary stuff again, I guess!

In general, I need of a partial solution before starting the second step in
order to run some scary heuristics :)

You refer to this discussion:
http://www.gecode.org/pipermail/users/2013-January/003769.html
don't you?

Thanks,
Andrea


On Tue, Apr 15, 2014 at 4:27 PM, Christian Schulte <cschulte at kth.se> wrote:

> Hi Andrea,
>
>
>
> Whoa! Scary stuff ;-) That's not possible to clone a space that is
> currently in use for propagation (because that is what is still going on
> when the ::post function is executed).
>
>
>
> However it should work much much easier: there has been a discussion in
> this users group a while ago on how to split search into two parts. Then
> you can parallelize each one. Just go through the archive (or maybe one of
> the users who took part in the discussion can help here).
>
>
>
> Cheers
>
> Christian
>
>
>
> --
>
> Christian Schulte, Professor of Computer Science, KTH,
> www.ict.kth.se/~cschulte/
>
>
>
> *From:* users-bounces at gecode.org [mailto:users-bounces at gecode.org] *On
> Behalf Of *Andrea Peano
> *Sent:* Tuesday, April 15, 2014 2:35 PM
> *To:* users at gecode.org
> *Subject:* [gecode-users] Multithreading executions crash
>
>
>
> Hello everyone,
>
> my model is solved by a two-steps search. The first step can be a DFS as
> well as a BAB search, the second step is always a DFS.
>
>
>
> I implemented this search by following the section "Executing code between
> branchers" of the Gecode's guide, like this:
>
> branch(*this, MyModel::post)
>
>
>
> The function "post" copies the current space into a local variable, then
> instantiates a new DFS engine and finally calls the method "next", in order
> to compute only the first solution.
>
>
>
> MyModel *inner_model=static_cast<MyModel *>(this->clone(true));
>
> inner_model->status();
>
> ...
>
> inner_dfs.next();
>
>
>
> The idea is to parallelize the first level of the search... but if I use
> only one thread everything works fine, otherwise every time the execution
> crashes on a different instruction of the function "post".
>
>
>
> Do you have any clue about this behavior?
>
> The worst scenario I see is that this solving architecture is totally
> incompatible with the multithreading system implemented in Gecode.
>
>
>
> Thanks,
>
> Andrea
>



-- 

Andrea Peano - PhD student
Department of Engineering - University of Ferrara
Tel: +39 0532 97 4827
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140415/90037855/attachment-0001.html>

From tack at gecode.org  Wed Apr 16 02:16:16 2014
From: tack at gecode.org (Guido Tack)
Date: Wed, 16 Apr 2014 10:16:16 +1000
Subject: [gecode-users] Multithreading executions crash
In-Reply-To: <CAGTgUnNmv4dG8cTqWXfU+hb4f-98+-SkCH=abKki9Fg0NKii2w@mail.gmail.com>
References: <CAGTgUnO1f9GAFjzxTudLQDjkNAa3zibErg2cd+2mKOF2FhKgZg@mail.gmail.com>
	<016101cf58b6$d9e269e0$8da73da0$@se>
	<CAGTgUnNmv4dG8cTqWXfU+hb4f-98+-SkCH=abKki9Fg0NKii2w@mail.gmail.com>
Message-ID: <533CCBA7-DE89-491A-9CDA-2DD11D817971@gecode.org>

Hi Andrea,

two things you could try:
1) if backup is a global variable, you need to protect it with a mutex, since clone is not thread-safe.
2) you're using the clones you create in different threads, so you should pass "false" to clone instead of "true" (that way the clone is really independent of backup and doesn't share any data structures with it)

Cheers,
Guido

On 16 Apr 2014, at 1:07 am, Andrea Peano <andrea.peano at unife.it> wrote:

> Thanks for your reply.
> 
> I tried to simplify my real architecture, maybe too much!
> 
> I create a "backup" space before starting the search, that is a copy of the original space used during the search, and it is a global variable of the code.
> 
> Within the ::post function I create a copy of the backup model, I update this space by passing the current (partial) solution, and then I search the first sol, like that:
> MyModel *inner_model=static_cast<MyModel *>(backup->clone(true));
> inner_model->update_variables(this->partial_sol_values());
> inner_model->status();
> ...
> inner_dfs.next();
> 
> Scary stuff again, I guess!
> 
> In general, I need of a partial solution before starting the second step in order to run some scary heuristics :)
> 
> You refer to this discussion:
> http://www.gecode.org/pipermail/users/2013-January/003769.html
> don't you?
> 
> Thanks,
> Andrea
> 
> 
> On Tue, Apr 15, 2014 at 4:27 PM, Christian Schulte <cschulte at kth.se> wrote:
> Hi Andrea,
> 
>  
> 
> Whoa! Scary stuff ;-) That's not possible to clone a space that is currently in use for propagation (because that is what is still going on when the ::post function is executed).
> 
>  
> 
> However it should work much much easier: there has been a discussion in this users group a while ago on how to split search into two parts. Then you can parallelize each one. Just go through the archive (or maybe one of the users who took part in the discussion can help here).
> 
>  
> 
> Cheers
> 
> Christian
> 
>  
> 
> --
> 
> Christian Schulte, Professor of Computer Science, KTH, www.ict.kth.se/~cschulte/
> 
>  
> 
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Andrea Peano
> Sent: Tuesday, April 15, 2014 2:35 PM
> To: users at gecode.org
> Subject: [gecode-users] Multithreading executions crash
> 
>  
> 
> Hello everyone,
> 
> my model is solved by a two-steps search. The first step can be a DFS as well as a BAB search, the second step is always a DFS.
> 
>  
> 
> I implemented this search by following the section "Executing code between branchers" of the Gecode's guide, like this:
> 
> branch(*this, MyModel::post)
> 
>  
> 
> The function "post" copies the current space into a local variable, then instantiates a new DFS engine and finally calls the method "next", in order to compute only the first solution.
> 
>  
> 
> MyModel *inner_model=static_cast<MyModel *>(this->clone(true));
> 
> inner_model->status();
> 
> ...
> 
> inner_dfs.next();
> 
>  
> 
> The idea is to parallelize the first level of the search... but if I use only one thread everything works fine, otherwise every time the execution crashes on a different instruction of the function "post".
> 
>  
> 
> Do you have any clue about this behavior?
> 
> The worst scenario I see is that this solving architecture is totally incompatible with the multithreading system implemented in Gecode.
> 
>  
> 
> Thanks,
> 
> Andrea
> 
> 
> 
> 
> -- 
> 
> Andrea Peano - PhD student
> Department of Engineering - University of Ferrara
> Tel: +39 0532 97 4827
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140416/150a0037/attachment.html>

From negate273 at gmail.com  Mon Apr 21 02:47:00 2014
From: negate273 at gmail.com (negate273 at gmail.com)
Date: Sun, 20 Apr 2014 17:47:00 -0700
Subject: [gecode-users] Integer Variable Randomization
Message-ID: <730155E1-E16E-49CB-A1D6-5C12FEBDA4A3@gmail.com>

Hi,  I?m seeing an exponential time increase in the time to just randomize integer variables. My test program is based on ?examples/money.cpp? , and I removed the constraints and simply randomize the integer variables by using INT_VAL_RND()
    ?>    branch(*this, le, INT_VAR_SIZE_MIN(), INT_VAL_RND(rnd));
Is the exponential increase in time with the number of integer random variables in Gecode expected ? and if so, why. And can this be improved by modifying the model ? 
Thanks..

NVars	SolveTime(in Seconds)
10000	0.734
20000	3.267
30000	7.67
40000	18.262
50000	31.274
60000	50.674
70000	73.82

Complete Test program - 

    #include <gecode/driver.hh>
    #include <gecode/int.hh>
    #include <gecode/minimodel.hh>
    
    using namespace Gecode;
    
    class Money : public Script {
    protected:
      /// Number of letters
      static const int nl = 70000;     // <???? This number corresponds with NVars listed above.
      /// Array of letters
      IntVarArray le;
    public:
      /// Model variants
      enum {
        MODEL_SINGLE, ///< Use single linear equation
        MODEL_CARRY   ///< Use carries
      };
      /// Actual model
      Money(const Options& opt) : le(*this,nl,0,65535) {  // <?????????? BOUNDS for integer variable
        Rnd rnd(314) ;  
        branch(*this, le, INT_VAR_SIZE_MIN(), INT_VAL_RND(rnd)); // <??????? Random numbers to integers. 
      }
      /// Print solution
      virtual void
      print(std::ostream& os) const {
        // os << "\t" << le << std::endl;
      }
    
      /// Constructor for cloning \a s
      Money(bool share, Money& s) : Script(share,s) {
        le.update(*this, share, s.le);
      }
      /// Copy during cloning
      virtual Space*
      copy(bool share) {
        return new Money(share,*this);
      }
    };
    
    /** \brief Main-function
     *  \relates Money
     */
    int
    main(int argc, char* argv[]) {
      Options opt("SEND+?MORE=MONEY");
      opt.model(Money::MODEL_SINGLE);
      opt.solutions(1);
      Script::run<Money,DFS,Options>(opt);
      std::cout <<  "--- \n" ; 
      return 0;
    }
    
    // STATISTICS: example-any



From cschulte at kth.se  Mon Apr 21 13:12:54 2014
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 21 Apr 2014 13:12:54 +0200
Subject: [gecode-users] Integer Variable Randomization
In-Reply-To: <730155E1-E16E-49CB-A1D6-5C12FEBDA4A3@gmail.com>
References: <730155E1-E16E-49CB-A1D6-5C12FEBDA4A3@gmail.com>
Message-ID: <001101cf5d52$bdd07350$397159f0$@kth.se>

Just check the number of search steps needed, it can tell you something more
important than time.

Then (I am guessing here), given that your model is based on money it has
lost of linear constraints in it, right? There you will only get propagation
if by branching either the lower or upper bound of the values for a variable
changes. If you just randomize you are likely to choose an inner value which
might not give that much propagation.

Best
Christian 

--
Christian Schulte, KTH, web.it.kth.se/~cschulte/

-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of negate273 at gmail.com
Sent: Monday, April 21, 2014 02:47 AM
To: users at gecode.org
Subject: [gecode-users] Integer Variable Randomization

Hi,  I'm seeing an exponential time increase in the time to just randomize
integer variables. My test program is based on "examples/money.cpp" , and I
removed the constraints and simply randomize the integer variables by using
INT_VAL_RND()
    ->    branch(*this, le, INT_VAR_SIZE_MIN(), INT_VAL_RND(rnd));
Is the exponential increase in time with the number of integer random
variables in Gecode expected ? and if so, why. And can this be improved by
modifying the model ? 
Thanks..

NVars	SolveTime(in Seconds)
10000	0.734
20000	3.267
30000	7.67
40000	18.262
50000	31.274
60000	50.674
70000	73.82

Complete Test program - 

    #include <gecode/driver.hh>
    #include <gecode/int.hh>
    #include <gecode/minimodel.hh>
    
    using namespace Gecode;
    
    class Money : public Script {
    protected:
      /// Number of letters
      static const int nl = 70000;     // <---- This number corresponds with
NVars listed above.
      /// Array of letters
      IntVarArray le;
    public:
      /// Model variants
      enum {
        MODEL_SINGLE, ///< Use single linear equation
        MODEL_CARRY   ///< Use carries
      };
      /// Actual model
      Money(const Options& opt) : le(*this,nl,0,65535) {  // <----------
BOUNDS for integer variable
        Rnd rnd(314) ;  
        branch(*this, le, INT_VAR_SIZE_MIN(), INT_VAL_RND(rnd)); // <-------
Random numbers to integers. 
      }
      /// Print solution
      virtual void
      print(std::ostream& os) const {
        // os << "\t" << le << std::endl;
      }
    
      /// Constructor for cloning \a s
      Money(bool share, Money& s) : Script(share,s) {
        le.update(*this, share, s.le);
      }
      /// Copy during cloning
      virtual Space*
      copy(bool share) {
        return new Money(share,*this);
      }
    };
    
    /** \brief Main-function
     *  \relates Money
     */
    int
    main(int argc, char* argv[]) {
      Options opt("SEND+?MORE=MONEY");
      opt.model(Money::MODEL_SINGLE);
      opt.solutions(1);
      Script::run<Money,DFS,Options>(opt);
      std::cout <<  "--- \n" ; 
      return 0;
    }
    
    // STATISTICS: example-any


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users



From negate273 at gmail.com  Wed Apr 23 17:58:11 2014
From: negate273 at gmail.com (negate273 at gmail.com)
Date: Wed, 23 Apr 2014 08:58:11 -0700
Subject: [gecode-users] Integer Variable Randomization
In-Reply-To: <001101cf5d52$bdd07350$397159f0$@kth.se>
References: <730155E1-E16E-49CB-A1D6-5C12FEBDA4A3@gmail.com>
	<001101cf5d52$bdd07350$397159f0$@kth.se>
Message-ID: <7304D218-1550-4CA1-81CC-2E57DEB11107@gmail.com>

The statistics reveal that the ?Peak depth? and ?Nodes? are the same as the number of variables. Where can I get the number of ?Search steps? ? 
My model did not have *any* constraints (model is copied below).I modified the bounds of the variables to see if the bounds made a difference in the solution time, but it did not. 
MODEL -  
  class Money : public Script {
   protected:
     /// Number of letters
     static const int nl = 70000;     // <---- This number corresponds with NVars listed above.
     /// Array of letters
     IntVarArray le;
   public:
     /// Model variants
     enum {
       MODEL_SINGLE, ///< Use single linear equation
       MODEL_CARRY   ///< Use carries
     };
     /// Actual model
     Money(const Options& opt) : le(*this,nl,0,65535) {  // <----------BOUNDS for integer variable
       Rnd rnd(314) ;  
       branch(*this, le, INT_VAR_SIZE_MIN(), INT_VAL_RND(rnd)); // <-------Random numbers to integers. 
     }
     /// Print solution
     virtual void
     print(std::ostream& os) const {
       // os << "\t" << le << std::endl;
     }

     /// Constructor for cloning \a s
     Money(bool share, Money& s) : Script(share,s) {
       le.update(*this, share, s.le);
     }
     /// Copy during cloning
     virtual Space*
     copy(bool share) {
       return new Money(share,*this);
     }
   };

   /** \brief Main-function
    *  \relates Money
    */
   int
   main(int argc, char* argv[]) {
     Options opt("SEND+?MORE=MONEY");
     opt.model(Money::MODEL_SINGLE);
     opt.solutions(1);
     Script::run<Money,DFS,Options>(opt);
     std::cout <<  "--- \n" ; 
     return 0;
}
On Apr 21, 2014, at 4:12 AM, Christian Schulte <cschulte at kth.se> wrote:

> Just check the number of search steps needed, it can tell you something more
> important than time.
> 
> Then (I am guessing here), given that your model is based on money it has
> lost of linear constraints in it, right? There you will only get propagation
> if by branching either the lower or upper bound of the values for a variable
> changes. If you just randomize you are likely to choose an inner value which
> might not give that much propagation.
> 
> Best
> Christian 
> 
> --
> Christian Schulte, KTH, web.it.kth.se/~cschulte/
> 
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of negate273 at gmail.com
> Sent: Monday, April 21, 2014 02:47 AM
> To: users at gecode.org
> Subject: [gecode-users] Integer Variable Randomization
> 
> Hi,  I'm seeing an exponential time increase in the time to just randomize
> integer variables. My test program is based on "examples/money.cpp" , and I
> removed the constraints and simply randomize the integer variables by using
> INT_VAL_RND()
>    ->    branch(*this, le, INT_VAR_SIZE_MIN(), INT_VAL_RND(rnd));
> Is the exponential increase in time with the number of integer random
> variables in Gecode expected ? and if so, why. And can this be improved by
> modifying the model ? 
> Thanks..
> 
> NVars	SolveTime(in Seconds)
> 10000	0.734
> 20000	3.267
> 30000	7.67
> 40000	18.262
> 50000	31.274
> 60000	50.674
> 70000	73.82
> 
> Complete Test program - 
> 
>    #include <gecode/driver.hh>
>    #include <gecode/int.hh>
>    #include <gecode/minimodel.hh>
> 
>    using namespace Gecode;
> 
>    class Money : public Script {
>    protected:
>      /// Number of letters
>      static const int nl = 70000;     // <---- This number corresponds with
> NVars listed above.
>      /// Array of letters
>      IntVarArray le;
>    public:
>      /// Model variants
>      enum {
>        MODEL_SINGLE, ///< Use single linear equation
>        MODEL_CARRY   ///< Use carries
>      };
>      /// Actual model
>      Money(const Options& opt) : le(*this,nl,0,65535) {  // <----------
> BOUNDS for integer variable
>        Rnd rnd(314) ;  
>        branch(*this, le, INT_VAR_SIZE_MIN(), INT_VAL_RND(rnd)); // <-------
> Random numbers to integers. 
>      }
>      /// Print solution
>      virtual void
>      print(std::ostream& os) const {
>        // os << "\t" << le << std::endl;
>      }
> 
>      /// Constructor for cloning \a s
>      Money(bool share, Money& s) : Script(share,s) {
>        le.update(*this, share, s.le);
>      }
>      /// Copy during cloning
>      virtual Space*
>      copy(bool share) {
>        return new Money(share,*this);
>      }
>    };
> 
>    /** \brief Main-function
>     *  \relates Money
>     */
>    int
>    main(int argc, char* argv[]) {
>      Options opt("SEND+?MORE=MONEY");
>      opt.model(Money::MODEL_SINGLE);
>      opt.solutions(1);
>      Script::run<Money,DFS,Options>(opt);
>      std::cout <<  "--- \n" ; 
>      return 0;
>    }
> 
>    // STATISTICS: example-any
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
> 



From jean-noel.monette at it.uu.se  Wed Apr 23 18:32:10 2014
From: jean-noel.monette at it.uu.se (=?windows-1252?Q?Jean-No=EBl_Monette?=)
Date: Wed, 23 Apr 2014 18:32:10 +0200
Subject: [gecode-users] Integer Variable Randomization
In-Reply-To: <7304D218-1550-4CA1-81CC-2E57DEB11107@gmail.com>
References: <730155E1-E16E-49CB-A1D6-5C12FEBDA4A3@gmail.com>	<001101cf5d52$bdd07350$397159f0$@kth.se>
	<7304D218-1550-4CA1-81CC-2E57DEB11107@gmail.com>
Message-ID: <5357EB0A.8090603@it.uu.se>

Hi,

Here is my understanding of your problem. If you have N variables, you 
will need N decisions to reach a "solution". And at each decision, 
Gecode will copy the whole model, that is N variables (Christian, 
correct if I am wrong). So the time spent should be at least quadratic 
in the number of variables. I am not sure whether the numbers you gave 
correspond much more to an exponential increase rather than to a 
quadratic increase. So this could be the explanation of your problem. I 
think that one way to check this would be to completely disable copying 
and replace it by recomputation. I am not sure how this is accomplished 
though.

Cheers,

Jean-No?l


On 23/04/14 17:58, negate273 at gmail.com wrote:
> The statistics reveal that the ?Peak depth? and ?Nodes? are the same as the number of variables. Where can I get the number of ?Search steps? ?
> My model did not have *any* constraints (model is copied below).I modified the bounds of the variables to see if the bounds made a difference in the solution time, but it did not.
> MODEL -
>    class Money : public Script {
>     protected:
>       /// Number of letters
>       static const int nl = 70000;     // <---- This number corresponds with NVars listed above.
>       /// Array of letters
>       IntVarArray le;
>     public:
>       /// Model variants
>       enum {
>         MODEL_SINGLE, ///< Use single linear equation
>         MODEL_CARRY   ///< Use carries
>       };
>       /// Actual model
>       Money(const Options& opt) : le(*this,nl,0,65535) {  // <----------BOUNDS for integer variable
>         Rnd rnd(314) ;
>         branch(*this, le, INT_VAR_SIZE_MIN(), INT_VAL_RND(rnd)); // <-------Random numbers to integers.
>       }
>       /// Print solution
>       virtual void
>       print(std::ostream& os) const {
>         // os << "\t" << le << std::endl;
>       }
>
>       /// Constructor for cloning \a s
>       Money(bool share, Money& s) : Script(share,s) {
>         le.update(*this, share, s.le);
>       }
>       /// Copy during cloning
>       virtual Space*
>       copy(bool share) {
>         return new Money(share,*this);
>       }
>     };
>
>     /** \brief Main-function
>      *  \relates Money
>      */
>     int
>     main(int argc, char* argv[]) {
>       Options opt("SEND+?MORE=MONEY");
>       opt.model(Money::MODEL_SINGLE);
>       opt.solutions(1);
>       Script::run<Money,DFS,Options>(opt);
>       std::cout <<  "--- \n" ;
>       return 0;
> }
> On Apr 21, 2014, at 4:12 AM, Christian Schulte <cschulte at kth.se> wrote:
>
>> Just check the number of search steps needed, it can tell you something more
>> important than time.
>>
>> Then (I am guessing here), given that your model is based on money it has
>> lost of linear constraints in it, right? There you will only get propagation
>> if by branching either the lower or upper bound of the values for a variable
>> changes. If you just randomize you are likely to choose an inner value which
>> might not give that much propagation.
>>
>> Best
>> Christian
>>
>> --
>> Christian Schulte, KTH, web.it.kth.se/~cschulte/
>>
>> -----Original Message-----
>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
>> Of negate273 at gmail.com
>> Sent: Monday, April 21, 2014 02:47 AM
>> To: users at gecode.org
>> Subject: [gecode-users] Integer Variable Randomization
>>
>> Hi,  I'm seeing an exponential time increase in the time to just randomize
>> integer variables. My test program is based on "examples/money.cpp" , and I
>> removed the constraints and simply randomize the integer variables by using
>> INT_VAL_RND()
>>     ->    branch(*this, le, INT_VAR_SIZE_MIN(), INT_VAL_RND(rnd));
>> Is the exponential increase in time with the number of integer random
>> variables in Gecode expected ? and if so, why. And can this be improved by
>> modifying the model ?
>> Thanks..
>>
>> NVars	SolveTime(in Seconds)
>> 10000	0.734
>> 20000	3.267
>> 30000	7.67
>> 40000	18.262
>> 50000	31.274
>> 60000	50.674
>> 70000	73.82
>>
>> Complete Test program -
>>
>>     #include <gecode/driver.hh>
>>     #include <gecode/int.hh>
>>     #include <gecode/minimodel.hh>
>>
>>     using namespace Gecode;
>>
>>     class Money : public Script {
>>     protected:
>>       /// Number of letters
>>       static const int nl = 70000;     // <---- This number corresponds with
>> NVars listed above.
>>       /// Array of letters
>>       IntVarArray le;
>>     public:
>>       /// Model variants
>>       enum {
>>         MODEL_SINGLE, ///< Use single linear equation
>>         MODEL_CARRY   ///< Use carries
>>       };
>>       /// Actual model
>>       Money(const Options& opt) : le(*this,nl,0,65535) {  // <----------
>> BOUNDS for integer variable
>>         Rnd rnd(314) ;
>>         branch(*this, le, INT_VAR_SIZE_MIN(), INT_VAL_RND(rnd)); // <-------
>> Random numbers to integers.
>>       }
>>       /// Print solution
>>       virtual void
>>       print(std::ostream& os) const {
>>         // os << "\t" << le << std::endl;
>>       }
>>
>>       /// Constructor for cloning \a s
>>       Money(bool share, Money& s) : Script(share,s) {
>>         le.update(*this, share, s.le);
>>       }
>>       /// Copy during cloning
>>       virtual Space*
>>       copy(bool share) {
>>         return new Money(share,*this);
>>       }
>>     };
>>
>>     /** \brief Main-function
>>      *  \relates Money
>>      */
>>     int
>>     main(int argc, char* argv[]) {
>>       Options opt("SEND+?MORE=MONEY");
>>       opt.model(Money::MODEL_SINGLE);
>>       opt.solutions(1);
>>       Script::run<Money,DFS,Options>(opt);
>>       std::cout <<  "--- \n" ;
>>       return 0;
>>     }
>>
>>     // STATISTICS: example-any
>>
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>



From negate273 at gmail.com  Wed Apr 23 19:20:56 2014
From: negate273 at gmail.com (negate273 at gmail.com)
Date: Wed, 23 Apr 2014 10:20:56 -0700
Subject: [gecode-users] Integer Variable Randomization
In-Reply-To: <5357EB0A.8090603@it.uu.se>
References: <730155E1-E16E-49CB-A1D6-5C12FEBDA4A3@gmail.com>
	<001101cf5d52$bdd07350$397159f0$@kth.se>
	<7304D218-1550-4CA1-81CC-2E57DEB11107@gmail.com>
	<5357EB0A.8090603@it.uu.se>
Message-ID: <03364C36-FEAE-4609-9684-925F4E6A312D@gmail.com>

The time seems quadratic not exponential. I misspoke on that. 

> I think that one way to check this would be to completely disable copying and replace it by recomputation. I am not sure how this is accomplished though

Would replacing the returning *this in the copy() method accomplish this ? 


> On Apr 23, 2014, at 9:32, Jean-No?l Monette <jean-noel.monette at it.uu.se> wrote:
> 
> Hi,
> 
> Here is my understanding of your problem. If you have N variables, you will need N decisions to reach a "solution". And at each decision, Gecode will copy the whole model, that is N variables (Christian, correct if I am wrong). So the time spent should be at least quadratic in the number of variables. I am not sure whether the numbers you gave correspond much more to an exponential increase rather than to a quadratic increase. So this could be the explanation of your problem. I think that one way to check this would be to completely disable copying and replace it by recomputation. I am not sure how this is accomplished though.
> 
> Cheers,
> 
> Jean-No?l
> 
> 
>> On 23/04/14 17:58, negate273 at gmail.com wrote:
>> The statistics reveal that the ?Peak depth? and ?Nodes? are the same as the number of variables. Where can I get the number of ?Search steps? ?
>> My model did not have *any* constraints (model is copied below).I modified the bounds of the variables to see if the bounds made a difference in the solution time, but it did not.
>> MODEL -
>>   class Money : public Script {
>>    protected:
>>      /// Number of letters
>>      static const int nl = 70000;     // <---- This number corresponds with NVars listed above.
>>      /// Array of letters
>>      IntVarArray le;
>>    public:
>>      /// Model variants
>>      enum {
>>        MODEL_SINGLE, ///< Use single linear equation
>>        MODEL_CARRY   ///< Use carries
>>      };
>>      /// Actual model
>>      Money(const Options& opt) : le(*this,nl,0,65535) {  // <----------BOUNDS for integer variable
>>        Rnd rnd(314) ;
>>        branch(*this, le, INT_VAR_SIZE_MIN(), INT_VAL_RND(rnd)); // <-------Random numbers to integers.
>>      }
>>      /// Print solution
>>      virtual void
>>      print(std::ostream& os) const {
>>        // os << "\t" << le << std::endl;
>>      }
>> 
>>      /// Constructor for cloning \a s
>>      Money(bool share, Money& s) : Script(share,s) {
>>        le.update(*this, share, s.le);
>>      }
>>      /// Copy during cloning
>>      virtual Space*
>>      copy(bool share) {
>>        return new Money(share,*this);
>>      }
>>    };
>> 
>>    /** \brief Main-function
>>     *  \relates Money
>>     */
>>    int
>>    main(int argc, char* argv[]) {
>>      Options opt("SEND+?MORE=MONEY");
>>      opt.model(Money::MODEL_SINGLE);
>>      opt.solutions(1);
>>      Script::run<Money,DFS,Options>(opt);
>>      std::cout <<  "--- \n" ;
>>      return 0;
>> }
>>> On Apr 21, 2014, at 4:12 AM, Christian Schulte <cschulte at kth.se> wrote:
>>> 
>>> Just check the number of search steps needed, it can tell you something more
>>> important than time.
>>> 
>>> Then (I am guessing here), given that your model is based on money it has
>>> lost of linear constraints in it, right? There you will only get propagation
>>> if by branching either the lower or upper bound of the values for a variable
>>> changes. If you just randomize you are likely to choose an inner value which
>>> might not give that much propagation.
>>> 
>>> Best
>>> Christian
>>> 
>>> --
>>> Christian Schulte, KTH, web.it.kth.se/~cschulte/
>>> 
>>> -----Original Message-----
>>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
>>> Of negate273 at gmail.com
>>> Sent: Monday, April 21, 2014 02:47 AM
>>> To: users at gecode.org
>>> Subject: [gecode-users] Integer Variable Randomization
>>> 
>>> Hi,  I'm seeing an exponential time increase in the time to just randomize
>>> integer variables. My test program is based on "examples/money.cpp" , and I
>>> removed the constraints and simply randomize the integer variables by using
>>> INT_VAL_RND()
>>>    ->    branch(*this, le, INT_VAR_SIZE_MIN(), INT_VAL_RND(rnd));
>>> Is the exponential increase in time with the number of integer random
>>> variables in Gecode expected ? and if so, why. And can this be improved by
>>> modifying the model ?
>>> Thanks..
>>> 
>>> NVars    SolveTime(in Seconds)
>>> 10000    0.734
>>> 20000    3.267
>>> 30000    7.67
>>> 40000    18.262
>>> 50000    31.274
>>> 60000    50.674
>>> 70000    73.82
>>> 
>>> Complete Test program -
>>> 
>>>    #include <gecode/driver.hh>
>>>    #include <gecode/int.hh>
>>>    #include <gecode/minimodel.hh>
>>> 
>>>    using namespace Gecode;
>>> 
>>>    class Money : public Script {
>>>    protected:
>>>      /// Number of letters
>>>      static const int nl = 70000;     // <---- This number corresponds with
>>> NVars listed above.
>>>      /// Array of letters
>>>      IntVarArray le;
>>>    public:
>>>      /// Model variants
>>>      enum {
>>>        MODEL_SINGLE, ///< Use single linear equation
>>>        MODEL_CARRY   ///< Use carries
>>>      };
>>>      /// Actual model
>>>      Money(const Options& opt) : le(*this,nl,0,65535) {  // <----------
>>> BOUNDS for integer variable
>>>        Rnd rnd(314) ;
>>>        branch(*this, le, INT_VAR_SIZE_MIN(), INT_VAL_RND(rnd)); // <-------
>>> Random numbers to integers.
>>>      }
>>>      /// Print solution
>>>      virtual void
>>>      print(std::ostream& os) const {
>>>        // os << "\t" << le << std::endl;
>>>      }
>>> 
>>>      /// Constructor for cloning \a s
>>>      Money(bool share, Money& s) : Script(share,s) {
>>>        le.update(*this, share, s.le);
>>>      }
>>>      /// Copy during cloning
>>>      virtual Space*
>>>      copy(bool share) {
>>>        return new Money(share,*this);
>>>      }
>>>    };
>>> 
>>>    /** \brief Main-function
>>>     *  \relates Money
>>>     */
>>>    int
>>>    main(int argc, char* argv[]) {
>>>      Options opt("SEND+?MORE=MONEY");
>>>      opt.model(Money::MODEL_SINGLE);
>>>      opt.solutions(1);
>>>      Script::run<Money,DFS,Options>(opt);
>>>      std::cout <<  "--- \n" ;
>>>      return 0;
>>>    }
>>> 
>>>    // STATISTICS: example-any
>>> 
>>> 
>>> _______________________________________________
>>> Gecode users mailing list
>>> users at gecode.org
>>> https://www.gecode.org/mailman/listinfo/gecode-users
>> 
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140423/b83acc08/attachment-0001.html>

From tack at gecode.org  Thu Apr 24 09:53:24 2014
From: tack at gecode.org (Guido Tack)
Date: Thu, 24 Apr 2014 17:53:24 +1000
Subject: [gecode-users] Integer Variable Randomization
In-Reply-To: <03364C36-FEAE-4609-9684-925F4E6A312D@gmail.com>
References: <730155E1-E16E-49CB-A1D6-5C12FEBDA4A3@gmail.com>
	<001101cf5d52$bdd07350$397159f0$@kth.se>
	<7304D218-1550-4CA1-81CC-2E57DEB11107@gmail.com>
	<5357EB0A.8090603@it.uu.se>
	<03364C36-FEAE-4609-9684-925F4E6A312D@gmail.com>
Message-ID: <2E441518-7C27-4BBE-8ECF-3F1617BDE989@gecode.org>

Hi,

Jean-Noel's observation is correct that copying introduces a linear factor into the runtime.  By default, copies are created every 8 steps down a branch.  You can set the recomputation parameters on the command line, using -c-d and -a-d, if you add a call to 

opt.parse(argc,argv);

To completely disable copying, set both distances to something higher than the number of variables, e.g. -c-d 1000000 -a-d 1000000.  In your particular case, where there is no real search (since you don't have constraints), that should change the runtime from quadratic to linear.  

However, in a problem that requires backtracking, you still need to create at least one copy per failure, so you can still get that quadratic runtime behaviour.

Cheers,
Guido

-- 
Guido Tack
http://www.csse.monash.edu/~guidot/



On 24 Apr 2014, at 3:20 am, negate273 at gmail.com wrote:

> The time seems quadratic not exponential. I misspoke on that. 
> 
>> I think that one way to check this would be to completely disable copying and replace it by recomputation. I am not sure how this is accomplished though
> 
> Would replacing the returning *this in the copy() method accomplish this ? 
> 
> 
> On Apr 23, 2014, at 9:32, Jean-No?l Monette <jean-noel.monette at it.uu.se> wrote:
> 
>> Hi,
>> 
>> Here is my understanding of your problem. If you have N variables, you will need N decisions to reach a "solution". And at each decision, Gecode will copy the whole model, that is N variables (Christian, correct if I am wrong). So the time spent should be at least quadratic in the number of variables. I am not sure whether the numbers you gave correspond much more to an exponential increase rather than to a quadratic increase. So this could be the explanation of your problem. I think that one way to check this would be to completely disable copying and replace it by recomputation. I am not sure how this is accomplished though.
>> 
>> Cheers,
>> 
>> Jean-No?l
>> 
>> 
>> On 23/04/14 17:58, negate273 at gmail.com wrote:
>>> The statistics reveal that the ?Peak depth? and ?Nodes? are the same as the number of variables. Where can I get the number of ?Search steps? ?
>>> My model did not have *any* constraints (model is copied below).I modified the bounds of the variables to see if the bounds made a difference in the solution time, but it did not.
>>> MODEL -
>>>   class Money : public Script {
>>>    protected:
>>>      /// Number of letters
>>>      static const int nl = 70000;     // <---- This number corresponds with NVars listed above.
>>>      /// Array of letters
>>>      IntVarArray le;
>>>    public:
>>>      /// Model variants
>>>      enum {
>>>        MODEL_SINGLE, ///< Use single linear equation
>>>        MODEL_CARRY   ///< Use carries
>>>      };
>>>      /// Actual model
>>>      Money(const Options& opt) : le(*this,nl,0,65535) {  // <----------BOUNDS for integer variable
>>>        Rnd rnd(314) ;
>>>        branch(*this, le, INT_VAR_SIZE_MIN(), INT_VAL_RND(rnd)); // <-------Random numbers to integers.
>>>      }
>>>      /// Print solution
>>>      virtual void
>>>      print(std::ostream& os) const {
>>>        // os << "\t" << le << std::endl;
>>>      }
>>> 
>>>      /// Constructor for cloning \a s
>>>      Money(bool share, Money& s) : Script(share,s) {
>>>        le.update(*this, share, s.le);
>>>      }
>>>      /// Copy during cloning
>>>      virtual Space*
>>>      copy(bool share) {
>>>        return new Money(share,*this);
>>>      }
>>>    };
>>> 
>>>    /** \brief Main-function
>>>     *  \relates Money
>>>     */
>>>    int
>>>    main(int argc, char* argv[]) {
>>>      Options opt("SEND+?MORE=MONEY");
>>>      opt.model(Money::MODEL_SINGLE);
>>>      opt.solutions(1);
>>>      Script::run<Money,DFS,Options>(opt);
>>>      std::cout <<  "--- \n" ;
>>>      return 0;
>>> }
>>> On Apr 21, 2014, at 4:12 AM, Christian Schulte <cschulte at kth.se> wrote:
>>> 
>>>> Just check the number of search steps needed, it can tell you something more
>>>> important than time.
>>>> 
>>>> Then (I am guessing here), given that your model is based on money it has
>>>> lost of linear constraints in it, right? There you will only get propagation
>>>> if by branching either the lower or upper bound of the values for a variable
>>>> changes. If you just randomize you are likely to choose an inner value which
>>>> might not give that much propagation.
>>>> 
>>>> Best
>>>> Christian
>>>> 
>>>> --
>>>> Christian Schulte, KTH, web.it.kth.se/~cschulte/
>>>> 
>>>> -----Original Message-----
>>>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
>>>> Of negate273 at gmail.com
>>>> Sent: Monday, April 21, 2014 02:47 AM
>>>> To: users at gecode.org
>>>> Subject: [gecode-users] Integer Variable Randomization
>>>> 
>>>> Hi,  I'm seeing an exponential time increase in the time to just randomize
>>>> integer variables. My test program is based on "examples/money.cpp" , and I
>>>> removed the constraints and simply randomize the integer variables by using
>>>> INT_VAL_RND()
>>>>    ->    branch(*this, le, INT_VAR_SIZE_MIN(), INT_VAL_RND(rnd));
>>>> Is the exponential increase in time with the number of integer random
>>>> variables in Gecode expected ? and if so, why. And can this be improved by
>>>> modifying the model ?
>>>> Thanks..
>>>> 
>>>> NVars    SolveTime(in Seconds)
>>>> 10000    0.734
>>>> 20000    3.267
>>>> 30000    7.67
>>>> 40000    18.262
>>>> 50000    31.274
>>>> 60000    50.674
>>>> 70000    73.82
>>>> 
>>>> Complete Test program -
>>>> 
>>>>    #include <gecode/driver.hh>
>>>>    #include <gecode/int.hh>
>>>>    #include <gecode/minimodel.hh>
>>>> 
>>>>    using namespace Gecode;
>>>> 
>>>>    class Money : public Script {
>>>>    protected:
>>>>      /// Number of letters
>>>>      static const int nl = 70000;     // <---- This number corresponds with
>>>> NVars listed above.
>>>>      /// Array of letters
>>>>      IntVarArray le;
>>>>    public:
>>>>      /// Model variants
>>>>      enum {
>>>>        MODEL_SINGLE, ///< Use single linear equation
>>>>        MODEL_CARRY   ///< Use carries
>>>>      };
>>>>      /// Actual model
>>>>      Money(const Options& opt) : le(*this,nl,0,65535) {  // <----------
>>>> BOUNDS for integer variable
>>>>        Rnd rnd(314) ;
>>>>        branch(*this, le, INT_VAR_SIZE_MIN(), INT_VAL_RND(rnd)); // <-------
>>>> Random numbers to integers.
>>>>      }
>>>>      /// Print solution
>>>>      virtual void
>>>>      print(std::ostream& os) const {
>>>>        // os << "\t" << le << std::endl;
>>>>      }
>>>> 
>>>>      /// Constructor for cloning \a s
>>>>      Money(bool share, Money& s) : Script(share,s) {
>>>>        le.update(*this, share, s.le);
>>>>      }
>>>>      /// Copy during cloning
>>>>      virtual Space*
>>>>      copy(bool share) {
>>>>        return new Money(share,*this);
>>>>      }
>>>>    };
>>>> 
>>>>    /** \brief Main-function
>>>>     *  \relates Money
>>>>     */
>>>>    int
>>>>    main(int argc, char* argv[]) {
>>>>      Options opt("SEND+?MORE=MONEY");
>>>>      opt.model(Money::MODEL_SINGLE);
>>>>      opt.solutions(1);
>>>>      Script::run<Money,DFS,Options>(opt);
>>>>      std::cout <<  "--- \n" ;
>>>>      return 0;
>>>>    }
>>>> 
>>>>    // STATISTICS: example-any
>>>> 
>>>> 
>>>> _______________________________________________
>>>> Gecode users mailing list
>>>> users at gecode.org
>>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>>> 
>>> 
>>> _______________________________________________
>>> Gecode users mailing list
>>> users at gecode.org
>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>> 
>> 
>> 
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140424/870cb7cb/attachment-0001.html>

From andrea.peano at unife.it  Thu Apr 24 10:20:11 2014
From: andrea.peano at unife.it (Andrea Peano)
Date: Thu, 24 Apr 2014 10:20:11 +0200
Subject: [gecode-users] Multithreading executions crash
In-Reply-To: <533CCBA7-DE89-491A-9CDA-2DD11D817971@gecode.org>
References: <CAGTgUnO1f9GAFjzxTudLQDjkNAa3zibErg2cd+2mKOF2FhKgZg@mail.gmail.com>
	<016101cf58b6$d9e269e0$8da73da0$@se>
	<CAGTgUnNmv4dG8cTqWXfU+hb4f-98+-SkCH=abKki9Fg0NKii2w@mail.gmail.com>
	<533CCBA7-DE89-491A-9CDA-2DD11D817971@gecode.org>
Message-ID: <CAGTgUnNUJVn_TxeSUk-Q-iOyr5F6Nsqi5=jir6xcTc7AopfPJQ@mail.gmail.com>

On Wed, Apr 16, 2014 at 2:16 AM, Guido Tack <tack at gecode.org> wrote:

> Hi Andrea,
>
> two things you could try:
> 1) if backup is a global variable, you need to protect it with a mutex,
> since clone is not thread-safe.
> 2) you're using the clones you create in different threads, so you should
> pass "false" to clone instead of "true" (that way the clone is really
> independent of backup and doesn't share any data structures with it)
>

Hi,
it works perfectly!

Thank you,
Andrea


>
> Cheers,
> Guido
>
> On 16 Apr 2014, at 1:07 am, Andrea Peano <andrea.peano at unife.it> wrote:
>
> Thanks for your reply.
>
> I tried to simplify my real architecture, maybe too much!
>
> I create a "backup" space before starting the search, that is a copy of
> the original space used during the search, and it is a global variable of
> the code.
>
> Within the ::post function I create a copy of the backup model, I update
> this space by passing the current (partial) solution, and then I search the
> first sol, like that:
> MyModel *inner_model=static_cast<MyModel *>(backup->clone(true));
> inner_model->update_variables(this->partial_sol_values());
> inner_model->status();
> ...
> inner_dfs.next();
>
> Scary stuff again, I guess!
>
> In general, I need of a partial solution before starting the second step
> in order to run some scary heuristics :)
>
> You refer to this discussion:
> http://www.gecode.org/pipermail/users/2013-January/003769.html
> don't you?
>
> Thanks,
> Andrea
>
>
> On Tue, Apr 15, 2014 at 4:27 PM, Christian Schulte <cschulte at kth.se>wrote:
>
>> Hi Andrea,
>>
>>
>>
>> Whoa! Scary stuff ;-) That's not possible to clone a space that is
>> currently in use for propagation (because that is what is still going on
>> when the ::post function is executed).
>>
>>
>>
>> However it should work much much easier: there has been a discussion in
>> this users group a while ago on how to split search into two parts. Then
>> you can parallelize each one. Just go through the archive (or maybe one of
>> the users who took part in the discussion can help here).
>>
>>
>>
>> Cheers
>>
>> Christian
>>
>>
>>
>> --
>>
>> Christian Schulte, Professor of Computer Science, KTH,
>> www.ict.kth.se/~cschulte/
>>
>>
>>
>> *From:* users-bounces at gecode.org [mailto:users-bounces at gecode.org] *On
>> Behalf Of *Andrea Peano
>> *Sent:* Tuesday, April 15, 2014 2:35 PM
>> *To:* users at gecode.org
>> *Subject:* [gecode-users] Multithreading executions crash
>>
>>
>>
>> Hello everyone,
>>
>> my model is solved by a two-steps search. The first step can be a DFS as
>> well as a BAB search, the second step is always a DFS.
>>
>>
>>
>> I implemented this search by following the section "Executing code
>> between branchers" of the Gecode's guide, like this:
>>
>> branch(*this, MyModel::post)
>>
>>
>>
>> The function "post" copies the current space into a local variable, then
>> instantiates a new DFS engine and finally calls the method "next", in order
>> to compute only the first solution.
>>
>>
>>
>> MyModel *inner_model=static_cast<MyModel *>(this->clone(true));
>>
>> inner_model->status();
>>
>> ...
>>
>> inner_dfs.next();
>>
>>
>>
>> The idea is to parallelize the first level of the search... but if I use
>> only one thread everything works fine, otherwise every time the execution
>> crashes on a different instruction of the function "post".
>>
>>
>>
>> Do you have any clue about this behavior?
>>
>> The worst scenario I see is that this solving architecture is totally
>> incompatible with the multithreading system implemented in Gecode.
>>
>>
>>
>> Thanks,
>>
>> Andrea
>>
>
>
>
> --
>
> Andrea Peano - PhD student
> Department of Engineering - University of Ferrara
> Tel: +39 0532 97 4827
>  _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>
>


-- 

Andrea Peano - PhD student
Department of Engineering - University of Ferrara
Tel: +39 0532 97 4827
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140424/2f06f6fd/attachment.html>

From victor.zverovich at gmail.com  Fri Apr 25 02:33:38 2014
From: victor.zverovich at gmail.com (victor.zverovich at gmail.com)
Date: Thu, 24 Apr 2014 17:33:38 -0700
Subject: [gecode-users] Fwd: error when compiling Gecode with clang and
	-std=c++11
In-Reply-To: <CANawtxa9d4RVPezK79mZ24h6-tJxD4-BtXSYCW2A3=34_Q_63Q@mail.gmail.com>
References: <CANawtxa9d4RVPezK79mZ24h6-tJxD4-BtXSYCW2A3=34_Q_63Q@mail.gmail.com>
Message-ID: <CANawtxaH4T7cFDfSOcr7iHN_ooPwj5PeqcdpFoQ1fNT5FxLsCw@mail.gmail.com>

Hi,

Sending this email again for it apparently hasn't come through last time.

There is an error when compiling Gecode in debug mode with clang and
-std=c++11 (I compile Gecode as a part of another project, so I don't use
the default flags):

gecode/flatzinc/flatzinc.cpp:280:34: error: comparison between pointer and
integer ('SharedHandle::Object *' and 'int')
    (__builtin_expect(!(object() == false), 0) ? __assert_rtn(__func__,
"gecode/flatzinc/flatzinc.cpp", 280, "object() == false") : (void)0);
                        ~~~~~~~~ ^  ~~~~~


This can be reproduced by compiling Gecode with the following commands:

CXX=clang++ CXXFLAGS=-std=c++11 ./configure --enable-debug
make


The attached patch fixes the error.

Best regards,
Victor
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140424/e9d96529/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: fix-clang-c++11-error.patch
Type: text/x-patch
Size: 706 bytes
Desc: not available
URL: <http://www.gecode.org/pipermail/users/attachments/20140424/e9d96529/attachment.bin>

From negate273 at gmail.com  Fri Apr 25 06:46:32 2014
From: negate273 at gmail.com (negate273 at gmail.com)
Date: Thu, 24 Apr 2014 21:46:32 -0700
Subject: [gecode-users] Integer Variable Randomization
In-Reply-To: <2E441518-7C27-4BBE-8ECF-3F1617BDE989@gecode.org>
References: <730155E1-E16E-49CB-A1D6-5C12FEBDA4A3@gmail.com>
	<001101cf5d52$bdd07350$397159f0$@kth.se>
	<7304D218-1550-4CA1-81CC-2E57DEB11107@gmail.com>
	<5357EB0A.8090603@it.uu.se>
	<03364C36-FEAE-4609-9684-925F4E6A312D@gmail.com>
	<2E441518-7C27-4BBE-8ECF-3F1617BDE989@gecode.org>
Message-ID: <1F0EC8FC-197B-4161-AAF4-6EA59D1DAFCD@gmail.com>

I reran by adjusting the -c-d and -a-d parameters and the time did go linear.  I found this paper really helpful in explaining the concepts behind the parameters - "Maintaining State in Propagation Solvers?,  given that the authors actively develop gecode :)..thanks

On Apr 24, 2014, at 12:53 AM, Guido Tack <tack at gecode.org> wrote:

> Hi,
> 
> Jean-Noel's observation is correct that copying introduces a linear factor into the runtime.  By default, copies are created every 8 steps down a branch.  You can set the recomputation parameters on the command line, using -c-d and -a-d, if you add a call to 
> 
> opt.parse(argc,argv);
> 
> To completely disable copying, set both distances to something higher than the number of variables, e.g. -c-d 1000000 -a-d 1000000.  In your particular case, where there is no real search (since you don't have constraints), that should change the runtime from quadratic to linear.  
> 
> However, in a problem that requires backtracking, you still need to create at least one copy per failure, so you can still get that quadratic runtime behaviour.
> 
> Cheers,
> Guido
> 
> -- 
> Guido Tack
> http://www.csse.monash.edu/~guidot/
> 
> 
> 
> On 24 Apr 2014, at 3:20 am, negate273 at gmail.com wrote:
> 
>> The time seems quadratic not exponential. I misspoke on that. 
>> 
>>> I think that one way to check this would be to completely disable copying and replace it by recomputation. I am not sure how this is accomplished though
>> 
>> Would replacing the returning *this in the copy() method accomplish this ? 
>> 
>> 
>> On Apr 23, 2014, at 9:32, Jean-No?l Monette <jean-noel.monette at it.uu.se> wrote:
>> 
>>> Hi,
>>> 
>>> Here is my understanding of your problem. If you have N variables, you will need N decisions to reach a "solution". And at each decision, Gecode will copy the whole model, that is N variables (Christian, correct if I am wrong). So the time spent should be at least quadratic in the number of variables. I am not sure whether the numbers you gave correspond much more to an exponential increase rather than to a quadratic increase. So this could be the explanation of your problem. I think that one way to check this would be to completely disable copying and replace it by recomputation. I am not sure how this is accomplished though.
>>> 
>>> Cheers,
>>> 
>>> Jean-No?l
>>> 
>>> 
>>> On 23/04/14 17:58, negate273 at gmail.com wrote:
>>>> The statistics reveal that the ?Peak depth? and ?Nodes? are the same as the number of variables. Where can I get the number of ?Search steps? ?
>>>> My model did not have *any* constraints (model is copied below).I modified the bounds of the variables to see if the bounds made a difference in the solution time, but it did not.
>>>> MODEL -
>>>>   class Money : public Script {
>>>>    protected:
>>>>      /// Number of letters
>>>>      static const int nl = 70000;     // <---- This number corresponds with NVars listed above.
>>>>      /// Array of letters
>>>>      IntVarArray le;
>>>>    public:
>>>>      /// Model variants
>>>>      enum {
>>>>        MODEL_SINGLE, ///< Use single linear equation
>>>>        MODEL_CARRY   ///< Use carries
>>>>      };
>>>>      /// Actual model
>>>>      Money(const Options& opt) : le(*this,nl,0,65535) {  // <----------BOUNDS for integer variable
>>>>        Rnd rnd(314) ;
>>>>        branch(*this, le, INT_VAR_SIZE_MIN(), INT_VAL_RND(rnd)); // <-------Random numbers to integers.
>>>>      }
>>>>      /// Print solution
>>>>      virtual void
>>>>      print(std::ostream& os) const {
>>>>        // os << "\t" << le << std::endl;
>>>>      }
>>>> 
>>>>      /// Constructor for cloning \a s
>>>>      Money(bool share, Money& s) : Script(share,s) {
>>>>        le.update(*this, share, s.le);
>>>>      }
>>>>      /// Copy during cloning
>>>>      virtual Space*
>>>>      copy(bool share) {
>>>>        return new Money(share,*this);
>>>>      }
>>>>    };
>>>> 
>>>>    /** \brief Main-function
>>>>     *  \relates Money
>>>>     */
>>>>    int
>>>>    main(int argc, char* argv[]) {
>>>>      Options opt("SEND+?MORE=MONEY");
>>>>      opt.model(Money::MODEL_SINGLE);
>>>>      opt.solutions(1);
>>>>      Script::run<Money,DFS,Options>(opt);
>>>>      std::cout <<  "--- \n" ;
>>>>      return 0;
>>>> }
>>>> On Apr 21, 2014, at 4:12 AM, Christian Schulte <cschulte at kth.se> wrote:
>>>> 
>>>>> Just check the number of search steps needed, it can tell you something more
>>>>> important than time.
>>>>> 
>>>>> Then (I am guessing here), given that your model is based on money it has
>>>>> lost of linear constraints in it, right? There you will only get propagation
>>>>> if by branching either the lower or upper bound of the values for a variable
>>>>> changes. If you just randomize you are likely to choose an inner value which
>>>>> might not give that much propagation.
>>>>> 
>>>>> Best
>>>>> Christian
>>>>> 
>>>>> --
>>>>> Christian Schulte, KTH, web.it.kth.se/~cschulte/
>>>>> 
>>>>> -----Original Message-----
>>>>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
>>>>> Of negate273 at gmail.com
>>>>> Sent: Monday, April 21, 2014 02:47 AM
>>>>> To: users at gecode.org
>>>>> Subject: [gecode-users] Integer Variable Randomization
>>>>> 
>>>>> Hi,  I'm seeing an exponential time increase in the time to just randomize
>>>>> integer variables. My test program is based on "examples/money.cpp" , and I
>>>>> removed the constraints and simply randomize the integer variables by using
>>>>> INT_VAL_RND()
>>>>>    ->    branch(*this, le, INT_VAR_SIZE_MIN(), INT_VAL_RND(rnd));
>>>>> Is the exponential increase in time with the number of integer random
>>>>> variables in Gecode expected ? and if so, why. And can this be improved by
>>>>> modifying the model ?
>>>>> Thanks..
>>>>> 
>>>>> NVars    SolveTime(in Seconds)
>>>>> 10000    0.734
>>>>> 20000    3.267
>>>>> 30000    7.67
>>>>> 40000    18.262
>>>>> 50000    31.274
>>>>> 60000    50.674
>>>>> 70000    73.82
>>>>> 
>>>>> Complete Test program -
>>>>> 
>>>>>    #include <gecode/driver.hh>
>>>>>    #include <gecode/int.hh>
>>>>>    #include <gecode/minimodel.hh>
>>>>> 
>>>>>    using namespace Gecode;
>>>>> 
>>>>>    class Money : public Script {
>>>>>    protected:
>>>>>      /// Number of letters
>>>>>      static const int nl = 70000;     // <---- This number corresponds with
>>>>> NVars listed above.
>>>>>      /// Array of letters
>>>>>      IntVarArray le;
>>>>>    public:
>>>>>      /// Model variants
>>>>>      enum {
>>>>>        MODEL_SINGLE, ///< Use single linear equation
>>>>>        MODEL_CARRY   ///< Use carries
>>>>>      };
>>>>>      /// Actual model
>>>>>      Money(const Options& opt) : le(*this,nl,0,65535) {  // <----------
>>>>> BOUNDS for integer variable
>>>>>        Rnd rnd(314) ;
>>>>>        branch(*this, le, INT_VAR_SIZE_MIN(), INT_VAL_RND(rnd)); // <-------
>>>>> Random numbers to integers.
>>>>>      }
>>>>>      /// Print solution
>>>>>      virtual void
>>>>>      print(std::ostream& os) const {
>>>>>        // os << "\t" << le << std::endl;
>>>>>      }
>>>>> 
>>>>>      /// Constructor for cloning \a s
>>>>>      Money(bool share, Money& s) : Script(share,s) {
>>>>>        le.update(*this, share, s.le);
>>>>>      }
>>>>>      /// Copy during cloning
>>>>>      virtual Space*
>>>>>      copy(bool share) {
>>>>>        return new Money(share,*this);
>>>>>      }
>>>>>    };
>>>>> 
>>>>>    /** \brief Main-function
>>>>>     *  \relates Money
>>>>>     */
>>>>>    int
>>>>>    main(int argc, char* argv[]) {
>>>>>      Options opt("SEND+?MORE=MONEY");
>>>>>      opt.model(Money::MODEL_SINGLE);
>>>>>      opt.solutions(1);
>>>>>      Script::run<Money,DFS,Options>(opt);
>>>>>      std::cout <<  "--- \n" ;
>>>>>      return 0;
>>>>>    }
>>>>> 
>>>>>    // STATISTICS: example-any
>>>>> 
>>>>> 
>>>>> _______________________________________________
>>>>> Gecode users mailing list
>>>>> users at gecode.org
>>>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>>>> 
>>>> 
>>>> _______________________________________________
>>>> Gecode users mailing list
>>>> users at gecode.org
>>>> https://www.gecode.org/mailman/listinfo/gecode-users
>>>> 
>>> 
>>> 
>>> _______________________________________________
>>> Gecode users mailing list
>>> users at gecode.org
>>> https://www.gecode.org/mailman/listinfo/gecode-users
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140424/f1f4cfb7/attachment-0001.html>

From tack at gecode.org  Fri Apr 25 08:00:24 2014
From: tack at gecode.org (Guido Tack)
Date: Fri, 25 Apr 2014 16:00:24 +1000
Subject: [gecode-users] Fwd: error when compiling Gecode with clang and
	-std=c++11
In-Reply-To: <CANawtxaH4T7cFDfSOcr7iHN_ooPwj5PeqcdpFoQ1fNT5FxLsCw@mail.gmail.com>
References: <CANawtxa9d4RVPezK79mZ24h6-tJxD4-BtXSYCW2A3=34_Q_63Q@mail.gmail.com>
	<CANawtxaH4T7cFDfSOcr7iHN_ooPwj5PeqcdpFoQ1fNT5FxLsCw@mail.gmail.com>
Message-ID: <7C8288EF-AF2E-47C5-B03D-CEE68947CCCC@gecode.org>

Thanks Victor!

I've added your fix to the svn trunk.

Cheers,
Guido

-- 
Guido Tack
http://www.csse.monash.edu/~guidot/



On 25 Apr 2014, at 10:33 am, victor.zverovich at gmail.com wrote:

> Hi,
> 
> Sending this email again for it apparently hasn't come through last time.
> 
> There is an error when compiling Gecode in debug mode with clang and -std=c++11 (I compile Gecode as a part of another project, so I don't use the default flags):
> 
> gecode/flatzinc/flatzinc.cpp:280:34: error: comparison between pointer and integer ('SharedHandle::Object *' and 'int')
>     (__builtin_expect(!(object() == false), 0) ? __assert_rtn(__func__, "gecode/flatzinc/flatzinc.cpp", 280, "object() == false") : (void)0);
>                         ~~~~~~~~ ^  ~~~~~
> 
> This can be reproduced by compiling Gecode with the following commands:
> 
> CXX=clang++ CXXFLAGS=-std=c++11 ./configure --enable-debug
> make
> 
> The attached patch fixes the error.
> 
> Best regards,
> Victor
> 
> 
> 
> <fix-clang-c++11-error.patch>_______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140425/3dfcafa5/attachment.html>

From victor.zverovich at gmail.com  Mon Apr 28 20:16:38 2014
From: victor.zverovich at gmail.com (victor.zverovich at gmail.com)
Date: Mon, 28 Apr 2014 11:16:38 -0700
Subject: [gecode-users] Fwd: error when compiling Gecode with clang and
	-std=c++11
In-Reply-To: <7C8288EF-AF2E-47C5-B03D-CEE68947CCCC@gecode.org>
References: <CANawtxa9d4RVPezK79mZ24h6-tJxD4-BtXSYCW2A3=34_Q_63Q@mail.gmail.com>
	<CANawtxaH4T7cFDfSOcr7iHN_ooPwj5PeqcdpFoQ1fNT5FxLsCw@mail.gmail.com>
	<7C8288EF-AF2E-47C5-B03D-CEE68947CCCC@gecode.org>
Message-ID: <CANawtxbMTVneBEOEE6Afx20MjYEk1dRO0wFQY-4-dErvLwJ1Pw@mail.gmail.com>

Hi Guido,

Thanks for committing the fix. There is one more, minor issue. I get a few
warnings when using Gecode headers with a high warning level:

  gecode/set.hh:1278: warning: comma at end of enumerator list
  gecode/float.hh:1653: warning: comma at end of enumerator list

Trailing commas in enums were only added in C++11 and, although most C++
compilers support them as an extension, I think it would be nice if headers
didn't rely on extensions. The attached patch fixes the warnings.

Cheers,
Victor


On Thu, Apr 24, 2014 at 11:00 PM, Guido Tack <tack at gecode.org> wrote:

> Thanks Victor!
>
> I've added your fix to the svn trunk.
>
> Cheers,
> Guido
>
>  --
> Guido Tack
> http://www.csse.monash.edu/~guidot/
>
>
>
> On 25 Apr 2014, at 10:33 am, victor.zverovich at gmail.com wrote:
>
> Hi,
>
> Sending this email again for it apparently hasn't come through last time.
>
> There is an error when compiling Gecode in debug mode with clang and
> -std=c++11 (I compile Gecode as a part of another project, so I don't use
> the default flags):
>
> gecode/flatzinc/flatzinc.cpp:280:34: error: comparison between pointer and
> integer ('SharedHandle::Object *' and 'int')
>     (__builtin_expect(!(object() == false), 0) ? __assert_rtn(__func__,
> "gecode/flatzinc/flatzinc.cpp", 280, "object() == false") : (void)0);
>                         ~~~~~~~~ ^  ~~~~~
>
>
> This can be reproduced by compiling Gecode with the following commands:
>
> CXX=clang++ CXXFLAGS=-std=c++11 ./configure --enable-debug
> make
>
>
> The attached patch fixes the error.
>
> Best regards,
> Victor
>
>
>
> <fix-clang-c++11-error.patch>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140428/9aacd335/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0001-Fix-GCC-warnings.patch
Type: text/x-patch
Size: 1813 bytes
Desc: not available
URL: <http://www.gecode.org/pipermail/users/attachments/20140428/9aacd335/attachment.bin>

From cschulte at kth.se  Mon Apr 28 20:55:16 2014
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 28 Apr 2014 20:55:16 +0200
Subject: [gecode-users] Fwd: error when compiling Gecode with clang
	and	-std=c++11
In-Reply-To: <CANawtxbMTVneBEOEE6Afx20MjYEk1dRO0wFQY-4-dErvLwJ1Pw@mail.gmail.com>
References: <CANawtxa9d4RVPezK79mZ24h6-tJxD4-BtXSYCW2A3=34_Q_63Q@mail.gmail.com>	<CANawtxaH4T7cFDfSOcr7iHN_ooPwj5PeqcdpFoQ1fNT5FxLsCw@mail.gmail.com>	<7C8288EF-AF2E-47C5-B03D-CEE68947CCCC@gecode.org>
	<CANawtxbMTVneBEOEE6Afx20MjYEk1dRO0wFQY-4-dErvLwJ1Pw@mail.gmail.com>
Message-ID: <005701cf6313$657ec910$307c5b30$@kth.se>

Hi Victor,

 

Thanks! I just committed the patch to the trunk.

 

Cheers

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of victor.zverovich at gmail.com
Sent: Monday, April 28, 2014 8:17 PM
To: Guido Tack
Cc: users at gecode.org
Subject: Re: [gecode-users] Fwd: error when compiling Gecode with clang and -std=c++11

 

Hi Guido,

 

Thanks for committing the fix. There is one more, minor issue. I get a few warnings when using Gecode headers with a high warning level:

 

  gecode/set.hh:1278: warning: comma at end of enumerator list

  gecode/float.hh:1653: warning: comma at end of enumerator list

 

Trailing commas in enums were only added in C++11 and, although most C++ compilers support them as an extension, I think it would be nice if headers didn't rely on extensions. The attached patch fixes the warnings.

 

Cheers,

Victor

 

On Thu, Apr 24, 2014 at 11:00 PM, Guido Tack <tack at gecode.org> wrote:

Thanks Victor!

 

I've added your fix to the svn trunk.

 

Cheers,

Guido

 

-- 

Guido Tack

http://www.csse.monash.edu/~guidot/

 

 

 

On 25 Apr 2014, at 10:33 am, victor.zverovich at gmail.com wrote:

 

Hi,

 

Sending this email again for it apparently hasn't come through last time.

 

There is an error when compiling Gecode in debug mode with clang and -std=c++11 (I compile Gecode as a part of another project, so I don't use the default flags):

 

gecode/flatzinc/flatzinc.cpp:280:34: error: comparison between pointer and integer ('SharedHandle::Object *' and 'int')

    (__builtin_expect(!(object() == false), 0) ? __assert_rtn(__func__, "gecode/flatzinc/flatzinc.cpp", 280, "object() == false") : (void)0);

                        ~~~~~~~~ ^  ~~~~~

 

This can be reproduced by compiling Gecode with the following commands:

 

CXX=clang++ CXXFLAGS=-std=c++11 ./configure --enable-debug

make

 

The attached patch fixes the error.

 

Best regards,

Victor

 

 

 

<fix-clang-c++11-error.patch>_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140428/0b7b8956/attachment.html>

From victor.zverovich at gmail.com  Tue Apr 29 02:39:00 2014
From: victor.zverovich at gmail.com (victor.zverovich at gmail.com)
Date: Mon, 28 Apr 2014 17:39:00 -0700
Subject: [gecode-users] Fwd: error when compiling Gecode with clang and
	-std=c++11
In-Reply-To: <005701cf6313$657ec910$307c5b30$@kth.se>
References: <CANawtxa9d4RVPezK79mZ24h6-tJxD4-BtXSYCW2A3=34_Q_63Q@mail.gmail.com>
	<CANawtxaH4T7cFDfSOcr7iHN_ooPwj5PeqcdpFoQ1fNT5FxLsCw@mail.gmail.com>
	<7C8288EF-AF2E-47C5-B03D-CEE68947CCCC@gecode.org>
	<CANawtxbMTVneBEOEE6Afx20MjYEk1dRO0wFQY-4-dErvLwJ1Pw@mail.gmail.com>
	<005701cf6313$657ec910$307c5b30$@kth.se>
Message-ID: <CANawtxZMGAN+BV5o0CBFbnDLMU9rGD=R2v81j+91yeMNjLQ8xA@mail.gmail.com>

Thanks, Christian!

Here's another trivial patch that fixes access to uninitialized member.

Best regards,
Victor


On Mon, Apr 28, 2014 at 11:55 AM, Christian Schulte <cschulte at kth.se> wrote:

> Hi Victor,
>
>
>
> Thanks! I just committed the patch to the trunk.
>
>
>
> Cheers
>
> Christian
>
>
>
> --
>
> Christian Schulte, www.ict.kth.se/~cschulte/
>
>
>
> *From:* users-bounces at gecode.org [mailto:users-bounces at gecode.org] *On
> Behalf Of *victor.zverovich at gmail.com
> *Sent:* Monday, April 28, 2014 8:17 PM
> *To:* Guido Tack
> *Cc:* users at gecode.org
> *Subject:* Re: [gecode-users] Fwd: error when compiling Gecode with clang
> and -std=c++11
>
>
>
> Hi Guido,
>
>
>
> Thanks for committing the fix. There is one more, minor issue. I get a few
> warnings when using Gecode headers with a high warning level:
>
>
>
>   gecode/set.hh:1278: warning: comma at end of enumerator list
>
>   gecode/float.hh:1653: warning: comma at end of enumerator list
>
>
>
> Trailing commas in enums were only added in C++11 and, although most C++
> compilers support them as an extension, I think it would be nice if headers
> didn't rely on extensions. The attached patch fixes the warnings.
>
>
>
> Cheers,
>
> Victor
>
>
>
> On Thu, Apr 24, 2014 at 11:00 PM, Guido Tack <tack at gecode.org> wrote:
>
> Thanks Victor!
>
>
>
> I've added your fix to the svn trunk.
>
>
>
> Cheers,
>
> Guido
>
>
>
> --
>
> Guido Tack
>
> http://www.csse.monash.edu/~guidot/
>
>
>
>
>
>
>
> On 25 Apr 2014, at 10:33 am, victor.zverovich at gmail.com wrote:
>
>
>
> Hi,
>
>
>
> Sending this email again for it apparently hasn't come through last time.
>
>
>
> There is an error when compiling Gecode in debug mode with clang and
> -std=c++11 (I compile Gecode as a part of another project, so I don't use
> the default flags):
>
>
>
> gecode/flatzinc/flatzinc.cpp:280:34: error: comparison between pointer and
> integer ('SharedHandle::Object *' and 'int')
>
>     (__builtin_expect(!(object() == false), 0) ? __assert_rtn(__func__,
> "gecode/flatzinc/flatzinc.cpp", 280, "object() == false") : (void)0);
>
>                         ~~~~~~~~ ^  ~~~~~
>
>
>
> This can be reproduced by compiling Gecode with the following commands:
>
>
>
> CXX=clang++ CXXFLAGS=-std=c++11 ./configure --enable-debug
>
> make
>
>
>
> The attached patch fixes the error.
>
>
>
> Best regards,
>
> Victor
>
>
>
>
>
>
>
>
> <fix-clang-c++11-error.patch>_______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140428/aae33420/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0001-Fix-access-to-uninitialized-member.patch
Type: text/x-patch
Size: 865 bytes
Desc: not available
URL: <http://www.gecode.org/pipermail/users/attachments/20140428/aae33420/attachment-0001.bin>

From cschulte at kth.se  Tue Apr 29 08:02:11 2014
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 29 Apr 2014 08:02:11 +0200
Subject: [gecode-users] Fwd: error when compiling Gecode with clang and
	-std=c++11
In-Reply-To: <CANawtxZMGAN+BV5o0CBFbnDLMU9rGD=R2v81j+91yeMNjLQ8xA@mail.gmail.com>
References: <CANawtxa9d4RVPezK79mZ24h6-tJxD4-BtXSYCW2A3=34_Q_63Q@mail.gmail.com>
	<CANawtxaH4T7cFDfSOcr7iHN_ooPwj5PeqcdpFoQ1fNT5FxLsCw@mail.gmail.com>
	<7C8288EF-AF2E-47C5-B03D-CEE68947CCCC@gecode.org>
	<CANawtxbMTVneBEOEE6Afx20MjYEk1dRO0wFQY-4-dErvLwJ1Pw@mail.gmail.com>
	<005701cf6313$657ec910$307c5b30$@kth.se>
	<CANawtxZMGAN+BV5o0CBFbnDLMU9rGD=R2v81j+91yeMNjLQ8xA@mail.gmail.com>
Message-ID: <001c01cf6370$90aa4a80$b1fedf80$@kth.se>

Victor, thanks again. Fixed in the trunk! Cheers Christian

 

--

Christian Schulte, KTH, web.it.kth.se/~cschulte/

 

From: victor.zverovich at gmail.com [mailto:victor.zverovich at gmail.com] 
Sent: Tuesday, April 29, 2014 02:39 AM
To: cschulte at kth.se
Cc: Guido Tack; users at gecode.org
Subject: Re: [gecode-users] Fwd: error when compiling Gecode with clang and -std=c++11

 

Thanks, Christian!

 

Here's another trivial patch that fixes access to uninitialized member.

 

Best regards,

Victor

 

On Mon, Apr 28, 2014 at 11:55 AM, Christian Schulte <cschulte at kth.se <mailto:cschulte at kth.se> > wrote:

Hi Victor,

 

Thanks! I just committed the patch to the trunk.

 

Cheers

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/ <http://www.ict.kth.se/~cschulte/> 

 

From: users-bounces at gecode.org <mailto:users-bounces at gecode.org>  [mailto:users-bounces at gecode.org <mailto:users-bounces at gecode.org> ] On Behalf Of victor.zverovich at gmail.com <mailto:victor.zverovich at gmail.com> 
Sent: Monday, April 28, 2014 8:17 PM
To: Guido Tack
Cc: users at gecode.org <mailto:users at gecode.org> 
Subject: Re: [gecode-users] Fwd: error when compiling Gecode with clang and -std=c++11

 

Hi Guido,

 

Thanks for committing the fix. There is one more, minor issue. I get a few warnings when using Gecode headers with a high warning level:

 

  gecode/set.hh:1278: warning: comma at end of enumerator list

  gecode/float.hh:1653: warning: comma at end of enumerator list

 

Trailing commas in enums were only added in C++11 and, although most C++ compilers support them as an extension, I think it would be nice if headers didn't rely on extensions. The attached patch fixes the warnings.

 

Cheers,

Victor

 

On Thu, Apr 24, 2014 at 11:00 PM, Guido Tack <tack at gecode.org <mailto:tack at gecode.org> > wrote:

Thanks Victor!

 

I've added your fix to the svn trunk.

 

Cheers,

Guido

 

-- 

Guido Tack

http://www.csse.monash.edu/~guidot/

 

 

 

On 25 Apr 2014, at 10:33 am, victor.zverovich at gmail.com <mailto:victor.zverovich at gmail.com>  wrote:

 

Hi,

 

Sending this email again for it apparently hasn't come through last time.

 

There is an error when compiling Gecode in debug mode with clang and -std=c++11 (I compile Gecode as a part of another project, so I don't use the default flags):

 

gecode/flatzinc/flatzinc.cpp:280:34: error: comparison between pointer and integer ('SharedHandle::Object *' and 'int')

    (__builtin_expect(!(object() == false), 0) ? __assert_rtn(__func__, "gecode/flatzinc/flatzinc.cpp", 280, "object() == false") : (void)0);

                        ~~~~~~~~ ^  ~~~~~

 

This can be reproduced by compiling Gecode with the following commands:

 

CXX=clang++ CXXFLAGS=-std=c++11 ./configure --enable-debug

make

 

The attached patch fixes the error.

 

Best regards,

Victor

 

 

 

<fix-clang-c++11-error.patch>_______________________________________________
Gecode users mailing list
users at gecode.org <mailto:users at gecode.org> 
https://www.gecode.org/mailman/listinfo/gecode-users

 

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140429/72f8d27c/attachment.html>

From ptalbot at hyc.io  Tue Apr 29 15:49:12 2014
From: ptalbot at hyc.io (Pierre Talbot)
Date: Tue, 29 Apr 2014 15:49:12 +0200
Subject: [gecode-users] Constraint store
Message-ID: <535FADD8.3070101@hyc.io>

Hi,

I develop a compiler for a formal concurrent language called 'ntcc'. 
This language introduces a constraint store that we can manipulate with 
two operations:

* Ask(c): ask the store d if c is entailed by d.
* Tell(c): Entail the constraint c in the store.

I'd like to use Gecode to implement it but I didn't find anything 
related to the notion of store. A technique, probably inefficient, would 
be to copy the store each time we want to ask something, add the 
constraint in and search for the first solution (if it exists). Also, we 
are not interested by the solution but only by the existence of a solution.

If you have any leads on previous works or implementations of such a 
store using (or implemented in) Gecode, I'd be grateful.

Regards,
Pierre Talbot (IRCAM)


From cschulte at kth.se  Tue Apr 29 15:54:38 2014
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 29 Apr 2014 15:54:38 +0200
Subject: [gecode-users] Constraint store
In-Reply-To: <535FADD8.3070101@hyc.io>
References: <535FADD8.3070101@hyc.io>
Message-ID: <017201cf63b2$90913e40$b1b3bac0$@se>

Hi,

Gecode is a terrible choice for a cc-inspired language. Please go back to
predecessors of Gecode such as Oz and AKL, there you will find how you can
implement ask and tell efficiently. A (somewhat dated starting point) is:
	http://mozart.github.io/publications/

Cheers
Christian

--
Christian Schulte, Professor of Computer Science, KTH,
www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Pierre Talbot
Sent: Tuesday, April 29, 2014 3:49 PM
To: users at gecode.org
Subject: [gecode-users] Constraint store

Hi,

I develop a compiler for a formal concurrent language called 'ntcc'. 
This language introduces a constraint store that we can manipulate with two
operations:

* Ask(c): ask the store d if c is entailed by d.
* Tell(c): Entail the constraint c in the store.

I'd like to use Gecode to implement it but I didn't find anything related to
the notion of store. A technique, probably inefficient, would be to copy the
store each time we want to ask something, add the constraint in and search
for the first solution (if it exists). Also, we are not interested by the
solution but only by the existence of a solution.

If you have any leads on previous works or implementations of such a store
using (or implemented in) Gecode, I'd be grateful.

Regards,
Pierre Talbot (IRCAM)

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users



From ptalbot at hyc.io  Tue Apr 29 16:44:51 2014
From: ptalbot at hyc.io (Pierre Talbot)
Date: Tue, 29 Apr 2014 16:44:51 +0200
Subject: [gecode-users] Constraint store
In-Reply-To: <017201cf63b2$90913e40$b1b3bac0$@se>
References: <535FADD8.3070101@hyc.io> <017201cf63b2$90913e40$b1b3bac0$@se>
Message-ID: <535FBAE3.8010108@hyc.io>

I'm very new to constraint programming and Oz but I read that there are 
plans to use Gecode in Mozart. On the other hand, I don't think Oz is 
using the store concept, correct me if I'm wrong. Anyways, thanks for 
the infos, I'll definitely look into Oz and AKL.

Do you think it's feasible to use Gecode to avoid reimplementing the 
basis of a constraint system? Or is Gecode have little chances to help us?

Regards,
Pierre Talbot

Le 29/04/2014 15:54, Christian Schulte a ?crit :
> Hi,
>
> Gecode is a terrible choice for a cc-inspired language. Please go back to
> predecessors of Gecode such as Oz and AKL, there you will find how you can
> implement ask and tell efficiently. A (somewhat dated starting point) is:
> 	http://mozart.github.io/publications/
>
> Cheers
> Christian
>
> --
> Christian Schulte, Professor of Computer Science, KTH,
> www.ict.kth.se/~cschulte/
>
>
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Pierre Talbot
> Sent: Tuesday, April 29, 2014 3:49 PM
> To: users at gecode.org
> Subject: [gecode-users] Constraint store
>
> Hi,
>
> I develop a compiler for a formal concurrent language called 'ntcc'.
> This language introduces a constraint store that we can manipulate with two
> operations:
>
> * Ask(c): ask the store d if c is entailed by d.
> * Tell(c): Entail the constraint c in the store.
>
> I'd like to use Gecode to implement it but I didn't find anything related to
> the notion of store. A technique, probably inefficient, would be to copy the
> store each time we want to ask something, add the constraint in and search
> for the first solution (if it exists). Also, we are not interested by the
> solution but only by the existence of a solution.
>
> If you have any leads on previous works or implementations of such a store
> using (or implemented in) Gecode, I'd be grateful.
>
> Regards,
> Pierre Talbot (IRCAM)
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>



From cschulte at kth.se  Tue Apr 29 16:49:12 2014
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 29 Apr 2014 16:49:12 +0200
Subject: [gecode-users] Constraint store
In-Reply-To: <535FBAE3.8010108@hyc.io>
References: <535FADD8.3070101@hyc.io> <017201cf63b2$90913e40$b1b3bac0$@se>
	<535FBAE3.8010108@hyc.io>
Message-ID: <017501cf63ba$2f317130$8d945390$@se>

As said, Gecode is not any option for you.

Oz has been central in inventing and refining the notion of a constraint
store (it for sure has one). I think some more reading might be a good idea
before deciding what to implement.

Best
Christian

--
Christian Schulte, Professor of Computer Science, KTH,
www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Pierre Talbot
Sent: Tuesday, April 29, 2014 4:45 PM
To: users at gecode.org
Subject: Re: [gecode-users] Constraint store

I'm very new to constraint programming and Oz but I read that there are
plans to use Gecode in Mozart. On the other hand, I don't think Oz is using
the store concept, correct me if I'm wrong. Anyways, thanks for the infos,
I'll definitely look into Oz and AKL.

Do you think it's feasible to use Gecode to avoid reimplementing the basis
of a constraint system? Or is Gecode have little chances to help us?

Regards,
Pierre Talbot

Le 29/04/2014 15:54, Christian Schulte a ?crit :
> Hi,
>
> Gecode is a terrible choice for a cc-inspired language. Please go back 
> to predecessors of Gecode such as Oz and AKL, there you will find how 
> you can implement ask and tell efficiently. A (somewhat dated starting
point) is:
> 	http://mozart.github.io/publications/
>
> Cheers
> Christian
>
> --
> Christian Schulte, Professor of Computer Science, KTH, 
> www.ict.kth.se/~cschulte/
>
>
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On 
> Behalf Of Pierre Talbot
> Sent: Tuesday, April 29, 2014 3:49 PM
> To: users at gecode.org
> Subject: [gecode-users] Constraint store
>
> Hi,
>
> I develop a compiler for a formal concurrent language called 'ntcc'.
> This language introduces a constraint store that we can manipulate 
> with two
> operations:
>
> * Ask(c): ask the store d if c is entailed by d.
> * Tell(c): Entail the constraint c in the store.
>
> I'd like to use Gecode to implement it but I didn't find anything 
> related to the notion of store. A technique, probably inefficient, 
> would be to copy the store each time we want to ask something, add the 
> constraint in and search for the first solution (if it exists). Also, 
> we are not interested by the solution but only by the existence of a
solution.
>
> If you have any leads on previous works or implementations of such a 
> store using (or implemented in) Gecode, I'd be grateful.
>
> Regards,
> Pierre Talbot (IRCAM)
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users



From gustavo.ggutierrez at gmail.com  Tue Apr 29 21:33:59 2014
From: gustavo.ggutierrez at gmail.com (Gustavo Gutierrez)
Date: Tue, 29 Apr 2014 14:33:59 -0500
Subject: [gecode-users] Constraint store
In-Reply-To: <535FBAE3.8010108@hyc.io>
References: <535FADD8.3070101@hyc.io> <017201cf63b2$90913e40$b1b3bac0$@se>
	<535FBAE3.8010108@hyc.io>
Message-ID: <CAFcfiNXErX4eFbpFtRNzdEdLi0V-HYN-zNOAX-TN_Qm2gkAYXQ@mail.gmail.com>

Hi Pierre,

Oz does use the store concept, that is for sure :). You can have a look at
Christian's dissertation "Programming constraint Services". Start by
chapter 2 and you will find the terminology you seem to be looking for.

Regards,
Gustavo


On Tue, Apr 29, 2014 at 9:44 AM, Pierre Talbot <ptalbot at hyc.io> wrote:

> I'm very new to constraint programming and Oz but I read that there are
> plans to use Gecode in Mozart. On the other hand, I don't think Oz is using
> the store concept, correct me if I'm wrong. Anyways, thanks for the infos,
> I'll definitely look into Oz and AKL.
>
> Do you think it's feasible to use Gecode to avoid reimplementing the basis
> of a constraint system? Or is Gecode have little chances to help us?
>
> Regards,
> Pierre Talbot
>
> Le 29/04/2014 15:54, Christian Schulte a ?crit :
>
>  Hi,
>>
>> Gecode is a terrible choice for a cc-inspired language. Please go back to
>> predecessors of Gecode such as Oz and AKL, there you will find how you can
>> implement ask and tell efficiently. A (somewhat dated starting point) is:
>>         http://mozart.github.io/publications/
>>
>> Cheers
>> Christian
>>
>> --
>> Christian Schulte, Professor of Computer Science, KTH,
>> www.ict.kth.se/~cschulte/
>>
>>
>> -----Original Message-----
>> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On
>> Behalf
>> Of Pierre Talbot
>> Sent: Tuesday, April 29, 2014 3:49 PM
>> To: users at gecode.org
>> Subject: [gecode-users] Constraint store
>>
>> Hi,
>>
>> I develop a compiler for a formal concurrent language called 'ntcc'.
>> This language introduces a constraint store that we can manipulate with
>> two
>> operations:
>>
>> * Ask(c): ask the store d if c is entailed by d.
>> * Tell(c): Entail the constraint c in the store.
>>
>> I'd like to use Gecode to implement it but I didn't find anything related
>> to
>> the notion of store. A technique, probably inefficient, would be to copy
>> the
>> store each time we want to ask something, add the constraint in and search
>> for the first solution (if it exists). Also, we are not interested by the
>> solution but only by the existence of a solution.
>>
>> If you have any leads on previous works or implementations of such a store
>> using (or implemented in) Gecode, I'd be grateful.
>>
>> Regards,
>> Pierre Talbot (IRCAM)
>>
>> _______________________________________________
>> Gecode users mailing list
>> users at gecode.org
>> https://www.gecode.org/mailman/listinfo/gecode-users
>>
>>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>



-- 
Gustavo Gutierrez
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140429/d4585b9c/attachment.html>

From ptalbot at hyc.io  Tue Apr 29 21:50:19 2014
From: ptalbot at hyc.io (Pierre Talbot)
Date: Tue, 29 Apr 2014 21:50:19 +0200
Subject: [gecode-users] Constraint store
In-Reply-To: <CAFcfiNXErX4eFbpFtRNzdEdLi0V-HYN-zNOAX-TN_Qm2gkAYXQ@mail.gmail.com>
References: <535FADD8.3070101@hyc.io>	<017201cf63b2$90913e40$b1b3bac0$@se>	<535FBAE3.8010108@hyc.io>
	<CAFcfiNXErX4eFbpFtRNzdEdLi0V-HYN-zNOAX-TN_Qm2gkAYXQ@mail.gmail.com>
Message-ID: <5360027B.9060900@hyc.io>

Hi,

Thanks to both of you, I'll carefully read this dissertation.

Regards,
Pierre

On 04/29/2014 09:33 PM, Gustavo Gutierrez wrote:
> Hi Pierre,
>
> Oz does use the store concept, that is for sure :). You can have a 
> look at Christian's dissertation "Programming constraint Services". 
> Start by chapter 2 and you will find the terminology you seem to be 
> looking for.
>
> Regards,
> Gustavo
>
>
> On Tue, Apr 29, 2014 at 9:44 AM, Pierre Talbot <ptalbot at hyc.io 
> <mailto:ptalbot at hyc.io>> wrote:
>
>     I'm very new to constraint programming and Oz but I read that
>     there are plans to use Gecode in Mozart. On the other hand, I
>     don't think Oz is using the store concept, correct me if I'm
>     wrong. Anyways, thanks for the infos, I'll definitely look into Oz
>     and AKL.
>
>     Do you think it's feasible to use Gecode to avoid reimplementing
>     the basis of a constraint system? Or is Gecode have little chances
>     to help us?
>
>     Regards,
>     Pierre Talbot
>
>     Le 29/04/2014 15:54, Christian Schulte a ?crit :
>
>         Hi,
>
>         Gecode is a terrible choice for a cc-inspired language. Please
>         go back to
>         predecessors of Gecode such as Oz and AKL, there you will find
>         how you can
>         implement ask and tell efficiently. A (somewhat dated starting
>         point) is:
>         http://mozart.github.io/publications/
>
>         Cheers
>         Christian
>
>         --
>         Christian Schulte, Professor of Computer Science, KTH,
>         www.ict.kth.se/~cschulte/ <http://www.ict.kth.se/%7Ecschulte/>
>
>
>         -----Original Message-----
>         From: users-bounces at gecode.org
>         <mailto:users-bounces at gecode.org>
>         [mailto:users-bounces at gecode.org
>         <mailto:users-bounces at gecode.org>] On Behalf
>         Of Pierre Talbot
>         Sent: Tuesday, April 29, 2014 3:49 PM
>         To: users at gecode.org <mailto:users at gecode.org>
>         Subject: [gecode-users] Constraint store
>
>         Hi,
>
>         I develop a compiler for a formal concurrent language called
>         'ntcc'.
>         This language introduces a constraint store that we can
>         manipulate with two
>         operations:
>
>         * Ask(c): ask the store d if c is entailed by d.
>         * Tell(c): Entail the constraint c in the store.
>
>         I'd like to use Gecode to implement it but I didn't find
>         anything related to
>         the notion of store. A technique, probably inefficient, would
>         be to copy the
>         store each time we want to ask something, add the constraint
>         in and search
>         for the first solution (if it exists). Also, we are not
>         interested by the
>         solution but only by the existence of a solution.
>
>         If you have any leads on previous works or implementations of
>         such a store
>         using (or implemented in) Gecode, I'd be grateful.
>
>         Regards,
>         Pierre Talbot (IRCAM)
>
>         _______________________________________________
>         Gecode users mailing list
>         users at gecode.org <mailto:users at gecode.org>
>         https://www.gecode.org/mailman/listinfo/gecode-users
>
>
>
>     _______________________________________________
>     Gecode users mailing list
>     users at gecode.org <mailto:users at gecode.org>
>     https://www.gecode.org/mailman/listinfo/gecode-users
>
>
>
>
> -- 
> Gustavo Gutierrez



From mauriciotorob at gmail.com  Wed Apr 30 01:10:09 2014
From: mauriciotorob at gmail.com (Mauricio Toro)
Date: Tue, 29 Apr 2014 18:10:09 -0500
Subject: [gecode-users] Constraint store
In-Reply-To: <5360027B.9060900@hyc.io>
References: <535FADD8.3070101@hyc.io> <017201cf63b2$90913e40$b1b3bac0$@se>
	<535FBAE3.8010108@hyc.io>
	<CAFcfiNXErX4eFbpFtRNzdEdLi0V-HYN-zNOAX-TN_Qm2gkAYXQ@mail.gmail.com>
	<5360027B.9060900@hyc.io>
Message-ID: <CAGkdjK4WTy+hHcZo1Zr0CNj-YO1GsXs25pfhvfCGo5JXeOy8ow@mail.gmail.com>

Hi Pierre,

I implemented long time ago an interpreter for ntcc using Gecode. Here is
the implementation http://ntccrt.sourceforge.net/ and this is a conference
article about the implementation and some applications
http://www.cs.ucy.ac.cy/~mtoro/traa09.pdf

I agree with Christian that Oz is more appropriate to implement ntcc, but,
although it has some limitations, using Gecode proved to be more efficient.
I also agree with Gustavo that Christian's dissertation is crucial.

My approach was the following:

tell(c) : I add 'c' to the Space
ask (c) do P: I add 'c <--> b', a reified constraint for the constraint
'c'. I also add a propagator 'wait (b) do P'.

http://www.gecode.org/doc-latest/reference/classGecode_1_1Kernel_1_1UnaryWait.html

That approach make the execution of ntcc very efficient, but it some
disadvantages, one of them is that the 'ask' is limited by the constraints
you can deduce using propagation and it is, therefore, not complete.
Another disadvantage is that it limits the constraints in the guard of ask
to those that can be reified.

Cheers,
Mauricio


2014-04-29 14:50 GMT-05:00 Pierre Talbot <ptalbot at hyc.io>:

> Hi,
>
> Thanks to both of you, I'll carefully read this dissertation.
>
> Regards,
> Pierre
>
>
> On 04/29/2014 09:33 PM, Gustavo Gutierrez wrote:
>
>> Hi Pierre,
>>
>> Oz does use the store concept, that is for sure :). You can have a look
>> at Christian's dissertation "Programming constraint Services". Start by
>> chapter 2 and you will find the terminology you seem to be looking for.
>>
>> Regards,
>> Gustavo
>>
>>
>> On Tue, Apr 29, 2014 at 9:44 AM, Pierre Talbot <ptalbot at hyc.io <mailto:
>> ptalbot at hyc.io>> wrote:
>>
>>     I'm very new to constraint programming and Oz but I read that
>>     there are plans to use Gecode in Mozart. On the other hand, I
>>     don't think Oz is using the store concept, correct me if I'm
>>     wrong. Anyways, thanks for the infos, I'll definitely look into Oz
>>     and AKL.
>>
>>     Do you think it's feasible to use Gecode to avoid reimplementing
>>     the basis of a constraint system? Or is Gecode have little chances
>>     to help us?
>>
>>     Regards,
>>     Pierre Talbot
>>
>>     Le 29/04/2014 15:54, Christian Schulte a ?crit :
>>
>>         Hi,
>>
>>         Gecode is a terrible choice for a cc-inspired language. Please
>>         go back to
>>         predecessors of Gecode such as Oz and AKL, there you will find
>>         how you can
>>         implement ask and tell efficiently. A (somewhat dated starting
>>         point) is:
>>         http://mozart.github.io/publications/
>>
>>         Cheers
>>         Christian
>>
>>         --
>>         Christian Schulte, Professor of Computer Science, KTH,
>>         www.ict.kth.se/~cschulte/ <http://www.ict.kth.se/%7Ecschulte/>
>>
>>
>>
>>         -----Original Message-----
>>         From: users-bounces at gecode.org
>>         <mailto:users-bounces at gecode.org>
>>         [mailto:users-bounces at gecode.org
>>         <mailto:users-bounces at gecode.org>] On Behalf
>>         Of Pierre Talbot
>>         Sent: Tuesday, April 29, 2014 3:49 PM
>>         To: users at gecode.org <mailto:users at gecode.org>
>>         Subject: [gecode-users] Constraint store
>>
>>         Hi,
>>
>>         I develop a compiler for a formal concurrent language called
>>         'ntcc'.
>>         This language introduces a constraint store that we can
>>         manipulate with two
>>         operations:
>>
>>         * Ask(c): ask the store d if c is entailed by d.
>>         * Tell(c): Entail the constraint c in the store.
>>
>>         I'd like to use Gecode to implement it but I didn't find
>>         anything related to
>>         the notion of store. A technique, probably inefficient, would
>>         be to copy the
>>         store each time we want to ask something, add the constraint
>>         in and search
>>         for the first solution (if it exists). Also, we are not
>>         interested by the
>>         solution but only by the existence of a solution.
>>
>>         If you have any leads on previous works or implementations of
>>         such a store
>>         using (or implemented in) Gecode, I'd be grateful.
>>
>>         Regards,
>>         Pierre Talbot (IRCAM)
>>
>>         _______________________________________________
>>         Gecode users mailing list
>>         users at gecode.org <mailto:users at gecode.org>
>>
>>         https://www.gecode.org/mailman/listinfo/gecode-users
>>
>>
>>
>>     _______________________________________________
>>     Gecode users mailing list
>>     users at gecode.org <mailto:users at gecode.org>
>>
>>     https://www.gecode.org/mailman/listinfo/gecode-users
>>
>>
>>
>>
>> --
>> Gustavo Gutierrez
>>
>
>
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
>



-- 
Mauricio
http://www.cs.ucy.ac.cy/~mtoro/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140429/0368acfb/attachment-0001.html>

From ostrowsk at cs.uni-potsdam.de  Wed Apr 30 10:52:36 2014
From: ostrowsk at cs.uni-potsdam.de (Max Ostrowski)
Date: Wed, 30 Apr 2014 10:52:36 +0200
Subject: [gecode-users] Constraint store
In-Reply-To: <CAGkdjK4WTy+hHcZo1Zr0CNj-YO1GsXs25pfhvfCGo5JXeOy8ow@mail.gmail.com>
References: <535FADD8.3070101@hyc.io> <017201cf63b2$90913e40$b1b3bac0$@se>
	<535FBAE3.8010108@hyc.io>
	<CAFcfiNXErX4eFbpFtRNzdEdLi0V-HYN-zNOAX-TN_Qm2gkAYXQ@mail.gmail.com>
	<5360027B.9060900@hyc.io>
	<CAGkdjK4WTy+hHcZo1Zr0CNj-YO1GsXs25pfhvfCGo5JXeOy8ow@mail.gmail.com>
Message-ID: <5360B9D4.3030803@cs.uni-potsdam.de>

Hi everybody,

i actually did something similar using Gecode,
using it as a theory solver for an SMT system.
The approach is the same as from Mauricio,
except that my ask method is allowed to return Maybe, and postpone the
request. (if propagation is strong enough to tell me if the constraint
is entailed, this is fine, otherwise i need to do more tell operations)


I just tried to read the Dissertation of Christian (at least the part
from Chapter 2 - 4) to try to figure out why Oz would be more suitable
for this.

I think the tell operation is clear and simple for both systems,
adding a constraint.


For the "ask" task, in Oz you could use the equality test or the domain
Reflection ? Is this right?
What is the difference of Gecode and Oz in the behavior.
Both seem to use some kind of reification.
Can Oz answer the "ask" task without doing search?

Best,
Max

On 04/30/2014 01:10 AM, Mauricio Toro wrote:
> Hi Pierre,
> 
> I implemented long time ago an interpreter for ntcc using Gecode. Here
> is the implementation http://ntccrt.sourceforge.net/ and this is a
> conference article about the implementation and some applications
> http://www.cs.ucy.ac.cy/~mtoro/traa09.pdf
> 
> I agree with Christian that Oz is more appropriate to implement ntcc, but, 
> although it has some limitations, using Gecode proved to be more efficient.
> I also agree with Gustavo that Christian's dissertation is crucial.
> 
> My approach was the following:
> 
> tell(c) : I add 'c' to the Space
> ask (c) do P: I add 'c <--> b', a reified constraint for the constraint
> 'c'. I also add a propagator 'wait (b) do P'.
> 
> http://www.gecode.org/doc-latest/reference/classGecode_1_1Kernel_1_1UnaryWait.html
> 
> That approach make the execution of ntcc very efficient, but it some
> disadvantages, one of them is that the 'ask' is limited by the
> constraints you can deduce using propagation and it is, therefore, not
> complete. Another disadvantage is that it limits the constraints in the
> guard of ask to those that can be reified.
> 
> Cheers,
> Mauricio
> 
> 
> 2014-04-29 14:50 GMT-05:00 Pierre Talbot <ptalbot at hyc.io
> <mailto:ptalbot at hyc.io>>:
> 
>     Hi,
> 
>     Thanks to both of you, I'll carefully read this dissertation.
> 
>     Regards,
>     Pierre
> 
> 
>     On 04/29/2014 09:33 PM, Gustavo Gutierrez wrote:
> 
>         Hi Pierre,
> 
>         Oz does use the store concept, that is for sure :). You can have
>         a look at Christian's dissertation "Programming constraint
>         Services". Start by chapter 2 and you will find the terminology
>         you seem to be looking for.
> 
>         Regards,
>         Gustavo
> 
> 
>         On Tue, Apr 29, 2014 at 9:44 AM, Pierre Talbot <ptalbot at hyc.io
>         <mailto:ptalbot at hyc.io> <mailto:ptalbot at hyc.io
>         <mailto:ptalbot at hyc.io>>> wrote:
> 
>             I'm very new to constraint programming and Oz but I read that
>             there are plans to use Gecode in Mozart. On the other hand, I
>             don't think Oz is using the store concept, correct me if I'm
>             wrong. Anyways, thanks for the infos, I'll definitely look
>         into Oz
>             and AKL.
> 
>             Do you think it's feasible to use Gecode to avoid reimplementing
>             the basis of a constraint system? Or is Gecode have little
>         chances
>             to help us?
> 
>             Regards,
>             Pierre Talbot
> 
>             Le 29/04/2014 15:54, Christian Schulte a ?crit :
> 
>                 Hi,
> 
>                 Gecode is a terrible choice for a cc-inspired language.
>         Please
>                 go back to
>                 predecessors of Gecode such as Oz and AKL, there you
>         will find
>                 how you can
>                 implement ask and tell efficiently. A (somewhat dated
>         starting
>                 point) is:
>                 http://mozart.github.io/__publications/
>         <http://mozart.github.io/publications/>
> 
>                 Cheers
>                 Christian
> 
>                 --
>                 Christian Schulte, Professor of Computer Science, KTH,
>                 www.ict.kth.se/~cschulte/
>         <http://www.ict.kth.se/~cschulte/>
>         <http://www.ict.kth.se/%__7Ecschulte/
>         <http://www.ict.kth.se/%7Ecschulte/>>
> 
> 
> 
>                 -----Original Message-----
>                 From: users-bounces at gecode.org
>         <mailto:users-bounces at gecode.org>
>                 <mailto:users-bounces at gecode.__org
>         <mailto:users-bounces at gecode.org>>
>                 [mailto:users-bounces at gecode.__org
>         <mailto:users-bounces at gecode.org>
>                 <mailto:users-bounces at gecode.__org
>         <mailto:users-bounces at gecode.org>>] On Behalf
>                 Of Pierre Talbot
>                 Sent: Tuesday, April 29, 2014 3:49 PM
>                 To: users at gecode.org <mailto:users at gecode.org>
>         <mailto:users at gecode.org <mailto:users at gecode.org>>
>                 Subject: [gecode-users] Constraint store
> 
>                 Hi,
> 
>                 I develop a compiler for a formal concurrent language called
>                 'ntcc'.
>                 This language introduces a constraint store that we can
>                 manipulate with two
>                 operations:
> 
>                 * Ask(c): ask the store d if c is entailed by d.
>                 * Tell(c): Entail the constraint c in the store.
> 
>                 I'd like to use Gecode to implement it but I didn't find
>                 anything related to
>                 the notion of store. A technique, probably inefficient,
>         would
>                 be to copy the
>                 store each time we want to ask something, add the constraint
>                 in and search
>                 for the first solution (if it exists). Also, we are not
>                 interested by the
>                 solution but only by the existence of a solution.
> 
>                 If you have any leads on previous works or
>         implementations of
>                 such a store
>                 using (or implemented in) Gecode, I'd be grateful.
> 
>                 Regards,
>                 Pierre Talbot (IRCAM)
> 
>                 _________________________________________________
>                 Gecode users mailing list
>                 users at gecode.org <mailto:users at gecode.org>
>         <mailto:users at gecode.org <mailto:users at gecode.org>>
> 
>                 https://www.gecode.org/__mailman/listinfo/gecode-users
>         <https://www.gecode.org/mailman/listinfo/gecode-users>
> 
> 
> 
>             _________________________________________________
>             Gecode users mailing list
>             users at gecode.org <mailto:users at gecode.org>
>         <mailto:users at gecode.org <mailto:users at gecode.org>>
> 
>             https://www.gecode.org/__mailman/listinfo/gecode-users
>         <https://www.gecode.org/mailman/listinfo/gecode-users>
> 
> 
> 
> 
>         -- 
>         Gustavo Gutierrez
> 
> 
> 
>     _________________________________________________
>     Gecode users mailing list
>     users at gecode.org <mailto:users at gecode.org>
>     https://www.gecode.org/__mailman/listinfo/gecode-users
>     <https://www.gecode.org/mailman/listinfo/gecode-users>
> 
> 
> 
> 
> -- 
> Mauricio
> http://www.cs.ucy.ac.cy/~mtoro/
> 
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
> 



From cschulte at kth.se  Wed Apr 30 10:56:11 2014
From: cschulte at kth.se (Christian Schulte)
Date: Wed, 30 Apr 2014 10:56:11 +0200
Subject: [gecode-users] Constraint store
In-Reply-To: <5360B9D4.3030803@cs.uni-potsdam.de>
References: <535FADD8.3070101@hyc.io>
	<017201cf63b2$90913e40$b1b3bac0$@se>	<535FBAE3.8010108@hyc.io>	<CAFcfiNXErX4eFbpFtRNzdEdLi0V-HYN-zNOAX-TN_Qm2gkAYXQ@mail.gmail.com>	<5360027B.9060900@hyc.io>	<CAGkdjK4WTy+hHcZo1Zr0CNj-YO1GsXs25pfhvfCGo5JXeOy8ow@mail.gmail.com>
	<5360B9D4.3030803@cs.uni-potsdam.de>
Message-ID: <01d801cf6452$09af4110$1d0dc330$@se>

Please, let's not discuss Oz here. There are better places. Thanks Christian

--
Christian Schulte, Professor of Computer Science, KTH,
www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Max Ostrowski
Sent: Wednesday, April 30, 2014 10:53 AM
To: gecode list
Subject: Re: [gecode-users] Constraint store

Hi everybody,

i actually did something similar using Gecode, using it as a theory solver
for an SMT system.
The approach is the same as from Mauricio, except that my ask method is
allowed to return Maybe, and postpone the request. (if propagation is strong
enough to tell me if the constraint is entailed, this is fine, otherwise i
need to do more tell operations)


I just tried to read the Dissertation of Christian (at least the part from
Chapter 2 - 4) to try to figure out why Oz would be more suitable for this.

I think the tell operation is clear and simple for both systems, adding a
constraint.


For the "ask" task, in Oz you could use the equality test or the domain
Reflection ? Is this right?
What is the difference of Gecode and Oz in the behavior.
Both seem to use some kind of reification.
Can Oz answer the "ask" task without doing search?

Best,
Max

On 04/30/2014 01:10 AM, Mauricio Toro wrote:
> Hi Pierre,
> 
> I implemented long time ago an interpreter for ntcc using Gecode. Here 
> is the implementation http://ntccrt.sourceforge.net/ and this is a 
> conference article about the implementation and some applications 
> http://www.cs.ucy.ac.cy/~mtoro/traa09.pdf
> 
> I agree with Christian that Oz is more appropriate to implement ntcc, 
> but, although it has some limitations, using Gecode proved to be more
efficient.
> I also agree with Gustavo that Christian's dissertation is crucial.
> 
> My approach was the following:
> 
> tell(c) : I add 'c' to the Space
> ask (c) do P: I add 'c <--> b', a reified constraint for the 
> constraint 'c'. I also add a propagator 'wait (b) do P'.
> 
> http://www.gecode.org/doc-latest/reference/classGecode_1_1Kernel_1_1Un
> aryWait.html
> 
> That approach make the execution of ntcc very efficient, but it some 
> disadvantages, one of them is that the 'ask' is limited by the 
> constraints you can deduce using propagation and it is, therefore, not 
> complete. Another disadvantage is that it limits the constraints in 
> the guard of ask to those that can be reified.
> 
> Cheers,
> Mauricio
> 
> 
> 2014-04-29 14:50 GMT-05:00 Pierre Talbot <ptalbot at hyc.io
> <mailto:ptalbot at hyc.io>>:
> 
>     Hi,
> 
>     Thanks to both of you, I'll carefully read this dissertation.
> 
>     Regards,
>     Pierre
> 
> 
>     On 04/29/2014 09:33 PM, Gustavo Gutierrez wrote:
> 
>         Hi Pierre,
> 
>         Oz does use the store concept, that is for sure :). You can have
>         a look at Christian's dissertation "Programming constraint
>         Services". Start by chapter 2 and you will find the terminology
>         you seem to be looking for.
> 
>         Regards,
>         Gustavo
> 
> 
>         On Tue, Apr 29, 2014 at 9:44 AM, Pierre Talbot <ptalbot at hyc.io
>         <mailto:ptalbot at hyc.io> <mailto:ptalbot at hyc.io
>         <mailto:ptalbot at hyc.io>>> wrote:
> 
>             I'm very new to constraint programming and Oz but I read that
>             there are plans to use Gecode in Mozart. On the other hand, I
>             don't think Oz is using the store concept, correct me if I'm
>             wrong. Anyways, thanks for the infos, I'll definitely look
>         into Oz
>             and AKL.
> 
>             Do you think it's feasible to use Gecode to avoid
reimplementing
>             the basis of a constraint system? Or is Gecode have little
>         chances
>             to help us?
> 
>             Regards,
>             Pierre Talbot
> 
>             Le 29/04/2014 15:54, Christian Schulte a ?crit :
> 
>                 Hi,
> 
>                 Gecode is a terrible choice for a cc-inspired language.
>         Please
>                 go back to
>                 predecessors of Gecode such as Oz and AKL, there you
>         will find
>                 how you can
>                 implement ask and tell efficiently. A (somewhat dated
>         starting
>                 point) is:
>                 http://mozart.github.io/__publications/
>         <http://mozart.github.io/publications/>
> 
>                 Cheers
>                 Christian
> 
>                 --
>                 Christian Schulte, Professor of Computer Science, KTH,
>                 www.ict.kth.se/~cschulte/
>         <http://www.ict.kth.se/~cschulte/>
>         <http://www.ict.kth.se/%__7Ecschulte/
>         <http://www.ict.kth.se/%7Ecschulte/>>
> 
> 
> 
>                 -----Original Message-----
>                 From: users-bounces at gecode.org
>         <mailto:users-bounces at gecode.org>
>                 <mailto:users-bounces at gecode.__org
>         <mailto:users-bounces at gecode.org>>
>                 [mailto:users-bounces at gecode.__org
>         <mailto:users-bounces at gecode.org>
>                 <mailto:users-bounces at gecode.__org
>         <mailto:users-bounces at gecode.org>>] On Behalf
>                 Of Pierre Talbot
>                 Sent: Tuesday, April 29, 2014 3:49 PM
>                 To: users at gecode.org <mailto:users at gecode.org>
>         <mailto:users at gecode.org <mailto:users at gecode.org>>
>                 Subject: [gecode-users] Constraint store
> 
>                 Hi,
> 
>                 I develop a compiler for a formal concurrent language
called
>                 'ntcc'.
>                 This language introduces a constraint store that we can
>                 manipulate with two
>                 operations:
> 
>                 * Ask(c): ask the store d if c is entailed by d.
>                 * Tell(c): Entail the constraint c in the store.
> 
>                 I'd like to use Gecode to implement it but I didn't find
>                 anything related to
>                 the notion of store. A technique, probably inefficient,
>         would
>                 be to copy the
>                 store each time we want to ask something, add the
constraint
>                 in and search
>                 for the first solution (if it exists). Also, we are not
>                 interested by the
>                 solution but only by the existence of a solution.
> 
>                 If you have any leads on previous works or
>         implementations of
>                 such a store
>                 using (or implemented in) Gecode, I'd be grateful.
> 
>                 Regards,
>                 Pierre Talbot (IRCAM)
> 
>                 _________________________________________________
>                 Gecode users mailing list
>                 users at gecode.org <mailto:users at gecode.org>
>         <mailto:users at gecode.org <mailto:users at gecode.org>>
> 
>                 https://www.gecode.org/__mailman/listinfo/gecode-users
>         <https://www.gecode.org/mailman/listinfo/gecode-users>
> 
> 
> 
>             _________________________________________________
>             Gecode users mailing list
>             users at gecode.org <mailto:users at gecode.org>
>         <mailto:users at gecode.org <mailto:users at gecode.org>>
> 
>             https://www.gecode.org/__mailman/listinfo/gecode-users
>         <https://www.gecode.org/mailman/listinfo/gecode-users>
> 
> 
> 
> 
>         -- 
>         Gustavo Gutierrez
> 
> 
> 
>     _________________________________________________
>     Gecode users mailing list
>     users at gecode.org <mailto:users at gecode.org>
>     https://www.gecode.org/__mailman/listinfo/gecode-users
>     <https://www.gecode.org/mailman/listinfo/gecode-users>
> 
> 
> 
> 
> --
> Mauricio
> http://www.cs.ucy.ac.cy/~mtoro/
> 
> 
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
> 


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users



