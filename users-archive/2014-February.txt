From kemmar.amina at gmail.com  Sun Feb  2 19:54:37 2014
From: kemmar.amina at gmail.com (Amina Kemmar)
Date: Sun, 02 Feb 2014 19:54:37 +0100
Subject: [gecode-users] Get variable values that are not solutions
Message-ID: <52EE946D.3050906@gmail.com>

Hi everyone,

I want to store the variable values that are not solutions, i.e. get the 
values of some variables when Gecode fails. How can I do this?

Thank you,
With my best regards.
--------
Amina


From andrecire at cmu.edu  Mon Feb 10 18:42:56 2014
From: andrecire at cmu.edu (Andre Augusto Cire)
Date: Mon, 10 Feb 2014 12:42:56 -0500
Subject: [gecode-users] Activity-based search and nondeterministic behaviour
Message-ID: <CAO4nHpvfm+5QcADGopBt2cjgzV1+RkUVgX2PsKLedxz=Bwj-bw@mail.gmail.com>

Dear all,

I wonder if you could kindly help me with a very quick question. From a
previous forum post and the manual, we know that nonmonotonic propagators
and AFC-based search may result in a nondeterministic behaviour (post here:
https://www.mail-archive.com/users at gecode.org/msg00916.html).

Just to confirm: is activity-based search deterministic?

Thank you very much,
Andre
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140210/b742dd84/attachment.html>

From cschulte at kth.se  Mon Feb 10 21:23:01 2014
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 10 Feb 2014 21:23:01 +0100
Subject: [gecode-users] Activity-based search and nondeterministic
	behaviour
In-Reply-To: <CAO4nHpvfm+5QcADGopBt2cjgzV1+RkUVgX2PsKLedxz=Bwj-bw@mail.gmail.com>
References: <CAO4nHpvfm+5QcADGopBt2cjgzV1+RkUVgX2PsKLedxz=Bwj-bw@mail.gmail.com>
Message-ID: <038601cf269d$e6695f20$b33c1d60$@kth.se>

Dear Andre,

 

Now it is not deterministic when non-detrministic propagators are around.

 

Moreover, changing the recomputation distance will also (slightly) change
the activity information recorded.

 

Cheers

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Andre Augusto Cire
Sent: Monday, February 10, 2014 6:43 PM
To: users at gecode.org
Subject: [gecode-users] Activity-based search and nondeterministic behaviour

 

Dear all,

 

I wonder if you could kindly help me with a very quick question. From a
previous forum post and the manual, we know that nonmonotonic propagators
and AFC-based search may result in a nondeterministic behaviour (post here:
https://www.mail-archive.com/users at gecode.org/msg00916.html). 

 

Just to confirm: is activity-based search deterministic?

 

Thank you very much,

Andre

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140210/4b9ef9e5/attachment.html>

From b.j.conijn at student.tue.nl  Fri Feb 14 14:08:18 2014
From: b.j.conijn at student.tue.nl (Conijn, B.J.)
Date: Fri, 14 Feb 2014 13:08:18 +0000
Subject: [gecode-users] Unary constraint not-first-not-last propagation does
 not cancel optional tasks
Message-ID: <16E958B8722B734792C877EB8238059C1FA0D3ED@XSERVER22B.campus.tue.nl>

Hi,

In not-first-not-last.hpp I found the following piece of code and I was wondering why those two lines have been commented out. While running the tests with those two lines included, those lines get executed and the test still succeeds. Can those two lines be safely included?

if (t[i].mandatory()) {
         GECODE_ME_CHECK(t[i].lct(home,lct[i]));
} else if (lct[i] < t[i].ect()) {
   //        GECODE_ME_CHECK(t[i].excluded(home));
   //        t[i].cancel(home,p); t[i]=t[--n];
}

Kind regards,

Bauke


From navid at navid.ca  Fri Feb 14 15:25:10 2014
From: navid at navid.ca (Navid Mohaghegh)
Date: Fri, 14 Feb 2014 09:25:10 -0500
Subject: [gecode-users] Possible Bug - Increase IntVars
	Range	and	Gecode	Stalls
In-Reply-To: <009501cf161e$60647520$212d5f60$@kth.se>
References: <7D873EF2-12CD-46C2-AF3B-5E3110085815@navid.ca>	<001401cf1144$50964f30$f1c2ed90$@se>	<78523901-E0EC-403C-A230-CEA44F993D47@navid.ca>	<002801cf1147$8ca35ba0$a5ea12e0$@se>	<D8A1F5E2-5885-4A49-851F-B32A3AFA9631@navid.ca>	<007f01cf12d0$4e008c30$ea01a490$@se>
	<176CC873-A601-4BA6-8758-B68D855F9CE8@navid.ca>
	<009501cf161e$60647520$212d5f60$@kth.se>
Message-ID: <8D2131C0-64D5-4F62-9797-BA0DC4C68449@navid.ca>

Hi Christian,

Thank you for your reply.

I didn't use the word Stall properly. Sorry ... What I mean is that Gecode will get keep searching forever! I am wondering if there is anything can be improved in search strategy. Please note that for values less than 1200 we get instant solution and as soon as we increase the range by 1, then suddenly Gecode will keep searching forever (I left the computer on for 5 days!). 

I studied the example for perfect square. The only difference between my code and perfect square code is that I am not using custom made propagator. Should I start doing that? And could you kindly point me for more reading on propagator topic (I am still reading MPG chapter 22)?

Thank you,
Navid
 

On Jan 20, 2014, at 3:29 PM, Christian Schulte <cschulte at kth.se> wrote:

> What does stall mean, again? Is it still searching (you can observe that in Gist), that is making progress? Or is it dead.
>  
> To improve your model, check the perfect square example that comes with Gecode and/or search for square packing on Helmut Simonis? webpage: http://4c.ucc.ie/~hsimonis/
>  
> Christian
>  
>  
> --
> Christian Schulte, www.ict.kth.se/~cschulte
>  
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Navid Mohaghegh
> Sent: Thursday, January 16, 2014 09:23 PM
> To: cschulte at kth.se; users at gecode.org
> Subject: Re: [gecode-users] Possible Bug - Increase IntVars Range and Gecode Stalls
>  
> Hi Christian,
>  
> Thank you for your reply. 
>  
> I originally didn't use that as I didn't want to add another set of variables for finishing corner of rectangles (Gecode nooverlap API has a simple version that use fixed int width and int height).
>  
> Per your suggestion, I added two array variables for finishing corner that I can employ the nooverlap API:
> -defined integer array variables for starting point of rectangles (e.g. top left corner): I called it vxs and vys (e.g. X0 and Y0 in Gecode MPG manual)
> -defined integer array variables for width and height of rectangles: I called it vw and vh (e.g. W and H in Gecode MPG manual)
> -defined integer array variables for finishing point of rectangles (e.g. lower right corner): I called it vxf and vyf (e.g. X1 and Y1 in Gecode MPG manual)
> -I removed all manual non-overllaping contraint that I manually added myself and add the following:
>  
>             //starting point  width and hight will give us the finishing point
>             for (i =0 ; i < this->n_vars; i++)
>             {
>                         rel(*this, ( (vxs[i] + vw[i] == vxf[i]) && (vys[i] + vh[i] == vyf[i]) )  );
>             }
>             //add nooverlap for all rectangles     
>             nooverlap(*this, vxs,vw,vxf,   vys,vh,vyf);
>  
>  
> My code gets solved for lower ranges of X vars (e.g. vxs < 1000 and vxf<1200) and the moment I change the x range to values greater than 1500 gecode stalls.
>  
> I appreciate your feedback.
>  
> Thank you,
> Navid
>  
>  
> On Jan 16, 2014, at 10:33 AM, Christian Schulte <cschulte at kth.se> wrote:
> 
> 
> Hi,
>  
> Just very quick: did you look at the nooverlap constraint in Gecode?
>  
> Cheers
> Christian
>  
> --
> Christian Schulte, Professor of Computer Science, KTH, www.ict.kth.se/~cschulte/
>  
> From: Navid Mohaghegh [mailto:navid at navid.ca] 
> Sent: Thursday, January 16, 2014 3:32 PM
> To: users at gecode.org
> Cc: cschulte at kth.se
> Subject: Re: [gecode-users] Possible Bug - Increase IntVars Range and Gecode Stalls
>  
> Hi everyone,
>  
> I tried Gist as Christian mentioned. Gist will not terminate for higher ranges (attached screenshot shows that I had to stop Gist manually for range 1535).
>  
> Could you please point me in the right direction about what I have to more efficient for this problem:
> -Like bin-packing problem, we have bunch of rectangles that shouldn't overlap with each other. 
> -Unlike bin-packing, the width and hight of the rectangles can be variable (e.g. if we have more space in our sheet, we don't mind a rectangle gets bigger). 
> -We have bunch of constraint for the size and location of rectangles.
> -In below, 15 rectangles, 4 array of variables (2 arrays for X,Y location and 2 variables for Width,Height which is for size)     
>  
>  
> Could you please let me know?
>  
> Thank you,
> Navid
> <image001.png>
>  
> On Jan 14, 2014, at 11:42 AM, Christian Schulte <cschulte at kth.se> wrote:
> 
> 
> 
> The bug you refer to has been fixed. But try Gist, there you can see what happens.
>  
> Cheers
> Christian
>  
> --
> Christian Schulte, Professor of Computer Science, KTH, www.ict.kth.se/~cschulte/
>  
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Navid Mohaghegh
> Sent: Tuesday, January 14, 2014 5:39 PM
> To: cschulte at kth.se
> Cc: users at gecode.org
> Subject: Re: [gecode-users] Possible Bug - Increase IntVars Range and Gecode Stalls
>  
> Hi Christian,
>  
> Thank your for your reply. I didn't try Gist yet, I will go and look at sample code to learn Gist and I will give it a shot.
>  
> Could you kindly have a look at this comment in mailing list: "There seems to be a trivial bug in INT_VALUES_MAX: SEL_VALUES_MIN is used instead of SEL_VALUES_MAX. The attached patch fixes it."
> I am asking this as mu space get solved by Gecode almost instantly (less than 1ms on a 128 GB ram, quad CPU, 64 cores workstation) for values like 1199. And the moment it goes to 1200 it will stalls. After all it should get slow (I agree with you), but not stall/freeze for 5 days. That is the main reason I suspect a tiny bug somewhere.  
>  
> I will also look at Gist as well as you instructed.
>  
> Thank you,
> Navid
>  
>  
> On Jan 14, 2014, at 11:18 AM, Christian Schulte <cschulte at kth.se> wrote:
> 
> 
> 
> 
> Did you try it in Gist to see how large the search trees get or whether Gecode just hangs?
>  
> After all, you exponentially increase the search space!
>  
> Christian
>  
> --
> Christian Schulte, Professor of Computer Science, KTH, www.ict.kth.se/~cschulte/
>  
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Navid Mohaghegh
> Sent: Tuesday, January 14, 2014 5:04 PM
> To: users at gecode.org
> Subject: [gecode-users] Possible Bug - Increase IntVars Range and Gecode Stalls
> Importance: High
>  
> Hi Everyone,
>  
> My question:
> I am wondering what is happening in below and why Gecode stalls stall whenI increase the range of my IntegerVars (while its CPU utilization goes very high) despite the fact that our constraints are not changed?
>  
> Background (http://navid.ca/gecode/test.cpp):
> We are trying to solve a space. We can easily solve the space when our variable ranges are small (e.g. 0 to 800). As soon as the range goes higher (e.g. 0-1535) Gecode will stall and can not produce a solution for the space with exactly the same constraints as before.
>  
> We have 4 groups of integer_array variables. They are called vars_a, vars_b, vars_c and vars_d. And inside each of them, we have 15 integer variables.
> NavidTest(int n, int vars_a_max_, int vars_b_max_, int vars_c_max_, int vars_d_max_, int vcost_max_); 
> NavidTest* m = new NavidTest(15,  800, 500, 410, 60, 2000000000); means:
> n = 15
> vars_a[0] ... vars_a[15] can have values from zero to vars_a_max_ = 800
> vars_b[0] ... vars_b[15] can have values from zero to vars_b_max_ = 500
> vars_c[0] ... vars_c[15] can have values from zero to vars_c_max_ = 410
> vars_d[0] ... vars_d[15] can have values from zero to vars_d_max_ = 60
> our cost variable can be have values from zero to vcost_max_ = 2,000,000,000
> As we have quadratic cost functions and values can easily grow.
> lift() method is where we add our constraints. 
> For demonstration purpose, we have a method that once used, Gecode can produce solution: it is called "void the_one_works()"
> And we have another one (called: void the_one_doesnot_work) that can not be solved using Gecode (it is perfectly solvable and we test our solution in verify_answer() method)
> The only difference between the_one_works() and the_one_doesnot_work() is an increase in vars_a max range from 800 to 1535. 
>  
>  
>  
> I have found a mailing list entry stating a possible bug:
> ==========
> From: victor.zverovich at ... <victor.zverovich at ...>
> Subject: bug in INT_VALUES_MAX
> Newsgroups: gmane.comp.lib.gecode.user
> Date: 2013-06-21 22:20:18 GMT (29 weeks, 3 days, 17 hours and 17 minutes ago)
> There seems to be a trivial bug in INT_VALUES_MAX: SEL_VALUES_MIN is used instead of SEL_VALUES_MAX. The attached patch fixes it.
> Victor
> ==========
>  
> Can someone have a look and let me know?
> We are using Gecode 4.2.1 on Linux
> GCC 4.7.2 and also latest 4.9
> Debian 64bit and CentOS 64bit  
> My code and how I compile and run is here: http://navid.ca/gecode/test.cpp
>  
> Thank you,
> Navid

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140214/35a10d94/attachment-0001.html>

From andrecire at cmu.edu  Fri Feb 14 19:04:48 2014
From: andrecire at cmu.edu (Andre Augusto Cire)
Date: Fri, 14 Feb 2014 13:04:48 -0500
Subject: [gecode-users] Activity-based search and nondeterministic
	behaviour
In-Reply-To: <038601cf269d$e6695f20$b33c1d60$@kth.se>
References: <CAO4nHpvfm+5QcADGopBt2cjgzV1+RkUVgX2PsKLedxz=Bwj-bw@mail.gmail.com>
	<038601cf269d$e6695f20$b33c1d60$@kth.se>
Message-ID: <CAO4nHpuyZEEU94ZhG=6stbGiPTDm1rahYsASeFvcg4kt0EyD-w@mail.gmail.com>

Hi Christian,

Thanks a lot for your answer. Just to clear out any confusion: this means
that, in the latest version (4.2.1), all search types (including AFC) are
deterministic as long as there are no non-deterministic propagators, right?

Cheers,
Andre


On Mon, Feb 10, 2014 at 3:23 PM, Christian Schulte <cschulte at kth.se> wrote:

> Dear Andre,
>
>
>
> Now it is not deterministic when non-detrministic propagators are around.
>
>
>
> Moreover, changing the recomputation distance will also (slightly) change
> the activity information recorded.
>
>
>
> Cheers
>
> Christian
>
>
>
> --
>
> Christian Schulte, www.ict.kth.se/~cschulte/
>
>
>
> *From:* users-bounces at gecode.org [mailto:users-bounces at gecode.org] *On
> Behalf Of *Andre Augusto Cire
> *Sent:* Monday, February 10, 2014 6:43 PM
> *To:* users at gecode.org
> *Subject:* [gecode-users] Activity-based search and nondeterministic
> behaviour
>
>
>
> Dear all,
>
>
>
> I wonder if you could kindly help me with a very quick question. From a
> previous forum post and the manual, we know that nonmonotonic propagators
> and AFC-based search may result in a nondeterministic behaviour (post here:
> https://www.mail-archive.com/users at gecode.org/msg00916.html).
>
>
>
> Just to confirm: is activity-based search deterministic?
>
>
>
> Thank you very much,
>
> Andre
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140214/c352d36b/attachment.html>

From cschulte at kth.se  Mon Feb 17 10:52:37 2014
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 17 Feb 2014 10:52:37 +0100
Subject: [gecode-users] Activity-based search and nondeterministic
	behaviour
In-Reply-To: <CAO4nHpuyZEEU94ZhG=6stbGiPTDm1rahYsASeFvcg4kt0EyD-w@mail.gmail.com>
References: <CAO4nHpvfm+5QcADGopBt2cjgzV1+RkUVgX2PsKLedxz=Bwj-bw@mail.gmail.com>
	<038601cf269d$e6695f20$b33c1d60$@kth.se>
	<CAO4nHpuyZEEU94ZhG=6stbGiPTDm1rahYsASeFvcg4kt0EyD-w@mail.gmail.com>
Message-ID: <001601cf2bc5$fdf00130$f9d00390$@se>

Hi Andre,

 

Right, they are deterministic, provided:

- you do not use parallel search (as parallel search is indeterministic
itself)

- you keep the same values for recomputation

 

Best

Christian

 

--

Christian Schulte, Professor of Computer Science, KTH,
www.ict.kth.se/~cschulte/

 

From: andre.cire at gmail.com [mailto:andre.cire at gmail.com] On Behalf Of Andre
Augusto Cire
Sent: Friday, February 14, 2014 7:05 PM
To: cschulte at kth.se
Cc: users at gecode.org
Subject: Re: [gecode-users] Activity-based search and nondeterministic
behaviour

 

Hi Christian,

 

Thanks a lot for your answer. Just to clear out any confusion: this means
that, in the latest version (4.2.1), all search types (including AFC) are
deterministic as long as there are no non-deterministic propagators, right?

 

Cheers,

Andre

 

On Mon, Feb 10, 2014 at 3:23 PM, Christian Schulte <cschulte at kth.se> wrote:

Dear Andre,

 

Now it is not deterministic when non-detrministic propagators are around.

 

Moreover, changing the recomputation distance will also (slightly) change
the activity information recorded.

 

Cheers

Christian

 

--

Christian Schulte, www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Andre Augusto Cire
Sent: Monday, February 10, 2014 6:43 PM
To: users at gecode.org
Subject: [gecode-users] Activity-based search and nondeterministic behaviour

 

Dear all,

 

I wonder if you could kindly help me with a very quick question. From a
previous forum post and the manual, we know that nonmonotonic propagators
and AFC-based search may result in a nondeterministic behaviour (post here:
https://www.mail-archive.com/users at gecode.org/msg00916.html). 

 

Just to confirm: is activity-based search deterministic?

 

Thank you very much,

Andre

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140217/0a96eb10/attachment.html>

From cschulte at kth.se  Mon Feb 17 15:57:45 2014
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 17 Feb 2014 15:57:45 +0100
Subject: [gecode-users] Possible Bug - Increase IntVars
	Range	and	Gecode	Stalls
In-Reply-To: <8D2131C0-64D5-4F62-9797-BA0DC4C68449@navid.ca>
References: <7D873EF2-12CD-46C2-AF3B-5E3110085815@navid.ca>	<001401cf1144$50964f30$f1c2ed90$@se>	<78523901-E0EC-403C-A230-CEA44F993D47@navid.ca>	<002801cf1147$8ca35ba0$a5ea12e0$@se>	<D8A1F5E2-5885-4A49-851F-B32A3AFA9631@navid.ca>	<007f01cf12d0$4e008c30$ea01a490$@se>
	<176CC873-A601-4BA6-8758-B68D855F9CE8@navid.ca>
	<009501cf161e$60647520$212d5f60$@kth.se>
	<8D2131C0-64D5-4F62-9797-BA0DC4C68449@navid.ca>
Message-ID: <00a101cf2bf0$9ec6ae40$dc540ac0$@se>

Hi,

 

The Gecode example does not use a special propagator, have you been looking
at the example that is _included_ in Gecode?

 

Best

Christian

 

--

Christian Schulte, Professor of Computer Science, KTH,
www.ict.kth.se/~cschulte/

 

From: Navid Mohaghegh [mailto:navid at navid.ca] 
Sent: Friday, February 14, 2014 3:25 PM
To: cschulte at kth.se
Cc: users at gecode.org
Subject: Re: [gecode-users] Possible Bug - Increase IntVars Range and Gecode
Stalls

 

Hi Christian,

 

Thank you for your reply.

 

I didn't use the word Stall properly. Sorry ... What I mean is that Gecode
will get keep searching forever! I am wondering if there is anything can be
improved in search strategy. Please note that for values less than 1200 we
get instant solution and as soon as we increase the range by 1, then
suddenly Gecode will keep searching forever (I left the computer on for 5
days!). 

 

I studied the example for perfect square. The only difference between my
code and perfect square code is that I am not using custom made propagator.
Should I start doing that? And could you kindly point me for more reading on
propagator topic (I am still reading MPG chapter 22)?

 

Thank you,

Navid

 

 

On Jan 20, 2014, at 3:29 PM, Christian Schulte <cschulte at kth.se> wrote:





What does stall mean, again? Is it still searching (you can observe that in
Gist), that is making progress? Or is it dead.

 

To improve your model, check the perfect square example that comes with
Gecode and/or search for square packing on Helmut Simonis' webpage:
<http://4c.ucc.ie/~hsimonis/> http://4c.ucc.ie/~hsimonis/

 

Christian

 

 

--

Christian Schulte,  <http://www.ict.kth.se/~cschulte>
www.ict.kth.se/~cschulte

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Navid Mohaghegh
Sent: Thursday, January 16, 2014 09:23 PM
To: cschulte at kth.se; users at gecode.org
Subject: Re: [gecode-users] Possible Bug - Increase IntVars Range and Gecode
Stalls

 

Hi Christian,

 

Thank you for your reply. 

 

I originally didn't use that as I didn't want to add another set of
variables for finishing corner of rectangles (Gecode nooverlap API has a
simple version that use fixed int width and int height).

 

Per your suggestion, I added two array variables for finishing corner that I
can employ the nooverlap API:

-defined integer array variables for starting point of rectangles (e.g. top
left corner): I called it vxs and vys (e.g. X0 and Y0 in Gecode MPG manual)

-defined integer array variables for width and height of rectangles: I
called it vw and vh (e.g. W and H in Gecode MPG manual)

-defined integer array variables for finishing point of rectangles (e.g.
lower right corner): I called it vxf and vyf (e.g. X1 and Y1 in Gecode MPG
manual)

-I removed all manual non-overllaping contraint that I manually added myself
and add the following:

 

            //starting point  width and hight will give us the finishing
point

            for (i =0 ; i < this->n_vars; i++)

            {

                        rel(*this, ( (vxs[i] + vw[i] == vxf[i]) && (vys[i] +
vh[i] == vyf[i]) )  );

            }

            //add nooverlap for all rectangles     

            nooverlap(*this, vxs,vw,vxf,   vys,vh,vyf);

 

 

My code gets solved for lower ranges of X vars (e.g. vxs < 1000 and
vxf<1200) and the moment I change the x range to values greater than 1500
gecode stalls.

 

I appreciate your feedback.

 

Thank you,

Navid

 

 

On Jan 16, 2014, at 10:33 AM, Christian Schulte < <mailto:cschulte at kth.se>
cschulte at kth.se> wrote:






Hi,

 

Just very quick: did you look at the nooverlap constraint in Gecode?

 

Cheers

Christian

 

--

Christian Schulte, Professor of Computer Science, KTH,
<http://www.ict.kth.se/~cschulte/> www.ict.kth.se/~cschulte/

 

From: Navid Mohaghegh [ <mailto:navid at navid.ca> mailto:navid at navid.ca] 
Sent: Thursday, January 16, 2014 3:32 PM
To:  <mailto:users at gecode.org> users at gecode.org
Cc:  <mailto:cschulte at kth.se> cschulte at kth.se
Subject: Re: [gecode-users] Possible Bug - Increase IntVars Range and Gecode
Stalls

 

Hi everyone,

 

I tried Gist as Christian mentioned. Gist will not terminate for higher
ranges (attached screenshot shows that I had to stop Gist manually for range
1535).

 

Could you please point me in the right direction about what I have to more
efficient for this problem:

-Like bin-packing problem, we have bunch of rectangles that shouldn't
overlap with each other. 

-Unlike bin-packing, the width and hight of the rectangles can be variable
(e.g. if we have more space in our sheet, we don't mind a rectangle gets
bigger). 

-We have bunch of constraint for the size and location of rectangles.

-In below, 15 rectangles, 4 array of variables (2 arrays for X,Y location
and 2 variables for Width,Height which is for size)     

 

 

Could you please let me know?

 

Thank you,

Navid

<image001.png>

 

On Jan 14, 2014, at 11:42 AM, Christian Schulte < <mailto:cschulte at kth.se>
cschulte at kth.se> wrote:







The bug you refer to has been fixed. But try Gist, there you can see what
happens.

 

Cheers

Christian

 

--

Christian Schulte, Professor of Computer Science, KTH,
<http://www.ict.kth.se/~cschulte/> www.ict.kth.se/~cschulte/

 

From:  <mailto:users-bounces at gecode.org> users-bounces at gecode.org [
<mailto:users-bounces at gecode.org> mailto:users-bounces at gecode.org] On Behalf
Of Navid Mohaghegh
Sent: Tuesday, January 14, 2014 5:39 PM
To:  <mailto:cschulte at kth.se> cschulte at kth.se
Cc:  <mailto:users at gecode.org> users at gecode.org
Subject: Re: [gecode-users] Possible Bug - Increase IntVars Range and Gecode
Stalls

 

Hi Christian,

 

Thank your for your reply. I didn't try Gist yet, I will go and look at
sample code to learn Gist and I will give it a shot.

 

Could you kindly have a look at this comment in mailing list: "There seems
to be a trivial bug in INT_VALUES_MAX: SEL_VALUES_MIN is used instead of
SEL_VALUES_MAX. The attached patch fixes it."

I am asking this as mu space get solved by Gecode almost instantly (less
than 1ms on a 128 GB ram, quad CPU, 64 cores workstation) for values like
1199. And the moment it goes to 1200 it will stalls. After all it should get
slow (I agree with you), but not stall/freeze for 5 days. That is the main
reason I suspect a tiny bug somewhere.  

 

I will also look at Gist as well as you instructed.

 

Thank you,

Navid

 

 

On Jan 14, 2014, at 11:18 AM, Christian Schulte < <mailto:cschulte at kth.se>
cschulte at kth.se> wrote:








Did you try it in Gist to see how large the search trees get or whether
Gecode just hangs?

 

After all, you exponentially increase the search space!

 

Christian

 

--

Christian Schulte, Professor of Computer Science, KTH,
<http://www.ict.kth.se/~cschulte/> www.ict.kth.se/~cschulte/

 

From:  <mailto:users-bounces at gecode.org> users-bounces at gecode.org [
<mailto:users-bounces at gecode.org> mailto:users-bounces at gecode.org] On Behalf
Of Navid Mohaghegh
Sent: Tuesday, January 14, 2014 5:04 PM
To:  <mailto:users at gecode.org> users at gecode.org
Subject: [gecode-users] Possible Bug - Increase IntVars Range and Gecode
Stalls
Importance: High

 

Hi Everyone,

 

My question:

I am wondering what is happening in below and why Gecode stalls stall whenI
increase the range of my IntegerVars (while its CPU utilization goes very
high) despite the fact that our constraints are not changed?

 

Background ( <http://navid.ca/gecode/test.cpp>
http://navid.ca/gecode/test.cpp):

We are trying to solve a space. We can easily solve the space when our
variable ranges are small (e.g. 0 to 800). As soon as the range goes higher
(e.g. 0-1535) Gecode will stall and can not produce a solution for the space
with exactly the same constraints as before.

 

*	We have 4 groups of integer_array variables. They are called vars_a,
vars_b, vars_c and vars_d. And inside each of them, we have 15 integer
variables.

*	NavidTest(int n, int vars_a_max_, int vars_b_max_, int vars_c_max_,
int vars_d_max_, int vcost_max_); 
*	NavidTest* m = new NavidTest(15,  800, 500, 410, 60, 2000000000);
means:

*	n = 15
*	vars_a[0] ... vars_a[15] can have values from zero to vars_a_max_ =
800
*	vars_b[0] ... vars_b[15] can have values from zero to vars_b_max_ =
500
*	vars_c[0] ... vars_c[15] can have values from zero to vars_c_max_ =
410
*	vars_d[0] ... vars_d[15] can have values from zero to vars_d_max_ =
60
*	our cost variable can be have values from zero to vcost_max_ =
2,000,000,000

*	As we have quadratic cost functions and values can easily grow.

*	lift() method is where we add our constraints. 
*	For demonstration purpose, we have a method that once used, Gecode
can produce solution: it is called "void the_one_works()"

*	And we have another one (called: void the_one_doesnot_work) that can
not be solved using Gecode (it is perfectly solvable and we test our
solution in verify_answer() method)
*	The only difference between the_one_works() and
the_one_doesnot_work() is an increase in vars_a max range from 800 to 1535. 

 

 

 

I have found a mailing list entry stating a possible bug:

==========

From:
<http://gmane.org/get-address.php?address=victor.zverovich%2dRe5JQEeQqe8Avxt
iuMwx3w%40public.gmane.org> victor.zverovich at ... <
<http://gmane.org/get-address.php?address=victor.zverovich%2dRe5JQEeQqe8Avxt
iuMwx3w%40public.gmane.org> victor.zverovich at ...>
Subject:
<http://news.gmane.org/find-root.php?message_id=CANawtxb3jmzB754b7zWaZMuG76T
7KJBwAj1PP%2bMmHgJL%3d0EKVQ%40mail.gmail.com> bug in INT_VALUES_MAX
Newsgroups:  <http://news.gmane.org/gmane.comp.lib.gecode.user>
gmane.comp.lib.gecode.user
Date: 2013-06-21 22:20:18 GMT (29 weeks, 3 days, 17 hours and 17 minutes
ago)

There seems to be a trivial bug in INT_VALUES_MAX: SEL_VALUES_MIN is used
instead of SEL_VALUES_MAX. The attached patch fixes it.

Victor

==========

 

Can someone have a look and let me know?

*	We are using Gecode 4.2.1 on Linux
*	GCC 4.7.2 and also latest 4.9
*	Debian 64bit and CentOS 64bit  
*	My code and how I compile and run is here:
<http://navid.ca/gecode/test.cpp> http://navid.ca/gecode/test.cpp

 

Thank you,

Navid

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140217/c0754ebc/attachment-0001.html>

From cschulte at kth.se  Mon Feb 17 15:59:46 2014
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 17 Feb 2014 15:59:46 +0100
Subject: [gecode-users] Unary constraint not-first-not-last propagation
	does not cancel optional tasks
In-Reply-To: <16E958B8722B734792C877EB8238059C1FA0D3ED@XSERVER22B.campus.tue.nl>
References: <16E958B8722B734792C877EB8238059C1FA0D3ED@XSERVER22B.campus.tue.nl>
Message-ID: <00af01cf2bf0$e5f492f0$b1ddb8d0$@se>

Hi Bauke,

No, they can't, in the current setup this would make the propagator
incorrect. The reasoning is as follows: while the task is still optional,
one is not allowed to prune anything. The reason why the code still lingers
on as a comment is that if one introduces an additional wrapper in forms of
task variables, this kind of reasoing could be used.

Best
Christian

--
Christian Schulte, Professor of Computer Science, KTH,
www.ict.kth.se/~cschulte/


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Conijn, B.J.
Sent: Friday, February 14, 2014 2:08 PM
To: users at gecode.org
Subject: [gecode-users] Unary constraint not-first-not-last propagation does
not cancel optional tasks

Hi,

In not-first-not-last.hpp I found the following piece of code and I was
wondering why those two lines have been commented out. While running the
tests with those two lines included, those lines get executed and the test
still succeeds. Can those two lines be safely included?

if (t[i].mandatory()) {
         GECODE_ME_CHECK(t[i].lct(home,lct[i]));
} else if (lct[i] < t[i].ect()) {
   //        GECODE_ME_CHECK(t[i].excluded(home));
   //        t[i].cancel(home,p); t[i]=t[--n];
}

Kind regards,

Bauke

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users



From navid at navid.ca  Mon Feb 17 16:03:05 2014
From: navid at navid.ca (Navid Mohaghegh)
Date: Mon, 17 Feb 2014 10:03:05 -0500
Subject: [gecode-users] Possible Bug - Increase IntVars
	Range	and	Gecode	Stalls
In-Reply-To: <00a101cf2bf0$9ec6ae40$dc540ac0$@se>
References: <7D873EF2-12CD-46C2-AF3B-5E3110085815@navid.ca>	<001401cf1144$50964f30$f1c2ed90$@se>	<78523901-E0EC-403C-A230-CEA44F993D47@navid.ca>	<002801cf1147$8ca35ba0$a5ea12e0$@se>	<D8A1F5E2-5885-4A49-851F-B32A3AFA9631@navid.ca>	<007f01cf12d0$4e008c30$ea01a490$@se>
	<176CC873-A601-4BA6-8758-B68D855F9CE8@navid.ca>
	<009501cf161e$60647520$212d5f60$@kth.se>
	<8D2131C0-64D5-4F62-9797-BA0DC4C68449@navid.ca>
	<00a101cf2bf0$9ec6ae40$dc540ac0$@se>
Message-ID: <461A2D03-AB67-427D-8896-FDDAB1DADF4C@navid.ca>

Hi Christian,

Thank you for your reply.

Yes, I did look at the Gecode example. Here is where I am referring in gecode perfect squares example:
 switch (opt.propagation()) {
    case PROP_REIFIED:
      {
        for (int cx=0; cx<w; cx++) {
          BoolVarArgs bx(*this,n,0,1);
          for (int i=0; i<n; i++)
            dom(*this, x[i], cx-s[i]+1, cx, bx[i]);
          linear(*this, sa, bx, IRT_EQ, w);
        }
        for (int cy=0; cy<w; cy++) {
          BoolVarArgs by(*this,n,0,1);
          for (int i=0; i<n; i++)
            dom(*this, y[i], cy-s[i]+1, cy, by[i]);
          linear(*this, sa, by, IRT_EQ, w);
        }
      }
      break;


Please note that I am using nooverlap as well. And the only thing I don't have is "switch (opt.propagation())" ...

Thank you,
Navid


On Feb 17, 2014, at 9:57 AM, Christian Schulte <cschulte at kth.se> wrote:

> Hi,
>  
> The Gecode example does not use a special propagator, have you been looking at the example that is _included_ in Gecode?
>  
> Best
> Christian
>  
> --
> Christian Schulte, Professor of Computer Science, KTH, www.ict.kth.se/~cschulte/
>  
> From: Navid Mohaghegh [mailto:navid at navid.ca] 
> Sent: Friday, February 14, 2014 3:25 PM
> To: cschulte at kth.se
> Cc: users at gecode.org
> Subject: Re: [gecode-users] Possible Bug - Increase IntVars Range and Gecode Stalls
>  
> Hi Christian,
>  
> Thank you for your reply.
>  
> I didn't use the word Stall properly. Sorry ... What I mean is that Gecode will get keep searching forever! I am wondering if there is anything can be improved in search strategy. Please note that for values less than 1200 we get instant solution and as soon as we increase the range by 1, then suddenly Gecode will keep searching forever (I left the computer on for 5 days!). 
>  
> I studied the example for perfect square. The only difference between my code and perfect square code is that I am not using custom made propagator. Should I start doing that? And could you kindly point me for more reading on propagator topic (I am still reading MPG chapter 22)?
>  
> Thank you,
> Navid
>  
>  
> On Jan 20, 2014, at 3:29 PM, Christian Schulte <cschulte at kth.se> wrote:
> 
> 
> What does stall mean, again? Is it still searching (you can observe that in Gist), that is making progress? Or is it dead.
>  
> To improve your model, check the perfect square example that comes with Gecode and/or search for square packing on Helmut Simonis? webpage: http://4c.ucc.ie/~hsimonis/
>  
> Christian
>  
>  
> --
> Christian Schulte, www.ict.kth.se/~cschulte
>  
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Navid Mohaghegh
> Sent: Thursday, January 16, 2014 09:23 PM
> To: cschulte at kth.se; users at gecode.org
> Subject: Re: [gecode-users] Possible Bug - Increase IntVars Range and Gecode Stalls
>  
> Hi Christian,
>  
> Thank you for your reply. 
>  
> I originally didn't use that as I didn't want to add another set of variables for finishing corner of rectangles (Gecode nooverlap API has a simple version that use fixed int width and int height).
>  
> Per your suggestion, I added two array variables for finishing corner that I can employ the nooverlap API:
> -defined integer array variables for starting point of rectangles (e.g. top left corner): I called it vxs and vys (e.g. X0 and Y0 in Gecode MPG manual)
> -defined integer array variables for width and height of rectangles: I called it vw and vh (e.g. W and H in Gecode MPG manual)
> -defined integer array variables for finishing point of rectangles (e.g. lower right corner): I called it vxf and vyf (e.g. X1 and Y1 in Gecode MPG manual)
> -I removed all manual non-overllaping contraint that I manually added myself and add the following:
>  
>             //starting point  width and hight will give us the finishing point
>             for (i =0 ; i < this->n_vars; i++)
>             {
>                         rel(*this, ( (vxs[i] + vw[i] == vxf[i]) && (vys[i] + vh[i] == vyf[i]) )  );
>             }
>             //add nooverlap for all rectangles     
>             nooverlap(*this, vxs,vw,vxf,   vys,vh,vyf);
>  
>  
> My code gets solved for lower ranges of X vars (e.g. vxs < 1000 and vxf<1200) and the moment I change the x range to values greater than 1500 gecode stalls.
>  
> I appreciate your feedback.
>  
> Thank you,
> Navid
>  
>  
> On Jan 16, 2014, at 10:33 AM, Christian Schulte <cschulte at kth.se> wrote:
> 
> 
> 
> Hi,
>  
> Just very quick: did you look at the nooverlap constraint in Gecode?
>  
> Cheers
> Christian
>  
> --
> Christian Schulte, Professor of Computer Science, KTH, www.ict.kth.se/~cschulte/
>  
> From: Navid Mohaghegh [mailto:navid at navid.ca] 
> Sent: Thursday, January 16, 2014 3:32 PM
> To: users at gecode.org
> Cc: cschulte at kth.se
> Subject: Re: [gecode-users] Possible Bug - Increase IntVars Range and Gecode Stalls
>  
> Hi everyone,
>  
> I tried Gist as Christian mentioned. Gist will not terminate for higher ranges (attached screenshot shows that I had to stop Gist manually for range 1535).
>  
> Could you please point me in the right direction about what I have to more efficient for this problem:
> -Like bin-packing problem, we have bunch of rectangles that shouldn't overlap with each other. 
> -Unlike bin-packing, the width and hight of the rectangles can be variable (e.g. if we have more space in our sheet, we don't mind a rectangle gets bigger). 
> -We have bunch of constraint for the size and location of rectangles.
> -In below, 15 rectangles, 4 array of variables (2 arrays for X,Y location and 2 variables for Width,Height which is for size)     
>  
>  
> Could you please let me know?
>  
> Thank you,
> Navid
> <image001.png>
>  
> On Jan 14, 2014, at 11:42 AM, Christian Schulte <cschulte at kth.se> wrote:
> 
> 
> 
> 
> The bug you refer to has been fixed. But try Gist, there you can see what happens.
>  
> Cheers
> Christian
>  
> --
> Christian Schulte, Professor of Computer Science, KTH, www.ict.kth.se/~cschulte/
>  
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Navid Mohaghegh
> Sent: Tuesday, January 14, 2014 5:39 PM
> To: cschulte at kth.se
> Cc: users at gecode.org
> Subject: Re: [gecode-users] Possible Bug - Increase IntVars Range and Gecode Stalls
>  
> Hi Christian,
>  
> Thank your for your reply. I didn't try Gist yet, I will go and look at sample code to learn Gist and I will give it a shot.
>  
> Could you kindly have a look at this comment in mailing list: "There seems to be a trivial bug in INT_VALUES_MAX: SEL_VALUES_MIN is used instead of SEL_VALUES_MAX. The attached patch fixes it."
> I am asking this as mu space get solved by Gecode almost instantly (less than 1ms on a 128 GB ram, quad CPU, 64 cores workstation) for values like 1199. And the moment it goes to 1200 it will stalls. After all it should get slow (I agree with you), but not stall/freeze for 5 days. That is the main reason I suspect a tiny bug somewhere.  
>  
> I will also look at Gist as well as you instructed.
>  
> Thank you,
> Navid
>  
>  
> On Jan 14, 2014, at 11:18 AM, Christian Schulte <cschulte at kth.se> wrote:
> 
> 
> 
> 
> 
> Did you try it in Gist to see how large the search trees get or whether Gecode just hangs?
>  
> After all, you exponentially increase the search space!
>  
> Christian
>  
> --
> Christian Schulte, Professor of Computer Science, KTH, www.ict.kth.se/~cschulte/
>  
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Navid Mohaghegh
> Sent: Tuesday, January 14, 2014 5:04 PM
> To: users at gecode.org
> Subject: [gecode-users] Possible Bug - Increase IntVars Range and Gecode Stalls
> Importance: High
>  
> Hi Everyone,
>  
> My question:
> I am wondering what is happening in below and why Gecode stalls stall whenI increase the range of my IntegerVars (while its CPU utilization goes very high) despite the fact that our constraints are not changed?
>  
> Background (http://navid.ca/gecode/test.cpp):
> We are trying to solve a space. We can easily solve the space when our variable ranges are small (e.g. 0 to 800). As soon as the range goes higher (e.g. 0-1535) Gecode will stall and can not produce a solution for the space with exactly the same constraints as before.
>  
> We have 4 groups of integer_array variables. They are called vars_a, vars_b, vars_c and vars_d. And inside each of them, we have 15 integer variables.
> NavidTest(int n, int vars_a_max_, int vars_b_max_, int vars_c_max_, int vars_d_max_, int vcost_max_); 
> NavidTest* m = new NavidTest(15,  800, 500, 410, 60, 2000000000); means:
> n = 15
> vars_a[0] ... vars_a[15] can have values from zero to vars_a_max_ = 800
> vars_b[0] ... vars_b[15] can have values from zero to vars_b_max_ = 500
> vars_c[0] ... vars_c[15] can have values from zero to vars_c_max_ = 410
> vars_d[0] ... vars_d[15] can have values from zero to vars_d_max_ = 60
> our cost variable can be have values from zero to vcost_max_ = 2,000,000,000
> As we have quadratic cost functions and values can easily grow.
> lift() method is where we add our constraints. 
> For demonstration purpose, we have a method that once used, Gecode can produce solution: it is called "void the_one_works()"
> And we have another one (called: void the_one_doesnot_work) that can not be solved using Gecode (it is perfectly solvable and we test our solution in verify_answer() method)
> The only difference between the_one_works() and the_one_doesnot_work() is an increase in vars_a max range from 800 to 1535. 
>  
>  
>  
> I have found a mailing list entry stating a possible bug:
> ==========
> From: victor.zverovich at ... <victor.zverovich at ...>
> Subject: bug in INT_VALUES_MAX
> Newsgroups: gmane.comp.lib.gecode.user
> Date: 2013-06-21 22:20:18 GMT (29 weeks, 3 days, 17 hours and 17 minutes ago)
> There seems to be a trivial bug in INT_VALUES_MAX: SEL_VALUES_MIN is used instead of SEL_VALUES_MAX. The attached patch fixes it.
> Victor
> ==========
>  
> Can someone have a look and let me know?
> We are using Gecode 4.2.1 on Linux
> GCC 4.7.2 and also latest 4.9
> Debian 64bit and CentOS 64bit  
> My code and how I compile and run is here: http://navid.ca/gecode/test.cpp
>  
> Thank you,
> Navid

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140217/e5c056bf/attachment-0001.html>

From cschulte at kth.se  Mon Feb 17 16:05:19 2014
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 17 Feb 2014 16:05:19 +0100
Subject: [gecode-users] Possible Bug - Increase IntVars
	Range	and	Gecode	Stalls
In-Reply-To: <461A2D03-AB67-427D-8896-FDDAB1DADF4C@navid.ca>
References: <7D873EF2-12CD-46C2-AF3B-5E3110085815@navid.ca>	<001401cf1144$50964f30$f1c2ed90$@se>	<78523901-E0EC-403C-A230-CEA44F993D47@navid.ca>	<002801cf1147$8ca35ba0$a5ea12e0$@se>	<D8A1F5E2-5885-4A49-851F-B32A3AFA9631@navid.ca>	<007f01cf12d0$4e008c30$ea01a490$@se>
	<176CC873-A601-4BA6-8758-B68D855F9CE8@navid.ca>
	<009501cf161e$60647520$212d5f60$@kth.se>
	<8D2131C0-64D5-4F62-9797-BA0DC4C68449@navid.ca>
	<00a101cf2bf0$9ec6ae40$dc540ac0$@se>
	<461A2D03-AB67-427D-8896-FDDAB1DADF4C@navid.ca>
Message-ID: <00b801cf2bf1$ac982ac0$05c88040$@se>

Note that they are doing two different things: nooverlap guarantees that the
rectangles do not overlap. What you have copied beloew enforces as a
redundant constraint that the square is perfect, that is all the rectangles
cover the outer rectangle.

 

Best

Christian

 

--

Christian Schulte, Professor of Computer Science, KTH,
www.ict.kth.se/~cschulte/

 

From: Navid Mohaghegh [mailto:navid at navid.ca] 
Sent: Monday, February 17, 2014 4:03 PM
To: cschulte at kth.se
Cc: users at gecode.org
Subject: Re: [gecode-users] Possible Bug - Increase IntVars Range and Gecode
Stalls

 

Hi Christian,

 

Thank you for your reply.

 

Yes, I did look at the Gecode example. Here is where I am referring in
gecode perfect squares example:

 switch (opt.propagation()) {

    case PROP_REIFIED:

      {

        for (int cx=0; cx<w; cx++) {

          BoolVarArgs bx(*this,n,0,1);

          for (int i=0; i<n; i++)

            dom(*this, x[i], cx-s[i]+1, cx, bx[i]);

          linear(*this, sa, bx, IRT_EQ, w);

        }

        for (int cy=0; cy<w; cy++) {

          BoolVarArgs by(*this,n,0,1);

          for (int i=0; i<n; i++)

            dom(*this, y[i], cy-s[i]+1, cy, by[i]);

          linear(*this, sa, by, IRT_EQ, w);

        }

      }

      break;

 

 

Please note that I am using nooverlap as well. And the only thing I don't
have is "switch (opt.propagation())" ...

 

Thank you,

Navid

 

 

On Feb 17, 2014, at 9:57 AM, Christian Schulte <cschulte at kth.se> wrote:





Hi,

 

The Gecode example does not use a special propagator, have you been looking
at the example that is _included_ in Gecode?

 

Best

Christian

 

--

Christian Schulte, Professor of Computer Science, KTH,
<http://www.ict.kth.se/~cschulte/> www.ict.kth.se/~cschulte/

 

From: Navid Mohaghegh [mailto:navid at navid.ca] 
Sent: Friday, February 14, 2014 3:25 PM
To: cschulte at kth.se
Cc: users at gecode.org
Subject: Re: [gecode-users] Possible Bug - Increase IntVars Range and Gecode
Stalls

 

Hi Christian,

 

Thank you for your reply.

 

I didn't use the word Stall properly. Sorry ... What I mean is that Gecode
will get keep searching forever! I am wondering if there is anything can be
improved in search strategy. Please note that for values less than 1200 we
get instant solution and as soon as we increase the range by 1, then
suddenly Gecode will keep searching forever (I left the computer on for 5
days!). 

 

I studied the example for perfect square. The only difference between my
code and perfect square code is that I am not using custom made propagator.
Should I start doing that? And could you kindly point me for more reading on
propagator topic (I am still reading MPG chapter 22)?

 

Thank you,

Navid

 

 

On Jan 20, 2014, at 3:29 PM, Christian Schulte < <mailto:cschulte at kth.se>
cschulte at kth.se> wrote:






What does stall mean, again? Is it still searching (you can observe that in
Gist), that is making progress? Or is it dead.

 

To improve your model, check the perfect square example that comes with
Gecode and/or search for square packing on Helmut Simonis' webpage:
<http://4c.ucc.ie/~hsimonis/> http://4c.ucc.ie/~hsimonis/

 

Christian

 

 

--

Christian Schulte,  <http://www.ict.kth.se/~cschulte>
www.ict.kth.se/~cschulte

 

From:  <mailto:users-bounces at gecode.org> users-bounces at gecode.org [
<mailto:users-bounces at gecode.org> mailto:users-bounces at gecode.org] On Behalf
Of Navid Mohaghegh
Sent: Thursday, January 16, 2014 09:23 PM
To:  <mailto:cschulte at kth.se> cschulte at kth.se;  <mailto:users at gecode.org>
users at gecode.org
Subject: Re: [gecode-users] Possible Bug - Increase IntVars Range and Gecode
Stalls

 

Hi Christian,

 

Thank you for your reply. 

 

I originally didn't use that as I didn't want to add another set of
variables for finishing corner of rectangles (Gecode nooverlap API has a
simple version that use fixed int width and int height).

 

Per your suggestion, I added two array variables for finishing corner that I
can employ the nooverlap API:

-defined integer array variables for starting point of rectangles (e.g. top
left corner): I called it vxs and vys (e.g. X0 and Y0 in Gecode MPG manual)

-defined integer array variables for width and height of rectangles: I
called it vw and vh (e.g. W and H in Gecode MPG manual)

-defined integer array variables for finishing point of rectangles (e.g.
lower right corner): I called it vxf and vyf (e.g. X1 and Y1 in Gecode MPG
manual)

-I removed all manual non-overllaping contraint that I manually added myself
and add the following:

 

            //starting point  width and hight will give us the finishing
point

            for (i =0 ; i < this->n_vars; i++)

            {

                        rel(*this, ( (vxs[i] + vw[i] == vxf[i]) && (vys[i] +
vh[i] == vyf[i]) )  );

            }

            //add nooverlap for all rectangles     

            nooverlap(*this, vxs,vw,vxf,   vys,vh,vyf);

 

 

My code gets solved for lower ranges of X vars (e.g. vxs < 1000 and
vxf<1200) and the moment I change the x range to values greater than 1500
gecode stalls.

 

I appreciate your feedback.

 

Thank you,

Navid

 

 

On Jan 16, 2014, at 10:33 AM, Christian Schulte < <mailto:cschulte at kth.se>
cschulte at kth.se> wrote:







Hi,

 

Just very quick: did you look at the nooverlap constraint in Gecode?

 

Cheers

Christian

 

--

Christian Schulte, Professor of Computer Science, KTH,
<http://www.ict.kth.se/~cschulte/> www.ict.kth.se/~cschulte/

 

From: Navid Mohaghegh [ <mailto:navid at navid.ca> mailto:navid at navid.ca] 
Sent: Thursday, January 16, 2014 3:32 PM
To:  <mailto:users at gecode.org> users at gecode.org
Cc:  <mailto:cschulte at kth.se> cschulte at kth.se
Subject: Re: [gecode-users] Possible Bug - Increase IntVars Range and Gecode
Stalls

 

Hi everyone,

 

I tried Gist as Christian mentioned. Gist will not terminate for higher
ranges (attached screenshot shows that I had to stop Gist manually for range
1535).

 

Could you please point me in the right direction about what I have to more
efficient for this problem:

-Like bin-packing problem, we have bunch of rectangles that shouldn't
overlap with each other. 

-Unlike bin-packing, the width and hight of the rectangles can be variable
(e.g. if we have more space in our sheet, we don't mind a rectangle gets
bigger). 

-We have bunch of constraint for the size and location of rectangles.

-In below, 15 rectangles, 4 array of variables (2 arrays for X,Y location
and 2 variables for Width,Height which is for size)     

 

 

Could you please let me know?

 

Thank you,

Navid

<image001.png>

 

On Jan 14, 2014, at 11:42 AM, Christian Schulte < <mailto:cschulte at kth.se>
cschulte at kth.se> wrote:








The bug you refer to has been fixed. But try Gist, there you can see what
happens.

 

Cheers

Christian

 

--

Christian Schulte, Professor of Computer Science, KTH,
<http://www.ict.kth.se/~cschulte/> www.ict.kth.se/~cschulte/

 

From:  <mailto:users-bounces at gecode.org> users-bounces at gecode.org [
<mailto:users-bounces at gecode.org> mailto:users-bounces at gecode.org] On Behalf
Of Navid Mohaghegh
Sent: Tuesday, January 14, 2014 5:39 PM
To:  <mailto:cschulte at kth.se> cschulte at kth.se
Cc:  <mailto:users at gecode.org> users at gecode.org
Subject: Re: [gecode-users] Possible Bug - Increase IntVars Range and Gecode
Stalls

 

Hi Christian,

 

Thank your for your reply. I didn't try Gist yet, I will go and look at
sample code to learn Gist and I will give it a shot.

 

Could you kindly have a look at this comment in mailing list: "There seems
to be a trivial bug in INT_VALUES_MAX: SEL_VALUES_MIN is used instead of
SEL_VALUES_MAX. The attached patch fixes it."

I am asking this as mu space get solved by Gecode almost instantly (less
than 1ms on a 128 GB ram, quad CPU, 64 cores workstation) for values like
1199. And the moment it goes to 1200 it will stalls. After all it should get
slow (I agree with you), but not stall/freeze for 5 days. That is the main
reason I suspect a tiny bug somewhere.  

 

I will also look at Gist as well as you instructed.

 

Thank you,

Navid

 

 

On Jan 14, 2014, at 11:18 AM, Christian Schulte < <mailto:cschulte at kth.se>
cschulte at kth.se> wrote:









Did you try it in Gist to see how large the search trees get or whether
Gecode just hangs?

 

After all, you exponentially increase the search space!

 

Christian

 

--

Christian Schulte, Professor of Computer Science, KTH,
<http://www.ict.kth.se/~cschulte/> www.ict.kth.se/~cschulte/

 

From:  <mailto:users-bounces at gecode.org> users-bounces at gecode.org [
<mailto:users-bounces at gecode.org> mailto:users-bounces at gecode.org] On Behalf
Of Navid Mohaghegh
Sent: Tuesday, January 14, 2014 5:04 PM
To:  <mailto:users at gecode.org> users at gecode.org
Subject: [gecode-users] Possible Bug - Increase IntVars Range and Gecode
Stalls
Importance: High

 

Hi Everyone,

 

My question:

I am wondering what is happening in below and why Gecode stalls stall whenI
increase the range of my IntegerVars (while its CPU utilization goes very
high) despite the fact that our constraints are not changed?

 

Background ( <http://navid.ca/gecode/test.cpp>
http://navid.ca/gecode/test.cpp):

We are trying to solve a space. We can easily solve the space when our
variable ranges are small (e.g. 0 to 800). As soon as the range goes higher
(e.g. 0-1535) Gecode will stall and can not produce a solution for the space
with exactly the same constraints as before.

 

*	We have 4 groups of integer_array variables. They are called vars_a,
vars_b, vars_c and vars_d. And inside each of them, we have 15 integer
variables.

*	NavidTest(int n, int vars_a_max_, int vars_b_max_, int vars_c_max_,
int vars_d_max_, int vcost_max_); 
*	NavidTest* m = new NavidTest(15,  800, 500, 410, 60, 2000000000);
means:

*	n = 15
*	vars_a[0] ... vars_a[15] can have values from zero to vars_a_max_ =
800
*	vars_b[0] ... vars_b[15] can have values from zero to vars_b_max_ =
500
*	vars_c[0] ... vars_c[15] can have values from zero to vars_c_max_ =
410
*	vars_d[0] ... vars_d[15] can have values from zero to vars_d_max_ =
60
*	our cost variable can be have values from zero to vcost_max_ =
2,000,000,000

*	As we have quadratic cost functions and values can easily grow.

*	lift() method is where we add our constraints. 
*	For demonstration purpose, we have a method that once used, Gecode
can produce solution: it is called "void the_one_works()"

*	And we have another one (called: void the_one_doesnot_work) that can
not be solved using Gecode (it is perfectly solvable and we test our
solution in verify_answer() method)
*	The only difference between the_one_works() and
the_one_doesnot_work() is an increase in vars_a max range from 800 to 1535. 

 

 

 

I have found a mailing list entry stating a possible bug:

==========

From:
<http://gmane.org/get-address.php?address=victor.zverovich%2dRe5JQEeQqe8Avxt
iuMwx3w%40public.gmane.org> victor.zverovich at ... <
<http://gmane.org/get-address.php?address=victor.zverovich%2dRe5JQEeQqe8Avxt
iuMwx3w%40public.gmane.org> victor.zverovich at ...>
Subject:
<http://news.gmane.org/find-root.php?message_id=CANawtxb3jmzB754b7zWaZMuG76T
7KJBwAj1PP%2bMmHgJL%3d0EKVQ%40mail.gmail.com> bug in INT_VALUES_MAX
Newsgroups:  <http://news.gmane.org/gmane.comp.lib.gecode.user>
gmane.comp.lib.gecode.user
Date: 2013-06-21 22:20:18 GMT (29 weeks, 3 days, 17 hours and 17 minutes
ago)

There seems to be a trivial bug in INT_VALUES_MAX: SEL_VALUES_MIN is used
instead of SEL_VALUES_MAX. The attached patch fixes it.

Victor

==========

 

Can someone have a look and let me know?

*	We are using Gecode 4.2.1 on Linux
*	GCC 4.7.2 and also latest 4.9
*	Debian 64bit and CentOS 64bit  
*	My code and how I compile and run is here:
<http://navid.ca/gecode/test.cpp> http://navid.ca/gecode/test.cpp

 

Thank you,

Navid

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140217/b84f0824/attachment-0001.html>

From b.j.conijn at student.tue.nl  Tue Feb 18 19:50:35 2014
From: b.j.conijn at student.tue.nl (Bauke Conijn)
Date: Tue, 18 Feb 2014 19:50:35 +0100
Subject: [gecode-users] Unary constraint not-first-not-last propagation
 does not cancel optional tasks
In-Reply-To: <00af01cf2bf0$e5f492f0$b1ddb8d0$@se>
References: <16E958B8722B734792C877EB8238059C1FA0D3ED@XSERVER22B.campus.tue.nl>
	<00af01cf2bf0$e5f492f0$b1ddb8d0$@se>
Message-ID: <5303AB7B.9040907@student.tue.nl>

Hi Christian,

I know that optional tasks cannot have their start and end times pruned,
however, their mandatory flag can be marked false.

It seems that the two commented-out lines would discard the optional
tasks when it detects that they cannot be mandatory.

Very similar code can be found in detectable.hpp:
    for (int i=n; i--; )
      if (t[i].mandatory()) {
        GECODE_ME_CHECK(t[i].est(home,est[i]));
      } else if (est[i] > t[i].lst()) {
        GECODE_ME_CHECK(t[i].excluded(home));
        t[i].cancel(home,p,Int::PC_INT_BND); t[i]=t[--n];
      }


Kind regards,

Bauke


On 02/17/2014 03:59 PM, Christian Schulte wrote:
> Hi Bauke,
> 
> No, they can't, in the current setup this would make the propagator
> incorrect. The reasoning is as follows: while the task is still optional,
> one is not allowed to prune anything. The reason why the code still lingers
> on as a comment is that if one introduces an additional wrapper in forms of
> task variables, this kind of reasoing could be used.
> 
> Best
> Christian
> 
> --
> Christian Schulte, Professor of Computer Science, KTH,
> www.ict.kth.se/~cschulte/
> 
> 
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
> Of Conijn, B.J.
> Sent: Friday, February 14, 2014 2:08 PM
> To: users at gecode.org
> Subject: [gecode-users] Unary constraint not-first-not-last propagation does
> not cancel optional tasks
> 
> Hi,
> 
> In not-first-not-last.hpp I found the following piece of code and I was
> wondering why those two lines have been commented out. While running the
> tests with those two lines included, those lines get executed and the test
> still succeeds. Can those two lines be safely included?
> 
> if (t[i].mandatory()) {
>          GECODE_ME_CHECK(t[i].lct(home,lct[i]));
> } else if (lct[i] < t[i].ect()) {
>    //        GECODE_ME_CHECK(t[i].excluded(home));
>    //        t[i].cancel(home,p); t[i]=t[--n];
> }
> 
> Kind regards,
> 
> Bauke
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
> 


From cschulte at kth.se  Thu Feb 20 17:01:02 2014
From: cschulte at kth.se (Christian Schulte)
Date: Thu, 20 Feb 2014 17:01:02 +0100
Subject: [gecode-users] Unary constraint not-first-not-last propagation
	does not cancel optional tasks
In-Reply-To: <5303AB7B.9040907@student.tue.nl>
References: <16E958B8722B734792C877EB8238059C1FA0D3ED@XSERVER22B.campus.tue.nl>
	<00af01cf2bf0$e5f492f0$b1ddb8d0$@se>
	<5303AB7B.9040907@student.tue.nl>
Message-ID: <006d01cf2e54$f43e2e00$dcba8a00$@se>

Hi Bauke,

Damn it, you are of course right. I just fixed it in the trunk.

Thanks!
Christian

--
Christian Schulte, Professor of Computer Science, KTH,
www.ict.kth.se/~cschulte/


-----Original Message-----
From: Bauke Conijn [mailto:b.j.conijn at student.tue.nl] 
Sent: Tuesday, February 18, 2014 7:51 PM
To: cschulte at kth.se; users at gecode.org
Subject: Re: [gecode-users] Unary constraint not-first-not-last propagation
does not cancel optional tasks

Hi Christian,

I know that optional tasks cannot have their start and end times pruned,
however, their mandatory flag can be marked false.

It seems that the two commented-out lines would discard the optional tasks
when it detects that they cannot be mandatory.

Very similar code can be found in detectable.hpp:
    for (int i=n; i--; )
      if (t[i].mandatory()) {
        GECODE_ME_CHECK(t[i].est(home,est[i]));
      } else if (est[i] > t[i].lst()) {
        GECODE_ME_CHECK(t[i].excluded(home));
        t[i].cancel(home,p,Int::PC_INT_BND); t[i]=t[--n];
      }


Kind regards,

Bauke


On 02/17/2014 03:59 PM, Christian Schulte wrote:
> Hi Bauke,
> 
> No, they can't, in the current setup this would make the propagator 
> incorrect. The reasoning is as follows: while the task is still 
> optional, one is not allowed to prune anything. The reason why the 
> code still lingers on as a comment is that if one introduces an 
> additional wrapper in forms of task variables, this kind of reasoing could
be used.
> 
> Best
> Christian
> 
> --
> Christian Schulte, Professor of Computer Science, KTH, 
> www.ict.kth.se/~cschulte/
> 
> 
> -----Original Message-----
> From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On 
> Behalf Of Conijn, B.J.
> Sent: Friday, February 14, 2014 2:08 PM
> To: users at gecode.org
> Subject: [gecode-users] Unary constraint not-first-not-last 
> propagation does not cancel optional tasks
> 
> Hi,
> 
> In not-first-not-last.hpp I found the following piece of code and I 
> was wondering why those two lines have been commented out. While 
> running the tests with those two lines included, those lines get 
> executed and the test still succeeds. Can those two lines be safely
included?
> 
> if (t[i].mandatory()) {
>          GECODE_ME_CHECK(t[i].lct(home,lct[i]));
> } else if (lct[i] < t[i].ect()) {
>    //        GECODE_ME_CHECK(t[i].excluded(home));
>    //        t[i].cancel(home,p); t[i]=t[--n];
> }
> 
> Kind regards,
> 
> Bauke
> 
> _______________________________________________
> Gecode users mailing list
> users at gecode.org
> https://www.gecode.org/mailman/listinfo/gecode-users
> 



From pauljurczak at yahoo.com  Sat Feb 22 11:34:10 2014
From: pauljurczak at yahoo.com (Paul Jurczak)
Date: Sat, 22 Feb 2014 02:34:10 -0800 (PST)
Subject: [gecode-users] Chrome claims Gecode-4.2.1-x64-2013.msi is malicious
Message-ID: <1393065250.10826.YahooMailNeo@web162302.mail.bf1.yahoo.com>

Hi,

I just downloaded?Gecode-4.2.1-x64-2013.msi from your website and Google Chrome?Version 32.0.1700.107 claims that the file is malicious (tried 2 times). I also downloaded?Gecode-4.2.1-x86-2013.msi, which doesn't raise the alarm.

Regards,
Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140222/969aace5/attachment.html>

From cschulte at kth.se  Sun Feb 23 22:04:33 2014
From: cschulte at kth.se (Christian Schulte)
Date: Sun, 23 Feb 2014 22:04:33 +0100
Subject: [gecode-users] Chrome claims Gecode-4.2.1-x64-2013.msi is
	malicious
In-Reply-To: <1393065250.10826.YahooMailNeo@web162302.mail.bf1.yahoo.com>
References: <1393065250.10826.YahooMailNeo@web162302.mail.bf1.yahoo.com>
Message-ID: <000b01cf30da$db8eb400$92ac1c00$@kth.se>

Hi,

 

Thanks but we can't fix what Google thinks. It is not malicious, though ;-)

 

Christian

 

--

Christian Schulte, KTH, web.it.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Paul Jurczak
Sent: Saturday, February 22, 2014 11:34 AM
To: users at gecode.org
Subject: [gecode-users] Chrome claims Gecode-4.2.1-x64-2013.msi is malicious

 

Hi,

 

I just downloaded Gecode-4.2.1-x64-2013.msi from your website and Google
Chrome Version 32.0.1700.107 claims that the file is malicious (tried 2
times). I also downloaded Gecode-4.2.1-x86-2013.msi, which doesn't raise the
alarm.

 

Regards,

Paul

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140223/711a9f54/attachment.html>

From medistif at hotmail.fr  Tue Feb 25 09:35:03 2014
From: medistif at hotmail.fr (mehdi m)
Date: Tue, 25 Feb 2014 08:35:03 +0000
Subject: [gecode-users] Hom many solutions
Message-ID: <DUB119-W33E2510DEA604BB300F3E6B7810@phx.gbl>

Hello Everyone,
I want to get the number of solutions found in gecode for to store it in a variable. how can i do this ?Thank you
cheers.   		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140225/69690e96/attachment.html>

From cschulte at kth.se  Tue Feb 25 09:46:28 2014
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 25 Feb 2014 09:46:28 +0100
Subject: [gecode-users] Hom many solutions
In-Reply-To: <DUB119-W33E2510DEA604BB300F3E6B7810@phx.gbl>
References: <DUB119-W33E2510DEA604BB300F3E6B7810@phx.gbl>
Message-ID: <004201cf3206$13569e30$3a03da90$@se>

MPG, Section 2.2 + a counter. Christian

 

--

Christian Schulte, Professor of Computer Science, KTH,
www.ict.kth.se/~cschulte/

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of mehdi m
Sent: Tuesday, February 25, 2014 9:35 AM
To: users at gecode.org
Subject: [gecode-users] Hom many solutions

 

Hello Everyone,

 

I want to get the number of solutions found in gecode for to store it in a
variable. how can i do this ?

Thank you

 

cheers.

  

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20140225/7da99ba5/attachment.html>

