From medistif at hotmail.fr  Mon Nov  9 09:50:45 2015
From: medistif at hotmail.fr (mehdi m)
Date: Mon, 9 Nov 2015 08:50:45 +0000
Subject: [gecode-users] Add value in IntVarArray
Message-ID: <DUB119-W14C84DC3AF91BA39B2C116B7150@phx.gbl>

Hi everyone,
In my model i have an IntVarArray X with size 3 = [X1, X2, X3]The domains must be :D(X1) = {1,2,3}D(X2) = {0,2,3}D(X3) = {0,3}
For this, i do :X1 :X[1] = IntVar(*this, 1, 3);
X2..X3 :for (int i = 2; i <= 3; i++){    X[i] = IntVar(*this, i, 3);} 
So for X2 and X3 i need to add the value 0, and i saw in mpg that only IntVarArgs can grow dynamically by adding value with "<<" operator, so is there any way to add a value in IntVarArray ? especially that the IntVarArray in my model can be large.
Thanks
 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20151109/de953b89/attachment.html>

From guido.tack at monash.edu  Mon Nov  9 09:55:55 2015
From: guido.tack at monash.edu (Guido Tack)
Date: Mon, 9 Nov 2015 19:55:55 +1100
Subject: [gecode-users] Add value in IntVarArray
In-Reply-To: <DUB119-W14C84DC3AF91BA39B2C116B7150@phx.gbl>
References: <DUB119-W14C84DC3AF91BA39B2C116B7150@phx.gbl>
Message-ID: <-2850286232845060330@unknownmsgid>

Hi,

you're trying to add values to a domain of an IntVar, and that's not
possible. You need to initialise the domain with the right values (see the
constructors that take an IntSet) or initialise it with a superset (eg
{0,1,2,3} in your case) and then remove the elements you don't want, eg
using a dom constraint.

Cheers,
Guido

-- 
Guido Tack

On 9 Nov 2015, at 19:50, mehdi m <medistif at hotmail.fr> wrote:

Hi everyone,

In my model i have an IntVarArray X with size 3 = [X1, X2, X3]
The domains must be :
D(X1) = {1,2,3}
D(X2) = {0,2,3}
D(X3) = {0,3}

For this, i do :
X1 :
X[1] = IntVar(*this, 1, 3);

X2..X3 :
for (int i = 2; i <= 3; i++){
    X[i] = IntVar(*this, i, 3);
}

So for X2 and X3 i need to add the value 0, and i saw in mpg that only
IntVarArgs can grow dynamically by adding value with "<<" operator, so is
there any way to add a value in IntVarArray ? especially that the
IntVarArray in my model can be large.

Thanks

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20151109/f977cade/attachment.html>

From valentin.lemiere at unicaen.fr  Mon Nov  9 16:56:16 2015
From: valentin.lemiere at unicaen.fr (Valentin =?utf-8?Q?Lemi=C3=A8re?=)
Date: Mon, 9 Nov 2015 16:56:16 +0100 (CET)
Subject: [gecode-users] Advisor on a ViewArray and index of assigned variable
In-Reply-To: <1619851287.1512795.1447084071568.JavaMail.zimbra@unicaen.fr>
Message-ID: <2028504465.1521590.1447084576066.JavaMail.zimbra@unicaen.fr>

Hello everyone, 

I am a PhD. student and I am currently looking at Gecode to see if it'll fit my needs. 

I need to implement a global constraint on a large number of boolean variables. So I have extended from NaryPropagator with a view of type BoolView. 
When a variable is assigned, the propagator infers some knowledge and may assign other variable(s). 

To get the required information, I added an Advisor to each variable, storing its index; so I can get it in the advise method and provide it to the propagator. 
But this technique is too slow and creates too much advisors. 

So I tried adding an Advisor directly to the ViewArray; the advise function is correctly called and I can still get whether the variable was assigned a zero or a one with the delta. 
But I don't get the index information to find the actual assigned variable. 
I looked for a static method of ViewArray to convert the delta to this information but couldn't find one. 

Can an Advisor on a ViewArray get the index of the assigned variable? 
Or is there another way to deal with a large number of variables other than an Advisor per variable? 

Regards, 
Valentin 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20151109/3fdcee39/attachment.html>

From cschulte at kth.se  Mon Nov  9 20:20:51 2015
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 9 Nov 2015 20:20:51 +0100
Subject: [gecode-users] Advisor on a ViewArray and index of assigned
	variable
In-Reply-To: <2028504465.1521590.1447084576066.JavaMail.zimbra@unicaen.fr>
References: <1619851287.1512795.1447084071568.JavaMail.zimbra@unicaen.fr>
	<2028504465.1521590.1447084576066.JavaMail.zimbra@unicaen.fr>
Message-ID: <002601d11b23$c048b210$40da1630$@kth.se>

Hi,

 

An advisor subscribes to a particular variable implementation through a view hence, the only information that is available by default is which advisor is executed and what is the delta. 

 

Additional information ? such as the position of an advisor in a view array ? must be explicitly stored in the advisor, there is no way around it.

 

Cheers

Christian

 

--

Christian Schulte,  <http://www.gecode.org/~schulte> www.gecode.org/~schulte 

Professor of Computer Science, KTH,  <mailto:cschulte at kth.se> cschulte at kth.se

Expert Researcher, SICS,  <mailto:cschulte at sics.se> cschulte at sics.se

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Valentin Lemi?re
Sent: Monday, November 9, 2015 04:56 PM
To: users at gecode.org
Subject: [gecode-users] Advisor on a ViewArray and index of assigned variable

 

Hello everyone,

 

I am a PhD. student and I am currently looking at Gecode to see if it'll fit my needs.

 

I need to implement a global constraint on a large number of boolean variables. So I have extended from NaryPropagator with a view of type BoolView.

When a variable is assigned, the propagator infers some knowledge and may assign other variable(s).

 

To get the required information, I added an Advisor to each variable, storing its index; so I can get it in the advise method and provide it to the propagator.

But this technique is too slow and creates too much advisors.

 

So I tried adding an Advisor directly to the ViewArray; the advise function is correctly called and I can still get whether the variable was assigned a zero or a one with the delta.

But I don't get the index information to find the actual assigned variable.

I looked for a static method of ViewArray to convert the delta to this information but couldn't find one.

 

Can an Advisor on a ViewArray get the index of the assigned variable?

Or is there another way to deal with a large number of variables other than an Advisor per variable?

 

Regards,

Valentin

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20151109/48825b3f/attachment.html>

From valentin.lemiere at unicaen.fr  Tue Nov 10 17:20:18 2015
From: valentin.lemiere at unicaen.fr (Valentin =?utf-8?Q?Lemi=C3=A8re?=)
Date: Tue, 10 Nov 2015 17:20:18 +0100 (CET)
Subject: [gecode-users] Advisor on a ViewArray and index of assigned
 variable
In-Reply-To: <002601d11b23$c048b210$40da1630$@kth.se>
References: <1619851287.1512795.1447084071568.JavaMail.zimbra@unicaen.fr>
	<2028504465.1521590.1447084576066.JavaMail.zimbra@unicaen.fr>
	<002601d11b23$c048b210$40da1630$@kth.se>
Message-ID: <1125011623.340331.1447172418515.JavaMail.zimbra@unicaen.fr>

Hi, 

I see, thanks for your answer. 

When an Advisor is used on a BoolView it stores the type of assignment in the delta, which can be accessed with BoolView::one and ::zero. 
But couldn't an Advisor, when applied to a ViewArray, store the index in the delta and then access it with ViewArray::index? 

With the index I can get the assigned value but not the other way around. 

It's not the case right now I understand, but do you think this is something feasible? 

Regards, 
Valentin 

----- Mail original -----

De: "Christian Schulte" <cschulte at kth.se> 
?: "Valentin Lemi?re" <valentin.lemiere at unicaen.fr>, users at gecode.org 
Envoy?: Lundi 9 Novembre 2015 20:20:51 
Objet: RE: [gecode-users] Advisor on a ViewArray and index of assigned variable 



Hi, 



An advisor subscribes to a particular variable implementation through a view hence, the only information that is available by default is which advisor is executed and what is the delta. 



Additional information ? such as the position of an advisor in a view array ? must be explicitly stored in the advisor, there is no way around it. 



Cheers 

Christian 




-- 

Christian Schulte, www.gecode.org/~schulte 

Professor of Computer Science, KTH, cschulte at kth.se 

Expert Researcher, SICS, cschulte at sics.se 





From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Valentin Lemi?re 
Sent: Monday, November 9, 2015 04:56 PM 
To: users at gecode.org 
Subject: [gecode-users] Advisor on a ViewArray and index of assigned variable 





Hello everyone, 





I am a PhD. student and I am currently looking at Gecode to see if it'll fit my needs. 





I need to implement a global constraint on a large number of boolean variables. So I have extended from NaryPropagator with a view of type BoolView. 


When a variable is assigned, the propagator infers some knowledge and may assign other variable(s). 





To get the required information, I added an Advisor to each variable, storing its index; so I can get it in the advise method and provide it to the propagator. 


But this technique is too slow and creates too much advisors. 





So I tried adding an Advisor directly to the ViewArray; the advise function is correctly called and I can still get whether the variable was assigned a zero or a one with the delta. 


But I don't get the index information to find the actual assigned variable. 


I looked for a static method of ViewArray to convert the delta to this information but couldn't find one. 





Can an Advisor on a ViewArray get the index of the assigned variable? 


Or is there another way to deal with a large number of variables other than an Advisor per variable? 





Regards, 


Valentin 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20151110/c2040622/attachment.html>

From medistif at hotmail.fr  Tue Nov 10 20:36:06 2015
From: medistif at hotmail.fr (mehdi m)
Date: Tue, 10 Nov 2015 19:36:06 +0000
Subject: [gecode-users] Difference between minus_r and nq
Message-ID: <DUB119-W14A0D22E5B48F4C5A12ABBB7140@phx.gbl>

Hi everyone,
In the propagator implementation are the two following methods to remove values from domains equivalents ?
- method 1 :Int::ViewRanges<Int::IntView> r(x1);GECODE_ME_CHECK(x0.minus_r(home, r));
- method 2GECODE_ME_CHECK(x0.nq(home, val));
Or there is any difference ? I see that the first one takes a ViewRange and the second can takes an Int directly but what about correctness and efficiency of pruning ?
Thanks. 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20151110/8c05b0e8/attachment.html>

From cschulte at kth.se  Tue Nov 10 21:03:24 2015
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 10 Nov 2015 21:03:24 +0100
Subject: [gecode-users] Advisor on a ViewArray and index of assigned
	variable
In-Reply-To: <1125011623.340331.1447172418515.JavaMail.zimbra@unicaen.fr>
References: <1619851287.1512795.1447084071568.JavaMail.zimbra@unicaen.fr>	<2028504465.1521590.1447084576066.JavaMail.zimbra@unicaen.fr>	<002601d11b23$c048b210$40da1630$@kth.se>
	<1125011623.340331.1447172418515.JavaMail.zimbra@unicaen.fr>
Message-ID: <003501d11bf2$dcf9f7a0$96ede6e0$@kth.se>

Hi,

 

No, this is not at all feasible as I tried to explain: the view has (and hence the advisor) has no idea that the view is stored in a view array. Think of it as follows: the view might be stored in different arrays by different propagators. So how could the view and hence the advisor know which array we talk about?

 

Cheers

Christian

 

--

Christian Schulte,  <http://www.gecode.org/~schulte> www.gecode.org/~schulte 

Professor of Computer Science, KTH,  <mailto:cschulte at kth.se> cschulte at kth.se

Expert Researcher, SICS,  <mailto:cschulte at sics.se> cschulte at sics.se

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of Valentin Lemi?re
Sent: Tuesday, November 10, 2015 05:20 PM
To: cschulte at kth.se
Cc: users at gecode.org
Subject: Re: [gecode-users] Advisor on a ViewArray and index of assigned variable

 

Hi,

 

I see, thanks for your answer.

 

When an Advisor is used on a BoolView it stores the type of assignment in the delta, which can be accessed with BoolView::one and ::zero.

But couldn't an Advisor, when applied to a ViewArray, store the index in the delta and then access it with ViewArray::index?

 

With the index I can get the assigned value but not the other way around.

 

It's not the case right now I understand, but do you think this is something feasible?

 

Regards,

Valentin

 

  _____  

De: "Christian Schulte" <cschulte at kth.se <mailto:cschulte at kth.se> >
?: "Valentin Lemi?re" <valentin.lemiere at unicaen.fr <mailto:valentin.lemiere at unicaen.fr> >, users at gecode.org <mailto:users at gecode.org> 
Envoy?: Lundi 9 Novembre 2015 20:20:51
Objet: RE: [gecode-users] Advisor on a ViewArray and index of assigned variable

 

Hi,

 

An advisor subscribes to a particular variable implementation through a view hence, the only information that is available by default is which advisor is executed and what is the delta. 

 

Additional information ? such as the position of an advisor in a view array ? must be explicitly stored in the advisor, there is no way around it.

 

Cheers

Christian

 

--

Christian Schulte,  <http://www.gecode.org/~schulte> www.gecode.org/~schulte 

Professor of Computer Science, KTH,  <mailto:cschulte at kth.se> cschulte at kth.se

Expert Researcher, SICS,  <mailto:cschulte at sics.se> cschulte at sics.se

 

From: users-bounces at gecode.org <mailto:users-bounces at gecode.org>  [mailto:users-bounces at gecode.org] On Behalf Of Valentin Lemi?re
Sent: Monday, November 9, 2015 04:56 PM
To: users at gecode.org <mailto:users at gecode.org> 
Subject: [gecode-users] Advisor on a ViewArray and index of assigned variable

 

Hello everyone,

 

I am a PhD. student and I am currently looking at Gecode to see if it'll fit my needs.

 

I need to implement a global constraint on a large number of boolean variables. So I have extended from NaryPropagator with a view of type BoolView.

When a variable is assigned, the propagator infers some knowledge and may assign other variable(s).

 

To get the required information, I added an Advisor to each variable, storing its index; so I can get it in the advise method and provide it to the propagator.

But this technique is too slow and creates too much advisors.

 

So I tried adding an Advisor directly to the ViewArray; the advise function is correctly called and I can still get whether the variable was assigned a zero or a one with the delta.

But I don't get the index information to find the actual assigned variable.

I looked for a static method of ViewArray to convert the delta to this information but couldn't find one.

 

Can an Advisor on a ViewArray get the index of the assigned variable?

Or is there another way to deal with a large number of variables other than an Advisor per variable?

 

Regards,

Valentin

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20151110/16a3dd68/attachment-0001.html>

From cschulte at kth.se  Tue Nov 10 21:08:44 2015
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 10 Nov 2015 21:08:44 +0100
Subject: [gecode-users] Difference between minus_r and nq
In-Reply-To: <DUB119-W14A0D22E5B48F4C5A12ABBB7140@phx.gbl>
References: <DUB119-W14A0D22E5B48F4C5A12ABBB7140@phx.gbl>
Message-ID: <004701d11bf3$9aa5e020$cff1a060$@kth.se>

Hi,

 

No, not all. For the details please read chapter 25 in MPG, it has the full
story!

 

The difference (in short) is that nq removes a single integer value, whereas
minus_r removes a whole set of values represented by a range iterator. As
said, please check MPG.

 

Christian

 

--

Christian Schulte,  <http://www.gecode.org/~schulte> www.gecode.org/~schulte


Professor of Computer Science, KTH,  <mailto:cschulte at kth.se>
cschulte at kth.se

Expert Researcher, SICS,  <mailto:cschulte at sics.se> cschulte at sics.se

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of mehdi m
Sent: Tuesday, November 10, 2015 08:36 PM
To: users at gecode.org
Subject: [gecode-users] Difference between minus_r and nq

 

Hi everyone,

 

In the propagator implementation are the two following methods to remove
values from domains equivalents ?

 

- method 1 :

Int::ViewRanges<Int::IntView> r(x1);

GECODE_ME_CHECK(x0.minus_r(home, r));

 

- method 2

GECODE_ME_CHECK(x0.nq(home, val));

 

Or there is any difference ? I see that the first one takes a ViewRange and
the second can takes an Int directly but what about correctness and
efficiency of pruning ?

 

Thanks.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20151110/7b995d6b/attachment.html>

From valentin.lemiere at unicaen.fr  Tue Nov 10 21:18:26 2015
From: valentin.lemiere at unicaen.fr (=?UTF-8?Q?Valentin_Lemi=c3=a8re?=)
Date: Tue, 10 Nov 2015 21:18:26 +0100
Subject: [gecode-users] Advisor on a ViewArray and index of assigned
 variable
In-Reply-To: <003501d11bf2$dcf9f7a0$96ede6e0$@kth.se>
References: <1619851287.1512795.1447084071568.JavaMail.zimbra@unicaen.fr>
	<2028504465.1521590.1447084576066.JavaMail.zimbra@unicaen.fr>
	<002601d11b23$c048b210$40da1630$@kth.se>
	<1125011623.340331.1447172418515.JavaMail.zimbra@unicaen.fr>
	<003501d11bf2$dcf9f7a0$96ede6e0$@kth.se>
Message-ID: <56425112.5070701@unicaen.fr>

Hi,

Oh right a view is shared and could also be somewhere else than in my 
view array.

I get it now, thanks for taking the time to answer my questions.

Regards,
Valentin

On 11/10/2015 09:03 PM, Christian Schulte wrote:
>
> Hi,
>
> No, this is not at all feasible as I tried to explain: the view has 
> (and hence the advisor) has no idea that the view is stored in a view 
> array. Think of it as follows: the view might be stored in different 
> arrays by different propagators. So how could the view and hence the 
> advisor know which array we talk about?
>
> Cheers
>
> Christian
>
> --
>
> Christian Schulte, www.gecode.org/~schulte 
> <http://www.gecode.org/%7Eschulte>
>
> Professor of Computer Science, KTH, cschulte at kth.se 
> <mailto:cschulte at kth.se>
>
> Expert Researcher, SICS, cschulte at sics.se <mailto:cschulte at sics.se>
>
> *From:*users-bounces at gecode.org [mailto:users-bounces at gecode.org] *On 
> Behalf Of *Valentin Lemi?re
> *Sent:* Tuesday, November 10, 2015 05:20 PM
> *To:* cschulte at kth.se
> *Cc:* users at gecode.org
> *Subject:* Re: [gecode-users] Advisor on a ViewArray and index of 
> assigned variable
>
> Hi,
>
> I see, thanks for your answer.
>
> When an Advisor is used on a BoolView it stores the type of assignment 
> in the delta, which can be accessed with BoolView::one and ::zero.
>
> But couldn't an Advisor, when applied to a ViewArray, store the index 
> in the delta and then access it with ViewArray::index?
>
> With the index I can get the assigned value but not the other way around.
>
> It's not the case right now I understand, but do you think this is 
> something feasible?
>
> Regards,
>
> Valentin
>
> ------------------------------------------------------------------------
>
> *De: *"Christian Schulte" <cschulte at kth.se <mailto:cschulte at kth.se>>
> *?: *"Valentin Lemi?re" <valentin.lemiere at unicaen.fr 
> <mailto:valentin.lemiere at unicaen.fr>>, users at gecode.org 
> <mailto:users at gecode.org>
> *Envoy?: *Lundi 9 Novembre 2015 20:20:51
> *Objet: *RE: [gecode-users] Advisor on a ViewArray and index of 
> assigned variable
>
> Hi,
>
> An advisor subscribes to a particular variable implementation through 
> a view hence, the only information that is available by default is 
> which advisor is executed and what is the delta.
>
> Additional information ? such as the position of an advisor in a view 
> array ? must be explicitly stored in the advisor, there is no way 
> around it.
>
> Cheers
>
> Christian
>
> --
>
> Christian Schulte, www.gecode.org/~schulte 
> <http://www.gecode.org/%7Eschulte>
>
> Professor of Computer Science, KTH, cschulte at kth.se 
> <mailto:cschulte at kth.se>
>
> Expert Researcher, SICS, cschulte at sics.se <mailto:cschulte at sics.se>
>
> *From:*users-bounces at gecode.org <mailto:users-bounces at gecode.org> 
> [mailto:users-bounces at gecode.org] *On Behalf Of *Valentin Lemi?re
> *Sent:* Monday, November 9, 2015 04:56 PM
> *To:* users at gecode.org <mailto:users at gecode.org>
> *Subject:* [gecode-users] Advisor on a ViewArray and index of assigned 
> variable
>
> Hello everyone,
>
> I am a PhD. student and I am currently looking at Gecode to see if 
> it'll fit my needs.
>
> I need to implement a global constraint on a large number of boolean 
> variables. So I have extended from NaryPropagator with a view of type 
> BoolView.
>
> When a variable is assigned, the propagator infers some knowledge and 
> may assign other variable(s).
>
> To get the required information, I added an Advisor to each variable, 
> storing its index; so I can get it in the advise method and provide it 
> to the propagator.
>
> But this technique is too slow and creates too much advisors.
>
> So I tried adding an Advisor directly to the ViewArray; the advise 
> function is correctly called and I can still get whether the variable 
> was assigned a zero or a one with the delta.
>
> But I don't get the index information to find the actual assigned 
> variable.
>
> I looked for a static method of ViewArray to convert the delta to this 
> information but couldn't find one.
>
> Can an Advisor on a ViewArray get the index of the assigned variable?
>
> Or is there another way to deal with a large number of variables other 
> than an Advisor per variable?
>
> Regards,
>
> Valentin
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20151110/d2f40658/attachment-0001.html>

From medistif at hotmail.fr  Wed Nov 11 08:22:27 2015
From: medistif at hotmail.fr (mehdi m)
Date: Wed, 11 Nov 2015 07:22:27 +0000
Subject: [gecode-users] Difference between minus_r and nq
In-Reply-To: <004701d11bf3$9aa5e020$cff1a060$@kth.se>
References: <DUB119-W14A0D22E5B48F4C5A12ABBB7140@phx.gbl>,
	<004701d11bf3$9aa5e020$cff1a060$@kth.se>
Message-ID: <DUB119-W260E33D428F814AE2888BFB7130@phx.gbl>

Hi,
I read and what i conclude (correct me please if i'm wrong) is that the two methods are equivalents in the case where the iterator represent only one value so minus_r will behave as an "nq" since it will remove only one value as "nq" do it !
Also, what i didn't notice is the difference in the case of "gq", for example :
x0 = {1,2,3,4,5}
If the iterator r represent the value {1,2,3}, so GECODE_ME_CHECK(x0.minus_r(home, r)); will remove these values from x0.And if i post :GECODE_ME_CHECK(x0.gq(home, 4)); in this case the value {1,2,3} are also removed from x0.
So, what is here the difference since the two methods remove the whole values {1,2,3} ?
Thanks.

From: cschulte at kth.se
To: medistif at hotmail.fr; users at gecode.org
Subject: RE: [gecode-users] Difference between minus_r and nq
Date: Tue, 10 Nov 2015 21:08:44 +0100

Hi, No, not all. For the details please read chapter 25 in MPG, it has the full story! The difference (in short) is that nq removes a single integer value, whereas minus_r removes a whole set of values represented by a range iterator. As said, please check MPG. Christian --Christian Schulte, www.gecode.org/~schulte Professor of Computer Science, KTH, cschulte at kth.seExpert Researcher, SICS, cschulte at sics.se From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf Of mehdi m
Sent: Tuesday, November 10, 2015 08:36 PM
To: users at gecode.org
Subject: [gecode-users] Difference between minus_r and nq Hi everyone, In the propagator implementation are the two following methods to remove values from domains equivalents ? - method 1 :Int::ViewRanges<Int::IntView> r(x1);GECODE_ME_CHECK(x0.minus_r(home, r)); - method 2GECODE_ME_CHECK(x0.nq(home, val)); Or there is any difference ? I see that the first one takes a ViewRange and the second can takes an Int directly but what about correctness and efficiency of pruning ? Thanks. 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20151111/072eda69/attachment.html>

From cschulte at kth.se  Wed Nov 11 09:30:54 2015
From: cschulte at kth.se (Christian Schulte)
Date: Wed, 11 Nov 2015 09:30:54 +0100
Subject: [gecode-users] Difference between minus_r and nq
In-Reply-To: <DUB119-W260E33D428F814AE2888BFB7130@phx.gbl>
References: <DUB119-W14A0D22E5B48F4C5A12ABBB7140@phx.gbl>,
	<004701d11bf3$9aa5e020$cff1a060$@kth.se>
	<DUB119-W260E33D428F814AE2888BFB7130@phx.gbl>
Message-ID: <02ba01d11c5b$486a9040$d93fb0c0$@kth.se>

Please read a little bit more careful and follow the examples in MPG: gq
enforces that the values of a variable are at least as large as some given
integer.

 

Christian

 

--

Christian Schulte, www.gecode.org/~schulte

Professor of Computer Science, KTH,  <mailto:cschulte at kth.se>
cschulte at kth.se

Expert Researcher, SICS,  <mailto:cschulte at sics.se> cschulte at sics.se

 

From: mehdi m [mailto:medistif at hotmail.fr] 
Sent: Wednesday, November 11, 2015 08:22 AM
To: cschulte at kth.se; users at gecode.org
Subject: RE: [gecode-users] Difference between minus_r and nq

 

Hi,

 

I read and what i conclude (correct me please if i'm wrong) is that the two
methods are equivalents in the case where the iterator represent only one
value so minus_r will behave as an "nq" since it will remove only one value
as "nq" do it !

 

Also, what i didn't notice is the difference in the case of "gq", for
example :

 

x0 = {1,2,3,4,5}

 

If the iterator r represent the value {1,2,3}, so 

GECODE_ME_CHECK(x0.minus_r(home, r)); will remove these values from x0.

And if i post :

GECODE_ME_CHECK(x0.gq(home, 4)); in this case the value {1,2,3} are also
removed from x0.

 

So, what is here the difference since the two methods remove the whole
values {1,2,3} ?

 

Thanks.

  _____  

From: cschulte at kth.se
To: medistif at hotmail.fr; users at gecode.org
Subject: RE: [gecode-users] Difference between minus_r and nq
Date: Tue, 10 Nov 2015 21:08:44 +0100

Hi,

 

No, not all. For the details please read chapter 25 in MPG, it has the full
story!

 

The difference (in short) is that nq removes a single integer value, whereas
minus_r removes a whole set of values represented by a range iterator. As
said, please check MPG.

 

Christian

 

--

Christian Schulte,  <http://www.gecode.org/~schulte> www.gecode.org/~schulte


Professor of Computer Science, KTH,  <mailto:cschulte at kth.se>
cschulte at kth.se

Expert Researcher, SICS,  <mailto:cschulte at sics.se> cschulte at sics.se

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of mehdi m
Sent: Tuesday, November 10, 2015 08:36 PM
To: users at gecode.org
Subject: [gecode-users] Difference between minus_r and nq

 

Hi everyone,

 

In the propagator implementation are the two following methods to remove
values from domains equivalents ?

 

- method 1 :

Int::ViewRanges<Int::IntView> r(x1);

GECODE_ME_CHECK(x0.minus_r(home, r));

 

- method 2

GECODE_ME_CHECK(x0.nq(home, val));

 

Or there is any difference ? I see that the first one takes a ViewRange and
the second can takes an Int directly but what about correctness and
efficiency of pruning ?

 

Thanks.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20151111/ddb0180d/attachment-0001.html>

From aqwzsxaqwzsx at orange.fr  Sat Nov 21 12:01:03 2015
From: aqwzsxaqwzsx at orange.fr (Philippe)
Date: Sat, 21 Nov 2015 11:01:03 +0000 (UTC)
Subject: [gecode-users] Path constraint
Message-ID: <loom.20151121T115407-717@post.gmane.org>

Hi all,

The path constraint has described in MPG page 77 does only gives path
 from s to e visiting all the nodes.  Is there a constraint that gives all the
 subpaths, not only the Hamiltonians ?
(I have an adjacency matrux and i need to find all path/subpath from s to e)
Thank you



From cschulte at kth.se  Mon Nov 23 10:05:02 2015
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 23 Nov 2015 10:05:02 +0100
Subject: [gecode-users] Path constraint
In-Reply-To: <loom.20151121T115407-717@post.gmane.org>
References: <loom.20151121T115407-717@post.gmane.org>
Message-ID: <037f01d125ce$09af0210$1d0d0630$@kth.se>

Hi,

Unfortunately not. In case you feel tempted to do a propagator yourself
(starting from what is already in Gecode), the following paper explains how
to do that:
	Kathryn Glenn Francis, Peter J. Stuckey: Explaining circuit
propagation. Constraints 19(1): 1-29 (2014)

Cheers
Christian

--
Christian Schulte, www.gecode.org/~schulte
Professor of Computer Science, KTH, cschulte at kth.se
Expert Researcher, SICS, cschulte at sics.se


-----Original Message-----
From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Philippe
Sent: Saturday, November 21, 2015 12:01 PM
To: users at gecode.org
Subject: [gecode-users] Path constraint

Hi all,

The path constraint has described in MPG page 77 does only gives path  from
s to e visiting all the nodes.  Is there a constraint that gives all the
subpaths, not only the Hamiltonians ?
(I have an adjacency matrux and i need to find all path/subpath from s to e)
Thank you


_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users



From aqwzsxaqwzsx at orange.fr  Wed Nov 25 21:53:45 2015
From: aqwzsxaqwzsx at orange.fr (Philippe)
Date: Wed, 25 Nov 2015 20:53:45 +0000 (UTC)
Subject: [gecode-users] Path constraint
Message-ID: <loom.20151125T214918-485@post.gmane.org>

Hi,


This mail refers to the previous post :
(http://permalink.gmane.org/gmane.comp.lib.gecode.user/4754) 
Unfortunately, I can't reply to it (when i click on "reply" 
I get a html page with the text "No such file" in it).

Here is the problem : I have a adjacency matrix in which there are cycles.
These cycles prevent the existence of a path between a start node and end
node. (This happens for instance with the code below.) Is there a way to 
solve this problem without the existence of the subpath constraint (since 
not all nodes has to be visited) ? 

I know the paper "Explaining circuit propagation" but I have neither the 
time nor (probably) the level to code the "subpath" myself. 
The problem I am facing is severe since a lot of work has already be 
done and a milestones is now rapidly coming.


Any help will be greatly appreciated,
Thanks
Philippe


class TestPath : public Gecode::Space {
 
public:

      TestPath():
        _nb_nodes(4), 
        _end(_nb_nodes),                          // end mark
      _Flow(*this, _nb_nodes * _nb_nodes, 0, 1),  // Square matrix
      _s(*this, 0, _nb_nodes),                    // Domain = [0, nb_nodes]
      _e(*this, 0, _nb_nodes)                     //
   { 
        int index_end   = (_nb_nodes - 2);
        int index_start = (_nb_nodes - 1);
        Matrix<IntVarArray> flow(_Flow, _nb_nodes, _nb_nodes);

        // Start has necessary a successor
       rel(*this, sum(flow.col(index_start)) == 1);

        // Start has no predecessor
       rel(*this, sum(flow.row(index_start)) == 0);

        // End has no successor
       rel(*this, sum(flow.col(index_end)) == 0);

        for (int i = 0 ; i < _nb_nodes ; ++i)
        {
            IntVar in = expr(*this, sum(flow.row(i)));
            IntVar out = expr(*this, sum(flow.col(i)));

            rel(*this, in <= 1);
            rel(*this, out <= 1);

              // No trivial cycle
              rel(*this, flow(i, i) == 0);

              if (i != index_end && i != index_start)
              {
                  // Flow conservation
                  IntVar in = expr(*this, sum(flow.row(i)));
                  IntVar out = expr(*this, sum(flow.col(i)));
                  rel(*this, in == out);
              }
        }
        // ------------------------------------------------------------
        // Then, some other constraints  
        // will set the flow(i,j) to 0
        // ------------------------------------------------------------

        // ------------------------------------------------------------
        // Anyway, that is not sufficent since we have cycle (or invalid 
        // path),
        // for instance
        // Start->End  Node1<->Node2
        // -------------------------------------------------------------
        // what we want is a path that goes from Start to End but not 
        // necessary passing through all nodes. Is a flow sufficent ?
        // ------------------------------------------------------------
      branch(*this, _Flow, INT_VAR_SIZE_MIN(), INT_VAL_MAX());
   }

};

 



