From conrad.drescher at sap.com  Fri Mar 10 09:30:27 2017
From: conrad.drescher at sap.com (Drescher, Conrad)
Date: Fri, 10 Mar 2017 08:30:27 +0000
Subject: [gecode-users] Question on rewriting
Message-ID: <85b7514ad6c44fcd8c3b17ae451a59f0@sap.com>

Hi there,

I have a question on rewriting during propagation as described in MPG. MPG recommends you call the propagator post function of the constraint you're rewriting to. I wonder whether it'd be possible to use the constraint post function, too. Of course, that might be less efficient. But I wonder foremost about whether I'd break any of the propagator obligations.

Many thanks!
Conrad

Dr. Conrad Drescher
Senior Developer | Variant Configuration
P&I S/4HANA Idea - LoB Research & Development
SAP SE | Dietmar-Hopp-Allee 16 | 69190 Walldorf | Germany
T +49 6227 7-77888 | M +49 160 90684883 | E conrad.drescher at sap.com
www.sap.com<http://www.sap.com/>

Please consider the impact on the environment before printing this e-mail.


Pflichtangaben/Mandatory Disclosure Statements:
http://www.sap.com/company/legal/impressum.epx

Diese E-Mail kann Betriebs- oder Gesch?ftsgeheimnisse oder sonstige vertrauliche Informationen enthalten. Sollten Sie diese E-Mail irrt?mlich erhalten haben, ist Ihnen eine Kenntnisnahme des Inhalts, eine Vervielf?ltigung oder Weitergabe der E-Mail ausdr?cklich untersagt. Bitte benachrichtigen Sie uns und vernichten Sie die empfangene E-Mail. Vielen Dank.

This e-mail may contain trade secrets or privileged, undisclosed, or otherwise confidential information. If you have received this e-mail in error, you are hereby notified that any review, copying, or distribution of it is strictly prohibited. Please inform us immediately and destroy the original transmittal. Thank you for your cooperation.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20170310/9865e7fd/attachment.html>

From conrad.drescher at sap.com  Fri Mar 10 09:46:37 2017
From: conrad.drescher at sap.com (Drescher, Conrad)
Date: Fri, 10 Mar 2017 08:46:37 +0000
Subject: [gecode-users] Question on IntVar-equalities with and without
	MiniModel
Message-ID: <94cda6709a4b41ecbb99a0616efbf27d@sap.com>

Hi there,

I have a question on the "equal" constraint between two IntVars, let's say x0 with domain [1,3,5], and x1 with domain [Int::Limits::min..Int::Limits::max].

If I write rel(home,x0,IRT_EQ,x1); x1 gets restricted to [1,3,5] as IRT_EQs default propagation level is IPL_DOM. But if I write rel(home,x0 == x1); using MiniModel x1 gets restricted to [1 - 5].

Apparently equalities between linear integer expressions get summarized into a "linear" constraint in MiniModel, which of course is nice. This linear constraint in turn seems to have a lot of special cases covered (which I haven't fully grasped yet). But I wonder whether it'd be possible to get the case of there being just two variables back up to IPL_DOM instead of IPL_BND? Of course, I understand you wouldn't want to have IPL_DOM for linear in general...

Many thanks!
Conrad

Dr. Conrad Drescher
Senior Developer | Variant Configuration
P&I S/4HANA Idea - LoB Research & Development
SAP SE | Dietmar-Hopp-Allee 16 | 69190 Walldorf | Germany
T +49 6227 7-77888 | M +49 160 90684883 | E conrad.drescher at sap.com
www.sap.com<http://www.sap.com/>

Please consider the impact on the environment before printing this e-mail.


Pflichtangaben/Mandatory Disclosure Statements:
http://www.sap.com/company/legal/impressum.epx

Diese E-Mail kann Betriebs- oder Gesch?ftsgeheimnisse oder sonstige vertrauliche Informationen enthalten. Sollten Sie diese E-Mail irrt?mlich erhalten haben, ist Ihnen eine Kenntnisnahme des Inhalts, eine Vervielf?ltigung oder Weitergabe der E-Mail ausdr?cklich untersagt. Bitte benachrichtigen Sie uns und vernichten Sie die empfangene E-Mail. Vielen Dank.

This e-mail may contain trade secrets or privileged, undisclosed, or otherwise confidential information. If you have received this e-mail in error, you are hereby notified that any review, copying, or distribution of it is strictly prohibited. Please inform us immediately and destroy the original transmittal. Thank you for your cooperation.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20170310/80a110d0/attachment.html>

From cschulte at kth.se  Mon Mar 13 09:41:14 2017
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 13 Mar 2017 09:41:14 +0100
Subject: [gecode-users] Question on IntVar-equalities with and
	without	MiniModel
In-Reply-To: <94cda6709a4b41ecbb99a0616efbf27d@sap.com>
References: <94cda6709a4b41ecbb99a0616efbf27d@sap.com>
Message-ID: <039b01d29bd5$93bad500$bb307f00$@kth.se>

Hmmm, not that straightforward. There are two ideas here:

-          One idea would be that there is an additional IPL (integer
propagation level) called something like IPL_CHEAP_DOM which does domain
propagation only if it is cheap.

-          The other idea would be that linear interprets the default IPL
ILP_DEF differently: normally it uses IPL_BND but for special cases it uses
IPL_DOM.

 

The second might be easier to pull off


 

Cheers

Christian

 

--

Christian Schulte, www.gecode.org/~schulte

Professor of Computer Science, KTH,  <mailto:cschulte at kth.se>
cschulte at kth.se

Expert Researcher, RISE ICT/SICS,  <mailto:cschulte at sics.se>
cschulte at sics.se

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Drescher, Conrad
Sent: Friday, March 10, 2017 09:47
To: users at gecode.org
Subject: [gecode-users] Question on IntVar-equalities with and without
MiniModel

 

Hi there,

 

I have a question on the ?equal? constraint between two IntVars, let?s say
x0 with domain [1,3,5], and x1 with domain
[Int::Limits::min..Int::Limits::max].

 

If I write rel(home,x0,IRT_EQ,x1); x1 gets restricted to [1,3,5] as IRT_EQs
default propagation level is IPL_DOM. But if I write rel(home,x0 == x1);
using MiniModel x1 gets restricted to [1 ? 5].

 

Apparently equalities between linear integer expressions get summarized into
a ?linear? constraint in MiniModel, which of course is nice. This linear
constraint in turn seems to have a lot of special cases covered (which I
haven?t fully grasped yet). But I wonder whether it?d be possible to get the
case of there being just two variables back up to IPL_DOM instead of
IPL_BND? Of course, I understand you wouldn?t want to have IPL_DOM for
linear in general


 

Many thanks!

Conrad

 

Dr. Conrad Drescher

Senior Developer | Variant Configuration
P&I S/4HANA Idea ? LoB Research & Development

SAP SE | Dietmar-Hopp-Allee 16 | 69190 Walldorf | Germany

T +49 6227 7-77888 | M +49 160 90684883 | E conrad.drescher at sap.com
 <http://www.sap.com/> www.sap.com


Please consider the impact on the environment before printing this e-mail.


Pflichtangaben/Mandatory Disclosure Statements: 
 <http://www.sap.com/company/legal/impressum.epx>
http://www.sap.com/company/legal/impressum.epx

Diese E-Mail kann Betriebs- oder Gesch?ftsgeheimnisse oder sonstige
vertrauliche Informationen enthalten. Sollten Sie diese E-Mail irrt?mlich
erhalten haben, ist Ihnen eine Kenntnisnahme des Inhalts, eine
Vervielf?ltigung oder Weitergabe der E-Mail ausdr?cklich untersagt. Bitte
benachrichtigen Sie uns und vernichten Sie die empfangene E-Mail. Vielen
Dank. 

This e-mail may contain trade secrets or privileged, undisclosed, or
otherwise confidential information. If you have received this e-mail in
error, you are hereby notified that any review, copying, or distribution of
it is strictly prohibited. Please inform us immediately and destroy the
original transmittal. Thank you for your cooperation.

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20170313/2a201a0a/attachment.html>

From cschulte at kth.se  Mon Mar 13 09:46:10 2017
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 13 Mar 2017 09:46:10 +0100
Subject: [gecode-users] Question on rewriting
In-Reply-To: <85b7514ad6c44fcd8c3b17ae451a59f0@sap.com>
References: <85b7514ad6c44fcd8c3b17ae451a59f0@sap.com>
Message-ID: <03b701d29bd6$43e6ee00$cbb4ca00$@kth.se>

Hi,

 

That should be fine, however I would not recommend it, really, for
efficiency reasons: when a propagator is being rewritten it is done such
that most likely no additional memory needs to be allocated for both the
newly created propagator and the subscriptions this propagator is going to
create. 

 

Then, the newly created propagator actually inherits some information from
the propagator being rewritten, such as id, failure count, etc. You would
have to make sure that this happens as well.

 

Cheers

Christian

 

--

Christian Schulte, www.gecode.org/~schulte

Professor of Computer Science, KTH,  <mailto:cschulte at kth.se>
cschulte at kth.se

Expert Researcher, RISE ICT/SICS,  <mailto:cschulte at sics.se>
cschulte at sics.se

 

From: users-bounces at gecode.org [mailto:users-bounces at gecode.org] On Behalf
Of Drescher, Conrad
Sent: Friday, March 10, 2017 09:30
To: users at gecode.org
Subject: [gecode-users] Question on rewriting

 

Hi there,

 

I have a question on rewriting during propagation as described in MPG. MPG
recommends you call the propagator post function of the constraint you?re
rewriting to. I wonder whether it?d be possible to use the constraint post
function, too. Of course, that might be less efficient. But I wonder
foremost about whether I?d break any of the propagator obligations.

 

Many thanks!

Conrad

 

Dr. Conrad Drescher

Senior Developer | Variant Configuration
P&I S/4HANA Idea ? LoB Research & Development

SAP SE | Dietmar-Hopp-Allee 16 | 69190 Walldorf | Germany

T +49 6227 7-77888 | M +49 160 90684883 | E conrad.drescher at sap.com
 <http://www.sap.com/> www.sap.com


Please consider the impact on the environment before printing this e-mail.


Pflichtangaben/Mandatory Disclosure Statements: 
 <http://www.sap.com/company/legal/impressum.epx>
http://www.sap.com/company/legal/impressum.epx

Diese E-Mail kann Betriebs- oder Gesch?ftsgeheimnisse oder sonstige
vertrauliche Informationen enthalten. Sollten Sie diese E-Mail irrt?mlich
erhalten haben, ist Ihnen eine Kenntnisnahme des Inhalts, eine
Vervielf?ltigung oder Weitergabe der E-Mail ausdr?cklich untersagt. Bitte
benachrichtigen Sie uns und vernichten Sie die empfangene E-Mail. Vielen
Dank. 

This e-mail may contain trade secrets or privileged, undisclosed, or
otherwise confidential information. If you have received this e-mail in
error, you are hereby notified that any review, copying, or distribution of
it is strictly prohibited. Please inform us immediately and destroy the
original transmittal. Thank you for your cooperation.

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20170313/656ece34/attachment-0001.html>

From conrad.drescher at sap.com  Mon Mar 13 10:22:19 2017
From: conrad.drescher at sap.com (Drescher, Conrad)
Date: Mon, 13 Mar 2017 09:22:19 +0000
Subject: [gecode-users] Question on IntVar-equalities with and
	without	MiniModel
In-Reply-To: <039b01d29bd5$93bad500$bb307f00$@kth.se>
References: <94cda6709a4b41ecbb99a0616efbf27d@sap.com>
	<039b01d29bd5$93bad500$bb307f00$@kth.se>
Message-ID: <465cb45458314e0c9e8dfd2b888e17a3@sap.com>

Hi Christian,

I had not even thought of the first option... the second option should be easily sufficient for our purposes. If it were possible to make that special case of "x == y" behave like "x IRT_EQ y" that would really benefit our use case. We have no interest in using DOM for the general case of "IntExpr1 == IntExpr2".

Many thanks for considering the idea, and the great software in general!
Conrad

Dr. Conrad Drescher
Senior Developer | Variant Configuration
P&I S/4HANA Idea - LoB Research & Development
SAP SE | Dietmar-Hopp-Allee 16 | 69190 Walldorf | Germany
T +49 6227 7-77888 | M +49 160 90684883 | E conrad.drescher at sap.com
www.sap.com<http://www.sap.com/>

Please consider the impact on the environment before printing this e-mail.


Pflichtangaben/Mandatory Disclosure Statements:
http://www.sap.com/company/legal/impressum.epx

Diese E-Mail kann Betriebs- oder Gesch?ftsgeheimnisse oder sonstige vertrauliche Informationen enthalten. Sollten Sie diese E-Mail irrt?mlich erhalten haben, ist Ihnen eine Kenntnisnahme des Inhalts, eine Vervielf?ltigung oder Weitergabe der E-Mail ausdr?cklich untersagt. Bitte benachrichtigen Sie uns und vernichten Sie die empfangene E-Mail. Vielen Dank.

This e-mail may contain trade secrets or privileged, undisclosed, or otherwise confidential information. If you have received this e-mail in error, you are hereby notified that any review, copying, or distribution of it is strictly prohibited. Please inform us immediately and destroy the original transmittal. Thank you for your cooperation.



From: Christian Schulte [mailto:cschulte at kth.se]
Sent: Montag, 13. M?rz 2017 09:41
To: Drescher, Conrad <conrad.drescher at sap.com>; users at gecode.org
Subject: RE: [gecode-users] Question on IntVar-equalities with and without MiniModel

Hmmm, not that straightforward. There are two ideas here:

-          One idea would be that there is an additional IPL (integer propagation level) called something like IPL_CHEAP_DOM which does domain propagation only if it is cheap.

-          The other idea would be that linear interprets the default IPL ILP_DEF differently: normally it uses IPL_BND but for special cases it uses IPL_DOM.

The second might be easier to pull off...

Cheers
Christian

--
Christian Schulte, www.gecode.org/~schulte<http://www.gecode.org/~schulte>
Professor of Computer Science, KTH, cschulte at kth.se<mailto:cschulte at kth.se>
Expert Researcher, RISE ICT/SICS, cschulte at sics.se<mailto:cschulte at sics.se>

From: users-bounces at gecode.org<mailto:users-bounces at gecode.org> [mailto:users-bounces at gecode.org] On Behalf Of Drescher, Conrad
Sent: Friday, March 10, 2017 09:47
To: users at gecode.org<mailto:users at gecode.org>
Subject: [gecode-users] Question on IntVar-equalities with and without MiniModel

Hi there,

I have a question on the "equal" constraint between two IntVars, let's say x0 with domain [1,3,5], and x1 with domain [Int::Limits::min..Int::Limits::max].

If I write rel(home,x0,IRT_EQ,x1); x1 gets restricted to [1,3,5] as IRT_EQs default propagation level is IPL_DOM. But if I write rel(home,x0 == x1); using MiniModel x1 gets restricted to [1 - 5].

Apparently equalities between linear integer expressions get summarized into a "linear" constraint in MiniModel, which of course is nice. This linear constraint in turn seems to have a lot of special cases covered (which I haven't fully grasped yet). But I wonder whether it'd be possible to get the case of there being just two variables back up to IPL_DOM instead of IPL_BND? Of course, I understand you wouldn't want to have IPL_DOM for linear in general...

Many thanks!
Conrad

Dr. Conrad Drescher
Senior Developer | Variant Configuration
P&I S/4HANA Idea - LoB Research & Development
SAP SE | Dietmar-Hopp-Allee 16 | 69190 Walldorf | Germany
T +49 6227 7-77888 | M +49 160 90684883 | E conrad.drescher at sap.com<mailto:conrad.drescher at sap.com>
www.sap.com<http://www.sap.com/>

Please consider the impact on the environment before printing this e-mail.


Pflichtangaben/Mandatory Disclosure Statements:
http://www.sap.com/company/legal/impressum.epx

Diese E-Mail kann Betriebs- oder Gesch?ftsgeheimnisse oder sonstige vertrauliche Informationen enthalten. Sollten Sie diese E-Mail irrt?mlich erhalten haben, ist Ihnen eine Kenntnisnahme des Inhalts, eine Vervielf?ltigung oder Weitergabe der E-Mail ausdr?cklich untersagt. Bitte benachrichtigen Sie uns und vernichten Sie die empfangene E-Mail. Vielen Dank.

This e-mail may contain trade secrets or privileged, undisclosed, or otherwise confidential information. If you have received this e-mail in error, you are hereby notified that any review, copying, or distribution of it is strictly prohibited. Please inform us immediately and destroy the original transmittal. Thank you for your cooperation.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20170313/d00513d4/attachment.html>

From cschulte at kth.se  Mon Mar 13 13:08:08 2017
From: cschulte at kth.se (Christian Schulte)
Date: Mon, 13 Mar 2017 13:08:08 +0100
Subject: [gecode-users] Question on IntVar-equalities with and
	without	MiniModel
In-Reply-To: <465cb45458314e0c9e8dfd2b888e17a3@sap.com>
References: <94cda6709a4b41ecbb99a0616efbf27d@sap.com>
	<039b01d29bd5$93bad500$bb307f00$@kth.se>
	<465cb45458314e0c9e8dfd2b888e17a3@sap.com>
Message-ID: <001b01d29bf2$7d1f7450$775e5cf0$@kth.se>

Hi Conrad,

 

I just had a look at the code and the second option seems to be quite easy
to do. The candidates for domain consistent propagation would be:

-          x = y, x = -y

-          x + y = c, x ? y = c (provided that x, y, c do not exceed some
limit)

 

However, getting also the reified variants domain consistent would require
some (not much) work. Would that be needed as well?

 

Cheers

Christian

 

--

Christian Schulte, www.gecode.org/~schulte

Professor of Computer Science, KTH,  <mailto:cschulte at kth.se>
cschulte at kth.se

Expert Researcher, RISE SICS,  <mailto:christian.schulte at ri.se>
christian.schulte at ri.se

 

From: Drescher, Conrad [mailto:conrad.drescher at sap.com] 
Sent: Monday, March 13, 2017 10:22
To: users at gecode.org
Cc: cschulte at kth.se
Subject: RE: [gecode-users] Question on IntVar-equalities with and without
MiniModel

 

Hi Christian,

 

I had not even thought of the first option
 the second option should be
easily sufficient for our purposes. If it were possible to make that special
case of ?x == y? behave like ?x IRT_EQ y? that would really benefit our use
case. We have no interest in using DOM for the general case of ?IntExpr1 ==
IntExpr2?.

 

Many thanks for considering the idea, and the great software in general!

Conrad

 

Dr. Conrad Drescher

Senior Developer | Variant Configuration
P&I S/4HANA Idea ? LoB Research & Development

SAP SE | Dietmar-Hopp-Allee 16 | 69190 Walldorf | Germany

T +49 6227 7-77888 | M +49 160 90684883 | E conrad.drescher at sap.com
 <http://www.sap.com/> www.sap.com


Please consider the impact on the environment before printing this e-mail.


Pflichtangaben/Mandatory Disclosure Statements: 
 <http://www.sap.com/company/legal/impressum.epx>
http://www.sap.com/company/legal/impressum.epx

Diese E-Mail kann Betriebs- oder Gesch?ftsgeheimnisse oder sonstige
vertrauliche Informationen enthalten. Sollten Sie diese E-Mail irrt?mlich
erhalten haben, ist Ihnen eine Kenntnisnahme des Inhalts, eine
Vervielf?ltigung oder Weitergabe der E-Mail ausdr?cklich untersagt. Bitte
benachrichtigen Sie uns und vernichten Sie die empfangene E-Mail. Vielen
Dank. 

This e-mail may contain trade secrets or privileged, undisclosed, or
otherwise confidential information. If you have received this e-mail in
error, you are hereby notified that any review, copying, or distribution of
it is strictly prohibited. Please inform us immediately and destroy the
original transmittal. Thank you for your cooperation.

 

 

 

From: Christian Schulte [mailto:cschulte at kth.se] 
Sent: Montag, 13. M?rz 2017 09:41
To: Drescher, Conrad <conrad.drescher at sap.com>; users at gecode.org
Subject: RE: [gecode-users] Question on IntVar-equalities with and without
MiniModel

 

Hmmm, not that straightforward. There are two ideas here:

-          One idea would be that there is an additional IPL (integer
propagation level) called something like IPL_CHEAP_DOM which does domain
propagation only if it is cheap.

-          The other idea would be that linear interprets the default IPL
ILP_DEF differently: normally it uses IPL_BND but for special cases it uses
IPL_DOM.

 

The second might be easier to pull off


 

Cheers

Christian

 

--

Christian Schulte,  <http://www.gecode.org/~schulte> www.gecode.org/~schulte

Professor of Computer Science, KTH,  <mailto:cschulte at kth.se>
cschulte at kth.se

Expert Researcher, RISE ICT/SICS,  <mailto:cschulte at sics.se>
cschulte at sics.se

 

From:  <mailto:users-bounces at gecode.org> users-bounces at gecode.org [
<mailto:users-bounces at gecode.org> mailto:users-bounces at gecode.org] On Behalf
Of Drescher, Conrad
Sent: Friday, March 10, 2017 09:47
To:  <mailto:users at gecode.org> users at gecode.org
Subject: [gecode-users] Question on IntVar-equalities with and without
MiniModel

 

Hi there,

 

I have a question on the ?equal? constraint between two IntVars, let?s say
x0 with domain [1,3,5], and x1 with domain
[Int::Limits::min..Int::Limits::max].

 

If I write rel(home,x0,IRT_EQ,x1); x1 gets restricted to [1,3,5] as IRT_EQs
default propagation level is IPL_DOM. But if I write rel(home,x0 == x1);
using MiniModel x1 gets restricted to [1 ? 5].

 

Apparently equalities between linear integer expressions get summarized into
a ?linear? constraint in MiniModel, which of course is nice. This linear
constraint in turn seems to have a lot of special cases covered (which I
haven?t fully grasped yet). But I wonder whether it?d be possible to get the
case of there being just two variables back up to IPL_DOM instead of
IPL_BND? Of course, I understand you wouldn?t want to have IPL_DOM for
linear in general


 

Many thanks!

Conrad

 

Dr. Conrad Drescher

Senior Developer | Variant Configuration
P&I S/4HANA Idea ? LoB Research & Development

SAP SE | Dietmar-Hopp-Allee 16 | 69190 Walldorf | Germany

T +49 6227 7-77888 | M +49 160 90684883 | E
<mailto:conrad.drescher at sap.com> conrad.drescher at sap.com
 <http://www.sap.com/> www.sap.com


Please consider the impact on the environment before printing this e-mail.


Pflichtangaben/Mandatory Disclosure Statements: 
 <http://www.sap.com/company/legal/impressum.epx>
http://www.sap.com/company/legal/impressum.epx

Diese E-Mail kann Betriebs- oder Gesch?ftsgeheimnisse oder sonstige
vertrauliche Informationen enthalten. Sollten Sie diese E-Mail irrt?mlich
erhalten haben, ist Ihnen eine Kenntnisnahme des Inhalts, eine
Vervielf?ltigung oder Weitergabe der E-Mail ausdr?cklich untersagt. Bitte
benachrichtigen Sie uns und vernichten Sie die empfangene E-Mail. Vielen
Dank. 

This e-mail may contain trade secrets or privileged, undisclosed, or
otherwise confidential information. If you have received this e-mail in
error, you are hereby notified that any review, copying, or distribution of
it is strictly prohibited. Please inform us immediately and destroy the
original transmittal. Thank you for your cooperation.

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20170313/d24dca47/attachment-0001.html>

From conrad.drescher at sap.com  Mon Mar 13 13:13:31 2017
From: conrad.drescher at sap.com (Drescher, Conrad)
Date: Mon, 13 Mar 2017 12:13:31 +0000
Subject: [gecode-users] Question on IntVar-equalities with and
	without	MiniModel
In-Reply-To: <001b01d29bf2$7d1f7450$775e5cf0$@kth.se>
References: <94cda6709a4b41ecbb99a0616efbf27d@sap.com>
	<039b01d29bd5$93bad500$bb307f00$@kth.se>
	<465cb45458314e0c9e8dfd2b888e17a3@sap.com>
	<001b01d29bf2$7d1f7450$775e5cf0$@kth.se>
Message-ID: <05cdd7de0fbb49ba804d187f9b9618e3@sap.com>

Hi Christian,

thanks a lot, that looks very good! For us, I don't see a use case for stronger reified variants...

Best wishes,
Conrad

Dr. Conrad Drescher
Senior Developer | Variant Configuration
P&I S/4HANA Idea - LoB Research & Development
SAP SE | Dietmar-Hopp-Allee 16 | 69190 Walldorf | Germany
T +49 6227 7-77888 | M +49 160 90684883 | E conrad.drescher at sap.com
www.sap.com<http://www.sap.com/>

Please consider the impact on the environment before printing this e-mail.


Pflichtangaben/Mandatory Disclosure Statements:
http://www.sap.com/company/legal/impressum.epx

Diese E-Mail kann Betriebs- oder Gesch?ftsgeheimnisse oder sonstige vertrauliche Informationen enthalten. Sollten Sie diese E-Mail irrt?mlich erhalten haben, ist Ihnen eine Kenntnisnahme des Inhalts, eine Vervielf?ltigung oder Weitergabe der E-Mail ausdr?cklich untersagt. Bitte benachrichtigen Sie uns und vernichten Sie die empfangene E-Mail. Vielen Dank.

This e-mail may contain trade secrets or privileged, undisclosed, or otherwise confidential information. If you have received this e-mail in error, you are hereby notified that any review, copying, or distribution of it is strictly prohibited. Please inform us immediately and destroy the original transmittal. Thank you for your cooperation.




From: Christian Schulte [mailto:cschulte at kth.se]
Sent: Montag, 13. M?rz 2017 13:08
To: Drescher, Conrad <conrad.drescher at sap.com>; users at gecode.org
Subject: RE: [gecode-users] Question on IntVar-equalities with and without MiniModel

Hi Conrad,

I just had a look at the code and the second option seems to be quite easy to do. The candidates for domain consistent propagation would be:

-          x = y, x = -y

-          x + y = c, x - y = c (provided that x, y, c do not exceed some limit)

However, getting also the reified variants domain consistent would require some (not much) work. Would that be needed as well?

Cheers
Christian

--
Christian Schulte, www.gecode.org/~schulte<http://www.gecode.org/~schulte>
Professor of Computer Science, KTH, cschulte at kth.se<mailto:cschulte at kth.se>
Expert Researcher, RISE SICS, christian.schulte at ri.se<mailto:christian.schulte at ri.se>

From: Drescher, Conrad [mailto:conrad.drescher at sap.com]
Sent: Monday, March 13, 2017 10:22
To: users at gecode.org<mailto:users at gecode.org>
Cc: cschulte at kth.se<mailto:cschulte at kth.se>
Subject: RE: [gecode-users] Question on IntVar-equalities with and without MiniModel

Hi Christian,

I had not even thought of the first option... the second option should be easily sufficient for our purposes. If it were possible to make that special case of "x == y" behave like "x IRT_EQ y" that would really benefit our use case. We have no interest in using DOM for the general case of "IntExpr1 == IntExpr2".

Many thanks for considering the idea, and the great software in general!
Conrad

Dr. Conrad Drescher
Senior Developer | Variant Configuration
P&I S/4HANA Idea - LoB Research & Development
SAP SE | Dietmar-Hopp-Allee 16 | 69190 Walldorf | Germany
T +49 6227 7-77888 | M +49 160 90684883 | E conrad.drescher at sap.com<mailto:conrad.drescher at sap.com>
www.sap.com<http://www.sap.com/>

Please consider the impact on the environment before printing this e-mail.


Pflichtangaben/Mandatory Disclosure Statements:
http://www.sap.com/company/legal/impressum.epx

Diese E-Mail kann Betriebs- oder Gesch?ftsgeheimnisse oder sonstige vertrauliche Informationen enthalten. Sollten Sie diese E-Mail irrt?mlich erhalten haben, ist Ihnen eine Kenntnisnahme des Inhalts, eine Vervielf?ltigung oder Weitergabe der E-Mail ausdr?cklich untersagt. Bitte benachrichtigen Sie uns und vernichten Sie die empfangene E-Mail. Vielen Dank.

This e-mail may contain trade secrets or privileged, undisclosed, or otherwise confidential information. If you have received this e-mail in error, you are hereby notified that any review, copying, or distribution of it is strictly prohibited. Please inform us immediately and destroy the original transmittal. Thank you for your cooperation.



From: Christian Schulte [mailto:cschulte at kth.se]
Sent: Montag, 13. M?rz 2017 09:41
To: Drescher, Conrad <conrad.drescher at sap.com<mailto:conrad.drescher at sap.com>>; users at gecode.org<mailto:users at gecode.org>
Subject: RE: [gecode-users] Question on IntVar-equalities with and without MiniModel

Hmmm, not that straightforward. There are two ideas here:

-          One idea would be that there is an additional IPL (integer propagation level) called something like IPL_CHEAP_DOM which does domain propagation only if it is cheap.

-          The other idea would be that linear interprets the default IPL ILP_DEF differently: normally it uses IPL_BND but for special cases it uses IPL_DOM.

The second might be easier to pull off...

Cheers
Christian

--
Christian Schulte, www.gecode.org/~schulte<http://www.gecode.org/~schulte>
Professor of Computer Science, KTH, cschulte at kth.se<mailto:cschulte at kth.se>
Expert Researcher, RISE ICT/SICS, cschulte at sics.se<mailto:cschulte at sics.se>

From: users-bounces at gecode.org<mailto:users-bounces at gecode.org> [mailto:users-bounces at gecode.org] On Behalf Of Drescher, Conrad
Sent: Friday, March 10, 2017 09:47
To: users at gecode.org<mailto:users at gecode.org>
Subject: [gecode-users] Question on IntVar-equalities with and without MiniModel

Hi there,

I have a question on the "equal" constraint between two IntVars, let's say x0 with domain [1,3,5], and x1 with domain [Int::Limits::min..Int::Limits::max].

If I write rel(home,x0,IRT_EQ,x1); x1 gets restricted to [1,3,5] as IRT_EQs default propagation level is IPL_DOM. But if I write rel(home,x0 == x1); using MiniModel x1 gets restricted to [1 - 5].

Apparently equalities between linear integer expressions get summarized into a "linear" constraint in MiniModel, which of course is nice. This linear constraint in turn seems to have a lot of special cases covered (which I haven't fully grasped yet). But I wonder whether it'd be possible to get the case of there being just two variables back up to IPL_DOM instead of IPL_BND? Of course, I understand you wouldn't want to have IPL_DOM for linear in general...

Many thanks!
Conrad

Dr. Conrad Drescher
Senior Developer | Variant Configuration
P&I S/4HANA Idea - LoB Research & Development
SAP SE | Dietmar-Hopp-Allee 16 | 69190 Walldorf | Germany
T +49 6227 7-77888 | M +49 160 90684883 | E conrad.drescher at sap.com<mailto:conrad.drescher at sap.com>
www.sap.com<http://www.sap.com/>

Please consider the impact on the environment before printing this e-mail.


Pflichtangaben/Mandatory Disclosure Statements:
http://www.sap.com/company/legal/impressum.epx

Diese E-Mail kann Betriebs- oder Gesch?ftsgeheimnisse oder sonstige vertrauliche Informationen enthalten. Sollten Sie diese E-Mail irrt?mlich erhalten haben, ist Ihnen eine Kenntnisnahme des Inhalts, eine Vervielf?ltigung oder Weitergabe der E-Mail ausdr?cklich untersagt. Bitte benachrichtigen Sie uns und vernichten Sie die empfangene E-Mail. Vielen Dank.

This e-mail may contain trade secrets or privileged, undisclosed, or otherwise confidential information. If you have received this e-mail in error, you are hereby notified that any review, copying, or distribution of it is strictly prohibited. Please inform us immediately and destroy the original transmittal. Thank you for your cooperation.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20170313/6090e2f4/attachment-0001.html>

From cschulte at kth.se  Tue Mar 14 11:11:24 2017
From: cschulte at kth.se (Christian Schulte)
Date: Tue, 14 Mar 2017 11:11:24 +0100
Subject: [gecode-users] Question on IntVar-equalities with and
	without	MiniModel
In-Reply-To: <05cdd7de0fbb49ba804d187f9b9618e3@sap.com>
References: <94cda6709a4b41ecbb99a0616efbf27d@sap.com>
	<039b01d29bd5$93bad500$bb307f00$@kth.se>
	<465cb45458314e0c9e8dfd2b888e17a3@sap.com>
	<001b01d29bf2$7d1f7450$775e5cf0$@kth.se>
	<05cdd7de0fbb49ba804d187f9b9618e3@sap.com>
Message-ID: <011e01d29cab$56d3fdc0$047bf940$@kth.se>

Hi Conrad, I just added this behavior in the trunk! Cheers Christian

 

--

Christian Schulte, www.gecode.org/~schulte

Professor of Computer Science, KTH,  <mailto:cschulte at kth.se>
cschulte at kth.se

Expert Researcher, RISE SICS,  <mailto:christian.schulte at ri.se>
christian.schulte at ri.se

 

From: Drescher, Conrad [mailto:conrad.drescher at sap.com] 
Sent: Monday, March 13, 2017 13:14
To: cschulte at kth.se; users at gecode.org
Subject: RE: [gecode-users] Question on IntVar-equalities with and without
MiniModel

 

Hi Christian,

 

thanks a lot, that looks very good! For us, I don?t see a use case for
stronger reified variants


 

Best wishes,

Conrad

 

Dr. Conrad Drescher

Senior Developer | Variant Configuration
P&I S/4HANA Idea ? LoB Research & Development

SAP SE | Dietmar-Hopp-Allee 16 | 69190 Walldorf | Germany

T +49 6227 7-77888 | M +49 160 90684883 | E conrad.drescher at sap.com
 <http://www.sap.com/> www.sap.com


Please consider the impact on the environment before printing this e-mail.


Pflichtangaben/Mandatory Disclosure Statements: 
 <http://www.sap.com/company/legal/impressum.epx>
http://www.sap.com/company/legal/impressum.epx

Diese E-Mail kann Betriebs- oder Gesch?ftsgeheimnisse oder sonstige
vertrauliche Informationen enthalten. Sollten Sie diese E-Mail irrt?mlich
erhalten haben, ist Ihnen eine Kenntnisnahme des Inhalts, eine
Vervielf?ltigung oder Weitergabe der E-Mail ausdr?cklich untersagt. Bitte
benachrichtigen Sie uns und vernichten Sie die empfangene E-Mail. Vielen
Dank. 

This e-mail may contain trade secrets or privileged, undisclosed, or
otherwise confidential information. If you have received this e-mail in
error, you are hereby notified that any review, copying, or distribution of
it is strictly prohibited. Please inform us immediately and destroy the
original transmittal. Thank you for your cooperation.

 

 

 

 

From: Christian Schulte [mailto:cschulte at kth.se] 
Sent: Montag, 13. M?rz 2017 13:08
To: Drescher, Conrad <conrad.drescher at sap.com>; users at gecode.org
Subject: RE: [gecode-users] Question on IntVar-equalities with and without
MiniModel

 

Hi Conrad,

 

I just had a look at the code and the second option seems to be quite easy
to do. The candidates for domain consistent propagation would be:

-          x = y, x = -y

-          x + y = c, x ? y = c (provided that x, y, c do not exceed some
limit)

 

However, getting also the reified variants domain consistent would require
some (not much) work. Would that be needed as well?

 

Cheers

Christian

 

--

Christian Schulte, www.gecode.org/~schulte

Professor of Computer Science, KTH,  <mailto:cschulte at kth.se>
cschulte at kth.se

Expert Researcher, RISE SICS,  <mailto:christian.schulte at ri.se>
christian.schulte at ri.se

 

From: Drescher, Conrad [mailto:conrad.drescher at sap.com] 
Sent: Monday, March 13, 2017 10:22
To: users at gecode.org
Cc: cschulte at kth.se
Subject: RE: [gecode-users] Question on IntVar-equalities with and without
MiniModel

 

Hi Christian,

 

I had not even thought of the first option
 the second option should be
easily sufficient for our purposes. If it were possible to make that special
case of ?x == y? behave like ?x IRT_EQ y? that would really benefit our use
case. We have no interest in using DOM for the general case of ?IntExpr1 ==
IntExpr2?.

 

Many thanks for considering the idea, and the great software in general!

Conrad

 

Dr. Conrad Drescher

Senior Developer | Variant Configuration
P&I S/4HANA Idea ? LoB Research & Development

SAP SE | Dietmar-Hopp-Allee 16 | 69190 Walldorf | Germany

T +49 6227 7-77888 | M +49 160 90684883 | E conrad.drescher at sap.com
 <http://www.sap.com/> www.sap.com


Please consider the impact on the environment before printing this e-mail.


Pflichtangaben/Mandatory Disclosure Statements: 
 <http://www.sap.com/company/legal/impressum.epx>
http://www.sap.com/company/legal/impressum.epx

Diese E-Mail kann Betriebs- oder Gesch?ftsgeheimnisse oder sonstige
vertrauliche Informationen enthalten. Sollten Sie diese E-Mail irrt?mlich
erhalten haben, ist Ihnen eine Kenntnisnahme des Inhalts, eine
Vervielf?ltigung oder Weitergabe der E-Mail ausdr?cklich untersagt. Bitte
benachrichtigen Sie uns und vernichten Sie die empfangene E-Mail. Vielen
Dank. 

This e-mail may contain trade secrets or privileged, undisclosed, or
otherwise confidential information. If you have received this e-mail in
error, you are hereby notified that any review, copying, or distribution of
it is strictly prohibited. Please inform us immediately and destroy the
original transmittal. Thank you for your cooperation.

 

 

 

From: Christian Schulte [mailto:cschulte at kth.se] 
Sent: Montag, 13. M?rz 2017 09:41
To: Drescher, Conrad <conrad.drescher at sap.com>; users at gecode.org
Subject: RE: [gecode-users] Question on IntVar-equalities with and without
MiniModel

 

Hmmm, not that straightforward. There are two ideas here:

-          One idea would be that there is an additional IPL (integer
propagation level) called something like IPL_CHEAP_DOM which does domain
propagation only if it is cheap.

-          The other idea would be that linear interprets the default IPL
ILP_DEF differently: normally it uses IPL_BND but for special cases it uses
IPL_DOM.

 

The second might be easier to pull off


 

Cheers

Christian

 

--

Christian Schulte,  <http://www.gecode.org/~schulte> www.gecode.org/~schulte

Professor of Computer Science, KTH,  <mailto:cschulte at kth.se>
cschulte at kth.se

Expert Researcher, RISE ICT/SICS,  <mailto:cschulte at sics.se>
cschulte at sics.se

 

From:  <mailto:users-bounces at gecode.org> users-bounces at gecode.org [
<mailto:users-bounces at gecode.org> mailto:users-bounces at gecode.org] On Behalf
Of Drescher, Conrad
Sent: Friday, March 10, 2017 09:47
To:  <mailto:users at gecode.org> users at gecode.org
Subject: [gecode-users] Question on IntVar-equalities with and without
MiniModel

 

Hi there,

 

I have a question on the ?equal? constraint between two IntVars, let?s say
x0 with domain [1,3,5], and x1 with domain
[Int::Limits::min..Int::Limits::max].

 

If I write rel(home,x0,IRT_EQ,x1); x1 gets restricted to [1,3,5] as IRT_EQs
default propagation level is IPL_DOM. But if I write rel(home,x0 == x1);
using MiniModel x1 gets restricted to [1 ? 5].

 

Apparently equalities between linear integer expressions get summarized into
a ?linear? constraint in MiniModel, which of course is nice. This linear
constraint in turn seems to have a lot of special cases covered (which I
haven?t fully grasped yet). But I wonder whether it?d be possible to get the
case of there being just two variables back up to IPL_DOM instead of
IPL_BND? Of course, I understand you wouldn?t want to have IPL_DOM for
linear in general


 

Many thanks!

Conrad

 

Dr. Conrad Drescher

Senior Developer | Variant Configuration
P&I S/4HANA Idea ? LoB Research & Development

SAP SE | Dietmar-Hopp-Allee 16 | 69190 Walldorf | Germany

T +49 6227 7-77888 | M +49 160 90684883 | E
<mailto:conrad.drescher at sap.com> conrad.drescher at sap.com
 <http://www.sap.com/> www.sap.com


Please consider the impact on the environment before printing this e-mail.


Pflichtangaben/Mandatory Disclosure Statements: 
 <http://www.sap.com/company/legal/impressum.epx>
http://www.sap.com/company/legal/impressum.epx

Diese E-Mail kann Betriebs- oder Gesch?ftsgeheimnisse oder sonstige
vertrauliche Informationen enthalten. Sollten Sie diese E-Mail irrt?mlich
erhalten haben, ist Ihnen eine Kenntnisnahme des Inhalts, eine
Vervielf?ltigung oder Weitergabe der E-Mail ausdr?cklich untersagt. Bitte
benachrichtigen Sie uns und vernichten Sie die empfangene E-Mail. Vielen
Dank. 

This e-mail may contain trade secrets or privileged, undisclosed, or
otherwise confidential information. If you have received this e-mail in
error, you are hereby notified that any review, copying, or distribution of
it is strictly prohibited. Please inform us immediately and destroy the
original transmittal. Thank you for your cooperation.

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://www.gecode.org/pipermail/users/attachments/20170314/ba682e3a/attachment-0001.html>

From saschaschnug at web.de  Tue Mar 28 02:14:29 2017
From: saschaschnug at web.de (Sascha Schnug)
Date: Tue, 28 Mar 2017 02:14:29 +0200
Subject: [gecode-users] Problem with linear constraint over integers using
 minimodel ("undef ref")
Message-ID: <trinity-517eeaa6-1975-43de-9734-4d61c57c0e43-1490660069867@3capp-webde-bap61>

Hi,

i'm a new user of Gecode and i have some trouble.

I'm using Gecode 5.0, compiled with the defaults plus gmp & mpfr (although i don't think it's
needed for my case) under Windows using Cygwin (gcc/g++: 5.4). (If i recall correctly;
i needed to manually modify the 3rd-party code where the rounding-mode is selected).

While i made good progress at first (despite the fact that i'm rediscovering C++), the following
part of my code is not working:

        Excerpt:
        --------

        #include <gecode/int.hh>
        #include <gecode/search.hh>
        #include <gecode/minimodel.hh>
        #include <gecode/float.hh>      // for later use

        using Gecode;

        protected:

        IntVarArray q_start;
        IntVarArray q_end;
        IntVarArray q_length;

        public:

        IntVarArgs q_start_;
        IntVarArgs q_end_;
        IntVarArgs q_length_;

        ..........

        for(int i=0; i<n_q; i++)
        {
            q_start_ << IntVar(*this, 0, 95);
            q_end_ << IntVar(*this, 0, 95);
            q_length_ << IntVar(*this, 0, 95);
        }

        q_start = IntVarArray(*this, q_start_);
        q_end = IntVarArray(*this, q_end_);
        q_length = IntVarArray(*this, q_length_);

        ..........

        for(int q=0; q<n_q; ++q)
        {
            // get length of window / THIS SEEMS TO BE THE PROBLEM!
            rel(*this, 1*q_length[q] == 1*q_end[q] - 1*q_start[q]);  // minimodel-like
        }

I think this follows the examples in the guide as well as other resources.

My Makefile looks like this (following https://gist.github.com/fepa/2187179; also uses the order mentioned in guide):

        # Configure this makefile if needed then run
        # $ make all
        # to compile and link

        # What files to compile
        OBJS=problem.cpp solver.cpp
        # What file to compile to
        MAINFILE=solver
        # What compiler to use
        CC=g++
        # Where is your gecode library?
        # (Gecode's default 'make install' behavior installs gecode libraries and headers under /usr/local)
        GECODEDIR=/usr/local

        # 'make all' does both compiling and link (i.e 'make compile link')
        all: compile link

        # 'make compile' compiles files
        compile: $(OBJS)
        		 $(CC) -I$(GECODEDIR)/include -c $(OBJS)

        # 'make link' links compiled files
        link: $(OBJS)
        	  $(CC) -o $(MAINFILE) -L$(GECODEDIR)/lib  $(MAINFILE).o \
                -lgecodeflatzinc -lgecodedriver \
                -lgecodesearch -lgecodeminimodel -lgecodeset \
        		-lgecodefloat \
                -lgecodeint -lgecodekernel -lgecodesupport

        # 'make clean' cleans up generated files from make commands
        clean:
        	rm -rf *o $(MAINFILE)

Now this is the ugly output i receive:

        $ make
        g++ -I/usr/local/include -c solver_v4.cpp -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC
        g++ -o solver_v4 -L/usr/local/lib  solver_v4.o \
                -lgecodeflatzinc -lgecodedriver -lgecodefloat \
                -lgecodesearch -lgecodeminimodel -lgecodeset \
                -lgecodeint -lgecodekernel -lgecodesupport
        /usr/local/lib/libgecodeminimodel.a(float-expr.o): In function `Gecode::LinFloatExpr::post(Gecode::Home) const':
        /cygdrive/x/gecode-5.0.0/gecode-5.0.0/gecode/minimodel/float-expr.cpp:220: undefined reference to `Gecode::Float::Linear::estimate(Gecode::Float::Linear::Term*, int, Gecode::FloatVal, double&, double&)'
        /cygdrive/x/gecode-5.0.0/gecode-5.0.0/gecode/minimodel/float-expr.cpp:220:(.text+0x3df3): relocation truncated to fit: R_X86_64_PC32 against undefined symbol `Gecode::Float::Linear::estimate(Gecode::Float::Linear::Term*, int, Gecode::FloatVal, double&, double&)'
        /cygdrive/x/gecode-5.0.0/gecode-5.0.0/gecode/minimodel/float-expr.cpp:223: undefined reference to `Gecode::Float::Linear::post(Gecode::Home, Gecode::Float::Linear::Term*, int, Gecode::FloatRelType, Gecode::FloatVal)'
        /cygdrive/x/gecode-5.0.0/gecode-5.0.0/gecode/minimodel/float-expr.cpp:223:(.text+0x4029): relocation truncated to fit: R_X86_64_PC32 against undefined symbol `Gecode::Float::Linear::post(Gecode::Home, Gecode::Float::Linear::Term*, int, Gecode::FloatRelType, Gecode::FloatVal)'
        /usr/local/lib/libgecodeminimodel.a(float-expr.o): In function `Gecode::LinFloatExpr::post(Gecode::Home, Gecode::FloatRelType, Gecode::BoolVar const&) const':
        /cygdrive/x/gecode-5.0.0/gecode-5.0.0/gecode/minimodel/float-expr.cpp:205: undefined reference to `Gecode::Float::Linear::post(Gecode::Home, Gecode::Float::Linear::Term*, int, Gecode::FloatRelType, Gecode::FloatVal, Gecode::Reify)'
        /cygdrive/x/gecode-5.0.0/gecode-5.0.0/gecode/minimodel/float-expr.cpp:205:(.text+0x4277): relocation truncated to fit: R_X86_64_PC32 against undefined symbol `Gecode::Float::Linear::post(Gecode::Home, Gecode::Float::Linear::Term*, int, Gecode::FloatRelType, Gecode::FloatVal, Gecode::Reify)'
        /usr/local/lib/libgecodeminimodel.a(float-expr.o): In function `Gecode::LinFloatExpr::post(Gecode::Home, Gecode::FloatRelType) const':
        /cygdrive/x/gecode-5.0.0/gecode-5.0.0/gecode/minimodel/float-expr.cpp:182: undefined reference to `Gecode::Float::Linear::post(Gecode::Home, Gecode::Float::Linear::Term*, int, Gecode::FloatRelType, Gecode::FloatVal)'
        /cygdrive/x/gecode-5.0.0/gecode-5.0.0/gecode/minimodel/float-expr.cpp:182:(.text+0x468d): relocation truncated to fit: R_X86_64_PC32 against undefined symbol `Gecode::Float::Linear::post(Gecode::Home, Gecode::Float::Linear::Term*, int, Gecode::FloatRelType, Gecode::FloatVal)'
        collect2: error: ld returned 1 exit status
        make: *** [Makefile:24: link] Error 1

I'm kinda lost right now as i have no idea what the problem is. I did not check Gecode's sources yet.
My makefile uses some of GCC's STL-debugging tools, but they are not the reason for this.

Another remark:
    In my previous compilation (without gmp + mpfr; added now) i build all the examples too.
        -> all examples using float & minimodel are behaving strange:
            => they all seem to run without errors, but do not produce any output (clean shell)

    I did not research the Script-like usage of gecode a lot, but i expect those examples should
    produce output too like all the others.

Thanks for taking the time to read this! I hope i did not forget to mention relevant information.

-
Sascha-Dominic Schnug


From saschaschnug at web.de  Tue Mar 28 05:08:27 2017
From: saschaschnug at web.de (Sascha Schnug)
Date: Tue, 28 Mar 2017 05:08:27 +0200
Subject: [gecode-users] Problem with linear constraint over integers
 using minimodel ("undef ref")
In-Reply-To: <trinity-517eeaa6-1975-43de-9734-4d61c57c0e43-1490660069867@3capp-webde-bap61>
References: <trinity-517eeaa6-1975-43de-9734-4d61c57c0e43-1490660069867@3capp-webde-bap61>
Message-ID: <trinity-f51facbb-a202-4524-8055-72f057c027d4-1490670507047@3capp-webde-bs07>

First of all: much apologies for the noise!
?
I did solve my problem:
?
While the stuff i presented was right (probably not the most natural CP-usage; but i'm still learning),
i made a mistake when i modified my Makefile (= my own steps deviated from the presentation in this mail).

The problem was indeed the ordering of linking, which is explained at the guide under 2.3.3.
My wrongly used Makefile did link to float before minimodel, which seems to be the problem.
(the original gist i used did not link to float and my first attempt adding -lgecodefloat was ignoring
the ordering-rules mentioned in the guide; maybe a simple schematic Makefile could be added)

The Makefile presented in my question at this mailing-list was correct (-lgecodefloat between -lgecodeset
and -lgecodeint) and compiles.

-?
Sascha-Dominic Schnug?
?

Gesendet:?Dienstag, 28. M?rz 2017 um 02:14 Uhr
Von:?"Sascha Schnug" <saschaschnug at web.de>
An:?users at gecode.org
Betreff:?[gecode-users] Problem with linear constraint over integers using minimodel ("undef ref")
Hi,

i'm a new user of Gecode and i have some trouble.

I'm using Gecode 5.0, compiled with the defaults plus gmp & mpfr (although i don't think it's
needed for my case) under Windows using Cygwin (gcc/g++: 5.4). (If i recall correctly;
i needed to manually modify the 3rd-party code where the rounding-mode is selected).

While i made good progress at first (despite the fact that i'm rediscovering C++), the following
part of my code is not working:

Excerpt:
--------

#include <gecode/int.hh>
#include <gecode/search.hh>
#include <gecode/minimodel.hh>
#include <gecode/float.hh> // for later use

using Gecode;

protected:

IntVarArray q_start;
IntVarArray q_end;
IntVarArray q_length;

public:

IntVarArgs q_start_;
IntVarArgs q_end_;
IntVarArgs q_length_;

..........

for(int i=0; i<n_q; i++)
{
q_start_ << IntVar(*this, 0, 95);
q_end_ << IntVar(*this, 0, 95);
q_length_ << IntVar(*this, 0, 95);
}

q_start = IntVarArray(*this, q_start_);
q_end = IntVarArray(*this, q_end_);
q_length = IntVarArray(*this, q_length_);

..........

for(int q=0; q<n_q; ++q)
{
// get length of window / THIS SEEMS TO BE THE PROBLEM!
rel(*this, 1*q_length[q] == 1*q_end[q] - 1*q_start[q]); // minimodel-like
}

I think this follows the examples in the guide as well as other resources.

My Makefile looks like this (following https://gist.github.com/fepa/2187179; also uses the order mentioned in guide):

# Configure this makefile if needed then run
# $ make all
# to compile and link

# What files to compile
OBJS=problem.cpp solver.cpp
# What file to compile to
MAINFILE=solver
# What compiler to use
CC=g++
# Where is your gecode library?
# (Gecode's default 'make install' behavior installs gecode libraries and headers under /usr/local)
GECODEDIR=/usr/local

# 'make all' does both compiling and link (i.e 'make compile link')
all: compile link

# 'make compile' compiles files
compile: $(OBJS)
$(CC) -I$(GECODEDIR)/include -c $(OBJS)

# 'make link' links compiled files
link: $(OBJS)
$(CC) -o $(MAINFILE) -L$(GECODEDIR)/lib $(MAINFILE).o \
-lgecodeflatzinc -lgecodedriver \
-lgecodesearch -lgecodeminimodel -lgecodeset \
-lgecodefloat \
-lgecodeint -lgecodekernel -lgecodesupport

# 'make clean' cleans up generated files from make commands
clean:
rm -rf *o $(MAINFILE)

Now this is the ugly output i receive:

$ make
g++ -I/usr/local/include -c solver_v4.cpp -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC
g++ -o solver_v4 -L/usr/local/lib solver_v4.o \
-lgecodeflatzinc -lgecodedriver -lgecodefloat \
-lgecodesearch -lgecodeminimodel -lgecodeset \
-lgecodeint -lgecodekernel -lgecodesupport
/usr/local/lib/libgecodeminimodel.a(float-expr.o): In function `Gecode::LinFloatExpr::post(Gecode::Home) const':
/cygdrive/x/gecode-5.0.0/gecode-5.0.0/gecode/minimodel/float-expr.cpp:220: undefined reference to `Gecode::Float::Linear::estimate(Gecode::Float::Linear::Term*, int, Gecode::FloatVal, double&, double&)'
/cygdrive/x/gecode-5.0.0/gecode-5.0.0/gecode/minimodel/float-expr.cpp:220:(.text+0x3df3): relocation truncated to fit: R_X86_64_PC32 against undefined symbol `Gecode::Float::Linear::estimate(Gecode::Float::Linear::Term*, int, Gecode::FloatVal, double&, double&)'
/cygdrive/x/gecode-5.0.0/gecode-5.0.0/gecode/minimodel/float-expr.cpp:223: undefined reference to `Gecode::Float::Linear::post(Gecode::Home, Gecode::Float::Linear::Term*, int, Gecode::FloatRelType, Gecode::FloatVal)'
/cygdrive/x/gecode-5.0.0/gecode-5.0.0/gecode/minimodel/float-expr.cpp:223:(.text+0x4029): relocation truncated to fit: R_X86_64_PC32 against undefined symbol `Gecode::Float::Linear::post(Gecode::Home, Gecode::Float::Linear::Term*, int, Gecode::FloatRelType, Gecode::FloatVal)'
/usr/local/lib/libgecodeminimodel.a(float-expr.o): In function `Gecode::LinFloatExpr::post(Gecode::Home, Gecode::FloatRelType, Gecode::BoolVar const&) const':
/cygdrive/x/gecode-5.0.0/gecode-5.0.0/gecode/minimodel/float-expr.cpp:205: undefined reference to `Gecode::Float::Linear::post(Gecode::Home, Gecode::Float::Linear::Term*, int, Gecode::FloatRelType, Gecode::FloatVal, Gecode::Reify)'
/cygdrive/x/gecode-5.0.0/gecode-5.0.0/gecode/minimodel/float-expr.cpp:205:(.text+0x4277): relocation truncated to fit: R_X86_64_PC32 against undefined symbol `Gecode::Float::Linear::post(Gecode::Home, Gecode::Float::Linear::Term*, int, Gecode::FloatRelType, Gecode::FloatVal, Gecode::Reify)'
/usr/local/lib/libgecodeminimodel.a(float-expr.o): In function `Gecode::LinFloatExpr::post(Gecode::Home, Gecode::FloatRelType) const':
/cygdrive/x/gecode-5.0.0/gecode-5.0.0/gecode/minimodel/float-expr.cpp:182: undefined reference to `Gecode::Float::Linear::post(Gecode::Home, Gecode::Float::Linear::Term*, int, Gecode::FloatRelType, Gecode::FloatVal)'
/cygdrive/x/gecode-5.0.0/gecode-5.0.0/gecode/minimodel/float-expr.cpp:182:(.text+0x468d): relocation truncated to fit: R_X86_64_PC32 against undefined symbol `Gecode::Float::Linear::post(Gecode::Home, Gecode::Float::Linear::Term*, int, Gecode::FloatRelType, Gecode::FloatVal)'
collect2: error: ld returned 1 exit status
make: *** [Makefile:24: link] Error 1

I'm kinda lost right now as i have no idea what the problem is. I did not check Gecode's sources yet.
My makefile uses some of GCC's STL-debugging tools, but they are not the reason for this.

Another remark:
In my previous compilation (without gmp + mpfr; added now) i build all the examples too.
-> all examples using float & minimodel are behaving strange:
=> they all seem to run without errors, but do not produce any output (clean shell)

I did not research the Script-like usage of gecode a lot, but i expect those examples should
produce output too like all the others.

Thanks for taking the time to read this! I hope i did not forget to mention relevant information.

-
Sascha-Dominic Schnug

_______________________________________________
Gecode users mailing list
users at gecode.org
https://www.gecode.org/mailman/listinfo/gecode-users[https://www.gecode.org/mailman/listinfo/gecode-users]


