<tt>
&lt;div&gt;Hi&nbsp;again,&lt;/div&gt;<br>
&lt;div&gt;&amp;nbsp;&lt;/div&gt;<br>
&lt;div&gt;I&nbsp;have&nbsp;used&nbsp;the&nbsp;status&nbsp;function&nbsp;to&nbsp;perform&nbsp;constraint&nbsp;propagation.&nbsp;After&nbsp;the&nbsp;propagation&nbsp;I&nbsp;retrieve&nbsp;the&nbsp;values&nbsp;of&nbsp;the&nbsp;space&nbsp;to&nbsp;see&nbsp;if&nbsp;they&nbsp;are&nbsp;consistent.&nbsp;This&nbsp;works&nbsp;fine&amp;nbsp;with&nbsp;many&amp;nbsp;constraints&nbsp;(mostly&nbsp;simple&nbsp;cases)&amp;nbsp;however&nbsp;there&amp;nbsp;are&nbsp;other&amp;nbsp;cases&nbsp;where&nbsp;the&nbsp;space&nbsp;is&nbsp;not&nbsp;reduced&nbsp;to&nbsp;the&nbsp;consistent&nbsp;values&nbsp;only.&nbsp;I&nbsp;am&nbsp;working&nbsp;on&nbsp;large&nbsp;scale&nbsp;disjunctions&nbsp;of&nbsp;conjunctions&nbsp;and&nbsp;I&nbsp;am&nbsp;interested&nbsp;in&nbsp;getting&nbsp;only&nbsp;the&nbsp;consistent&nbsp;values&nbsp;after&nbsp;the&nbsp;propagation.&nbsp;A&nbsp;very&nbsp;simplified&nbsp;example&nbsp;is&nbsp;the&nbsp;following:<br>
&lt;/div&gt;<br>
&lt;div&gt;Three&nbsp;variables&nbsp;x1=[0..3],&nbsp;x2=[0..5],&nbsp;x3=[0..10]&nbsp;and&nbsp;a&nbsp;single&nbsp;constraint&lt;/div&gt;<br>
&lt;div&gt;&amp;nbsp;&lt;/div&gt;<br>
&lt;div&gt;(x1==0)&nbsp;&amp;amp;&amp;amp;&nbsp;(x2==3)&nbsp;&amp;amp;&amp;amp;&nbsp;(x3==7)&amp;nbsp;&nbsp;||&nbsp;&lt;/div&gt;<br>
&lt;div&gt;(x1==0)&nbsp;&amp;amp;&amp;amp;&nbsp;(x2==5)&nbsp;&amp;amp;&amp;amp;&nbsp;(x3==9)&lt;br&gt;&amp;nbsp;&lt;/div&gt;<br>
&lt;div&gt;The&nbsp;constraint&nbsp;represents&nbsp;allowed&nbsp;values,&nbsp;so&nbsp;the&nbsp;above&nbsp;is&nbsp;read&nbsp;as:&lt;/div&gt;<br>
&lt;div&gt;x1&nbsp;should&nbsp;be&nbsp;0&nbsp;and&nbsp;x2&nbsp;should&nbsp;be&nbsp;3&nbsp;and&nbsp;x3&nbsp;should&nbsp;be&nbsp;7&nbsp;or&nbsp;x1&nbsp;should&nbsp;be&nbsp;0&nbsp;and&nbsp;x2&nbsp;should&nbsp;be&nbsp;5&nbsp;and&nbsp;x3&nbsp;should&nbsp;be&nbsp;9.&lt;/div&gt;<br>
&lt;div&gt;&amp;nbsp;&lt;/div&gt;<br>
&lt;div&gt;I&nbsp;would&nbsp;like&nbsp;to&nbsp;get&nbsp;the&nbsp;consistent&nbsp;values&nbsp;of&nbsp;the&nbsp;space&nbsp;after&nbsp;propagation,&nbsp;which&nbsp;are&nbsp;for&nbsp;the&nbsp;first&nbsp;variable,&nbsp;the&nbsp;value&nbsp;0,&nbsp;for&nbsp;the&nbsp;second&nbsp;variable&nbsp;the&nbsp;values&nbsp;3&nbsp;and&nbsp;5&nbsp;and&nbsp;for&nbsp;the&nbsp;third&nbsp;variable&nbsp;the&nbsp;values&nbsp;7&nbsp;and&nbsp;9.&nbsp;The&nbsp;value&nbsp;1&nbsp;for&nbsp;example&nbsp;belongs&nbsp;to&nbsp;the&nbsp;space&nbsp;of&nbsp;the&nbsp;first&nbsp;variable&nbsp;but&nbsp;it's&nbsp;inconsistent&nbsp;because&nbsp;it&nbsp;doesn't&nbsp;satisfy&nbsp;the&nbsp;constraint.<br>
&lt;/div&gt;<br>
&lt;div&gt;&amp;nbsp;&lt;/div&gt;<br>
&lt;div&gt;I&nbsp;have&nbsp;written&nbsp;the&nbsp;following&nbsp;code&nbsp;for&nbsp;the&nbsp;above&nbsp;problem&nbsp;(q&nbsp;is&nbsp;an&nbsp;IntVarArray&nbsp;of&nbsp;size&nbsp;3):&lt;/div&gt;<br>
&lt;div&gt;<br>
&lt;div&gt;<br>
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;IntVar&nbsp;x1(this,0,3);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;IntVar&nbsp;x2(this,0,5);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;IntVar&nbsp;x3(this,0,10);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;q[0]=x1;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;q[1]=x2;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;q[2]=x3;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;int&nbsp;values1[3]={0,3,7};&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;int&nbsp;values2[3]={0,5,9};&lt;/p&gt;<br>
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;BoolVarArgs&nbsp;firstConjunction(3);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;//stores&nbsp;the&nbsp;BoolVar&nbsp;representing&nbsp;each&nbsp;of&nbsp;the&nbsp;first&nbsp;3&nbsp;equalities&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;BoolVarArgs&nbsp;secondConjunction(3);//stores&nbsp;the&nbsp;BoolVar&nbsp;representing&nbsp;each&nbsp;of&nbsp;the&nbsp;last&nbsp;3&nbsp;equalities&amp;nbsp;&lt;/p&gt;<br>
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;for(int&nbsp;i=0;i&amp;lt;3;i++)&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//wraps&amp;nbsp;each&amp;nbsp;equality&nbsp;of&nbsp;the&nbsp;first&nbsp;conjunction&amp;nbsp;in&nbsp;a&nbsp;single&amp;nbsp;BoolVar&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;BoolVar&nbsp;temporar(this,0,1);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;rel(this,q[i],IRT_EQ,values1[i],temporar);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;firstConjunction[i]=temporar;<br>
&lt;/p&gt;<br>
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;//wraps&nbsp;each&nbsp;equality&nbsp;of&nbsp;the&nbsp;second&nbsp;conjunction&nbsp;in&nbsp;a&nbsp;single&nbsp;BoolVar&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;BoolVar&nbsp;temporar2(this,0,1);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;rel(this,q[i],IRT_EQ,values2[i],temporar2);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;secondConjunction[i]=temporar2;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;BoolVar&nbsp;result1(this,0,1);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;BoolVar&nbsp;result2(this,0,1);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;BoolVar&nbsp;disjunction(this,0,1);&lt;/p&gt;<br>
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;bool_and(this,firstConjunction,result1);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;bool_and(this,secondConjunction,result2);&lt;/p&gt;<br>
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;bool_or(this,result1,result2,disjunction);&lt;/p&gt;<br>
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;post(this,disjunction==1);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&lt;/p&gt;<br>
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;//performing&nbsp;propagation&nbsp;and&nbsp;getting&nbsp;the&amp;nbsp;status&nbsp;report&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;unsigned&nbsp;int&nbsp;alt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;(void)&nbsp;status(alt);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;IntVarValues&nbsp;ranger(q[0]);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;while(ranger())&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;cout&amp;lt;&amp;lt;&amp;quot;The&nbsp;value&nbsp;is&nbsp;&amp;quot;&amp;lt;&amp;lt;<br>
ranger.val()&amp;lt;&amp;lt;endl;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;++ranger;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;}&lt;/p&gt;<br>
&lt;p&gt;&lt;br&gt;The&nbsp;status&nbsp;report&amp;nbsp;says&nbsp;that&nbsp;the&nbsp;problem&nbsp;is&nbsp;solved&nbsp;and&nbsp;gives&nbsp;me&nbsp;the&nbsp;solution&nbsp;0,3,7&nbsp;but&nbsp;the&amp;nbsp;retrival&nbsp;of&nbsp;the&nbsp;values&nbsp;of&nbsp;the&nbsp;space&amp;nbsp;for&nbsp;the&nbsp;first&nbsp;variable&nbsp;still&amp;nbsp;contains&amp;nbsp;the&nbsp;incosistent&amp;nbsp;values&amp;nbsp;1,2,3.&amp;nbsp;If&nbsp;I&nbsp;didn't&nbsp;have&nbsp;the&nbsp;disjunction&nbsp;and&nbsp;I&nbsp;had&nbsp;only&nbsp;the&nbsp;constraint:&nbsp;<br>
&lt;br&gt;(x1==0)&nbsp;&amp;amp;&amp;amp;&nbsp;(x2==3)&nbsp;&amp;amp;&amp;amp;&nbsp;(x3==7)&lt;br&gt;the&nbsp;space&nbsp;would&nbsp;be&nbsp;successfully&nbsp;reduced&nbsp;to&nbsp;the&nbsp;consistent&nbsp;value&nbsp;0&amp;nbsp;only.&nbsp;&lt;/p&gt;<br>
&lt;p&gt;&lt;br&gt;I&nbsp;am&nbsp;assuming&nbsp;that&nbsp;Gecode&nbsp;depending&nbsp;on&nbsp;the&nbsp;nature&nbsp;of&nbsp;the&nbsp;constraint&nbsp;sometimes&nbsp;reduces&nbsp;the&nbsp;space&nbsp;by&nbsp;removing&nbsp;inconsistent&nbsp;values,&nbsp;and&nbsp;other&nbsp;times&nbsp;it&nbsp;doesn't.&nbsp;If&nbsp;that's&nbsp;the&nbsp;case&nbsp;I&nbsp;am&nbsp;wondering&nbsp;if&nbsp;there&nbsp;is&nbsp;a&nbsp;way&nbsp;to&nbsp;reduce&nbsp;the&nbsp;space&nbsp;without&nbsp;me&nbsp;manually&nbsp;assigning&amp;nbsp;a&nbsp;value&amp;nbsp;to&nbsp;each&nbsp;variable,&nbsp;then&amp;nbsp;performing&nbsp;propagation,&nbsp;getting&nbsp;the&nbsp;report&nbsp;and&nbsp;removing&nbsp;that&nbsp;value&nbsp;from&nbsp;the&nbsp;space&nbsp;of&nbsp;the&nbsp;variable&amp;nbsp;if&nbsp;the&nbsp;propagation&nbsp;has&nbsp;failed.<br>
&lt;/p&gt;&lt;/div&gt;<br>
&lt;p&gt;Best,&nbsp;&lt;/p&gt;<br>
&lt;p&gt;Stratos&lt;br&gt;&lt;/p&gt;&lt;/div&gt;<br>
&lt;div&gt;&amp;nbsp;&lt;/div&gt;<br>
&lt;div&gt;&lt;span&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;3/28/06,&nbsp;&lt;b&nbsp;class=&quot;gmail_sendername&quot;&gt;Christian&nbsp;Schulte&lt;/b&gt;&nbsp;&amp;lt;&lt;a&nbsp;href=&quot;mailto:schulte@imit.kth.se&quot;&gt;schulte@imit.kth.se&lt;/a&gt;&amp;gt;&nbsp;wrote:&lt;/span&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;PADDING-LEFT:&nbsp;1ex;&nbsp;MARGIN:&nbsp;0px&nbsp;0px&nbsp;0px&nbsp;0.8ex;&nbsp;BORDER-LEFT:&nbsp;#ccc&nbsp;1px&nbsp;solid&quot;&gt;Hi,&lt;br&gt;&lt;br&gt;propagation&nbsp;in&nbsp;Gecode&nbsp;is&nbsp;not&nbsp;automatic&nbsp;(some&nbsp;simple&nbsp;cases&nbsp;are&nbsp;done&lt;br&gt;immediately&nbsp;as&nbsp;you&nbsp;report,&nbsp;others&nbsp;are&nbsp;not).&nbsp;This&nbsp;is&nbsp;not&nbsp;a&nbsp;bug&nbsp;but&nbsp;an<br>
&lt;br&gt;essential&nbsp;feature&nbsp;(this&nbsp;is&nbsp;what&nbsp;enables&nbsp;batch&nbsp;recomputation).&nbsp;In&nbsp;order&nbsp;to&lt;br&gt;actually&nbsp;perform&nbsp;constraint&nbsp;propagation&nbsp;one&nbsp;has&nbsp;to&nbsp;invoke&nbsp;the&lt;br&gt;status(unsigned&nbsp;int&amp;amp;)&nbsp;member&nbsp;function&nbsp;of&nbsp;a&nbsp;space.&nbsp;Not&nbsp;only&nbsp;will&nbsp;that&nbsp;perform<br>
&lt;br&gt;constraint&nbsp;propagation&nbsp;but&nbsp;it&nbsp;also&nbsp;reports&nbsp;about&nbsp;the&nbsp;status&nbsp;of&nbsp;a&nbsp;space:&nbsp;is&lt;br&gt;it&nbsp;failed,&nbsp;solved,&nbsp;does&nbsp;it&nbsp;require&nbsp;branching.&nbsp;So&nbsp;in&nbsp;your&nbsp;case&nbsp;just&nbsp;add&lt;br&gt;something&nbsp;along&nbsp;the&nbsp;lines:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;unsigned&nbsp;int&nbsp;alt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;(void)&nbsp;status(alt);&nbsp;//&nbsp;Discard&nbsp;status&nbsp;result<br>
&lt;br&gt;&lt;br&gt;After&nbsp;that&nbsp;you&nbsp;will&nbsp;be&nbsp;able&nbsp;to&nbsp;observe&nbsp;the&nbsp;result&nbsp;of&nbsp;constraint&nbsp;propagation.&lt;br&gt;&lt;br&gt;Christian&lt;br&gt;&lt;br&gt;&lt;br&gt;--&lt;br&gt;Christian&nbsp;Schulte,&nbsp;&lt;a&nbsp;href=&quot;http://web.imit.kth.se/~schulte/&quot;&gt;http://web.imit.kth.se/~schulte/&lt;/a&gt;&lt;br&gt;<br>
&lt;br&gt;&lt;br&gt;&lt;br&gt;-----Original&nbsp;Message-----&lt;br&gt;From:&nbsp;&lt;a&nbsp;href=&quot;mailto:users-bounces@gecode.org&quot;&gt;users-bounces@gecode.org&lt;/a&gt;&nbsp;[mailto:&lt;a&nbsp;href=&quot;mailto:users-bounces@gecode.org&quot;&gt;users-bounces@gecode.org&lt;/a&gt;]&nbsp;On&nbsp;Behalf&lt;br&gt;Of&nbsp;Efstratios&nbsp;Kalogirou<br>
&lt;br&gt;Sent:&nbsp;Tuesday,&nbsp;March&nbsp;28,&nbsp;2006&nbsp;5:35&nbsp;PM&lt;br&gt;To:&nbsp;&lt;a&nbsp;href=&quot;mailto:users@gecode.org&quot;&gt;users@gecode.org&lt;/a&gt;&lt;br&gt;Subject:&nbsp;[gecode-users]&nbsp;Getting&nbsp;domain&nbsp;values&nbsp;after&nbsp;posting&lt;br&gt;&lt;br&gt;&lt;br&gt;Hi&nbsp;all,&lt;br&gt;&lt;br&gt;I&nbsp;am&nbsp;trying&nbsp;to&nbsp;get&nbsp;the&nbsp;remaining&nbsp;(valid)&nbsp;values&nbsp;and&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;domain<br>
&lt;br&gt;of&nbsp;a&nbsp;variable&nbsp;after&nbsp;posting&nbsp;some&nbsp;constraints&nbsp;(assuming&nbsp;that&nbsp;due&nbsp;to&nbsp;the&lt;br&gt;constraints&nbsp;some&nbsp;values&nbsp;inside&nbsp;the&nbsp;domain&nbsp;are&nbsp;no&nbsp;longer&nbsp;valid).&nbsp;It&nbsp;seems&lt;br&gt;that&nbsp;everything&nbsp;is&nbsp;fine&nbsp;when&nbsp;I&nbsp;don't&nbsp;use&nbsp;any&nbsp;BoolVar&nbsp;to&nbsp;wrap&nbsp;the&nbsp;contraint.<br>
&lt;br&gt;For&nbsp;example:&lt;br&gt;&lt;br&gt;IntVarArray&nbsp;q(this,1,0,10);&lt;br&gt;post(this,q[0]==3);&lt;br&gt;cout&amp;lt;&amp;lt;&amp;quot;The&nbsp;size&nbsp;of&nbsp;the&nbsp;domain&nbsp;is&nbsp;now&nbsp;&amp;quot;&amp;lt;&amp;lt;q[0].size()&amp;lt;&amp;lt;endl;&lt;br&gt;&lt;br&gt;In&nbsp;the&nbsp;above&nbsp;case&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;domain&nbsp;is&nbsp;indeed&nbsp;1&nbsp;and&nbsp;the&nbsp;solution&nbsp;is<br>
&lt;br&gt;correctly&nbsp;the&nbsp;value&nbsp;3.&lt;br&gt;&lt;br&gt;But&nbsp;things&nbsp;are&nbsp;different&nbsp;when&nbsp;I&nbsp;try&nbsp;to&nbsp;wrap&nbsp;the&nbsp;equality&nbsp;constraint&nbsp;in&nbsp;a&lt;br&gt;BoolVar:&lt;br&gt;&lt;br&gt;IntVarArray&nbsp;q(this,1,0,10);&lt;br&gt;BoolVar&nbsp;wrapper(this,0,1);&lt;br&gt;rel(this,q[0],IRT_EQ,3,wrapper,ICL_BND);<br>
&lt;br&gt;post(this,&nbsp;wrapper==1);&lt;br&gt;cout&amp;lt;&amp;lt;&amp;quot;The&nbsp;size&nbsp;of&nbsp;the&nbsp;domain&nbsp;is&nbsp;now&nbsp;&amp;quot;&amp;lt;&amp;lt;q[0].size()&amp;lt;&amp;lt;endl;&lt;br&gt;&lt;br&gt;In&nbsp;the&nbsp;latter&nbsp;example&nbsp;I&nbsp;get&nbsp;again&nbsp;the&nbsp;corrent&nbsp;solution&nbsp;3&nbsp;but&nbsp;after&nbsp;posting&lt;br&gt;the&nbsp;constraint&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;domain&nbsp;remains&nbsp;11&nbsp;and&nbsp;doesn't&nbsp;shrink&nbsp;to&nbsp;1&nbsp;as<br>
&lt;br&gt;I&nbsp;would&nbsp;expect.&lt;br&gt;&lt;br&gt;Since&nbsp;I&nbsp;am&nbsp;solving&nbsp;problems&nbsp;using&nbsp;the&nbsp;second&nbsp;way&nbsp;I&nbsp;am&nbsp;wondering&nbsp;if&nbsp;there&nbsp;is&lt;br&gt;a&nbsp;way&nbsp;to&nbsp;shrink&nbsp;the&nbsp;domain&nbsp;of&nbsp;the&nbsp;variable&nbsp;after&nbsp;posting&nbsp;as&nbsp;showed&nbsp;in&nbsp;the&lt;br&gt;second&nbsp;example.&nbsp;Also&nbsp;how&nbsp;can&nbsp;I&nbsp;get&nbsp;all&nbsp;the&nbsp;valid&nbsp;values&nbsp;of&nbsp;the&nbsp;domain&nbsp;of&nbsp;a<br>
&lt;br&gt;variable&nbsp;after&nbsp;posting?&nbsp;I&nbsp;assume&nbsp;this&nbsp;can&nbsp;be&nbsp;done&nbsp;by&nbsp;using&nbsp;iterators&nbsp;but&nbsp;I&lt;br&gt;am&nbsp;not&nbsp;certain&nbsp;how&nbsp;exactly&nbsp;to&nbsp;relate&nbsp;the&nbsp;iterator&nbsp;with&nbsp;the&nbsp;IntVar&nbsp;or&nbsp;the&lt;br&gt;IntSet&nbsp;that&nbsp;represents&nbsp;the&nbsp;variable,&nbsp;so&nbsp;any&nbsp;enlightening&nbsp;on&nbsp;that,&nbsp;would&nbsp;be<br>
&lt;br&gt;highly&nbsp;appreciated.&lt;br&gt;&lt;br&gt;Best,&lt;br&gt;Stratos&nbsp;Kalogirou&lt;br&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;<br>

</tt>
