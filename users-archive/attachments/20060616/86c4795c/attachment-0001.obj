#ifndef _SUDOKU_SET_H
#define _SUDOKU_SET_H
#include <iostream>
#include <iomanip>

#include <cstdlib>
#include <cstring>

#include "kernel.hh"
#include "int.hh"
#include "search.hh"
#include "set.hh"
using namespace Gecode;

class SudokuSet : public Space {
protected:
  static const int n = 3;
  SetVarArray x;

public:
  SudokuSet(std::string tira);
  
  SudokuSet(bool share, SudokuSet& s) : Space(share,s) {
	  x.update(this, share, s.x);
  }

  virtual Space*
  copy(bool share) {
	  return new SudokuSet(share,*this);
  }

  static std::string
  solve(SudokuSet* sudoku) {
	std::string respuesta ("000000000000000000000000000000000000000000000000000000000000000000000000000000000");

	//DFS<SudokuSet> e(sudoku,1000,1000);
	delete sudoku;
	SudokuSet* ex;
	if (/*(ex = e.next()) != NULL*/ false)
	{
		//___________________________________________________________________________
		for (int i=0; i<n*n*n*n; i++) {
			for (int j=0; j<n*n; j++) {
				if (ex->x[j].contains(i+1)) {
					respuesta[i] = 49 + j;
					break;
				}
			}
		}
		//___________________________________________________________________________
		delete ex;
	}
	return respuesta;
  }
private:
	explicit SudokuSet(SudokuSet& e);
};
#endif /* _SUDOKU_SET_H */