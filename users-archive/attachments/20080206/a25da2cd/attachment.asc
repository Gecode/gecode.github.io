var int: INT____1::var_is_introduced;

var int: INT____10::var_is_introduced;

var int: INT____11::var_is_introduced;

var int: INT____12::var_is_introduced;

var int: INT____13::var_is_introduced;

var int: INT____14::var_is_introduced;

var int: INT____15::var_is_introduced;

var int: INT____2::var_is_introduced;

var int: INT____3::var_is_introduced;

var int: INT____4::var_is_introduced;

var int: INT____5::var_is_introduced;

var int: INT____6::var_is_introduced;

var int: INT____7::var_is_introduced;

var int: INT____8::var_is_introduced;

var int: INT____9::var_is_introduced;

array[0 .. 14] of var 0 .. 17: differences;

int: gol_length = 17;

array[0 .. 5] of var 0 .. 17: mark;

int: order = 6;

constraint int_eq(differences[0], INT____1);

constraint int_eq(differences[1], INT____2);

constraint int_eq(differences[2], INT____3);

constraint int_eq(differences[3], INT____4);

constraint int_eq(differences[4], INT____5);

constraint int_eq(differences[5], INT____6);

constraint int_eq(differences[6], INT____7);

constraint int_eq(differences[7], INT____8);

constraint int_eq(differences[8], INT____9);

constraint int_eq(differences[9], INT____10);

constraint int_eq(differences[10], INT____11);

constraint int_eq(differences[11], INT____12);

constraint int_eq(differences[12], INT____13);

constraint int_eq(differences[13], INT____14);

constraint int_eq(differences[14], INT____15);

constraint int_ne(differences[13], differences[14]);

constraint int_ne(differences[12], differences[14]);

constraint int_ne(differences[12], differences[13]);

constraint int_ne(differences[11], differences[14]);

constraint int_ne(differences[11], differences[13]);

constraint int_ne(differences[11], differences[12]);

constraint int_ne(differences[10], differences[14]);

constraint int_ne(differences[10], differences[13]);

constraint int_ne(differences[10], differences[12]);

constraint int_ne(differences[10], differences[11]);

constraint int_ne(differences[9], differences[14]);

constraint int_ne(differences[9], differences[13]);

constraint int_ne(differences[9], differences[12]);

constraint int_ne(differences[9], differences[11]);

constraint int_ne(differences[9], differences[10]);

constraint int_ne(differences[8], differences[14]);

constraint int_ne(differences[8], differences[13]);

constraint int_ne(differences[8], differences[12]);

constraint int_ne(differences[8], differences[11]);

constraint int_ne(differences[8], differences[10]);

constraint int_ne(differences[8], differences[9]);

constraint int_ne(differences[7], differences[14]);

constraint int_ne(differences[7], differences[13]);

constraint int_ne(differences[7], differences[12]);

constraint int_ne(differences[7], differences[11]);

constraint int_ne(differences[7], differences[10]);

constraint int_ne(differences[7], differences[9]);

constraint int_ne(differences[7], differences[8]);

constraint int_ne(differences[6], differences[14]);

constraint int_ne(differences[6], differences[13]);

constraint int_ne(differences[6], differences[12]);

constraint int_ne(differences[6], differences[11]);

constraint int_ne(differences[6], differences[10]);

constraint int_ne(differences[6], differences[9]);

constraint int_ne(differences[6], differences[8]);

constraint int_ne(differences[6], differences[7]);

constraint int_ne(differences[5], differences[14]);

constraint int_ne(differences[5], differences[13]);

constraint int_ne(differences[5], differences[12]);

constraint int_ne(differences[5], differences[11]);

constraint int_ne(differences[5], differences[10]);

constraint int_ne(differences[5], differences[9]);

constraint int_ne(differences[5], differences[8]);

constraint int_ne(differences[5], differences[7]);

constraint int_ne(differences[5], differences[6]);

constraint int_ne(differences[4], differences[14]);

constraint int_ne(differences[4], differences[13]);

constraint int_ne(differences[4], differences[12]);

constraint int_ne(differences[4], differences[11]);

constraint int_ne(differences[4], differences[10]);

constraint int_ne(differences[4], differences[9]);

constraint int_ne(differences[4], differences[8]);

constraint int_ne(differences[4], differences[7]);

constraint int_ne(differences[4], differences[6]);

constraint int_ne(differences[4], differences[5]);

constraint int_ne(differences[3], differences[14]);

constraint int_ne(differences[3], differences[13]);

constraint int_ne(differences[3], differences[12]);

constraint int_ne(differences[3], differences[11]);

constraint int_ne(differences[3], differences[10]);

constraint int_ne(differences[3], differences[9]);

constraint int_ne(differences[3], differences[8]);

constraint int_ne(differences[3], differences[7]);

constraint int_ne(differences[3], differences[6]);

constraint int_ne(differences[3], differences[5]);

constraint int_ne(differences[3], differences[4]);

constraint int_ne(differences[2], differences[14]);

constraint int_ne(differences[2], differences[13]);

constraint int_ne(differences[2], differences[12]);

constraint int_ne(differences[2], differences[11]);

constraint int_ne(differences[2], differences[10]);

constraint int_ne(differences[2], differences[9]);

constraint int_ne(differences[2], differences[8]);

constraint int_ne(differences[2], differences[7]);

constraint int_ne(differences[2], differences[6]);

constraint int_ne(differences[2], differences[5]);

constraint int_ne(differences[2], differences[4]);

constraint int_ne(differences[2], differences[3]);

constraint int_ne(differences[1], differences[14]);

constraint int_ne(differences[1], differences[13]);

constraint int_ne(differences[1], differences[12]);

constraint int_ne(differences[1], differences[11]);

constraint int_ne(differences[1], differences[10]);

constraint int_ne(differences[1], differences[9]);

constraint int_ne(differences[1], differences[8]);

constraint int_ne(differences[1], differences[7]);

constraint int_ne(differences[1], differences[6]);

constraint int_ne(differences[1], differences[5]);

constraint int_ne(differences[1], differences[4]);

constraint int_ne(differences[1], differences[3]);

constraint int_ne(differences[1], differences[2]);

constraint int_ne(differences[0], differences[14]);

constraint int_ne(differences[0], differences[13]);

constraint int_ne(differences[0], differences[12]);

constraint int_ne(differences[0], differences[11]);

constraint int_ne(differences[0], differences[10]);

constraint int_ne(differences[0], differences[9]);

constraint int_ne(differences[0], differences[8]);

constraint int_ne(differences[0], differences[7]);

constraint int_ne(differences[0], differences[6]);

constraint int_ne(differences[0], differences[5]);

constraint int_ne(differences[0], differences[4]);

constraint int_ne(differences[0], differences[3]);

constraint int_ne(differences[0], differences[2]);

constraint int_ne(differences[0], differences[1]);

constraint 
  int_lin_lt([ -1, 1, 1, -1 ], [ mark[0], mark[1], mark[4], mark[5] ], 0);

constraint int_lt(mark[3], mark[4]);

constraint int_lt(mark[2], mark[3]);

constraint int_lt(mark[1], mark[2]);

constraint int_lt(mark[0], mark[1]);

constraint int_eq(mark[0], 0);

constraint int_lin_eq([ 1, 1, -1 ], [ INT____1, mark[0], mark[1] ], 0);

constraint int_lin_eq([ 1, 1, -1 ], [ INT____2, mark[0], mark[2] ], 0);

constraint int_lin_eq([ 1, 1, -1 ], [ INT____3, mark[0], mark[3] ], 0);

constraint int_lin_eq([ 1, 1, -1 ], [ INT____4, mark[0], mark[4] ], 0);

constraint int_lin_eq([ 1, 1, -1 ], [ INT____5, mark[0], mark[5] ], 0);

constraint int_lin_eq([ 1, 1, -1 ], [ INT____6, mark[1], mark[2] ], 0);

constraint int_lin_eq([ 1, 1, -1 ], [ INT____7, mark[1], mark[3] ], 0);

constraint int_lin_eq([ 1, 1, -1 ], [ INT____8, mark[1], mark[4] ], 0);

constraint int_lin_eq([ 1, 1, -1 ], [ INT____9, mark[1], mark[5] ], 0);

constraint int_lin_eq([ 1, 1, -1 ], [ INT____10, mark[2], mark[3] ], 0);

constraint int_lin_eq([ 1, 1, -1 ], [ INT____11, mark[2], mark[4] ], 0);

constraint int_lin_eq([ 1, 1, -1 ], [ INT____12, mark[2], mark[5] ], 0);

constraint int_lin_eq([ 1, 1, -1 ], [ INT____13, mark[3], mark[4] ], 0);

constraint int_lin_eq([ 1, 1, -1 ], [ INT____14, mark[3], mark[5] ], 0);

constraint int_lin_eq([ 1, 1, -1 ], [ INT____15, mark[4], mark[5] ], 0);

solve satisfy;

output [ "golomb ", show(mark), "\n" ];
