<tt>
&lt;html&gt;&lt;body&nbsp;style=&quot;word-wrap:&nbsp;break-word;&nbsp;-webkit-nbsp-mode:&nbsp;space;&nbsp;-webkit-line-break:&nbsp;after-white-space;&nbsp;&quot;&gt;&lt;div&gt;&lt;div&gt;Malcolm&nbsp;Ryan&nbsp;wrote:&lt;/div&gt;&lt;br&nbsp;class=&quot;Apple-interchange-newline&quot;&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;&lt;div&gt;I&nbsp;want&nbsp;to&nbsp;make&nbsp;a&nbsp;constraint&nbsp;which&nbsp;represents&nbsp;the&nbsp;order&nbsp;of&nbsp;three&nbsp;values&nbsp;&amp;nbsp;&lt;br&gt;around&nbsp;a&nbsp;ring.&lt;br&gt;&lt;br&gt;Eg:&nbsp;if&nbsp;we&nbsp;have&nbsp;a,b,c&nbsp;\in&nbsp;{1,2,3,4}&nbsp;then&nbsp;I&nbsp;want&nbsp;to&nbsp;represent&nbsp;the&nbsp;&amp;nbsp;&lt;br&gt;constraint:&lt;br&gt;&lt;br&gt;clockwise(a,b,c)&nbsp;==&nbsp;(a&nbsp;&amp;lt;&nbsp;b&nbsp;&amp;lt;&nbsp;c)&nbsp;or&nbsp;(b&nbsp;&amp;lt;&nbsp;c&nbsp;&amp;lt;&nbsp;a)&nbsp;or&nbsp;(c&nbsp;&amp;lt;&nbsp;a&nbsp;&amp;lt;&nbsp;b)&lt;br&gt;&lt;br&gt;I&nbsp;can&nbsp;construct&nbsp;this&nbsp;directly&nbsp;using&nbsp;BExprs,&nbsp;but&nbsp;the&nbsp;use&nbsp;of&nbsp;'or'&nbsp;means&nbsp;&amp;nbsp;&lt;br&gt;that&nbsp;it&nbsp;doesn't&nbsp;propagate&nbsp;very&nbsp;well.&nbsp;Eg:&lt;/div&gt;&lt;/blockquote&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;&lt;div&gt;&lt;font&nbsp;class=&quot;Apple-style-span&quot;&nbsp;color=&quot;#000000&quot;&gt;[...]&lt;/font&gt;&lt;br&gt;Will&nbsp;give&nbsp;a&nbsp;=&nbsp;{1,4},&nbsp;b&nbsp;=&nbsp;[2..3],&nbsp;c&nbsp;=&nbsp;[2..3]&nbsp;when&nbsp;it&nbsp;should&nbsp;be&nbsp;able&nbsp;to&nbsp;&amp;nbsp;&lt;br&gt;deduce&nbsp;that&nbsp;b&nbsp;=&nbsp;2,&nbsp;c&nbsp;=&nbsp;3.&nbsp;Is&nbsp;there&nbsp;any&nbsp;other&nbsp;way&nbsp;to&nbsp;represent&nbsp;this&nbsp;so&nbsp;&amp;nbsp;&lt;br&gt;that&nbsp;the&nbsp;propagation&nbsp;works&nbsp;better?&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;You&nbsp;can't&nbsp;get&nbsp;the&nbsp;full&nbsp;pruning&nbsp;directly&nbsp;(you'd&nbsp;need&nbsp;something&nbsp;like&nbsp;constructive&nbsp;disjunction&nbsp;for&nbsp;that).&nbsp;&amp;nbsp;Something&nbsp;you&nbsp;might&nbsp;want&nbsp;to&nbsp;add&nbsp;is&nbsp;a&nbsp;distinct&nbsp;constraint&nbsp;over&nbsp;all&nbsp;variables&nbsp;(although&nbsp;it&nbsp;wouldn't&nbsp;do&nbsp;the&nbsp;pruning&nbsp;in&nbsp;your&nbsp;example,&nbsp;it&nbsp;would&nbsp;add&nbsp;some&nbsp;pruning&nbsp;in&nbsp;other&nbsp;cases).&nbsp;&amp;nbsp;Or,&nbsp;if&nbsp;the&nbsp;domains&nbsp;are&nbsp;always&nbsp;dense&nbsp;(at&nbsp;most&nbsp;one&nbsp;value&nbsp;more&nbsp;than&nbsp;variables,&nbsp;that&nbsp;is),&nbsp;you&nbsp;could&nbsp;use&nbsp;a+1=b&nbsp;instead&nbsp;of&nbsp;a&amp;lt;b.&nbsp;&amp;nbsp;You&nbsp;could&nbsp;also&nbsp;encode&nbsp;the&nbsp;constraint&nbsp;into&nbsp;a&nbsp;TupleSet&nbsp;and&nbsp;use&nbsp;extensional,&nbsp;which&nbsp;would&nbsp;probably&nbsp;result&nbsp;in&nbsp;a&nbsp;really&nbsp;big&nbsp;table&nbsp;but&nbsp;give&nbsp;you&nbsp;domain&nbsp;consistency.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Cheers,&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;Apple-tab-span&quot;&nbsp;style=&quot;white-space:pre&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;Guido&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;
</tt>
