<tt>
&lt;div&nbsp;dir=&quot;ltr&quot;&gt;Hi&nbsp;All,&lt;br&gt;&lt;br&gt;Some&nbsp;time&nbsp;ago&nbsp;someone&nbsp;reported&nbsp;an&nbsp;strange&nbsp;memory<br>
behavior&nbsp;in&nbsp;mac&nbsp;os&nbsp;x&nbsp;on&nbsp;the&nbsp;gecode&nbsp;list.&nbsp;I&nbsp;do&nbsp;not&nbsp;know&nbsp;whether&nbsp;it&nbsp;was<br>
fixed&nbsp;but&nbsp;i&nbsp;think&nbsp;it&nbsp;still&nbsp;remains&nbsp;in&nbsp;the&nbsp;current&nbsp;implementation.&nbsp;The<br>
problem&nbsp;apparently&nbsp;happens&nbsp;only&nbsp;in&nbsp;mac&nbsp;os&nbsp;x.&nbsp;You&nbsp;can&nbsp;get&nbsp;it&nbsp;by<br>
replacing&nbsp;the&nbsp;main&nbsp;function&nbsp;of&nbsp;the&nbsp;queens&nbsp;example&nbsp;to&nbsp;this&nbsp;one:&lt;br&gt;<br>
&lt;br&gt;int&lt;br&gt;main(int&nbsp;argc,&nbsp;char*&nbsp;argv[])&nbsp;{&lt;br&gt;&amp;nbsp;&nbsp;&lt;br&gt;&amp;nbsp;&nbsp;SizeOptions&nbsp;opt(&amp;quot;Queens&amp;quot;);&lt;br&gt;&amp;nbsp;&nbsp;opt.iterations(500);&lt;br&gt;&amp;nbsp;&nbsp;opt.size(100);&lt;br&gt;&amp;nbsp;&nbsp;opt.propagation(Queens::PROP_&lt;div&nbsp;dir=&quot;ltr&quot;&gt;DISTINCT);&lt;br&gt;&amp;nbsp;&nbsp;opt.propagation(Queens::PROP_BINARY,&nbsp;&amp;quot;binary&amp;quot;,&lt;br&gt;<br>
<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;quot;only&nbsp;binary&nbsp;disequality&nbsp;constraints&amp;quot;);&lt;br&gt;&amp;nbsp;&nbsp;opt.propagation(Queens::PROP_MIXED,&nbsp;&amp;quot;mixed&amp;quot;,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;quot;single&nbsp;distinct&nbsp;and&nbsp;binary&nbsp;disequality&nbsp;constraints&amp;quot;);&lt;br&gt;<br>
<br>
&amp;nbsp;&nbsp;opt.propagation(Queens::PROP_DISTINCT,&nbsp;&amp;quot;distinct&amp;quot;,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;quot;three&nbsp;distinct&nbsp;constraints&amp;quot;);&lt;br&gt;&amp;nbsp;&nbsp;opt.parse(argc,argv);&lt;br&gt;&amp;nbsp;&nbsp;/*&lt;br&gt;&amp;nbsp;&nbsp;Example::run&amp;lt;Queens,DFS,SizeOptions&amp;gt;(opt);&lt;br&gt;<br>
<br>
&amp;nbsp;&nbsp;*/&lt;br&gt;&amp;nbsp;&nbsp;std::vector&amp;lt;Queens*&amp;gt;&nbsp;q;&lt;br&gt;&amp;nbsp;&nbsp;for&nbsp;(unsigned&nbsp;int&nbsp;i=0;&nbsp;i&nbsp;&amp;lt;&nbsp;100000;&nbsp;i++)&nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;q.push_back(new&nbsp;Queens(opt));&lt;br&gt;&amp;nbsp;&nbsp;}&lt;br&gt;&amp;nbsp;&nbsp;std::cout&nbsp;&amp;lt;&amp;lt;&nbsp;&amp;quot;finished&nbsp;insertion&amp;quot;&nbsp;&amp;lt;&amp;lt;&nbsp;std::endl;&lt;br&gt;&lt;br&gt;&amp;nbsp;&nbsp;for&nbsp;(unsigned&nbsp;int&nbsp;i=0;&nbsp;i&nbsp;&amp;lt;&nbsp;100000;&nbsp;i++)&nbsp;{&lt;br&gt;<br>
<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;Queens&nbsp;*tmp&nbsp;=&nbsp;q[i];&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;delete&nbsp;tmp;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;q.pop_back();&lt;br&gt;&amp;nbsp;&nbsp;}&lt;br&gt;&amp;nbsp;&nbsp;std::cout&nbsp;&amp;lt;&amp;lt;&nbsp;&amp;quot;finished&nbsp;delete&amp;quot;&nbsp;&amp;lt;&amp;lt;&nbsp;std::endl;&lt;br&gt;&lt;br&gt;&amp;nbsp;&nbsp;int&nbsp;a;&lt;br&gt;&amp;nbsp;&nbsp;std::cin&nbsp;&amp;gt;&amp;gt;&nbsp;a;&lt;br&gt;&amp;nbsp;&nbsp;return&nbsp;0;&lt;br&gt;}&lt;br&gt;&lt;br&gt;The<br>
idea&nbsp;is&nbsp;to&nbsp;create&nbsp;a&nbsp;lot&nbsp;of&nbsp;spaces&nbsp;and&nbsp;to&nbsp;keep&nbsp;pointer&nbsp;to&nbsp;them&nbsp;in&nbsp;an<br>
array.&nbsp;After&nbsp;the&nbsp;creation&nbsp;all&nbsp;spaces&nbsp;are&nbsp;deleted.&nbsp;The&nbsp;expected&nbsp;behavior<br>
is&nbsp;to&nbsp;release&nbsp;all&nbsp;the&nbsp;memory&nbsp;allocated&nbsp;in&nbsp;the&nbsp;first&nbsp;loop&nbsp;and&nbsp;to&nbsp;have<br>
it&nbsp;available&nbsp;by&nbsp;the&nbsp;operating&nbsp;system.&nbsp;I&nbsp;tried&nbsp;in&nbsp;a&nbsp;mac&nbsp;os&nbsp;x&nbsp;running<br>
leopard&nbsp;and&nbsp;the&nbsp;memory&nbsp;seems&nbsp;to&nbsp;be&nbsp;still&nbsp;used&nbsp;by&nbsp;the&nbsp;process&nbsp;(according<br>
to&nbsp;Activity&nbsp;Monitor).&nbsp;In&nbsp;a&nbsp;linux&nbsp;machine&nbsp;the&nbsp;memory&nbsp;seems&nbsp;to&nbsp;be<br>
released&nbsp;according&nbsp;to&nbsp;top.&lt;br&gt;&lt;br&gt;Another&nbsp;thing&nbsp;is&nbsp;that&nbsp;when&nbsp;using&nbsp;the&nbsp;gecode&nbsp;trunk&nbsp;to&nbsp;try&nbsp;the&nbsp;same&nbsp;problem,&nbsp;the&nbsp;de-allocation&nbsp;behaves&nbsp;better,&nbsp;that&nbsp;is,&nbsp;half&nbsp;of&nbsp;the&nbsp;memory&nbsp;is&nbsp;released&nbsp;but&nbsp;still&nbsp;some&nbsp;memory&nbsp;is&nbsp;kept&nbsp;by&nbsp;the&nbsp;process.&lt;br&gt;<br>
<br>
&lt;br&gt;Do&nbsp;you&nbsp;have&nbsp;any&nbsp;suggestion&nbsp;on&nbsp;how&nbsp;to&nbsp;work&nbsp;around&nbsp;this?&lt;br&gt;&lt;/div&gt;&lt;br&nbsp;clear=&quot;all&quot;&gt;Regards,&lt;br&gt;--&nbsp;&lt;br&gt;Gustavo&nbsp;Gutierrez&lt;br&gt;<br>
&lt;/div&gt;<br>

</tt>
