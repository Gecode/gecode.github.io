<tt>
In&nbsp;gecode&nbsp;1&nbsp;it&nbsp;was&nbsp;possible&nbsp;to&nbsp;use&nbsp;BoolVars&nbsp;and&nbsp;IntVars&nbsp;interchangeably,&lt;br&gt;that&nbsp;means&nbsp;that&nbsp;a&nbsp;function&nbsp;which&nbsp;received&nbsp;a&nbsp;BoolVar&nbsp;could&nbsp;receive&nbsp;an&nbsp;Intvar&lt;br&gt;and&nbsp;a&nbsp;function&nbsp;which&nbsp;received&nbsp;an&nbsp;IntVar&nbsp;could&nbsp;received&nbsp;a&nbsp;BoolVar&nbsp;as&nbsp;an&nbsp;argument.&nbsp;&lt;br&gt;<br>
Im&nbsp;porting&nbsp;a&nbsp;library&nbsp;from&nbsp;gecode&nbsp;1&nbsp;to&nbsp;Gecode&nbsp;2&lt;br&gt;The&nbsp;solution&nbsp;I&nbsp;had&nbsp;found&nbsp;for&nbsp;these&nbsp;function&nbsp;callings&nbsp;is&nbsp;to&nbsp;create&nbsp;a&nbsp;new&nbsp;variable&nbsp;and&nbsp;post&nbsp;a&nbsp;channeling&nbsp;constraint&lt;br&gt;I&nbsp;wonder&nbsp;if&nbsp;there&nbsp;is&nbsp;another&nbsp;way&nbsp;to&nbsp;achieve&nbsp;this,&nbsp;and&nbsp;if&nbsp;posting&nbsp;this&nbsp;new&nbsp;constraint&nbsp;would&nbsp;affect&nbsp;the&nbsp;performance.&lt;br&gt;<br>
&lt;br&gt;Thank&nbsp;you&nbsp;in&nbsp;advance.&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;<br>

</tt>
