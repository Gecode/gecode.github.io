<tt>
Hi&nbsp;Christian,&lt;br&gt;&lt;br&gt;If&nbsp;one&nbsp;of&nbsp;the&nbsp;reasons,&nbsp;is&nbsp;historical,&nbsp;and&nbsp;supossing&nbsp;you&nbsp;must/want&nbsp;to&nbsp;reimplement&nbsp;it,&nbsp;then&nbsp;would&nbsp;you&nbsp;implement&nbsp;Gecode&nbsp;using&nbsp;the&nbsp;same&nbsp;design?&lt;br&gt;&lt;br&gt;If&nbsp;no,&nbsp;then&nbsp;how&nbsp;would&nbsp;you&nbsp;implement&nbsp;it?&lt;br&gt;&lt;br&gt;Thanks,&lt;br&gt;<br>
&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Wed,&nbsp;Nov&nbsp;19,&nbsp;2008&nbsp;at&nbsp;5:24&nbsp;AM,&nbsp;Christian&nbsp;Schulte&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:cschulte@kth.se&quot;&gt;cschulte@kth.se&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;<br>
Hi&nbsp;Malcolm,&lt;br&gt;<br>
&lt;br&gt;<br>
all&nbsp;your&nbsp;questions&nbsp;have&nbsp;a&nbsp;yes&nbsp;as&nbsp;the&nbsp;answer.&nbsp;Having&nbsp;the&nbsp;possibility&nbsp;to&lt;br&gt;<br>
construct&nbsp;variables&nbsp;in&nbsp;an&nbsp;uninitialized&nbsp;state&nbsp;is&nbsp;actually&nbsp;quite&nbsp;useful&lt;br&gt;<br>
(think&nbsp;of&nbsp;just&nbsp;declaring&nbsp;an&nbsp;integer&nbsp;variable&nbsp;without&nbsp;initializing,&nbsp;same&lt;br&gt;<br>
thing).&nbsp;It&nbsp;might&nbsp;not&nbsp;useful&nbsp;during&nbsp;copying&nbsp;but&nbsp;in&nbsp;other&nbsp;situations&nbsp;(in&lt;br&gt;<br>
particular&nbsp;think&nbsp;of&nbsp;an&nbsp;array&nbsp;of&nbsp;variables&nbsp;-&nbsp;such&nbsp;as&nbsp;IntVarArgs&nbsp;-&nbsp;you&nbsp;would&lt;br&gt;<br>
like&nbsp;to&nbsp;pass&nbsp;as&nbsp;an&nbsp;argument,&nbsp;here&nbsp;you&nbsp;definitely&nbsp;do&nbsp;not&nbsp;want&nbsp;to&nbsp;create&nbsp;a&lt;br&gt;<br>
variable&nbsp;first&nbsp;and&nbsp;then&nbsp;overwrite&nbsp;it).&lt;br&gt;<br>
&lt;br&gt;<br>
The&nbsp;reason&nbsp;why&nbsp;copying&nbsp;an&nbsp;array&nbsp;is&nbsp;not&nbsp;controlled&nbsp;by&nbsp;a&nbsp;copy&nbsp;constructor&nbsp;but&lt;br&gt;<br>
by&nbsp;an&nbsp;update&nbsp;function&nbsp;is&nbsp;for&nbsp;two&nbsp;reasons:&nbsp;one,&nbsp;historical&nbsp;(because&nbsp;in&lt;br&gt;<br>
earlier&nbsp;versions&nbsp;the&nbsp;constructor&nbsp;would&nbsp;have&nbsp;clashed&nbsp;with&nbsp;other&nbsp;constructors)&lt;br&gt;<br>
and&nbsp;the&nbsp;other&nbsp;uniformity&nbsp;(for&nbsp;some&nbsp;data&nbsp;structures&nbsp;it&nbsp;is&nbsp;not&nbsp;very&nbsp;easy&nbsp;to&lt;br&gt;<br>
define&nbsp;a&nbsp;constructor,&nbsp;but&nbsp;it&nbsp;is&nbsp;easy&nbsp;to&nbsp;have&nbsp;a&nbsp;separate&nbsp;update&nbsp;function).&lt;br&gt;<br>
&lt;br&gt;<br>
Cheers&lt;br&gt;<br>
Christian&lt;br&gt;<br>
&lt;font&nbsp;color=&quot;#888888&quot;&gt;&lt;br&gt;<br>
--&lt;br&gt;<br>
Christian&nbsp;Schulte,&nbsp;&lt;a&nbsp;href=&quot;http://www.ict.kth.se/%7Ecschulte/&quot;&nbsp;target=&quot;_blank&quot;&gt;www.ict.kth.se/~cschulte/&lt;/a&gt;&lt;br&gt;<br>
&lt;/font&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&nbsp;class=&quot;Wj3C7c&quot;&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
-----Original&nbsp;Message-----&lt;br&gt;<br>
From:&nbsp;&lt;a&nbsp;href=&quot;mailto:users-bounces@gecode.org&quot;&gt;users-bounces@gecode.org&lt;/a&gt;&nbsp;[mailto:&lt;a&nbsp;href=&quot;mailto:users-bounces@gecode.org&quot;&gt;users-bounces@gecode.org&lt;/a&gt;]&nbsp;On&nbsp;Behalf&lt;br&gt;<br>
Of&nbsp;Malcolm&nbsp;Ryan&lt;br&gt;<br>
Sent:&nbsp;Wednesday,&nbsp;November&nbsp;19,&nbsp;2008&nbsp;5:06&nbsp;AM&lt;br&gt;<br>
To:&nbsp;gecode&nbsp;list&lt;br&gt;<br>
Subject:&nbsp;[gecode-users]&nbsp;Starting&nbsp;with&nbsp;C++&lt;br&gt;<br>
&lt;br&gt;<br>
Given&nbsp;that&nbsp;GecodeJ&nbsp;is&nbsp;no&nbsp;longer&nbsp;supported,&nbsp;I&amp;#39;m&nbsp;in&nbsp;the&nbsp;process&nbsp;of&lt;br&gt;<br>
migrating&nbsp;my&nbsp;code&nbsp;to&nbsp;C++&nbsp;(and&nbsp;learning&nbsp;C++&nbsp;in&nbsp;the&nbsp;process).&lt;br&gt;<br>
&lt;br&gt;<br>
It&nbsp;seems&nbsp;from&nbsp;my&nbsp;perusal&nbsp;of&nbsp;the&nbsp;examples&nbsp;that&nbsp;the&nbsp;C++&nbsp;library&nbsp;works&lt;br&gt;<br>
slightly&nbsp;differently.&nbsp;Whereas&nbsp;in&nbsp;java&nbsp;the&nbsp;copy&nbsp;constructors&nbsp;for&nbsp;spaces&lt;br&gt;<br>
look&nbsp;like:&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp;&amp;nbsp;&nbsp;public&nbsp;Queens(Boolean&nbsp;share,&nbsp;Queens&nbsp;queens)&nbsp;{&lt;br&gt;<br>
&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;super(share,&nbsp;queens);&lt;br&gt;<br>
&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;n&nbsp;=&nbsp;queens.n;&lt;br&gt;<br>
&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;q&nbsp;=&nbsp;new&nbsp;VarArray&amp;lt;IntVar&amp;gt;(this,&nbsp;share,&nbsp;queens.q);&lt;br&gt;<br>
&nbsp;&amp;nbsp;&nbsp;}&lt;br&gt;<br>
&lt;br&gt;<br>
in&nbsp;C++&nbsp;they&nbsp;look&nbsp;like:&lt;br&gt;<br>
&lt;br&gt;<br>
&nbsp;&amp;nbsp;&nbsp;///&nbsp;Constructor&nbsp;for&nbsp;cloning&nbsp;\a&nbsp;s&lt;br&gt;<br>
&nbsp;&amp;nbsp;&nbsp;Queens(bool&nbsp;share,&nbsp;Queens&amp;amp;&nbsp;s)&nbsp;:&nbsp;Example(share,s)&nbsp;{&lt;br&gt;<br>
&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;q.update(this,&nbsp;share,&nbsp;s.q);&lt;br&gt;<br>
&nbsp;&amp;nbsp;&nbsp;}&lt;br&gt;<br>
&lt;br&gt;<br>
The&nbsp;Java&nbsp;code&nbsp;explicitly&nbsp;contructs&nbsp;a&nbsp;new&nbsp;var&nbsp;array&nbsp;from&nbsp;the&nbsp;old.&nbsp;The&nbsp;C+&lt;br&gt;<br>
+&nbsp;code&nbsp;seems&nbsp;to&nbsp;implicitly&nbsp;construct&nbsp;an&nbsp;empty&nbsp;var&nbsp;array&nbsp;and&nbsp;then&nbsp;call&lt;br&gt;<br>
&amp;#39;update&amp;#39;&nbsp;to&nbsp;copy&nbsp;the&nbsp;old&nbsp;into&nbsp;the&nbsp;new.&nbsp;Is&nbsp;that&nbsp;correct?&nbsp;Does&nbsp;every&lt;br&gt;<br>
kind&nbsp;of&nbsp;variable&nbsp;have&nbsp;an&nbsp;no-arg&nbsp;constructor?&nbsp;What&nbsp;is&nbsp;the&nbsp;rationale&nbsp;for&lt;br&gt;<br>
this&nbsp;choice?&nbsp;It&nbsp;seems&nbsp;that&nbsp;it&nbsp;allows&nbsp;you&nbsp;to&nbsp;construct&nbsp;variables&nbsp;in&nbsp;an&lt;br&gt;<br>
incompletely&nbsp;initialised&nbsp;state.&nbsp;Is&nbsp;that&nbsp;deliberate?&lt;br&gt;<br>
&lt;br&gt;<br>
Malcolm&lt;br&gt;<br>
&lt;br&gt;<br>
_______________________________________________&lt;br&gt;<br>
Gecode&nbsp;users&nbsp;mailing&nbsp;list&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;mailto:users@gecode.org&quot;&gt;users@gecode.org&lt;/a&gt;&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;https://www.gecode.org/mailman/listinfo/gecode-users&quot;&nbsp;target=&quot;_blank&quot;&gt;https://www.gecode.org/mailman/listinfo/gecode-users&lt;/a&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
_______________________________________________&lt;br&gt;<br>
Gecode&nbsp;users&nbsp;mailing&nbsp;list&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;mailto:users@gecode.org&quot;&gt;users@gecode.org&lt;/a&gt;&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;https://www.gecode.org/mailman/listinfo/gecode-users&quot;&nbsp;target=&quot;_blank&quot;&gt;https://www.gecode.org/mailman/listinfo/gecode-users&lt;/a&gt;&lt;br&gt;<br>
&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;br&nbsp;clear=&quot;all&quot;&gt;&lt;br&gt;--&nbsp;&lt;br&gt;&amp;quot;La&nbsp;buena&nbsp;educación,&nbsp;es&nbsp;lo&nbsp;que&nbsp;nos&nbsp;queda&nbsp;cuando&nbsp;se&nbsp;nos&nbsp;olvida&nbsp;todo&nbsp;lo&nbsp;que&nbsp;nos&nbsp;han&nbsp;enseñado&amp;quot;&lt;br&gt;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;¿?&lt;br&gt;&lt;br&gt;Javier&nbsp;Andrés&nbsp;Mena&nbsp;Zapata&lt;br&gt;&lt;a&nbsp;href=&quot;http://StrategicDecision.net/&quot;&gt;http://StrategicDecision.net/&lt;/a&gt;&lt;br&gt;<br>
+57&nbsp;(2)&nbsp;318&nbsp;1000&nbsp;ext.&nbsp;2910&lt;br&gt;Cali&nbsp;-&nbsp;Colombia&lt;br&gt;<br>

</tt>
