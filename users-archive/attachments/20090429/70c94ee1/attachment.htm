<tt>
&lt;html&nbsp;xmlns:v=&quot;urn:schemas-microsoft-com:vml&quot;&nbsp;xmlns:o=&quot;urn:schemas-microsoft-com:office:office&quot;&nbsp;xmlns:w=&quot;urn:schemas-microsoft-com:office:word&quot;&nbsp;xmlns:m=&quot;http://schemas.microsoft.com/office/2004/12/omml&quot;&nbsp;xmlns=&quot;http://www.w3.org/TR/REC-html40&quot;&gt;<br>
<br>
&lt;head&gt;<br>
&lt;META&nbsp;HTTP-EQUIV=&quot;Content-Type&quot;&nbsp;CONTENT=&quot;text/html;&nbsp;charset=us-ascii&quot;&gt;<br>
&lt;meta&nbsp;name=Generator&nbsp;content=&quot;Microsoft&nbsp;Word&nbsp;12&nbsp;(filtered&nbsp;medium)&quot;&gt;<br>
&lt;style&gt;<br>
&lt;!--<br>
&nbsp;/*&nbsp;Font&nbsp;Definitions&nbsp;*/<br>
&nbsp;@font-face<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp{font-family:&quot;Cambria&nbsp;Math&quot;;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppanose-1:2&nbsp;4&nbsp;5&nbsp;3&nbsp;5&nbsp;4&nbsp;6&nbsp;3&nbsp;2&nbsp;4;}<br>
@font-face<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp{font-family:Calibri;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppanose-1:2&nbsp;15&nbsp;5&nbsp;2&nbsp;2&nbsp;2&nbsp;4&nbsp;3&nbsp;2&nbsp;4;}<br>
@font-face<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp{font-family:Tahoma;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsppanose-1:2&nbsp;11&nbsp;6&nbsp;4&nbsp;3&nbsp;5&nbsp;4&nbsp;4&nbsp;2&nbsp;4;}<br>
&nbsp;/*&nbsp;Style&nbsp;Definitions&nbsp;*/<br>
&nbsp;p.MsoNormal,&nbsp;li.MsoNormal,&nbsp;div.MsoNormal<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp{margin:0in;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmargin-bottom:.0001pt;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfont-size:12.0pt;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfont-family:&quot;Times&nbsp;New&nbsp;Roman&quot;,&quot;serif&quot;;}<br>
a:link,&nbsp;span.MsoHyperlink<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp{mso-style-priority:99;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcolor:blue;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptext-decoration:underline;}<br>
a:visited,&nbsp;span.MsoHyperlinkFollowed<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp{mso-style-priority:99;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcolor:purple;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptext-decoration:underline;}<br>
p.MsoListParagraph,&nbsp;li.MsoListParagraph,&nbsp;div.MsoListParagraph<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp{mso-style-priority:34;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmargin-top:0in;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmargin-right:0in;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmargin-bottom:0in;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmargin-left:.5in;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmargin-bottom:.0001pt;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfont-size:12.0pt;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfont-family:&quot;Times&nbsp;New&nbsp;Roman&quot;,&quot;serif&quot;;}<br>
span.EmailStyle17<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp{mso-style-type:personal-reply;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspfont-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspcolor:#1F497D;}<br>
.MsoChpDefault<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp{mso-style-type:export-only;}<br>
@page&nbsp;Section1<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp{size:8.5in&nbsp;11.0in;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmargin:1.0in&nbsp;1.0in&nbsp;1.0in&nbsp;1.0in;}<br>
div.Section1<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp{page:Section1;}<br>
&nbsp;/*&nbsp;List&nbsp;Definitions&nbsp;*/<br>
&nbsp;@list&nbsp;l0<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp{mso-list-id:1266378388;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmso-list-type:hybrid;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmso-list-template-ids:-279161788&nbsp;67698705&nbsp;67698713&nbsp;67698715&nbsp;67698703&nbsp;67698713&nbsp;67698715&nbsp;67698703&nbsp;67698713&nbsp;67698715;}<br>
@list&nbsp;l0:level1<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp{mso-level-text:&quot;%1\)&quot;;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmso-level-tab-stop:none;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspmso-level-number-position:left;<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsptext-indent:-.25in;}<br>
ol<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp{margin-bottom:0in;}<br>
ul<br>
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp{margin-bottom:0in;}<br>
--&gt;<br>
&lt;/style&gt;<br>
&lt;!--[if&nbsp;gte&nbsp;mso&nbsp;9]&gt;&lt;xml&gt;<br>
&nbsp;&lt;o:shapedefaults&nbsp;v:ext=&quot;edit&quot;&nbsp;spidmax=&quot;1026&quot;&nbsp;/&gt;<br>
&lt;/xml&gt;&lt;![endif]--&gt;&lt;!--[if&nbsp;gte&nbsp;mso&nbsp;9]&gt;&lt;xml&gt;<br>
&nbsp;&lt;o:shapelayout&nbsp;v:ext=&quot;edit&quot;&gt;<br>
&nbsp;&nbsp;&lt;o:idmap&nbsp;v:ext=&quot;edit&quot;&nbsp;data=&quot;1&quot;&nbsp;/&gt;<br>
&nbsp;&lt;/o:shapelayout&gt;&lt;/xml&gt;&lt;![endif]--&gt;<br>
&lt;/head&gt;<br>
<br>
&lt;body&nbsp;lang=EN-US&nbsp;link=blue&nbsp;vlink=purple&gt;<br>
<br>
&lt;div&nbsp;class=Section1&gt;<br>
<br>
&lt;p&nbsp;class=MsoNormal&gt;&lt;span&nbsp;style='font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;<br>
color:#1F497D'&gt;Hi&nbsp;Joe,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
<br>
&lt;p&nbsp;class=MsoNormal&gt;&lt;span&nbsp;style='font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;<br>
color:#1F497D'&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
<br>
&lt;p&nbsp;class=MsoNormal&gt;&lt;span&nbsp;style='font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;<br>
color:#1F497D'&gt;There&nbsp;are&nbsp;two&nbsp;things&nbsp;you&nbsp;can&nbsp;do:&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
<br>
&lt;p&nbsp;class=MsoListParagraph&nbsp;style='text-indent:-.25in;mso-list:l0&nbsp;level1&nbsp;lfo1'&gt;&lt;![if&nbsp;!supportLists]&gt;&lt;span<br>
style='font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;color:#1F497D'&gt;&lt;span<br>
style='mso-list:Ignore'&gt;1)&lt;span&nbsp;style='font:7.0pt&nbsp;&quot;Times&nbsp;New&nbsp;Roman&quot;'&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;![endif]&gt;&lt;span&nbsp;style='font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;<br>
color:#1F497D'&gt;Try&nbsp;to&nbsp;remove&nbsp;some&nbsp;constraints&nbsp;and&nbsp;see&nbsp;whether&nbsp;this&nbsp;gives&nbsp;you&nbsp;a<br>
solution.&nbsp;Try&nbsp;to&nbsp;isolate&nbsp;the&nbsp;culprit.&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
<br>
&lt;p&nbsp;class=MsoListParagraph&nbsp;style='text-indent:-.25in;mso-list:l0&nbsp;level1&nbsp;lfo1'&gt;&lt;![if&nbsp;!supportLists]&gt;&lt;span<br>
style='font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;color:#1F497D'&gt;&lt;span<br>
style='mso-list:Ignore'&gt;2)&lt;span&nbsp;style='font:7.0pt&nbsp;&quot;Times&nbsp;New&nbsp;Roman&quot;'&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;![endif]&gt;&lt;span&nbsp;style='font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;<br>
color:#1F497D'&gt;Upgrade&nbsp;to&nbsp;3.0&nbsp;and&nbsp;read&nbsp;Modeling&nbsp;with&nbsp;Gecode:&nbsp;you&nbsp;are&nbsp;torturing&nbsp;yourself<br>
for&nbsp;example&nbsp;with&nbsp;linear&nbsp;constraints,&nbsp;the&nbsp;document&nbsp;says&nbsp;how&nbsp;it&amp;#8217;s&nbsp;done&nbsp;much<br>
easier&nbsp;(and&nbsp;hence,&nbsp;less&nbsp;bugs&nbsp;potentially)!&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
<br>
&lt;p&nbsp;class=MsoNormal&gt;&lt;span&nbsp;style='font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;<br>
color:#1F497D'&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
<br>
&lt;p&nbsp;class=MsoNormal&gt;&lt;span&nbsp;style='font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;<br>
color:#1F497D'&gt;Cheers&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
<br>
&lt;p&nbsp;class=MsoNormal&gt;&lt;span&nbsp;style='font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;<br>
color:#1F497D'&gt;Christian&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
<br>
&lt;p&nbsp;class=MsoNormal&gt;&lt;span&nbsp;style='font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;<br>
color:#1F497D'&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
<br>
&lt;p&nbsp;class=MsoNormal&gt;&lt;span&nbsp;style='font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;<br>
color:#1F497D'&gt;--&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
<br>
&lt;p&nbsp;class=MsoNormal&gt;&lt;span&nbsp;style='font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;<br>
color:#1F497D'&gt;Christian&nbsp;Schulte,&nbsp;www.it.kth.se/~cschulte/&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
<br>
&lt;p&nbsp;class=MsoNormal&gt;&lt;span&nbsp;style='font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;<br>
color:#1F497D'&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
<br>
&lt;div&nbsp;style='border:none;border-top:solid&nbsp;#B5C4DF&nbsp;1.0pt;padding:3.0pt&nbsp;0in&nbsp;0in&nbsp;0in'&gt;<br>
<br>
&lt;p&nbsp;class=MsoNormal&gt;&lt;b&gt;&lt;span&nbsp;style='font-size:10.0pt;font-family:&quot;Tahoma&quot;,&quot;sans-serif&quot;'&gt;From:&lt;/span&gt;&lt;/b&gt;&lt;span<br>
style='font-size:10.0pt;font-family:&quot;Tahoma&quot;,&quot;sans-serif&quot;'&gt;<br>
users-bounces@gecode.org&nbsp;[mailto:users-bounces@gecode.org]&nbsp;&lt;b&gt;On&nbsp;Behalf&nbsp;Of&nbsp;&lt;/b&gt;Joe<br>
Porter&lt;br&gt;<br>
&lt;b&gt;Sent:&lt;/b&gt;&nbsp;Tuesday,&nbsp;April&nbsp;28,&nbsp;2009&nbsp;11:03&nbsp;PM&lt;br&gt;<br>
&lt;b&gt;To:&lt;/b&gt;&nbsp;users@gecode.org&lt;br&gt;<br>
&lt;b&gt;Subject:&lt;/b&gt;&nbsp;[gecode-users]&nbsp;Immediate&nbsp;search&nbsp;failure&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;<br>
<br>
&lt;/div&gt;<br>
<br>
&lt;p&nbsp;class=MsoNormal&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/p&gt;<br>
<br>
&lt;p&nbsp;class=MsoNormal&nbsp;style='margin-bottom:12.0pt'&gt;What&nbsp;are&nbsp;the&nbsp;possible&nbsp;reasons<br>
for&nbsp;an&nbsp;immediate&nbsp;search&nbsp;failure?&amp;nbsp;&nbsp;I've&nbsp;changed&nbsp;something&nbsp;in&nbsp;my&nbsp;model,&nbsp;but<br>
I'm&nbsp;not&nbsp;sure&nbsp;what&nbsp;could&nbsp;be&nbsp;causing&nbsp;immediate&nbsp;failures&nbsp;(using&nbsp;Gecode<br>
2.2.0).&amp;nbsp;&nbsp;Setup&nbsp;code&nbsp;is&nbsp;below,&nbsp;and&nbsp;the&nbsp;output&nbsp;is&nbsp;at&nbsp;the&nbsp;bottom.&amp;nbsp;&nbsp;This<br>
is&nbsp;solving&nbsp;a&nbsp;simple&nbsp;scheduling&nbsp;problem&nbsp;with&nbsp;a&nbsp;simple&nbsp;model&nbsp;instance&nbsp;that&nbsp;I&nbsp;can<br>
solve&nbsp;by&nbsp;hand.&amp;nbsp;&nbsp;According&nbsp;to&nbsp;the&nbsp;debug&nbsp;statements,&nbsp;the&nbsp;model&nbsp;should&nbsp;be<br>
feasible.&amp;nbsp;&nbsp;Or&nbsp;-&nbsp;maybe&nbsp;I've&nbsp;been&nbsp;looking&nbsp;at&nbsp;it&nbsp;for&nbsp;too&nbsp;long...&lt;br&gt;<br>
&lt;br&gt;<br>
Thanks,&lt;br&gt;<br>
-Joe&lt;br&gt;<br>
&lt;br&gt;<br>
//&nbsp;CP&nbsp;Solver&nbsp;Engine&lt;br&gt;<br>
CPEngine::CPEngine(&nbsp;InstanceKeeper&nbsp;*&nbsp;pIK,&nbsp;unsigned&nbsp;long&nbsp;long&nbsp;min,&nbsp;unsigned&nbsp;long<br>
long&nbsp;max&nbsp;)&nbsp;:&nbsp;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;vars(&nbsp;this,&nbsp;pIK-&amp;gt;NumVars(),&nbsp;(int)&nbsp;min,&nbsp;(int)&nbsp;max&nbsp;),&amp;nbsp;<br>
//&nbsp;instantiate&nbsp;constraint&nbsp;vars&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;latencies(&nbsp;this,&nbsp;pIK-&amp;gt;NumLatencies()+1,&nbsp;0,&nbsp;(int)&nbsp;2&nbsp;*&nbsp;max<br>
),&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;lin_cstr(this,<br>
1,0,1),&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>
/*&nbsp;not&nbsp;used&nbsp;in&nbsp;this&nbsp;model&nbsp;*/&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;sat_cstr(this,&nbsp;1,&nbsp;0,&nbsp;(int)&nbsp;pIK-&amp;gt;GetNumLinearRelations()<br>
),&amp;nbsp;&amp;nbsp;&nbsp;/*&nbsp;not&nbsp;used&nbsp;in&nbsp;this&nbsp;model&nbsp;*/&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;_pIK(&nbsp;pIK&nbsp;)&lt;br&gt;<br>
{&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;//&nbsp;All&nbsp;equality&nbsp;constraints&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;LinearRelation&nbsp;lrel;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;bool&nbsp;loop&nbsp;=&nbsp;pIK-&amp;gt;GetNextEqualityPair(&nbsp;lrel,&nbsp;true&nbsp;);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;while&nbsp;(loop)&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;IntVarArgs&nbsp;v(2);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;v[0]&nbsp;=&nbsp;vars[lrel.xvar];&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;v[1]&nbsp;=&nbsp;vars[lrel.yvar];&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;IntArgs&nbsp;a(2);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;a[0]&nbsp;=&nbsp;1;&nbsp;//&nbsp;'x'&nbsp;of&nbsp;x&nbsp;=&nbsp;y&nbsp;+&nbsp;o&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;a[1]&nbsp;=&nbsp;-1;&nbsp;//&nbsp;'y'&nbsp;of&nbsp;x&nbsp;=&nbsp;y&nbsp;+&nbsp;o&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;linear(&nbsp;this,&nbsp;a,&nbsp;v,&nbsp;IRT_EQ,&nbsp;lrel.offset<br>
);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;cout&nbsp;&amp;lt;&amp;lt;&nbsp;&amp;quot;Posted&nbsp;equality<br>
relation&nbsp;(x,y)&nbsp;=&nbsp;(&amp;quot;&nbsp;&amp;lt;&amp;lt;&nbsp;lrel.xvar&nbsp;&amp;lt;&amp;lt;&nbsp;&amp;quot;,&amp;quot;&nbsp;&amp;lt;&amp;lt;<br>
lrel.yvar&nbsp;&amp;lt;&amp;lt;&nbsp;&amp;quot;)&nbsp;w/&nbsp;offset&nbsp;&amp;quot;&nbsp;&amp;lt;&amp;lt;&nbsp;lrel.offset&nbsp;&amp;lt;&amp;lt;<br>
std::endl;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;loop&nbsp;=&nbsp;pIK-&amp;gt;GetNextEqualityPair(&nbsp;lrel<br>
);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;}&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;//&nbsp;All&nbsp;inequality&nbsp;constraints&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;loop&nbsp;=&nbsp;pIK-&amp;gt;GetNextInequalityPair(&nbsp;lrel,&nbsp;true&nbsp;);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;while&nbsp;(loop)&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;IntVarArgs&nbsp;v(2);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;v[0]&nbsp;=&nbsp;vars[lrel.xvar];&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;v[1]&nbsp;=&nbsp;vars[lrel.yvar];&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;IntArgs&nbsp;a(2);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;a[0]&nbsp;=&nbsp;1;&nbsp;//&nbsp;'x'&nbsp;of&nbsp;x&nbsp;&amp;lt;=&nbsp;y&nbsp;+&nbsp;o&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;a[1]&nbsp;=&nbsp;-1;&nbsp;//&nbsp;'y'&nbsp;of&nbsp;x&nbsp;&amp;lt;=&nbsp;y&nbsp;+&nbsp;o&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;linear(&nbsp;this,&nbsp;a,&nbsp;v,&nbsp;IRT_LQ,&nbsp;lrel.offset<br>
);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;cout&nbsp;&amp;lt;&amp;lt;&nbsp;&amp;quot;Posted&nbsp;inequality<br>
relation&nbsp;(x,y)&nbsp;=&nbsp;(&amp;quot;&nbsp;&amp;lt;&amp;lt;&nbsp;lrel.xvar&nbsp;&amp;lt;&amp;lt;&nbsp;&amp;quot;,&amp;quot;&nbsp;&amp;lt;&amp;lt;<br>
lrel.yvar&nbsp;&amp;lt;&amp;lt;&nbsp;&amp;quot;)&nbsp;w/&nbsp;offset&nbsp;&amp;quot;&nbsp;&amp;lt;&amp;lt;&nbsp;lrel.offset&nbsp;&amp;lt;&amp;lt;&nbsp;std::endl;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;loop&nbsp;=&nbsp;pIK-&amp;gt;GetNextInequalityPair(<br>
lrel&nbsp;);&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;}&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;//&nbsp;All&nbsp;duration&nbsp;constraints&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;DurativeVariable&nbsp;dv;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;loop&nbsp;=&nbsp;pIK-&amp;gt;GetNextDuration(&nbsp;dv,&nbsp;true&nbsp;);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;while&nbsp;(&nbsp;loop&nbsp;)&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;IntVarArgs&nbsp;v(1);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;v[0]&nbsp;=&nbsp;vars[dv.xvar];&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;IntArgs&nbsp;a(1);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;a[0]&nbsp;=&nbsp;1;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;linear(&nbsp;this,&nbsp;a,&nbsp;v,&nbsp;IRT_LQ,&nbsp;((int)max)&nbsp;-<br>
dv.duration&nbsp;);&nbsp;//&nbsp;don't&nbsp;run&nbsp;over&nbsp;the&nbsp;end&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;cout&nbsp;&amp;lt;&amp;lt;&nbsp;&amp;quot;Posted&nbsp;duration<br>
relation&nbsp;(x)&nbsp;=&nbsp;(&amp;quot;&nbsp;&amp;lt;&amp;lt;&nbsp;dv.xvar&nbsp;&amp;lt;&amp;lt;&nbsp;&amp;quot;)&nbsp;w/&nbsp;length&nbsp;&amp;quot;<br>
&amp;lt;&amp;lt;&nbsp;dv.duration&nbsp;&amp;lt;&amp;lt;&nbsp;std::endl;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;loop&nbsp;=&nbsp;pIK-&amp;gt;GetNextDuration(&nbsp;dv&nbsp;);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;}&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;//&nbsp;All&nbsp;serialization&nbsp;constraints&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;int&nbsp;ser_count&nbsp;=&nbsp;0;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;std::vector&amp;lt;&nbsp;DurativeVariable&nbsp;&amp;gt;&nbsp;vdv;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;loop&nbsp;=&nbsp;pIK-&amp;gt;GetNextSerialization(&nbsp;vdv,&nbsp;true&nbsp;);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;while&nbsp;(loop)&nbsp;//&nbsp;&amp;amp;&amp;amp;&nbsp;false)&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;IntVarArgs&nbsp;v(&nbsp;(int)&nbsp;vdv.size()&nbsp;);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;IntVarArgs&nbsp;e(&nbsp;(int)&nbsp;vdv.size()&nbsp;);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;IntArgs&nbsp;d(&nbsp;(int)&nbsp;vdv.size()&nbsp;);&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;cout&nbsp;&amp;lt;&amp;lt;&nbsp;&amp;quot;Serializing&nbsp;(x,d):<br>
&amp;quot;;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;for&nbsp;(unsigned&nbsp;int&nbsp;idx&nbsp;=&nbsp;0;&nbsp;idx&nbsp;&amp;lt;<br>
vdv.size();&nbsp;idx++&nbsp;)&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;v[idx]&nbsp;=<br>
vars[vdv[idx].xvar];&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;d[idx]&nbsp;=&nbsp;(int)<br>
vdv[idx].duration;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>
e[idx].init(this,min,max);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;cout&nbsp;&amp;lt;&amp;lt;<br>
&amp;quot;(&amp;quot;&nbsp;&amp;lt;&amp;lt;&nbsp;vdv[idx].xvar&nbsp;&amp;lt;&amp;lt;&nbsp;&amp;quot;,&amp;quot;&nbsp;&amp;lt;&amp;lt;<br>
vdv[idx].duration&nbsp;&amp;lt;&amp;lt;&nbsp;&amp;quot;),&nbsp;&amp;quot;;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;}&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;cout&nbsp;&amp;lt;&amp;lt;&nbsp;endl;&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;IntArgs&nbsp;height(v.size()),&nbsp;m(v.size());&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;for&nbsp;(&nbsp;int&nbsp;idx&nbsp;=&nbsp;v.size();&nbsp;idx--;&nbsp;)&nbsp;{<br>
height[idx]&nbsp;=&nbsp;1;&nbsp;m[idx]&nbsp;=&nbsp;0&nbsp;/*ser_count*/;&nbsp;}&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;cumulatives(this,&nbsp;m,&nbsp;v,&nbsp;d,&nbsp;e,&nbsp;height,&nbsp;1,<br>
true&nbsp;);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;loop&nbsp;=&nbsp;pIK-&amp;gt;GetNextSerialization(&nbsp;vdv<br>
);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;ser_count++;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;}&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;//&nbsp;Instantiate&nbsp;latency&nbsp;variables&nbsp;here&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;std::vector&amp;lt;&nbsp;LatencyBound&nbsp;&amp;gt;&nbsp;vlb;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;loop&nbsp;=&nbsp;pIK-&amp;gt;GetNextLatencyBound(&nbsp;vlb,&nbsp;true&nbsp;);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;while&nbsp;(&nbsp;loop&nbsp;)&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;std::vector&amp;lt;&nbsp;LatencyBound<br>
&amp;gt;::iterator&nbsp;pLB&nbsp;=&nbsp;vlb.begin();&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;//&nbsp;First&nbsp;set&nbsp;up&nbsp;the&nbsp;range&nbsp;for&nbsp;the&nbsp;latency<br>
variables&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;rel(&nbsp;this,&nbsp;latencies[pLB-&amp;gt;latvar],<br>
IRT_GQ,&nbsp;1&nbsp;);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;rel(&nbsp;this,&nbsp;latencies[pLB-&amp;gt;latvar],<br>
IRT_LQ,&nbsp;pLB-&amp;gt;maxdist&nbsp;);&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;cout&nbsp;&amp;lt;&amp;lt;&nbsp;&amp;quot;Latency&nbsp;(l)&nbsp;=&nbsp;(&amp;quot;<br>
&amp;lt;&amp;lt;&nbsp;pLB-&amp;gt;latvar&nbsp;&amp;lt;&amp;lt;&nbsp;&amp;quot;)&nbsp;alternatives:&nbsp;&amp;quot;;&nbsp;&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;//&nbsp;Then&nbsp;define&nbsp;the&nbsp;relationship&nbsp;between<br>
the&nbsp;instances&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;//&nbsp;and&nbsp;the&nbsp;latencies&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;int&nbsp;k&nbsp;=&nbsp;0;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;BoolVarArgs&nbsp;bs(vlb.size());&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;for&nbsp;(&nbsp;pLB&nbsp;=&nbsp;vlb.begin();&nbsp;pLB&nbsp;!=<br>
vlb.end();&nbsp;pLB++&nbsp;)&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;{&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;BoolVar&nbsp;b(this,0,1);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;IntVarArgs&nbsp;v(2);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;v[0]&nbsp;=<br>
vars[pLB-&amp;gt;rcvrvar];&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;v[1]&nbsp;=<br>
vars[pLB-&amp;gt;sendervar];&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;IntArgs&nbsp;a(2);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;a[0]&nbsp;=&nbsp;1;&nbsp;//&nbsp;'x'&nbsp;of&nbsp;x<br>
=&nbsp;y&nbsp;+&nbsp;o&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;a[1]&nbsp;=&nbsp;-1;&nbsp;//&nbsp;'y'&nbsp;of&nbsp;x<br>
=&nbsp;y&nbsp;+&nbsp;o&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;cout&nbsp;&amp;lt;&amp;lt;<br>
&amp;quot;(s,r)&nbsp;=&nbsp;(&amp;quot;&nbsp;&amp;lt;&amp;lt;&nbsp;pLB-&amp;gt;sendervar&nbsp;&amp;lt;&amp;lt;&nbsp;&amp;quot;,&amp;quot;<br>
&amp;lt;&amp;lt;&nbsp;pLB-&amp;gt;rcvrvar&nbsp;&amp;lt;&amp;lt;&nbsp;&amp;quot;)&nbsp;&amp;quot;;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;linear(&nbsp;this,&nbsp;a,&nbsp;v,<br>
IRT_EQ,&nbsp;latencies[pLB-&amp;gt;latvar],&nbsp;b&nbsp;);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;bs[k++]&nbsp;=&nbsp;b;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;}&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;cout&nbsp;&amp;lt;&amp;lt;&nbsp;endl;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;linear(&nbsp;this,&nbsp;bs,&nbsp;IRT_GR,&nbsp;0&nbsp;);&nbsp;//&nbsp;Force<br>
at&nbsp;least&nbsp;one&nbsp;of&nbsp;the&nbsp;constraints&nbsp;in&nbsp;this&nbsp;collection&nbsp;to&nbsp;be&nbsp;true&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;loop&nbsp;=&nbsp;pIK-&amp;gt;GetNextLatencyBound(&nbsp;vlb<br>
);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;}&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;//&nbsp;Dummy&nbsp;latency&nbsp;in&nbsp;case&nbsp;there&nbsp;are&nbsp;no&nbsp;latencies&nbsp;in&nbsp;the&nbsp;spec!&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;//&nbsp;We&nbsp;have&nbsp;to&nbsp;branch&nbsp;on&nbsp;something!&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;rel(&nbsp;this,&nbsp;latencies[pIK-&amp;gt;NumLatencies()],&nbsp;IRT_GQ,&nbsp;1&nbsp;);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;rel(&nbsp;this,&nbsp;latencies[pIK-&amp;gt;NumLatencies()],&nbsp;IRT_LQ,&nbsp;1&nbsp;);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;cout&nbsp;&amp;lt;&amp;lt;&nbsp;&amp;quot;Dummy&nbsp;latency&nbsp;(==1)&amp;quot;&nbsp;&amp;lt;&amp;lt;&nbsp;endl;&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;//&nbsp;Do&nbsp;branching&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;branch(this,&nbsp;vars,&nbsp;INT_VAR_REGRET_MAX_MAX,&nbsp;INT_VAL_MED);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;branch(this,&nbsp;latencies,&nbsp;INT_VAR_SIZE_MIN,&nbsp;INT_VAL_MAX&nbsp;);&nbsp;//<br>
start&nbsp;with&nbsp;max&nbsp;latency&nbsp;and&nbsp;work&nbsp;down&lt;br&gt;<br>
}&lt;br&gt;<br>
&lt;br&gt;<br>
Domain&nbsp;size:&nbsp;100000&lt;br&gt;<br>
Posted&nbsp;equality&nbsp;relation&nbsp;(x,y)&nbsp;=&nbsp;(0,1)&nbsp;w/&nbsp;offset&nbsp;-20000&lt;br&gt;<br>
Posted&nbsp;equality&nbsp;relation&nbsp;(x,y)&nbsp;=&nbsp;(1,2)&nbsp;w/&nbsp;offset&nbsp;-20000&lt;br&gt;<br>
Posted&nbsp;equality&nbsp;relation&nbsp;(x,y)&nbsp;=&nbsp;(2,3)&nbsp;w/&nbsp;offset&nbsp;-20000&lt;br&gt;<br>
Posted&nbsp;equality&nbsp;relation&nbsp;(x,y)&nbsp;=&nbsp;(3,4)&nbsp;w/&nbsp;offset&nbsp;-20000&lt;br&gt;<br>
Posted&nbsp;duration&nbsp;relation&nbsp;(x)&nbsp;=&nbsp;(4)&nbsp;w/&nbsp;length&nbsp;19&nbsp;(0,max-19)&lt;br&gt;<br>
Posted&nbsp;duration&nbsp;relation&nbsp;(x)&nbsp;=&nbsp;(5)&nbsp;w/&nbsp;length&nbsp;57&nbsp;(0,&nbsp;max-57)&lt;br&gt;<br>
Serializing&nbsp;(x,d):&nbsp;(0,19),&nbsp;(1,19),&nbsp;(2,19),&nbsp;(3,19),&nbsp;(4,19),&lt;br&gt;<br>
Dummy&nbsp;latency&nbsp;(==1)&lt;br&gt;<br>
Stats:&nbsp;Search&nbsp;Stats&lt;br&gt;<br>
&lt;br&gt;<br>
Initial&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;propagators:&amp;nbsp;&amp;nbsp;&nbsp;4294967295&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;branchings:&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>
4294967295&lt;br&gt;<br>
&lt;br&gt;<br>
Summary&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;propagations:&amp;nbsp;&nbsp;0&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;failures:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>
1&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>
clones:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;0&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>
commits:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;0&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;peak&nbsp;memory:&amp;nbsp;&amp;nbsp;&nbsp;5&nbsp;KB&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;<br>
<br>
&lt;/div&gt;<br>
<br>
&lt;/body&gt;<br>
<br>
&lt;/html&gt;<br>

</tt>
