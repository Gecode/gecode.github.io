<tt>
&lt;div&gt;hi&nbsp;Guido,&lt;/div&gt;<br>
&lt;div&gt;Thanks&nbsp;for&nbsp;your&nbsp;reply!&lt;/div&gt;<br>
&lt;div&gt;1.&nbsp;The&nbsp;second&nbsp;question&nbsp;is&amp;nbsp;not&amp;nbsp;a&nbsp;problem&nbsp;to&nbsp;me&nbsp;now,&nbsp;for&nbsp;your&nbsp;reminding.&nbsp;Yes.&nbsp;As&nbsp;you&nbsp;said,&nbsp;if&nbsp;i&nbsp;want&nbsp;to&nbsp;multiply&nbsp;two&nbsp;variables,&nbsp;mult&nbsp;constraint&nbsp;is&nbsp;a&nbsp;choose.&amp;nbsp;&nbsp;Because&nbsp;of&amp;nbsp;carelessness,&amp;nbsp;i&nbsp;have&nbsp;to&nbsp;study&nbsp;manual&nbsp;of&nbsp;Gecode&nbsp;well&nbsp;again.&lt;/div&gt;<br>
<br>
&lt;div&gt;2.&nbsp;But&nbsp;i&nbsp;still&nbsp;not&nbsp;understand&nbsp;your&nbsp;reply&nbsp;well&nbsp;about&nbsp;the&nbsp;first&nbsp;question.&nbsp;whether&nbsp;your&nbsp;means&nbsp;are&nbsp;that&nbsp;distinct&nbsp;constraint&nbsp;is&nbsp;only&nbsp;used&nbsp;for&nbsp;IntVarArgs,&nbsp;as&nbsp;written&nbsp;in&nbsp;the&nbsp;manual&nbsp;of&nbsp;Gecode&nbsp;---&nbsp;&lt;/div&gt;<br>
&lt;div&gt;<br>
&lt;table&nbsp;cellspacing=&quot;0&quot;&nbsp;cellpadding=&quot;0&quot;&nbsp;border=&quot;0&quot;&gt;<br>
&lt;tbody&gt;<br>
&lt;tr&gt;<br>
&lt;td&nbsp;class=&quot;memItemLeft&quot;&nbsp;valign=&quot;top&quot;&nbsp;nowrap&nbsp;align=&quot;right&quot;&gt;&amp;quot;&nbsp;void&amp;nbsp;&lt;/td&gt;<br>
&lt;td&nbsp;class=&quot;memItemRight&quot;&nbsp;valign=&quot;bottom&quot;&gt;&lt;a&nbsp;class=&quot;el&quot;&nbsp;href=&quot;mk:@MSITStore:D:\Program%20Files\Gecode\doc\GecodeReference.chm::/group__TaskModelIntDistinct.html#g5f4f4006b72f95618b3030815a8718a5&quot;&gt;Gecode::distinct&lt;/a&gt;&nbsp;(Space&nbsp;&amp;amp;home,&nbsp;const&nbsp;IntVarArgs&nbsp;&amp;amp;&lt;a&nbsp;class=&quot;el&quot;&nbsp;href=&quot;mk:@MSITStore:D:\Program%20Files\Gecode\doc\GecodeReference.chm::/kakuro_8cpp.html#e928e6fd222358d27be0a56a8ade81ce&quot;&gt;x&lt;/a&gt;,&nbsp;IntConLevel&nbsp;icl=ICL_DEF)&amp;quot;&lt;/td&gt;<br>
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;<br>
&lt;div&gt;But&nbsp;i&nbsp;found&nbsp;that&amp;nbsp;&nbsp;i&nbsp;can&nbsp;also&nbsp;use&nbsp;IntVarArray&nbsp;in&nbsp;distinct&nbsp;constraint&nbsp;through&nbsp;testing,&nbsp;and&nbsp;also&nbsp;see&nbsp;it&nbsp;in&nbsp;the&nbsp;example&nbsp;&amp;quot;money.cpp&amp;quot;&nbsp;supplied&nbsp;by&nbsp;the&nbsp;manual&nbsp;of&nbsp;Gecode&nbsp;3.1.0.&nbsp;As&nbsp;follows:&lt;/div&gt;<br>
&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;quot;&amp;nbsp;IntVarArray&nbsp;le;&lt;/div&gt;<br>
&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;distinct(*this,&nbsp;le,&nbsp;opt.icl())&nbsp;&amp;quot;&lt;/div&gt;<br>
&lt;div&gt;I&nbsp;know&nbsp;they&nbsp;are&amp;nbsp;Array,&amp;nbsp;from&nbsp;their&nbsp;definition&nbsp;i&nbsp;have&nbsp;no&nbsp;idea&nbsp;to&nbsp;understand&nbsp;the&nbsp;reason&nbsp;why&nbsp;they&nbsp;can&nbsp;all&nbsp;be&nbsp;used&nbsp;in&nbsp;distinct&nbsp;constraint&nbsp;.&lt;/div&gt;<br>
&lt;div&gt;Look&nbsp;forward&nbsp;to&nbsp;your&nbsp;reply.&lt;/div&gt;<br>
&lt;div&gt;Thanks&lt;/div&gt;<br>
&lt;div&gt;Kayler&lt;br&gt;&lt;br&gt;&lt;/div&gt;<br>
&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;2009/8/2&nbsp;Guido&nbsp;Tack&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:tack@ps.uni-sb.de&quot;&gt;tack@ps.uni-sb.de&lt;/a&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;PADDING-LEFT:&nbsp;1ex;&nbsp;MARGIN:&nbsp;0px&nbsp;0px&nbsp;0px&nbsp;0.8ex;&nbsp;BORDER-LEFT:&nbsp;#ccc&nbsp;1px&nbsp;solid&quot;&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;Kayler&nbsp;Yao&nbsp;wrote:&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;PADDING-LEFT:&nbsp;1ex;&nbsp;MARGIN:&nbsp;0px&nbsp;0px&nbsp;0px&nbsp;0.8ex;&nbsp;BORDER-LEFT:&nbsp;#ccc&nbsp;1px&nbsp;solid&quot;&gt;1.&nbsp;the&nbsp;difference&nbsp;bettween&nbsp;IntVarArray&nbsp;and&nbsp;IntVarArgs&nbsp;£¬and&nbsp;how&nbsp;to&nbsp;use&nbsp;them&lt;br&gt;&amp;nbsp;&nbsp;As&nbsp;explained&nbsp;in&nbsp;the&nbsp;manual&nbsp;of&nbsp;Gecode,&nbsp;&amp;nbsp;IntVarArgs&nbsp;is&nbsp;Argument&nbsp;array&nbsp;which&nbsp;is&nbsp;just&nbsp;good&nbsp;enough&nbsp;for&nbsp;passing&nbsp;arguments&nbsp;with&nbsp;automatic&nbsp;memory&nbsp;management.&nbsp;IntVarArray&nbsp;is&nbsp;Variable&nbsp;array&nbsp;which&nbsp;can&nbsp;store&nbsp;variables&nbsp;and&nbsp;be&nbsp;used&nbsp;for&nbsp;storing&nbsp;the&nbsp;variables&nbsp;being&nbsp;part&nbsp;of&nbsp;a&nbsp;solution&nbsp;(script).&lt;br&gt;<br>
&amp;nbsp;From&nbsp;these&nbsp;description,i&nbsp;can&nbsp;see&nbsp;that&nbsp;IntVarArgs&nbsp;can&nbsp;be&nbsp;used&nbsp;when&nbsp;i&nbsp;need&nbsp;automatic&nbsp;memory&nbsp;management.But&nbsp;When&nbsp;i&nbsp;need&nbsp;automatic&nbsp;memory&nbsp;management,&nbsp;i&nbsp;don&amp;#39;t&nbsp;know.&nbsp;If&nbsp;you&nbsp;give&nbsp;me&nbsp;an&nbsp;simple&nbsp;example,&nbsp;i&nbsp;maybe&nbsp;can&nbsp;understand&nbsp;it.&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;br&gt;&lt;/div&gt;Take&nbsp;sudoku&nbsp;as&nbsp;an&nbsp;example.&nbsp;&amp;nbsp;It&nbsp;has&nbsp;81&nbsp;variables,&nbsp;one&nbsp;for&nbsp;each&nbsp;field,&nbsp;so&nbsp;you&nbsp;have&nbsp;an&nbsp;IntVarArray&nbsp;x&nbsp;for&nbsp;these&nbsp;variables.&nbsp;&amp;nbsp;Now&nbsp;you&nbsp;want&nbsp;to&nbsp;post&nbsp;the&nbsp;constraint&nbsp;that&nbsp;the&nbsp;first&nbsp;row,&nbsp;x[0],...,x[8]&nbsp;must&nbsp;be&nbsp;distinct.&nbsp;&amp;nbsp;So&nbsp;you&nbsp;create&nbsp;an&nbsp;IntVarArgs&nbsp;containing&nbsp;those&nbsp;variables&nbsp;and&nbsp;pass&nbsp;it&nbsp;to&nbsp;the&nbsp;distinct&nbsp;constraint.&nbsp;&amp;nbsp;You&nbsp;don&amp;#39;t&nbsp;have&nbsp;to&nbsp;worry&nbsp;about&nbsp;memory&nbsp;management&nbsp;for&nbsp;that&nbsp;array.&nbsp;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;&lt;br&gt;&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;PADDING-LEFT:&nbsp;1ex;&nbsp;MARGIN:&nbsp;0px&nbsp;0px&nbsp;0px&nbsp;0.8ex;&nbsp;BORDER-LEFT:&nbsp;#ccc&nbsp;1px&nbsp;solid&quot;&gt;&amp;nbsp;2.&nbsp;how&nbsp;to&nbsp;post&nbsp;the&nbsp;constraint&nbsp;----multiplication&nbsp;of&nbsp;two&nbsp;variable?&lt;br&gt;&amp;nbsp;&nbsp;For&nbsp;instance&nbsp;,&lt;br&gt;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;IntVarArry&nbsp;&amp;nbsp;x;&lt;br&gt;<br>
&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;x(*this,4,1,6);&lt;br&gt;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;I&nbsp;want&nbsp;to&nbsp;have&nbsp;a&nbsp;constraint&nbsp;&amp;quot;&nbsp;x[0]&nbsp;*&nbsp;x[1]&nbsp;=&nbsp;x[2]&nbsp;&amp;quot;.when&nbsp;i&nbsp;write&nbsp;&amp;quot;&nbsp;post(*this,&nbsp;x[0]&nbsp;*&nbsp;x[1]&nbsp;&amp;nbsp;&nbsp;==&nbsp;&amp;nbsp;x[2],o&nbsp;pt.icl(&nbsp;)&nbsp;);&amp;quot;&nbsp;in&nbsp;my&nbsp;test&nbsp;program,&nbsp;errors&nbsp;come&nbsp;out.&nbsp;&amp;nbsp;I&nbsp;began&nbsp;to&nbsp;doubt&nbsp;that&nbsp;whether&nbsp;you&nbsp;can&nbsp;use&nbsp;the&nbsp;sign&nbsp;of&nbsp;&amp;quot;&nbsp;*&nbsp;&amp;quot;.&nbsp;&amp;nbsp;After&nbsp;testing&nbsp;&amp;quot;&nbsp;post(*this,&nbsp;2&nbsp;*&nbsp;x[1]&nbsp;&amp;nbsp;&nbsp;==&nbsp;&amp;nbsp;x[2],o&nbsp;pt.icl(&nbsp;)&nbsp;&amp;nbsp;);&amp;quot;,&nbsp;i&nbsp;have&nbsp;know&nbsp;that&nbsp;i&nbsp;can&nbsp;use&nbsp;&amp;quot;&nbsp;*&nbsp;&amp;quot;.&nbsp;So,&nbsp;I&nbsp;doubt&nbsp;that&nbsp;we&nbsp;can&amp;#39;t&nbsp;multiply&nbsp;two&nbsp;variable&nbsp;with&nbsp;the&nbsp;sign&nbsp;&amp;quot;&nbsp;*&nbsp;&amp;quot;.&nbsp;Who&nbsp;can&nbsp;tell&nbsp;me&nbsp;how&nbsp;to&nbsp;add&nbsp;this&nbsp;constraint&nbsp;?&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;br&gt;&lt;/div&gt;The&nbsp;minimodel&nbsp;library&nbsp;(which&nbsp;contains&nbsp;the&nbsp;post(...)&nbsp;functions)&nbsp;only&nbsp;supports&nbsp;linear&nbsp;expressions,&nbsp;i.e.&nbsp;multiplication&nbsp;with&nbsp;constants.&nbsp;&amp;nbsp;To&nbsp;multiply&nbsp;two&nbsp;variables,&nbsp;use&nbsp;the&nbsp;mult&nbsp;constraint.&lt;br&gt;&lt;br&gt;Cheers,&lt;br&gt;<br>
&lt;font&nbsp;color=&quot;#888888&quot;&gt;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;&amp;nbsp;Guido&lt;br&gt;&lt;br&gt;&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;<br>

</tt>
