<tt>
Hi,&lt;br&gt;I&nbsp;have&nbsp;tried&nbsp;to&nbsp;use&nbsp;clones&nbsp;to&nbsp;reason&nbsp;with&nbsp;models.&nbsp;&lt;br&gt;I&nbsp;got&nbsp;some&nbsp;execution&nbsp;errors&nbsp;which&nbsp;I&nbsp;do&nbsp;not&nbsp;understand.&nbsp;May&nbsp;I&nbsp;show&nbsp;it&nbsp;to&nbsp;you&nbsp;with&nbsp;a&nbsp;little&nbsp;example?&lt;br&gt;&lt;br&gt;I&nbsp;create&nbsp;a&nbsp;class&nbsp;Model&nbsp;with&nbsp;an&nbsp;IntVarArray&nbsp;&quot;vars&quot;&nbsp;as&nbsp;its&nbsp;own&nbsp;attribute.&nbsp;&lt;br&gt;The&nbsp;default&nbsp;constructor&nbsp;initializes&nbsp;&quot;vars&quot;&nbsp;with&nbsp;two&nbsp;IntVar,&nbsp;vars[0]&nbsp;=&nbsp;0,&nbsp;and&nbsp;vars[1]&nbsp;=&nbsp;[0..1].&lt;br&gt;The&nbsp;function&nbsp;addVar()&nbsp;adds&nbsp;a&nbsp;new&nbsp;IntVar&nbsp;to&nbsp;&quot;vars&quot;.&nbsp;The&nbsp;function&nbsp;postEQ()&nbsp;constraints&nbsp;two&nbsp;IntVars&nbsp;of&nbsp;&quot;vars&quot;&nbsp;to&nbsp;be&nbsp;equal.&lt;br&gt;&lt;br&gt;In&nbsp;the&nbsp;main&nbsp;program&nbsp;we&nbsp;create&nbsp;a&nbsp;first&nbsp;model&nbsp;&quot;m&quot;&nbsp;with&nbsp;the&nbsp;default&nbsp;constructor.&nbsp;&lt;br&gt;We&nbsp;add&nbsp;two&nbsp;new&nbsp;vars&nbsp;&quot;vars[2]&quot;&nbsp;and&nbsp;&quot;vars[3]&quot;,&nbsp;and&nbsp;constraint&nbsp;vars[2]&nbsp;=&nbsp;vars[0]&nbsp;and&nbsp;vars[3]&nbsp;=&nbsp;vars[1].&nbsp;&lt;br&gt;We&nbsp;request&nbsp;propagation&nbsp;and&nbsp;show&nbsp;the&nbsp;solution.&lt;br&gt;&lt;br&gt;Then&nbsp;we&nbsp;create&nbsp;&quot;m2&quot;&nbsp;by&nbsp;using&nbsp;&quot;m&quot;&nbsp;and&nbsp;the&nbsp;copy&nbsp;constructor.&lt;br&gt;We&nbsp;add&nbsp;two&nbsp;new&nbsp;vars&nbsp;&quot;vars[4]&quot;&nbsp;and&nbsp;&quot;vars[5]&quot;&nbsp;and&nbsp;constraints&nbsp;vars[4]&nbsp;=&nbsp;vars[0]&nbsp;and&nbsp;vars[5]&nbsp;=&nbsp;vars[1].&nbsp;&lt;br&gt;While&nbsp;it&nbsp;succeeds&nbsp;posting&nbsp;vars[4]&nbsp;=&nbsp;vars[0]&nbsp;it&nbsp;fails&nbsp;trying&nbsp;to&nbsp;post&nbsp;vars[5]&nbsp;=&nbsp;vars[1].&nbsp;&lt;br&gt;&lt;br&gt;If&nbsp;(always&nbsp;in&nbsp;&quot;m2&quot;)&nbsp;we&nbsp;try&nbsp;with&nbsp;vars[4]&nbsp;=&nbsp;vars[2]&nbsp;and&nbsp;vars[5]&nbsp;=&nbsp;vars[3]&nbsp;it&nbsp;fails&nbsp;too.&nbsp;&lt;br&gt;It&nbsp;succeeds&nbsp;posting&nbsp;vars[4]&nbsp;=&nbsp;vars[2],&nbsp;but&nbsp;it&nbsp;fails&nbsp;trying&nbsp;to&nbsp;post&nbsp;vars[5]&nbsp;=&nbsp;vars[3].&nbsp;&lt;br&gt;If&nbsp;we&nbsp;try&nbsp;with&nbsp;vars[4]=&nbsp;vars[5]&nbsp;it&nbsp;also&nbsp;fails.&lt;br&gt;&lt;br&gt;It&nbsp;seems&nbsp;that&nbsp;the&nbsp;error&nbsp;appears&nbsp;when&nbsp;we&nbsp;try&nbsp;to&nbsp;constraint&nbsp;a&nbsp;non-asigned&nbsp;&quot;new&nbsp;variable&quot;&nbsp;(created&nbsp;in&nbsp;the&nbsp;current&nbsp;Space&nbsp;&quot;m2&quot;)&lt;br&gt;with&nbsp;a&nbsp;non-asigned&nbsp;&quot;old&nbsp;variable&quot;&nbsp;(created&nbsp;in&nbsp;the&nbsp;Space&nbsp;&quot;m&quot;,&nbsp;from&nbsp;which&nbsp;&quot;m2&quot;&nbsp;has&nbsp;been&nbsp;cloned&nbsp;from).&nbsp;&lt;br&gt;An&nbsp;error&nbsp;also&nbsp;appears&nbsp;when&nbsp;we&nbsp;try&nbsp;to&nbsp;constraint&nbsp;two&nbsp;non-asigned&nbsp;variables&nbsp;in&nbsp;the&nbsp;clonated&nbsp;space.&nbsp;In&nbsp;&quot;m2&quot;,&nbsp;both&nbsp;vars[4]&nbsp;=&nbsp;vars[5]&nbsp;and&nbsp;vars[2]&nbsp;=&nbsp;vars[3]&nbsp;fails,&nbsp;while&nbsp;in&nbsp;&quot;m&quot;&nbsp;vars[2]&nbsp;=&nbsp;vars[3]&nbsp;succeeds.&lt;br&gt;&lt;br&gt;Do&nbsp;you&nbsp;know&nbsp;what&nbsp;is&nbsp;the&nbsp;problem?&nbsp;Am&nbsp;I&nbsp;doing&nbsp;something&nbsp;wrong&nbsp;with&nbsp;the&nbsp;copy&nbsp;constructor?&lt;br&gt;&lt;br&gt;Gecode&nbsp;Version:&nbsp;Gecode&nbsp;3.2.2&lt;br&gt;Compiler&nbsp;tools:&nbsp;Microsoft&nbsp;Visual&nbsp;Studio&nbsp;2008&lt;br&gt;OS:&nbsp;Microsoft&nbsp;Windows&nbsp;XP&nbsp;SP3&lt;br&gt;&lt;br&gt;Thank&nbsp;you&nbsp;very&nbsp;much&nbsp;in&nbsp;advance,&lt;br&gt;Nacho&lt;br&gt;&lt;br&gt;/*&nbsp;EXAMPLE&nbsp;*/&lt;br&gt;&lt;br&gt;&lt;br&gt;#include&nbsp;&amp;lt;gecode/int.hh&amp;gt;&lt;br&gt;#include&nbsp;&amp;lt;gecode/search.hh&amp;gt;&lt;br&gt;&lt;br&gt;using&nbsp;namespace&nbsp;Gecode;&lt;br&gt;&lt;br&gt;class&nbsp;Model&nbsp;:&nbsp;public&nbsp;Space&nbsp;{&lt;br&gt;protected:&lt;br&gt;&amp;nbsp;&nbsp;IntVarArray&nbsp;vars;&lt;br&gt;public:&lt;br&gt;&amp;nbsp;&nbsp;Model(void)&nbsp;:&nbsp;Space(),&nbsp;vars(*this,&nbsp;2,&nbsp;0,&nbsp;1){&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;&nbsp;rel(*this,&nbsp;vars[0],&nbsp;IRT_EQ,&nbsp;0);&lt;br&gt;&amp;nbsp;&nbsp;};&lt;br&gt;&amp;nbsp;&nbsp;&lt;br&gt;&amp;nbsp;&nbsp;Model(bool&nbsp;share,&nbsp;Model&amp;amp;&nbsp;s)&nbsp;:&nbsp;Space(share,&nbsp;s)&nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;vars.update(*this,&nbsp;share,&nbsp;s.vars);&lt;br&gt;&amp;nbsp;&nbsp;}&lt;br&gt;&lt;br&gt;&amp;nbsp;&nbsp;virtual&nbsp;Space*&nbsp;copy(bool&nbsp;share)&nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;return&nbsp;new&nbsp;Model(share,*this);&lt;br&gt;&amp;nbsp;&nbsp;}&lt;br&gt;&lt;br&gt;&amp;nbsp;&nbsp;void&nbsp;print(void)&nbsp;const&nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;std::cout&nbsp;&amp;lt;&amp;lt;&nbsp;vars&nbsp;&amp;lt;&amp;lt;&nbsp;std::endl;&lt;br&gt;&amp;nbsp;&nbsp;}&lt;br&gt;&lt;br&gt;&amp;nbsp;&nbsp;void&nbsp;newVar(){&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;&amp;nbsp;vars.add(*this,&nbsp;IntVar(*this,&nbsp;0,&nbsp;1));&lt;br&gt;&amp;nbsp;&nbsp;}&lt;br&gt;&lt;br&gt;&amp;nbsp;&nbsp;void&nbsp;postEQ(int&nbsp;i,&nbsp;int&nbsp;j){&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;rel(*this,&nbsp;vars[i],&nbsp;IRT_EQ,&nbsp;vars[j]);&lt;br&gt;&amp;nbsp;&nbsp;}&lt;br&gt;&lt;br&gt;};&lt;br&gt;&lt;br&gt;&lt;br&gt;int&nbsp;main(int&nbsp;argc,&nbsp;char*&nbsp;argv[])&nbsp;{&lt;br&gt;&amp;nbsp;&nbsp;Model*&nbsp;m&nbsp;=&nbsp;new&nbsp;Model;&lt;br&gt;&amp;nbsp;&nbsp;m-&amp;gt;newVar();&lt;br&gt;&amp;nbsp;&nbsp;m-&amp;gt;newVar();&lt;br&gt;&amp;nbsp;&nbsp;m-&amp;gt;postEQ(2,0);&lt;br&gt;&amp;nbsp;&nbsp;m-&amp;gt;postEQ(3,1);&lt;br&gt;&amp;nbsp;&nbsp;m-&amp;gt;status();&lt;br&gt;&amp;nbsp;&nbsp;m-&amp;gt;print();&lt;br&gt;&lt;br&gt;&amp;nbsp;//------------------//&lt;br&gt;&lt;br&gt;&amp;nbsp;&nbsp;Model*&nbsp;m2&nbsp;=&nbsp;dynamic_cast&amp;lt;Model*&amp;gt;(m-&amp;gt;copy(true));&amp;nbsp;&nbsp;&lt;br&gt;&amp;nbsp;&nbsp;m2-&amp;gt;newVar();&lt;br&gt;&amp;nbsp;&nbsp;m2-&amp;gt;newVar();&lt;br&gt;&amp;nbsp;&nbsp;m2-&amp;gt;postEQ(4,0);&lt;br&gt;&amp;nbsp;&nbsp;m2-&amp;gt;postEQ(5,1);&lt;br&gt;&amp;nbsp;&nbsp;m2-&amp;gt;status();&lt;br&gt;&amp;nbsp;&nbsp;m2-&amp;gt;print();&lt;br&gt;&lt;br&gt;&amp;nbsp;&nbsp;return&nbsp;0;&lt;br&gt;}&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;<br>

</tt>
