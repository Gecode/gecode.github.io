<tt>
&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&nbsp;style=&quot;word-wrap:&nbsp;break-word;&nbsp;-webkit-nbsp-mode:&nbsp;space;&nbsp;-webkit-line-break:&nbsp;after-white-space;&nbsp;&quot;&gt;&lt;div&gt;Hi,&lt;/div&gt;I&nbsp;just&nbsp;had&nbsp;the&nbsp;idea&nbsp;that&nbsp;maybe&nbsp;QuickXplain&nbsp;could&nbsp;take&nbsp;advantage&nbsp;of&nbsp;the&nbsp;afc&nbsp;values,&nbsp;even&nbsp;if&nbsp;you&nbsp;don't&nbsp;have&nbsp;the&nbsp;link&nbsp;between&nbsp;propagators&nbsp;and&nbsp;high-level&nbsp;constraints.&nbsp;&amp;nbsp;Simply&nbsp;take&nbsp;the&nbsp;afc&nbsp;of&nbsp;the&nbsp;variables,&nbsp;and&nbsp;first&nbsp;try&nbsp;the&nbsp;constraints&nbsp;that&nbsp;are&nbsp;linked&nbsp;to&nbsp;the&nbsp;variables&nbsp;with&nbsp;high&nbsp;afc.&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Cheers,&lt;/div&gt;&lt;div&gt;&lt;span&nbsp;class=&quot;Apple-tab-span&quot;&nbsp;style=&quot;white-space:&nbsp;pre;&nbsp;&quot;&gt;&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&lt;/span&gt;Guido&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;Mikael&nbsp;Zayenz&nbsp;Lagerkvist&nbsp;wrote:&lt;/div&gt;&lt;br&nbsp;class=&quot;Apple-interchange-newline&quot;&gt;&lt;blockquote&nbsp;type=&quot;cite&quot;&gt;Hi,&lt;br&gt;&lt;br&gt;Debugging&nbsp;failures&nbsp;in&nbsp;constraint&nbsp;programs&nbsp;is&nbsp;unfortunately&nbsp;a&nbsp;very&nbsp;hard&nbsp;problem.&nbsp;A&nbsp;main&nbsp;problem&nbsp;is&nbsp;that&nbsp;the&nbsp;reasons&nbsp;behind&nbsp;a&nbsp;failure&nbsp;to&nbsp;find&nbsp;solutions&nbsp;might&nbsp;be&nbsp;very&nbsp;global&nbsp;in&nbsp;nature.&nbsp;As&nbsp;a&nbsp;very&nbsp;simple&nbsp;example,&nbsp;think&nbsp;of&nbsp;a&nbsp;ring&nbsp;of&nbsp;less-than&nbsp;constraints&nbsp;(x1&nbsp;&amp;lt;&nbsp;x2&nbsp;&amp;lt;&nbsp;...&nbsp;&amp;lt;&nbsp;xn&nbsp;&amp;lt;&nbsp;x1).&nbsp;There&nbsp;is&nbsp;obviously&nbsp;no&nbsp;solution,&nbsp;but&nbsp;the&nbsp;failure&nbsp;depends&nbsp;on&nbsp;all&nbsp;the&nbsp;constraints.&nbsp;Removing&nbsp;any&nbsp;one&nbsp;of&nbsp;the&nbsp;constraints&nbsp;gives&nbsp;a&nbsp;solution&nbsp;(given&nbsp;that&nbsp;the&nbsp;initial&nbsp;domains&nbsp;admit&nbsp;a&nbsp;solution&nbsp;that&nbsp;is).&lt;br&gt;<br>
<br>
<br>
&lt;br&gt;One&nbsp;possibility&nbsp;would&nbsp;be&nbsp;for&nbsp;you&nbsp;to&nbsp;implement&nbsp;something&nbsp;like&nbsp;QuickXplain&nbsp;[1],&nbsp;which&nbsp;was&nbsp;developed&nbsp;for&nbsp;use&nbsp;in&nbsp;an&nbsp;interactive&nbsp;configuration&nbsp;system.&nbsp;The&nbsp;main&nbsp;idea&nbsp;is&nbsp;to&nbsp;find&nbsp;a&nbsp;minimal&nbsp;set&nbsp;of&nbsp;constraints&nbsp;that&nbsp;gives&nbsp;no&nbsp;solutions&nbsp;by&nbsp;repeatedly&nbsp;finding&nbsp;constraints&nbsp;that&nbsp;when&nbsp;added&nbsp;lead&nbsp;to&nbsp;failure.&nbsp;If&nbsp;your&nbsp;problems&nbsp;are&nbsp;not&nbsp;too&nbsp;hard,&nbsp;then&nbsp;this&nbsp;is&nbsp;probably&nbsp;a&nbsp;good&nbsp;idea&nbsp;and&nbsp;reasonably&nbsp;e&nbsp;to&nbsp;implement.&nbsp;&lt;br&gt;<br>
<br>
<br>
<br>
&lt;br&gt;Another&nbsp;possibility,&nbsp;that&nbsp;is&nbsp;more&nbsp;akin&nbsp;to&nbsp;what&nbsp;you&nbsp;are&nbsp;asking,&nbsp;would&nbsp;be&nbsp;to&nbsp;use&nbsp;the&nbsp;afc.&nbsp;Afc&nbsp;stands&nbsp;for&nbsp;accumulated&nbsp;failure&nbsp;count,&nbsp;and&nbsp;is&nbsp;used&nbsp;for&nbsp;branching&nbsp;heuristics.&nbsp;It&nbsp;simply&nbsp;records&nbsp;the&nbsp;number&nbsp;of&nbsp;times&nbsp;each&nbsp;propagator&nbsp;has&nbsp;reported&nbsp;a&nbsp;failure.&nbsp;Note&nbsp;that&nbsp;the&nbsp;afc&nbsp;is&nbsp;a&nbsp;heuristic&nbsp;measure,&nbsp;in&nbsp;that&nbsp;there&nbsp;might&nbsp;be&nbsp;many&nbsp;propagators&nbsp;that&nbsp;would&nbsp;have&nbsp;reported&nbsp;failure,&nbsp;but&nbsp;only&nbsp;one&nbsp;does&nbsp;so.&nbsp;Unfortunately,&nbsp;while&nbsp;you&nbsp;can&nbsp;access&nbsp;all&nbsp;the&nbsp;propagators&nbsp;and&nbsp;get&nbsp;their&nbsp;afc&nbsp;(using&nbsp;the&nbsp;Propagators&nbsp;class),&nbsp;there&nbsp;is&nbsp;no&nbsp;way&nbsp;native&nbsp;to&nbsp;Gecode&nbsp;to&nbsp;connect&nbsp;the&nbsp;propagator&nbsp;instances&nbsp;with&nbsp;your&nbsp;model&nbsp;level&nbsp;constraints.&nbsp;That&nbsp;means&nbsp;that&nbsp;you&nbsp;would&nbsp;have&nbsp;to&nbsp;modify&nbsp;Gecode&nbsp;itself&nbsp;to&nbsp;use&nbsp;the&nbsp;afc.&lt;br&gt;<br>
<br>
<br>
&lt;br&gt;Cheers,&lt;br&gt;Mikael&lt;br&gt;&lt;br&gt;[1]&nbsp;&lt;a&nbsp;href=&quot;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.23.3472&quot;&nbsp;target=&quot;_blank&quot;&gt;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.23.3472&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;<br>
<br>
On&nbsp;Wed,&nbsp;Feb&nbsp;24,&nbsp;2010&nbsp;at&nbsp;8:51&nbsp;PM,&nbsp;Adrian&nbsp;Secord&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:ajsecord@cs.nyu.edu&quot;&nbsp;target=&quot;_blank&quot;&gt;ajsecord@cs.nyu.edu&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;<br>
&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;border-left:&nbsp;1px&nbsp;solid&nbsp;rgb(204,&nbsp;204,&nbsp;204);&nbsp;margin:&nbsp;0pt&nbsp;0pt&nbsp;0pt&nbsp;0.8ex;&nbsp;padding-left:&nbsp;1ex;&quot;&gt;Hi,&nbsp;all:&lt;br&gt;<br>
&lt;br&gt;<br>
My&nbsp;colleagues&nbsp;and&nbsp;I&nbsp;are&nbsp;working&nbsp;on&nbsp;a&nbsp;user&nbsp;interface&nbsp;research&nbsp;project&nbsp;that&nbsp;uses&nbsp;Gecode&nbsp;internally&nbsp;to&nbsp;solve&nbsp;integer&nbsp;set&nbsp;problems.&nbsp;&amp;nbsp;Our&nbsp;experiences&nbsp;with&nbsp;Gecode&nbsp;have&nbsp;been&nbsp;excellent;&nbsp;we&nbsp;are&nbsp;limited&nbsp;mostly&nbsp;by&nbsp;our&nbsp;lack&nbsp;of&nbsp;knowledge&nbsp;in&nbsp;the&nbsp;field&nbsp;of&nbsp;constraint&nbsp;programming.&lt;br&gt;<br>
<br>
<br>
<br>
&lt;br&gt;<br>
In&nbsp;our&nbsp;application,&nbsp;the&nbsp;constraints&nbsp;in&nbsp;our&nbsp;problems&nbsp;come&nbsp;from&nbsp;the&nbsp;user&nbsp;via&nbsp;a&nbsp;domain-appropriate&nbsp;user&nbsp;interface&nbsp;and&nbsp;we&nbsp;translate&nbsp;them&nbsp;into&nbsp;Gecode&nbsp;equivalents.&nbsp;&amp;nbsp;The&nbsp;difficulty&nbsp;is&nbsp;that&nbsp;the&nbsp;user&nbsp;might&nbsp;specify&nbsp;constraints&nbsp;that&nbsp;lead&nbsp;to&nbsp;no&nbsp;solutions&nbsp;being&nbsp;found&nbsp;at&nbsp;all.&nbsp;&amp;nbsp;Our&nbsp;users&nbsp;are&nbsp;not&nbsp;experts.&lt;br&gt;<br>
<br>
<br>
<br>
&lt;br&gt;<br>
What&nbsp;we'd&nbsp;like&nbsp;to&nbsp;do&nbsp;is&nbsp;give&nbsp;the&nbsp;user&nbsp;feedback&nbsp;about&nbsp;what&nbsp;they&nbsp;can&nbsp;do&nbsp;to&nbsp;best&nbsp;fix&nbsp;the&nbsp;situation,&nbsp;or&nbsp;possibly&nbsp;fix&nbsp;the&nbsp;situation&nbsp;for&nbsp;them.&nbsp;&amp;nbsp;In&nbsp;particular,&nbsp;the&nbsp;constraints&nbsp;that&nbsp;come&nbsp;from&nbsp;the&nbsp;user&nbsp;are&nbsp;not&nbsp;necessarily&nbsp;set&nbsp;in&nbsp;stone&nbsp;--&nbsp;they&nbsp;are&nbsp;vague&nbsp;and&nbsp;messy,&nbsp;a&nbsp;problem&nbsp;with&nbsp;humans.&nbsp;;)&nbsp;&amp;nbsp;For&nbsp;our&nbsp;application,&nbsp;it&nbsp;is&nbsp;far&nbsp;better&nbsp;to&nbsp;ignore&nbsp;a&nbsp;constraint&nbsp;and&nbsp;come&nbsp;up&nbsp;with&nbsp;some&nbsp;solution&nbsp;than&nbsp;to&nbsp;not&nbsp;return&nbsp;a&nbsp;solution&nbsp;at&nbsp;all.&nbsp;&amp;nbsp;The&nbsp;user&nbsp;can&nbsp;then&nbsp;adjust&nbsp;and&nbsp;iterate&nbsp;to&nbsp;get&nbsp;to&nbsp;a&nbsp;final&nbsp;solution.&lt;br&gt;<br>
<br>
<br>
<br>
&lt;br&gt;<br>
Is&nbsp;there&nbsp;some&nbsp;way&nbsp;to&nbsp;determine&nbsp;what&nbsp;was&nbsp;the&nbsp;&quot;worst&quot;&nbsp;or&nbsp;&quot;tightest&quot;&nbsp;constraint&nbsp;after&nbsp;a&nbsp;solution&nbsp;search&nbsp;failed?&nbsp;&amp;nbsp;I'm&nbsp;looking&nbsp;for&nbsp;some&nbsp;indicator&nbsp;that&nbsp;constraint&nbsp;A&nbsp;was&nbsp;easy&nbsp;to&nbsp;satisfy&nbsp;while&nbsp;constraint&nbsp;B&nbsp;was&nbsp;difficult&nbsp;to&nbsp;satisfy.&nbsp;&amp;nbsp;If&nbsp;we&nbsp;had&nbsp;that&nbsp;then&nbsp;we&nbsp;could&nbsp;suggest&nbsp;that&nbsp;the&nbsp;user&nbsp;drop&nbsp;B,&nbsp;or&nbsp;drop&nbsp;it&nbsp;automatically.&lt;br&gt;<br>
<br>
<br>
<br>
&lt;br&gt;<br>
I&nbsp;could&nbsp;probably&nbsp;do&nbsp;this&nbsp;crudely&nbsp;by&nbsp;iteratively&nbsp;dropping&nbsp;each&nbsp;constraint&nbsp;in&nbsp;turn&nbsp;and&nbsp;counting&nbsp;the&nbsp;number&nbsp;of&nbsp;solutions&nbsp;obtained,&nbsp;but&nbsp;this&nbsp;seems&nbsp;unsatisfying&nbsp;in&nbsp;many&nbsp;respects.&lt;br&gt;<br>
&lt;br&gt;<br>
Is&nbsp;something&nbsp;like&nbsp;this&nbsp;possible&nbsp;in&nbsp;Gecode?&nbsp;&amp;nbsp;It's&nbsp;similar&nbsp;in&nbsp;some&nbsp;sense&nbsp;to&nbsp;the&nbsp;problem&nbsp;of&nbsp;soft&nbsp;constraints,&nbsp;but&nbsp;we&nbsp;don't&nbsp;need&nbsp;a&nbsp;full&nbsp;general&nbsp;solution.&lt;br&gt;<br>
&lt;br&gt;<br>
Any&nbsp;pointers&nbsp;or&nbsp;advice&nbsp;would&nbsp;be&nbsp;appreciated.&lt;br&gt;<br>
&lt;br&gt;<br>
Thanks!&lt;br&gt;<br>
&lt;br&gt;<br>
Adrian.&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;br&gt;<br>
_______________________________________________&lt;br&gt;<br>
Gecode&nbsp;users&nbsp;mailing&nbsp;list&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;mailto:users@gecode.org&quot;&nbsp;target=&quot;_blank&quot;&gt;users@gecode.org&lt;/a&gt;&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;https://www.gecode.org/mailman/listinfo/gecode-users&quot;&nbsp;target=&quot;_blank&quot;&gt;https://www.gecode.org/mailman/listinfo/gecode-users&lt;/a&gt;&lt;br&gt;<br>
&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;br&nbsp;clear=&quot;all&quot;&gt;&lt;br&gt;--&nbsp;&lt;br&gt;Mikael&nbsp;Zayenz&nbsp;Lagerkvist,&nbsp;&lt;a&nbsp;href=&quot;http://www.ict.kth.se/%7Ezayenz/&quot;&nbsp;target=&quot;_blank&quot;&gt;http://www.ict.kth.se/~zayenz/&lt;/a&gt;&lt;br&gt;<br>
_______________________________________________&lt;br&gt;Gecode&nbsp;users&nbsp;mailing&nbsp;list&lt;br&gt;&lt;a&nbsp;href=&quot;mailto:users@gecode.org&quot;&gt;users@gecode.org&lt;/a&gt;&lt;br&gt;https://www.gecode.org/mailman/listinfo/gecode-users&lt;br&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/body&gt;&lt;/html&gt;
</tt>
