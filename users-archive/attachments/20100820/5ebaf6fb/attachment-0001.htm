<tt>
Thanks&nbsp;for&nbsp;the&nbsp;fast&nbsp;answer.&nbsp;I&nbsp;tried&nbsp;decomposing&nbsp;the&nbsp;last&nbsp;constraint&nbsp;into&nbsp;mul,&nbsp;sqr&nbsp;and&nbsp;linear&nbsp;rules,&nbsp;but&nbsp;i&nbsp;got&nbsp;the&nbsp;same&nbsp;result.&nbsp;I&nbsp;attached&nbsp;the&nbsp;code.&nbsp;I&nbsp;compiled&nbsp;it&nbsp;by&nbsp;doing &lt;div&gt;g++&nbsp;parallelepiped.cpp&nbsp;-lgecodeminimodel&nbsp;-lgecodeint&nbsp;-lgecodesearch&nbsp;-lgecodegist&nbsp;-lgecodedriver&nbsp;-o&nbsp;parallelepiped&lt;br&nbsp;clear=&quot;all&quot;&gt;<br>
<br>
--&nbsp;Javier&nbsp;Romero&nbsp;--&lt;br&gt;<br>
&lt;br&gt;&lt;br&gt;&lt;div&nbsp;class=&quot;gmail_quote&quot;&gt;On&nbsp;Fri,&nbsp;Aug&nbsp;20,&nbsp;2010&nbsp;at&nbsp;2:58&nbsp;PM,&nbsp;Guido&nbsp;Tack&nbsp;&lt;span&nbsp;dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a&nbsp;href=&quot;mailto:tack@gecode.org&quot;&gt;tack@gecode.org&lt;/a&gt;&amp;gt;&lt;/span&gt;&nbsp;wrote:&lt;br&gt;&lt;blockquote&nbsp;class=&quot;gmail_quote&quot;&nbsp;style=&quot;margin:0&nbsp;0&nbsp;0&nbsp;.8ex;border-left:1px&nbsp;#ccc&nbsp;solid;padding-left:1ex;&quot;&gt;<br>
<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;Javier&nbsp;Romero&nbsp;wrote:&lt;br&gt;<br>
&lt;br&gt;<br>
&amp;gt;&nbsp;Hi,&lt;br&gt;<br>
&amp;gt;&nbsp;I&amp;#39;m&nbsp;a&nbsp;newbie&nbsp;in&nbsp;Gecode,&nbsp;but&nbsp;in&nbsp;the&nbsp;first&nbsp;stages&nbsp;of&nbsp;trying&nbsp;it&nbsp;i&amp;#39;ve&nbsp;found&nbsp;something&nbsp;that&nbsp;puzzles&nbsp;me.&nbsp;After&nbsp;writing&nbsp;a&nbsp;program&nbsp;with&nbsp;a&nbsp;set&nbsp;of&nbsp;highly&nbsp;nonlinear&nbsp;constraints&nbsp;which&nbsp;includes&nbsp;the&nbsp;following&nbsp;constraint&nbsp;(apart&nbsp;from&nbsp;others)&lt;br&gt;<br>
<br>
<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;IntVar&nbsp;k&nbsp;=&nbsp;expr(*this,&nbsp;2*x0*x1*x2);&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;IntVar&nbsp;kc01=&nbsp;(*this,x2*(sqr(x0)+sqr(x1)-sqr(d01min)));&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;IntVar&nbsp;kc02=&nbsp;(*this,x1*(sqr(x0)+sqr(x2)-sqr(d02min)));&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;IntVar&nbsp;kc12=&nbsp;(*this,x0*(sqr(x2)+sqr(x1)-sqr(d12min)));&lt;br&gt;<br>
&amp;gt;&nbsp; &nbsp; &nbsp;rel(*this,k*(sqr(kc01)+sqr(kc02)+sqr(kc12))&nbsp;&amp;lt;&nbsp;(k*k*k+2*kc01*kc02*kc12));&lt;br&gt;<br>
&amp;gt;&lt;br&gt;<br>
&amp;gt;&nbsp; i&nbsp;get&nbsp;an&nbsp;output&nbsp;like&nbsp;this:&lt;br&gt;<br>
&lt;/div&gt;[...]&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;&amp;gt;&nbsp;That&nbsp;is,&nbsp;it&nbsp;returns&nbsp;inmediately&nbsp;with&nbsp;no&nbsp;solution.&nbsp;However,&nbsp;the&nbsp;problem&nbsp;has&nbsp;a&nbsp;solution,&nbsp;and&nbsp;actually&nbsp;it&nbsp;finds&nbsp;it&nbsp;by&nbsp;commenting&nbsp;the&nbsp;last&nbsp;lined&nbsp;of&nbsp;the&nbsp;code&nbsp;posted&nbsp;above&nbsp;(by&nbsp;chance;&nbsp;the&nbsp;constraint&nbsp;is&nbsp;actually&nbsp;necessary).&nbsp;This&nbsp;is&nbsp;how&nbsp;the&nbsp;output&nbsp;looks&nbsp;when&nbsp;the&nbsp;solution&nbsp;is&nbsp;found:&lt;br&gt;<br>
<br>
<br>
&lt;/div&gt;[...]&lt;br&gt;<br>
&lt;div&nbsp;class=&quot;im&quot;&gt;&amp;gt;&nbsp;I&nbsp;tested&nbsp;manually&nbsp;(and&nbsp;with&nbsp;a&nbsp;python&nbsp;script)&nbsp;that&nbsp;the&nbsp;solution&nbsp;obtained&nbsp;is&nbsp;compliant&nbsp;with&nbsp;the&nbsp;constraint&nbsp;that&nbsp;was&nbsp;removed.&nbsp;So&nbsp;i&nbsp;wonder&nbsp;if&nbsp;there&nbsp;is&nbsp;a&nbsp;limitation&nbsp;on&nbsp;the&nbsp;level&nbsp;of&nbsp;the&nbsp;nonlinearities&nbsp;in&nbsp;Gecode&nbsp;(i&nbsp;think&nbsp;it&amp;#39;s&nbsp;unlikely),&nbsp;in&nbsp;the&nbsp;number&nbsp;of&nbsp;constraints&nbsp;(also&nbsp;unlikely)&nbsp;or&nbsp;what&nbsp;else&nbsp;could&nbsp;have&nbsp;happened.&nbsp;The&nbsp;code&nbsp;is&nbsp;basically&nbsp;an&nbsp;adaptation&nbsp;of&nbsp;SMM&nbsp;example&nbsp;to&nbsp;my&nbsp;arithmetic&nbsp;constraints.&nbsp;I&nbsp;can&nbsp;post&nbsp;it&nbsp;if&nbsp;necessary.&lt;br&gt;<br>
<br>
<br>
&lt;br&gt;<br>
&lt;/div&gt;If&nbsp;you&nbsp;could&nbsp;give&nbsp;me&nbsp;a&nbsp;small&nbsp;example&nbsp;that&nbsp;I&nbsp;can&nbsp;compile&nbsp;and&nbsp;run,&nbsp;I&nbsp;can&nbsp;have&nbsp;a&nbsp;look.&nbsp; The&nbsp;code&nbsp;for&nbsp;posting&nbsp;non-linear&nbsp;expressions&nbsp;is&nbsp;relatively&nbsp;new,&nbsp;and&nbsp;there&nbsp;may&nbsp;be&nbsp;bugs&nbsp;that&nbsp;our&nbsp;test&nbsp;suite&nbsp;has&nbsp;not&nbsp;found.&lt;br&gt;<br>
&lt;br&gt;<br>
One&nbsp;thing&nbsp;you&nbsp;could&nbsp;try&nbsp;is&nbsp;to&nbsp;decompose&nbsp;the&nbsp;constraints&nbsp;(in&nbsp;particular&nbsp;the&nbsp;last&nbsp;line)&nbsp;manually,&nbsp;i.e.&nbsp;not&nbsp;use&nbsp;anything&nbsp;from&nbsp;minimodel.hh,&nbsp;but&nbsp;declare&nbsp;temporary&nbsp;IntVars&nbsp;and&nbsp;then&nbsp;only&nbsp;use&nbsp;the&nbsp;mult,&nbsp;linear,&nbsp;and&nbsp;sqr&nbsp;functions&nbsp;from&nbsp;int.hh.&nbsp; If&nbsp;that&nbsp;works,&nbsp;then&nbsp;it&amp;#39;s&nbsp;definitely&nbsp;a&nbsp;problem&nbsp;in&nbsp;how&nbsp;minimodel&nbsp;decomposes&nbsp;the&nbsp;constraint.&lt;br&gt;<br>
<br>
<br>
&lt;br&gt;<br>
Cheers,&lt;br&gt;<br>
&nbsp; &nbsp; &nbsp; &nbsp; Guido&lt;br&gt;<br>
&lt;font&nbsp;color=&quot;#888888&quot;&gt;&lt;br&gt;<br>
--&lt;br&gt;<br>
Guido&nbsp;Tack,&nbsp;&lt;a&nbsp;href=&quot;http://people.cs.kuleuven.be/~guido.tack/&quot;&nbsp;target=&quot;_blank&quot;&gt;http://people.cs.kuleuven.be/~guido.tack/&lt;/a&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
&lt;/font&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;<br>

</tt>
