Index: changelog.in
===================================================================
--- changelog.in	(revision 13638)
+++ changelog.in	(working copy)
@@ -73,10 +73,26 @@
 Bla!
 
 [ENTRY]
+Module: set
+What:   bug
+Rank:   major
+Thanks:	Stefano Gualandi
+[DESCRIPTION]
+Fixed crash due to combination of LDSB and Activity.
+
+[ENTRY]
 Module: int
 What:   bug
 Rank:   major
+Thanks:	Stefano Gualandi
 [DESCRIPTION]
+Fixed crash due to combination of LDSB and Activity.
+
+[ENTRY]
+Module: int
+What:   bug
+Rank:   major
+[DESCRIPTION]
 The internal representation of integer variable domains could leak
 memory to the space.
 
Index: gecode/int/ldsb.cpp
===================================================================
--- gecode/int/ldsb.cpp	(revision 13638)
+++ gecode/int/ldsb.cpp	(working copy)
@@ -266,6 +266,7 @@
          IntBranchFilter bf, IntVarValPrint vvp) {
     using namespace Int;
     if (home.failed()) return BrancherHandle();
+    vars.expand(home,x);
     ViewArray<IntView> xv(home,x);
     ViewSel<IntView>* vs[1] = { 
       Branch::viewselint(home,vars) 
@@ -429,6 +430,7 @@
          BoolBranchFilter bf, BoolVarValPrint vvp) {
     using namespace Int;
     if (home.failed()) return BrancherHandle();
+    vars.expand(home,x);
     ViewArray<BoolView> xv(home,x);
     ViewSel<BoolView>* vs[1] = { 
       Branch::viewselbool(home,vars) 
Index: gecode/set/ldsb.cpp
===================================================================
--- gecode/set/ldsb.cpp	(revision 13638)
+++ gecode/set/ldsb.cpp	(working copy)
@@ -145,6 +145,7 @@
          SetBranchFilter bf, SetVarValPrint vvp) {
     using namespace Set;
     if (home.failed()) return BrancherHandle();
+    vars.expand(home,x);
     ViewArray<SetView> xv(home,x);
     ViewSel<SetView>* vs[1] = { 
       Branch::viewsel(home,vars) 
